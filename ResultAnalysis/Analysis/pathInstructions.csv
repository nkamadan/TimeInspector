,0,1,2
0,arping,69,"['call sym.imp.clock_gettime', 'movzx ecx, byte [var_1eah]', 'cmp cl, 2', 'ja 0x3226', 'test ebp, ebp', 'je 0x30d0', 'mov edx, 0xffffffff', 'mov esi, 3', 'mov rdi, r13', 'call sym.imp.poll', 'test eax, eax', 'jg 0x319d', 'xor ebp, ebp', 'xor r12d, r12d', 'cmp word [r13 + r12*8 + 6], 0', 'je 0x3220', 'cmp r12, 1', 'je 0x3639', 'cmp r12, 2', 'je 0x3233', 'lea r9, [var_5ch]', 'mov r8, rbx', 'xor ecx, ecx', 'mov edx, 0x1000', 'mov edi, dword [sockfd]', 'lea rsi, [var_3f0h]', 'call sym.imp.recvfrom', 'mov r12, rax', 'test rax, rax', 'js 0x3c2c', 'lea rsi, [var_70h]', 'mov edi, 4', 'call sym.imp.clock_gettime']"
1,arping,123,"['call sym.imp.clock_gettime', 'movzx ecx, byte [var_1eah]', 'cmp cl, 2', 'ja 0x3226', 'test ebp, ebp', 'je 0x30d0', 'mov edx, 0xffffffff', 'mov esi, 3', 'mov rdi, r13', 'call sym.imp.poll', 'test eax, eax', 'jg 0x319d', 'xor ebp, ebp', 'xor r12d, r12d', 'cmp word [r13 + r12*8 + 6], 0', 'je 0x3220', 'cmp r12, 1', 'je 0x3639', 'mov rsi, qword [var_20h]', 'mov edx, 8', 'mov edi, r15d', 'call sym.imp.read', 'cmp rax, 8', 'jne 0x38d8', 'mov rax, qword [nmeb]', 'add qword [var_10h], rax', 'movsxd rax, dword [var_2a0h]', 'mov rcx, qword [var_10h]', 'test eax, eax', 'jle 0x3679', 'mov rdi, qword [var_8h]', 'call fcn.000044b0', 'push r14', 'lea r14, [rdi + 0x5c]', 'mov esi, 8', 'push r13', 'push r12', 'lea r12, [rdi + 0xd0]', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x120', 'movzx edx, word [rdi + 0x58]', 'mov rax, qword fs:[0x28]', 'mov qword [var_118h], rax', 'xor eax, eax', 'mov word [var_12h], si', 'mov eax, edx', 'mov byte [var_15h], 4', 'rol ax, 8', 'cmp edx, 0x306', 'mov edx, 0x100', 'cmove eax, edx', 'movzx edx, byte [rdi + 0x5b]', 'lea rdi, [var_18h]', 'lea r13, [rdi + rdx]', 'mov word [var_10h], ax', 'mov byte [var_14h], dl', 'lea rbx, [r13 + 4]', 'test byte [rbp + 0x188], 1', 'je 0x4580', 'mov ecx, 0x200', 'mov rsi, r14', 'mov word [var_16h], cx', 'mov ecx, 0xf8', 'call sym.imp.__memcpy_chk', 'mov eax, dword [rbp + 0x28]', 'mov dword [r13], eax', 'movzx eax, byte [var_14h]', 'cmp eax, 8', 'jae 0x46a0', 'test al, 4', 'jne 0x4700', 'test eax, eax', 'je 0x45e6', 'add rbx, rax', 'mov eax, dword [rbp + 0x2c]', 'mov rsi, rsp', 'mov edi, 4', 'mov dword [rbx], eax', 'call sym.imp.clock_gettime']"
2,arping,86,"['call sym.imp.clock_gettime', 'mov eax, 0x14', 'mov edi, dword [rbp + 0x4c]', 'mov r8, r12', 'movzx r9d, byte [var_14h]', 'lea rsi, [var_10h]', 'add r9, 0xc', 'cmp r9, 0x14', 'cmovb r9, rax', 'add rbx, 4', 'xor ecx, ecx', 'sub rbx, rsi', 'mov rdx, rbx', 'call sym.imp.sendto', 'movsxd rdx, eax', 'cmp rbx, rdx', 'je 0x46d0', 'mov rcx, qword [var_118h]', 'xor rcx, qword fs:[0x28]', 'jne 0x473c', 'add rsp, 0x120', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'jmp 0x3203', 'add r12, 1', 'jmp 0x31a2', 'cmp word [r13 + r12*8 + 6], 0', 'je 0x3220', 'cmp r12, 1', 'je 0x3639', 'cmp r12, 2', 'je 0x3233', 'lea r9, [var_5ch]', 'mov r8, rbx', 'xor ecx, ecx', 'mov edx, 0x1000', 'mov edi, dword [sockfd]', 'lea rsi, [var_3f0h]', 'call sym.imp.recvfrom', 'mov r12, rax', 'test rax, rax', 'js 0x3c2c', 'lea rsi, [var_70h]', 'mov edi, 4', 'call sym.imp.clock_gettime']"
3,arping,140,"['call sym.imp.clock_gettime', 'mov eax, 0x14', 'mov edi, dword [rbp + 0x4c]', 'mov r8, r12', 'movzx r9d, byte [var_14h]', 'lea rsi, [var_10h]', 'add r9, 0xc', 'cmp r9, 0x14', 'cmovb r9, rax', 'add rbx, 4', 'xor ecx, ecx', 'sub rbx, rsi', 'mov rdx, rbx', 'call sym.imp.sendto', 'movsxd rdx, eax', 'cmp rbx, rdx', 'je 0x46d0', 'mov rcx, qword [var_118h]', 'xor rcx, qword fs:[0x28]', 'jne 0x473c', 'add rsp, 0x120', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'jmp 0x3203', 'add r12, 1', 'jmp 0x31a2', 'cmp word [r13 + r12*8 + 6], 0', 'je 0x3220', 'cmp r12, 1', 'je 0x3639', 'mov rsi, qword [var_20h]', 'mov edx, 8', 'mov edi, r15d', 'call sym.imp.read', 'cmp rax, 8', 'jne 0x38d8', 'mov rax, qword [nmeb]', 'add qword [var_10h], rax', 'movsxd rax, dword [var_2a0h]', 'mov rcx, qword [var_10h]', 'test eax, eax', 'jle 0x3679', 'mov rdi, qword [var_8h]', 'call fcn.000044b0', 'push r14', 'lea r14, [rdi + 0x5c]', 'mov esi, 8', 'push r13', 'push r12', 'lea r12, [rdi + 0xd0]', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x120', 'movzx edx, word [rdi + 0x58]', 'mov rax, qword fs:[0x28]', 'mov qword [var_118h], rax', 'xor eax, eax', 'mov word [var_12h], si', 'mov eax, edx', 'mov byte [var_15h], 4', 'rol ax, 8', 'cmp edx, 0x306', 'mov edx, 0x100', 'cmove eax, edx', 'movzx edx, byte [rdi + 0x5b]', 'lea rdi, [var_18h]', 'lea r13, [rdi + rdx]', 'mov word [var_10h], ax', 'mov byte [var_14h], dl', 'lea rbx, [r13 + 4]', 'test byte [rbp + 0x188], 1', 'je 0x4580', 'mov ecx, 0x200', 'mov rsi, r14', 'mov word [var_16h], cx', 'mov ecx, 0xf8', 'call sym.imp.__memcpy_chk', 'mov eax, dword [rbp + 0x28]', 'mov dword [r13], eax', 'movzx eax, byte [var_14h]', 'cmp eax, 8', 'jae 0x46a0', 'test al, 4', 'jne 0x4700', 'test eax, eax', 'je 0x45e6', 'add rbx, rax', 'mov eax, dword [rbp + 0x2c]', 'mov rsi, rsp', 'mov edi, 4', 'mov dword [rbx], eax', 'call sym.imp.clock_gettime']"
4,dd,58,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6aa5', 'imul rax, qword [rsp], 0x3b9aca00', 'add rax, qword [var_8h]', 'mov rdx, qword [var_18h]', 'xor rdx, qword fs:[0x28]', 'jne 0x6ac8', 'add rsp, 0x20', 'pop rbp', 'ret', 'cmp rax, qword [0x00014348]', 'jl 0x31fd', 'mov rdi, rax', 'call fcn.000048d0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x7e8', 'mov rax, qword fs:[0x28]', 'mov qword [var_7d8h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x4b80', 'call fcn.00006a70', 'endbr64', 'push rbp', 'mov edi, 1', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rbp, rsp', 'mov rsi, rbp', 'call sym.imp.clock_gettime']"
5,dd,64,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6b18', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6b2e', 'add rsp, 0x20', 'pop rbx', 'ret', 'imul rax, qword [rsp], 0x3b9aca00', 'add rax, qword [var_8h]', 'mov rdx, qword [var_18h]', 'xor rdx, qword fs:[0x28]', 'jne 0x6ac8', 'add rsp, 0x20', 'pop rbp', 'ret', 'cmp rax, qword [0x00014348]', 'jl 0x31fd', 'mov rdi, rax', 'call fcn.000048d0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x7e8', 'mov rax, qword fs:[0x28]', 'mov qword [var_7d8h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x4b80', 'call fcn.00006a70', 'endbr64', 'push rbp', 'mov edi, 1', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rbp, rsp', 'mov rsi, rbp', 'call sym.imp.clock_gettime']"
6,dd,97,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6b18', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6b2e', 'add rsp, 0x20', 'pop rbx', 'ret', 'imul rax, qword [rsp], 0x3b9aca00', 'add rax, qword [var_8h]', 'mov rdx, qword [var_18h]', 'xor rdx, qword fs:[0x28]', 'jne 0x6ac8', 'add rsp, 0x20', 'pop rbp', 'ret', 'cmp rax, qword [0x00014348]', 'jl 0x31fd', 'mov rdi, rax', 'call fcn.000048d0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x7e8', 'mov rax, qword fs:[0x28]', 'mov qword [var_7d8h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x4b80', 'call fcn.00006a70', 'endbr64', 'push rbp', 'mov edi, 1', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rbp, rsp', 'mov rsi, rbp', 'call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6aa5', 'mov rdi, rbp', 'call fcn.00006ad0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
7,debian-distro-info,247,"['call sym.imp.mktime', 'mov rdx, qword [var_38h]', 'xor rdx, qword fs:[0x28]', 'jne 0x25fb', 'add rsp, 0x48', 'ret', 'mov rdi, rbp', 'mov r12, rax', 'call fcn.00002590', 'sub rsp, 0x48', 'pxor xmm0, xmm0', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov eax, dword [rdi]', 'movaps xmmword [var_10h], xmm0', 'mov r8, rsp', 'movaps xmmword [rsp], xmm0', 'sub eax, 0x76c', 'movaps xmmword [var_20h], xmm0', 'mov dword [var_14h], eax', 'mov eax, dword [rdi + 4]', 'mov qword [var_30h], 0', 'sub eax, 1', 'mov dword [var_10h], eax', 'mov eax, dword [rdi + 8]', 'mov rdi, r8', 'mov dword [var_ch], eax', 'call sym.imp.mktime']"
8,diff,294,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x24880', 'mov rsi, rbx', 'mov rdi, rbp', 'call fcn.000244d0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x245a0', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0x24843', 'cmp r12, 1', 'je 0x24859', 'mov rdi, r12', 'call fcn.000243e0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov rbx, rax', 'mov r12d, dword [rax]', 'jne 0x24404', 'call fcn.00024380', 'test rdi, rdi', 'je 0x243a0', 'lea rdi, [0x0002db90]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x246f8', 'call sym.imp.__errno_location', 'mov rbp, rax', 'mov r12d, dword [rax]', 'cmp rbx, 1', 'je 0x246af', 'mov dword [rbp], r12d', 'xor ebx, ebx', 'mov rax, rbx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0x24908', 'mov rdi, rbx', 'call sym.imp.mktime']"
9,diff,224,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x24880', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
10,diff,99,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x24843', 'cmp r12, 1', 'je 0x24859', 'mov rdi, r12', 'call fcn.000243e0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov rbx, rax', 'mov r12d, dword [rax]', 'jne 0x24404', 'call fcn.00024380', 'test rdi, rdi', 'je 0x243a0', 'lea rdi, [0x0002db90]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x246f8', 'call sym.imp.__errno_location', 'mov rbp, rax', 'mov r12d, dword [rax]', 'cmp rbx, 1', 'je 0x246af', 'mov dword [rbp], r12d', 'xor ebx, ebx', 'mov rax, rbx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0x24908', 'mov rdi, rbx', 'call sym.imp.mktime']"
11,diff,323,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x24843', 'cmp r12, 1', 'je 0x24859', 'mov rdi, r12', 'call fcn.000243e0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov rbx, rax', 'mov r12d, dword [rax]', 'jne 0x24404', 'call fcn.00024380', 'test rdi, rdi', 'je 0x243a0', 'lea rdi, [0x0002db90]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x246f8', 'call sym.imp.__errno_location', 'mov rbp, rax', 'mov r12d, dword [rax]', 'cmp rbx, 1', 'je 0x246af', 'mov dword [rbp], r12d', 'xor ebx, ebx', 'mov rax, rbx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0x24908', 'mov rdi, rbx', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x24880', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
12,dir,221,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xeb28', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xeb3e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rcx, qword [var_20h]', 'mov r9, qword [var_28h]', 'mov rdx, qword [0x00024370]', 'mov rsi, qword [0x00024378]', 'lea rdi, [rdx - 0xf0c2ac]', 'cmp rdi, rcx', 'jge 0x9808', 'xor eax, eax', 'cmp rdi, rcx', 'jg 0x9611', 'cmp byte [0x000233c8], 0', 'mov r8, qword [0x000242a8]', 'je 0x9a00', 'lea rdx, str._b__e___Y', 'mov rdx, qword [rdx + rax*8]', 'jmp 0x9643', 'mov rcx, r13', 'mov esi, 0x3e9', 'mov rdi, rbx', 'call fcn.00013280', 'endbr64', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov byte [var_7h], 0', 'push r9', 'push r8', 'xor r8d, r8d', 'lea r9, [var_7h]', 'call fcn.000119f0', 'push r15', 'mov r10, rdi', 'push r14', 'mov r14, rcx', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdx', 'sub rsp, 0x4c8', 'mov r15, qword [rcx + 0x30]', 'mov r13d, dword [rcx + 8]', 'mov rax, qword [arg_500h]', 'mov qword [rsp], rsi', 'mov qword [var_18h], r9', 'mov qword [var_10h], rax', 'mov byte [var_2bh], r8b', 'mov rax, qword fs:[0x28]', 'mov qword [var_4b8h], rax', 'xor eax, eax', 'test r15, r15', 'lea rax, [0x000197fe]', 'cmove r15, rax', 'cmp r13d, 0xc', 'jle 0x11b00', 'sub r13d, 0xc', 'movzx eax, byte [rbx]', 'xor r11d, r11d', 'test al, al', 'je 0x11ab7', 'test r10, r10', 'je 0x11ad3', 'mov rax, qword [var_4b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x13256', 'add rsp, 0x4c8', 'mov rax, r11', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'mov rdx, qword [var_8h]', 'xor rdx, qword fs:[0x28]', 'jne 0x132c5', 'add rsp, 0x18', 'ret', 'test rax, rax', 'je 0x9660', 'cmp byte [rbx], 0', 'jne 0x993c', 'cmp byte [r12 + 0xb8], 0', 'je 0x9a95', 'lea r13, [0x000197e2]', 'jmp 0x930d', 'mov r8d, dword [0x00023014]', 'test r8d, r8d', 'js 0x9970', 'lea r14, [var_70h]', 'mov rdi, qword [0x000242a8]', 'lea rsi, [var_18h]', 'mov qword [var_18h], 0', 'mov rdx, r14', 'call fcn.00017030', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x170c0', 'mov r12, rdi', 'call fcn.00016f50', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00019af0]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x16fe0', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0x16f71', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x9660', 'mov rdx, qword [0x00024370]', 'mov rcx, qword [var_20h]', 'mov rsi, qword [0x00024378]', 'mov r9, qword [var_28h]', 'cmp rdx, rcx', 'jl 0x9a10', 'lea rdi, [0x00024370]', 'call fcn.0000eae0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
13,dir,196,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xeb28', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xeb3e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rcx, qword [var_20h]', 'mov r9, qword [var_28h]', 'mov rdx, qword [0x00024370]', 'mov rsi, qword [0x00024378]', 'lea rdi, [rdx - 0xf0c2ac]', 'cmp rdi, rcx', 'jge 0x9808', 'xor eax, eax', 'cmp rdi, rcx', 'jg 0x9611', 'cmp byte [0x000233c8], 0', 'mov r8, qword [0x000242a8]', 'je 0x9a00', 'lea rdx, str._b__e___Y', 'mov rdx, qword [rdx + rax*8]', 'jmp 0x9643', 'mov rcx, r13', 'mov esi, 0x3e9', 'mov rdi, rbx', 'call fcn.00013280', 'endbr64', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov byte [var_7h], 0', 'push r9', 'push r8', 'xor r8d, r8d', 'lea r9, [var_7h]', 'call fcn.000119f0', 'push r15', 'mov r10, rdi', 'push r14', 'mov r14, rcx', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdx', 'sub rsp, 0x4c8', 'mov r15, qword [rcx + 0x30]', 'mov r13d, dword [rcx + 8]', 'mov rax, qword [arg_500h]', 'mov qword [rsp], rsi', 'mov qword [var_18h], r9', 'mov qword [var_10h], rax', 'mov byte [var_2bh], r8b', 'mov rax, qword fs:[0x28]', 'mov qword [var_4b8h], rax', 'xor eax, eax', 'test r15, r15', 'lea rax, [0x000197fe]', 'cmove r15, rax', 'cmp r13d, 0xc', 'jle 0x11b00', 'sub r13d, 0xc', 'movzx eax, byte [rbx]', 'xor r11d, r11d', 'test al, al', 'je 0x11ab7', 'test r10, r10', 'je 0x11ad3', 'mov rax, qword [var_4b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x13256', 'add rsp, 0x4c8', 'mov rax, r11', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'mov rdx, qword [var_8h]', 'xor rdx, qword fs:[0x28]', 'jne 0x132c5', 'add rsp, 0x18', 'ret', 'test rax, rax', 'je 0x9660', 'cmp byte [rbx], 0', 'jne 0x993c', 'cmp byte [r12 + 0xb8], 0', 'je 0x9a95', 'lea r13, [0x000197e2]', 'jmp 0x930d', 'mov r8d, dword [0x00023014]', 'test r8d, r8d', 'js 0x9970', 'lea r14, [var_70h]', 'mov rdi, qword [0x000242a8]', 'lea rsi, [var_18h]', 'mov qword [var_18h], 0', 'mov rdx, r14', 'call fcn.00017030', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x170c0', 'mov r12, rdi', 'call fcn.00016f50', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00019af0]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x16fe0', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0x16f71', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
14,dir,209,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xeb28', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xeb3e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rcx, qword [var_20h]', 'mov r9, qword [var_28h]', 'mov rdx, qword [0x00024370]', 'mov rsi, qword [0x00024378]', 'lea rdi, [rdx - 0xf0c2ac]', 'cmp rdi, rcx', 'jge 0x9808', 'xor eax, eax', 'cmp rdi, rcx', 'jg 0x9611', 'cmp byte [0x000233c8], 0', 'mov r8, qword [0x000242a8]', 'je 0x9a00', 'lea rdx, str._b__e___Y', 'mov rdx, qword [rdx + rax*8]', 'jmp 0x9643', 'mov rcx, r13', 'mov esi, 0x3e9', 'mov rdi, rbx', 'call fcn.00013280', 'endbr64', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov byte [var_7h], 0', 'push r9', 'push r8', 'xor r8d, r8d', 'lea r9, [var_7h]', 'call fcn.000119f0', 'push r15', 'mov r10, rdi', 'push r14', 'mov r14, rcx', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdx', 'sub rsp, 0x4c8', 'mov r15, qword [rcx + 0x30]', 'mov r13d, dword [rcx + 8]', 'mov rax, qword [arg_500h]', 'mov qword [rsp], rsi', 'mov qword [var_18h], r9', 'mov qword [var_10h], rax', 'mov byte [var_2bh], r8b', 'mov rax, qword fs:[0x28]', 'mov qword [var_4b8h], rax', 'xor eax, eax', 'test r15, r15', 'lea rax, [0x000197fe]', 'cmove r15, rax', 'cmp r13d, 0xc', 'jle 0x11b00', 'sub r13d, 0xc', 'movzx eax, byte [rbx]', 'xor r11d, r11d', 'test al, al', 'je 0x11ab7', 'test r10, r10', 'je 0x11ad3', 'mov rax, qword [var_4b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x13256', 'add rsp, 0x4c8', 'mov rax, r11', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'mov rdx, qword [var_8h]', 'xor rdx, qword fs:[0x28]', 'jne 0x132c5', 'add rsp, 0x18', 'ret', 'test rax, rax', 'je 0x9660', 'cmp byte [rbx], 0', 'jne 0x993c', 'cmp byte [r12 + 0xb8], 0', 'je 0x9a95', 'lea r13, [0x000197e2]', 'jmp 0x930d', 'mov r8d, dword [0x00023014]', 'test r8d, r8d', 'js 0x9970', 'lea r14, [var_70h]', 'mov rdi, qword [0x000242a8]', 'lea rsi, [var_18h]', 'mov qword [var_18h], 0', 'mov rdx, r14', 'call fcn.00017030', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x170c0', 'mov r12, rdi', 'call fcn.00016f50', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00019af0]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x16fe0', 'cmp byte [rbx + 8], 0', 'jne 0x16fc0', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x16f71', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime']"
15,dir,433,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xeb28', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xeb3e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rcx, qword [var_20h]', 'mov r9, qword [var_28h]', 'mov rdx, qword [0x00024370]', 'mov rsi, qword [0x00024378]', 'lea rdi, [rdx - 0xf0c2ac]', 'cmp rdi, rcx', 'jge 0x9808', 'xor eax, eax', 'cmp rdi, rcx', 'jg 0x9611', 'cmp byte [0x000233c8], 0', 'mov r8, qword [0x000242a8]', 'je 0x9a00', 'lea rdx, str._b__e___Y', 'mov rdx, qword [rdx + rax*8]', 'jmp 0x9643', 'mov rcx, r13', 'mov esi, 0x3e9', 'mov rdi, rbx', 'call fcn.00013280', 'endbr64', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov byte [var_7h], 0', 'push r9', 'push r8', 'xor r8d, r8d', 'lea r9, [var_7h]', 'call fcn.000119f0', 'push r15', 'mov r10, rdi', 'push r14', 'mov r14, rcx', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdx', 'sub rsp, 0x4c8', 'mov r15, qword [rcx + 0x30]', 'mov r13d, dword [rcx + 8]', 'mov rax, qword [arg_500h]', 'mov qword [rsp], rsi', 'mov qword [var_18h], r9', 'mov qword [var_10h], rax', 'mov byte [var_2bh], r8b', 'mov rax, qword fs:[0x28]', 'mov qword [var_4b8h], rax', 'xor eax, eax', 'test r15, r15', 'lea rax, [0x000197fe]', 'cmove r15, rax', 'cmp r13d, 0xc', 'jle 0x11b00', 'sub r13d, 0xc', 'movzx eax, byte [rbx]', 'xor r11d, r11d', 'test al, al', 'je 0x11ab7', 'test r10, r10', 'je 0x11ad3', 'mov rax, qword [var_4b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x13256', 'add rsp, 0x4c8', 'mov rax, r11', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'mov rdx, qword [var_8h]', 'xor rdx, qword fs:[0x28]', 'jne 0x132c5', 'add rsp, 0x18', 'ret', 'test rax, rax', 'je 0x9660', 'cmp byte [rbx], 0', 'jne 0x993c', 'cmp byte [r12 + 0xb8], 0', 'je 0x9a95', 'lea r13, [0x000197e2]', 'jmp 0x930d', 'mov r8d, dword [0x00023014]', 'test r8d, r8d', 'js 0x9970', 'lea r14, [var_70h]', 'mov rdi, qword [0x000242a8]', 'lea rsi, [var_18h]', 'mov qword [var_18h], 0', 'mov rdx, r14', 'call fcn.00017030', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x170c0', 'mov r12, rdi', 'call fcn.00016f50', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00019af0]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x16fe0', 'cmp byte [rbx + 8], 0', 'jne 0x16fc0', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x16f71', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
16,dir,81,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17090', 'cmp r13, 1', 'je 0x1709e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x9660', 'mov rdx, qword [0x00024370]', 'mov rcx, qword [var_20h]', 'mov rsi, qword [0x00024378]', 'mov r9, qword [var_28h]', 'cmp rdx, rcx', 'jl 0x9a10', 'lea rdi, [0x00024370]', 'call fcn.0000eae0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
17,dir,101,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17090', 'cmp r13, 1', 'je 0x1709e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
18,dir,100,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17090', 'cmp r13, 1', 'je 0x1709e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime']"
19,dir,324,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17090', 'cmp r13, 1', 'je 0x1709e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
20,dir,283,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00016df0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x16eb0', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0x16e24', 'lea rdx, [rsi + 0x38]', 'mov eax, 1', 'cmp r12, rdx', 'jb 0x16e91', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x17090', 'cmp r13, 1', 'jne 0x170b0', 'add rsp, 8', 'mov rax, rbp', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x9660', 'mov rdx, qword [0x00024370]', 'mov rcx, qword [var_20h]', 'mov rsi, qword [0x00024378]', 'mov r9, qword [var_28h]', 'cmp rdx, rcx', 'jl 0x9a10', 'lea rdi, [0x00024370]', 'call fcn.0000eae0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
21,dir,296,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00016df0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x16eb0', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
22,dir,295,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00016df0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x16eb0', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime']"
23,dir,224,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
24,dir,126,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x9660', 'mov rdx, qword [0x00024370]', 'mov rcx, qword [var_20h]', 'mov rsi, qword [0x00024378]', 'mov r9, qword [var_28h]', 'cmp rdx, rcx', 'jl 0x9a10', 'lea rdi, [0x00024370]', 'call fcn.0000eae0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
25,dir,101,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
26,dir,100,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime']"
27,dir,324,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
28,dirmngr-client,164,"['call sym.imp.localtime', 'mov rdi, rbp', 'mov esi, dword [rax]', 'mov ecx, dword [rax + 0x10]', 'mov edx, dword [rax + 0x14]', 'mov r9d, dword [rax + 8]', 'mov r8d, dword [rax + 0xc]', 'push rsi', 'add ecx, 1', 'lea rsi, str._04d__02d__02d__02d:_02d:_02d_', 'mov eax, dword [rax + 4]', 'add edx, 0x76c', 'push rax', 'xor eax, eax', 'call sym.imp.gpgrt_fprintf_unlocked', 'pop rcx', 'mov eax, dword [0x0001e488]', 'pop rsi', 'or eax, dword [0x0001e4a4]', 'je 0x99e8', 'or eax, dword [0x0001e4a0]', 'jne 0x9ab0', 'mov eax, dword [0x0001e4a8]', 'test eax, eax', 'je 0x9afb', 'nop word [rax + rax]', 'test ebx, ebx', 'jne 0x9a2a', 'cmp r12d, 6', 'je 0x9b78', 'jg 0x9c00', 'cmp r12d, 5', 'jne 0x9bd0', 'test r12d, r12d', 'jns 0x9a60', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x9cc2', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'test r13d, r13d', 'je 0x9e80', 'test rbx, rbx', 'jne 0x9d4e', 'cmp qword [rsp], 0', 'je 0xa0b8', 'mov edx, dword [0x0001e484]', 'test edx, edx', 'jne 0x9e5b', 'mov esi, r13d', 'mov edi, ebp', 'lea r12, [0x00016f96]', 'call fcn.000099a0', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp edi, 1', 'je 0x9a60', 'mov r12d, edi', 'mov edi, dword [0x0001e4a8]', 'mov eax, dword [0x0001e488]', 'mov ebx, esi', 'test edi, edi', 'jne 0x9a80', 'mov rbp, qword [0x0001e510]', 'test eax, eax', 'je 0x9c60', 'xor edi, edi', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
29,distro-info,247,"['call sym.imp.mktime', 'mov rdx, qword [var_38h]', 'xor rdx, qword fs:[0x28]', 'jne 0x235b', 'add rsp, 0x48', 'ret', 'mov rdi, rbp', 'mov r12, rax', 'call fcn.000022f0', 'sub rsp, 0x48', 'pxor xmm0, xmm0', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov eax, dword [rdi]', 'movaps xmmword [var_10h], xmm0', 'mov r8, rsp', 'movaps xmmword [rsp], xmm0', 'sub eax, 0x76c', 'movaps xmmword [var_20h], xmm0', 'mov dword [var_14h], eax', 'mov eax, dword [rdi + 4]', 'mov qword [var_30h], 0', 'sub eax, 1', 'mov dword [var_10h], eax', 'mov eax, dword [rdi + 8]', 'mov rdi, r8', 'mov dword [var_ch], eax', 'call sym.imp.mktime']"
30,gpg-connect-agent,164,"['call sym.imp.localtime', 'mov rdi, rbp', 'mov esi, dword [rax]', 'mov ecx, dword [rax + 0x10]', 'mov edx, dword [rax + 0x14]', 'mov r9d, dword [rax + 8]', 'mov r8d, dword [rax + 0xc]', 'push rsi', 'add ecx, 1', 'lea rsi, str._04d__02d__02d__02d:_02d:_02d_', 'mov eax, dword [rax + 4]', 'add edx, 0x76c', 'push rax', 'xor eax, eax', 'call sym.imp.gpgrt_fprintf_unlocked', 'pop rcx', 'mov eax, dword [0x00029828]', 'pop rsi', 'or eax, dword [0x00029844]', 'je 0xe5c8', 'or eax, dword [0x00029840]', 'jne 0xe690', 'mov eax, dword [0x00029848]', 'test eax, eax', 'je 0xe6db', 'nop word [rax + rax]', 'test ebx, ebx', 'jne 0xe60a', 'cmp r12d, 6', 'je 0xe758', 'jg 0xe7e0', 'cmp r12d, 5', 'jne 0xe7b0', 'test r12d, r12d', 'jns 0xe640', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xe8a2', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'test r13d, r13d', 'je 0xea60', 'test rbx, rbx', 'jne 0xe92e', 'cmp qword [rsp], 0', 'je 0xec98', 'mov edx, dword [0x00029824]', 'test edx, edx', 'jne 0xea3b', 'mov esi, r13d', 'mov edi, ebp', 'lea r12, [0x0001fb36]', 'call fcn.0000e580', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp edi, 1', 'je 0xe640', 'mov r12d, edi', 'mov edi, dword [0x00029848]', 'mov eax, dword [0x00029828]', 'mov ebx, esi', 'test edi, edi', 'jne 0xe660', 'mov rbp, qword [0x000298b0]', 'test eax, eax', 'je 0xe840', 'xor edi, edi', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
31,gpg-wks-server,164,"['call sym.imp.localtime', 'mov rdi, rbp', 'mov esi, dword [rax]', 'mov ecx, dword [rax + 0x10]', 'mov edx, dword [rax + 0x14]', 'mov r9d, dword [rax + 8]', 'mov r8d, dword [rax + 0xc]', 'push rsi', 'add ecx, 1', 'lea rsi, str._04d__02d__02d__02d:_02d:_02d_', 'mov eax, dword [rax + 4]', 'add edx, 0x76c', 'push rax', 'xor eax, eax', 'call sym.imp.gpgrt_fprintf_unlocked', 'pop rcx', 'mov eax, dword [0x00033488]', 'pop rsi', 'or eax, dword [0x000334a4]', 'je 0x15118', 'or eax, dword [0x000334a0]', 'jne 0x151e0', 'mov eax, dword [0x000334a8]', 'test eax, eax', 'je 0x1522b', 'nop word [rax + rax]', 'test ebx, ebx', 'jne 0x1515a', 'cmp r12d, 6', 'je 0x152a8', 'jg 0x15330', 'cmp r12d, 5', 'jne 0x15300', 'test r12d, r12d', 'jns 0x15190', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x153f2', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'test r13d, r13d', 'je 0x155b0', 'test rbx, rbx', 'jne 0x1547e', 'cmp qword [rsp], 0', 'je 0x157e8', 'mov edx, dword [0x00033484]', 'test edx, edx', 'jne 0x1558b', 'mov esi, r13d', 'mov edi, ebp', 'lea r12, [0x00027d2c]', 'call fcn.000150d0', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp edi, 1', 'je 0x15190', 'mov r12d, edi', 'mov edi, dword [0x000334a8]', 'mov eax, dword [0x00033488]', 'mov ebx, esi', 'test edi, edi', 'jne 0x151b0', 'mov rbp, qword [0x00033510]', 'test eax, eax', 'je 0x15390', 'xor edi, edi', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
32,gpgconf,164,"['call sym.imp.localtime', 'mov rdi, rbp', 'mov esi, dword [rax]', 'mov ecx, dword [rax + 0x10]', 'mov edx, dword [rax + 0x14]', 'mov r9d, dword [rax + 8]', 'mov r8d, dword [rax + 0xc]', 'push rsi', 'add ecx, 1', 'lea rsi, str._04d__02d__02d__02d:_02d:_02d_', 'mov eax, dword [rax + 4]', 'add edx, 0x76c', 'push rax', 'xor eax, eax', 'call sym.imp.gpgrt_fprintf_unlocked', 'pop rcx', 'mov eax, dword [0x0002c1e8]', 'pop rsi', 'or eax, dword [0x0002c204]', 'je 0x14378', 'or eax, dword [0x0002c200]', 'jne 0x14440', 'mov eax, dword [0x0002c208]', 'test eax, eax', 'je 0x1448b', 'nop word [rax + rax]', 'test ebx, ebx', 'jne 0x143ba', 'cmp r12d, 6', 'je 0x14508', 'jg 0x14590', 'cmp r12d, 5', 'jne 0x14560', 'test r12d, r12d', 'jns 0x143f0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14652', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'test r13d, r13d', 'je 0x14810', 'test rbx, rbx', 'jne 0x146de', 'cmp qword [rsp], 0', 'je 0x14a48', 'mov edx, dword [0x0002c1e4]', 'test edx, edx', 'jne 0x147eb', 'mov esi, r13d', 'mov edi, ebp', 'lea r12, [0x0002069c]', 'call fcn.00014330', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp edi, 1', 'je 0x143f0', 'mov r12d, edi', 'mov edi, dword [0x0002c208]', 'mov eax, dword [0x0002c1e8]', 'mov ebx, esi', 'test edi, edi', 'jne 0x14410', 'mov rbp, qword [0x0002c270]', 'test eax, eax', 'je 0x145f0', 'xor edi, edi', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
33,gpgconf,202,"['call sym.imp.localtime', 'mov rdi, rbp', 'mov esi, dword [rax]', 'mov ecx, dword [rax + 0x10]', 'mov edx, dword [rax + 0x14]', 'mov r9d, dword [rax + 8]', 'mov r8d, dword [rax + 0xc]', 'push rsi', 'add ecx, 1', 'lea rsi, str._04d__02d__02d__02d:_02d:_02d_', 'mov eax, dword [rax + 4]', 'add edx, 0x76c', 'push rax', 'xor eax, eax', 'call sym.imp.gpgrt_fprintf_unlocked', 'pop rcx', 'mov eax, dword [0x0002c1e8]', 'pop rsi', 'or eax, dword [0x0002c204]', 'je 0x14378', 'or eax, dword [0x0002c200]', 'jne 0x14440', 'mov eax, dword [0x0002c208]', 'test eax, eax', 'je 0x1448b', 'nop word [rax + rax]', 'test ebx, ebx', 'jne 0x143ba', 'cmp r12d, 6', 'je 0x14508', 'jg 0x14590', 'cmp r12d, 5', 'jne 0x14560', 'test r12d, r12d', 'jns 0x143f0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14652', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'test r13d, r13d', 'je 0x14810', 'test rbx, rbx', 'jne 0x146de', 'cmp qword [rsp], 0', 'je 0x14a48', 'mov rsi, qword [0x0002c270]', 'cmp ebp, 5', 'jne 0x1499f', 'cmp ebp, 6', 'je 0x14a9a', 'add rsp, 0x18', 'mov rdi, rsi', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp sym.imp.gpgrt_funlockfile', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x15b5b', 'add rsp, 0xd8', 'ret', 'test r12d, r12d', 'jne 0xa2b0', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xa2df', 'add rsp, 0xd8', 'pop rbp', 'pop r12', 'ret', 'jmp 0xa765', 'add rbx, 3', 'mov byte [rbp - 1], r12b', 'movzx eax, byte [rbx]', 'test al, al', 'jne 0xa74d', 'mov byte [rbp], 0', 'mov rax, qword [0x0002c190]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdx, rax', 'test rax, rax', 'je 0xddd9', 'call fcn.00018200', 'endbr64', 'sub rsp, 8', 'xor edi, edi', 'call sym.imp.time', 'cmp rax, 0xffffffffffffffff', 'je 0x18248', 'mov edx, dword [0x0002c410]', 'test edx, edx', 'je 0x18239', 'add rsp, 8', 'ret', 'mov rdi, rax', 'call fcn.00018f50', 'endbr64', 'push r12', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov eax, edi', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
34,gpgconf,304,"['call sym.imp.localtime', 'mov edi, 0x20028', 'mov r12, rax', 'call sym.imp.nl_langinfo', 'lea rdi, [0x0002c340]', 'mov edx, 0x2f', 'mov rsi, rax', 'call fcn.00010740', 'endbr64', 'mov rax, rdi', 'test rdx, rdx', 'je 0x10790', 'ret', 'lea rsi, [0x0002155d]', 'lea rdi, [0x0002c340]', 'call sym.imp.strstr', 'test rax, rax', 'je 0x18ff8', 'mov rcx, r12', 'lea rdx, [0x0002c340]', 'mov esi, 0x31', 'lea rdi, [0x0002c380]', 'call sym.imp.strftime', 'mov byte [0x0002c3b1], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x19012', 'add rsp, 0x10', 'lea rax, [0x0002c380]', 'pop r12', 'ret', 'mov rdi, r15', 'lea rdx, str.____GPGConf____', 'lea rsi, str._s__s_n', 'mov rcx, rax', 'xor eax, eax', 'call sym.imp.gpgrt_fprintf', 'mov rdi, r15', 'call sym.imp.gpgrt_ferror', 'test eax, eax', 'jne 0xd4fc', 'mov rdi, qword [s2]', 'call sym.imp.gcry_free', 'mov rax, qword [var_38h]', 'mov rdi, r15', 'mov ebp, dword [rax]', 'call sym.imp.gpgrt_fclose', 'mov edi, dword [fildes]', 'call sym.imp.close', 'test r13, r13', 'je 0xd1e2', 'mov edi, ebp', 'mov ebx, 0xffffffff', 'call sym.imp.gpg_err_set_errno', 'call fcn.00019f90', 'endbr64', 'push rbp', 'sub rsp, 0x90', 'mov edx, dword [0x0002c4a0]', 'mov rax, qword fs:[0x28]', 'mov qword [var_88h], rax', 'xor eax, eax', 'test edx, edx', 'jne 0x19ffb', 'lea rdi, str.signals_are_already_blocked_n', 'call fcn.00015830', 'endbr64', 'push rax', 'pop rax', 'sub rsp, 0xd8', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x15891', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov r8, rdi', 'mov r9, rsp', 'mov qword [var_8h], rax', 'xor ecx, ecx', 'lea rax, [var_20h]', 'xor edx, edx', 'xor esi, esi', 'mov edi, 6', 'mov qword [var_10h], rax', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'call fcn.00014660', 'push r15', 'mov r15d, esi', 'push r14', 'mov r14, rcx', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'mov rbx, r8', 'sub rsp, 0x18', 'mov qword [rsp], rdx', 'mov qword [var_8h], r9', 'test r8, r8', 'je 0x14695', 'mov rdi, qword [0x0002c270]', 'test rdi, rdi', 'je 0x149c0', 'call sym.imp.gpgrt_flockfile', 'mov ecx, dword [0x0002c1e4]', 'test ecx, ecx', 'je 0x146bd', 'mov dword [0x0002c1e4], 0', 'mov esi, r13d', 'mov edi, ebp', 'call fcn.00014330', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp edi, 1', 'je 0x143f0', 'mov r12d, edi', 'mov edi, dword [0x0002c208]', 'mov eax, dword [0x0002c1e8]', 'mov ebx, esi', 'test edi, edi', 'jne 0x14410', 'mov rbp, qword [0x0002c270]', 'test eax, eax', 'je 0x145f0', 'xor edi, edi', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
35,gpgconf,299,"['call sym.imp.localtime', 'mov edi, 0x20028', 'mov r12, rax', 'call sym.imp.nl_langinfo', 'lea rdi, [0x0002c340]', 'mov edx, 0x2f', 'mov rsi, rax', 'call fcn.00010740', 'endbr64', 'mov rax, rdi', 'test rdx, rdx', 'je 0x10790', 'ret', 'lea rsi, [0x0002155d]', 'lea rdi, [0x0002c340]', 'call sym.imp.strstr', 'test rax, rax', 'je 0x18ff8', 'mov rcx, r12', 'lea rdx, [0x0002c340]', 'mov esi, 0x31', 'lea rdi, [0x0002c380]', 'call sym.imp.strftime', 'mov byte [0x0002c3b1], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x19012', 'add rsp, 0x10', 'lea rax, [0x0002c380]', 'pop r12', 'ret', 'mov rdi, r15', 'lea rdx, [0x0001fd60]', 'lea rsi, str._s__s_n', 'mov rcx, rax', 'xor eax, eax', 'call sym.imp.gpgrt_fprintf', 'mov rdi, r15', 'call sym.imp.gpgrt_ferror', 'test eax, eax', 'jne 0xdfae', 'test ebx, ebx', 'je 0xdf50', 'lea r12, [endptr]', 'lea rbp, [s2]', 'lea rbx, [0x0001dd16]', 'test r13, r13', 'jne 0xde65', 'jmp 0xde90', 'mov rdi, qword [s2]', 'call sym.imp.gcry_free', 'mov rdi, r15', 'mov qword [s2], 0', 'call sym.imp.gpgrt_fclose', 'test eax, eax', 'jne 0xe248', 'mov edi, dword [var_1ch]', 'call sym.imp.close', 'test r13, r13', 'je 0xcf00', 'add qword [var_8h], 0x60', 'mov rax, qword [var_8h]', 'cmp qword [rax - 0x60], 0', 'je 0xdc59', 'mov rax, qword [var_8h]', 'mov ebx, dword [rax - 0x34]', 'cmp qword [rsp + rbx*8 + 0xb0], 0', 'mov r14, rbx', 'jne 0xcf00', 'cmp qword [rax - 0x10], 0', 'jne 0xcf3a', 'lea rax, [rbx + rbx*2]', 'lea rsi, [0x00027320]', 'mov qword [s2], 0', 'shl rax, 4', 'add rax, rsi', 'cmp qword [rax + 8], 0', 'je 0xd740', 'mov rsi, qword [rax + 0x28]', 'mov edi, dword [var_18h]', 'xor edx, edx', 'call fcn.00009e80', 'mov edi, edi', 'lea rax, [0x00026f80]', 'push r12', 'shl rdi, 5', 'push rbp', 'push rbx', 'mov rbx, qword [rax + rdi + 0x18]', 'mov rdi, qword [rbx]', 'test rdi, rdi', 'je 0x9ed2', 'mov rbp, rsi', 'mov r12d, edx', 'nop dword [rax]', 'test byte [rbx + 8], 1', 'jne 0x9ec5', 'mov rsi, rbp', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x9ec5', 'test r12d, r12d', 'je 0x9ee0', 'mov rdi, rbx', 'pop rbx', 'pop rbp', 'mov rax, rdi', 'pop r12', 'ret', 'mov r9, qword [var_28h]', 'movzx ecx, byte [var_37h]', 'mov byte [r9], cl', 'test rax, rax', 'je 0xd18c', 'test byte [rax + 0x50], 0x10', 'jne 0xd160', 'test r14d, r14d', 'je 0xd2c0', 'call fcn.00018200', 'endbr64', 'sub rsp, 8', 'xor edi, edi', 'call sym.imp.time', 'cmp rax, 0xffffffffffffffff', 'je 0x18248', 'mov edx, dword [0x0002c410]', 'test edx, edx', 'je 0x18239', 'add rsp, 8', 'ret', 'mov rdi, rax', 'call fcn.00018f50', 'endbr64', 'push r12', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov eax, edi', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
36,gpgsplit,164,"['call sym.imp.localtime', 'mov rdi, rbp', 'mov esi, dword [rax]', 'mov ecx, dword [rax + 0x10]', 'mov edx, dword [rax + 0x14]', 'mov r9d, dword [rax + 8]', 'mov r8d, dword [rax + 0xc]', 'push rsi', 'add ecx, 1', 'lea rsi, str._04d__02d__02d__02d:_02d:_02d_', 'mov eax, dword [rax + 4]', 'add edx, 0x76c', 'push rax', 'xor eax, eax', 'call sym.imp.gpgrt_fprintf_unlocked', 'pop rcx', 'mov eax, dword [0x00016208]', 'pop rsi', 'or eax, dword [0x00016224]', 'je 0x7ef8', 'or eax, dword [0x00016220]', 'jne 0x7fc0', 'mov eax, dword [0x00016228]', 'test eax, eax', 'je 0x800b', 'nop word [rax + rax]', 'test ebx, ebx', 'jne 0x7f3a', 'cmp r12d, 6', 'je 0x8088', 'jg 0x8110', 'cmp r12d, 5', 'jne 0x80e0', 'test r12d, r12d', 'jns 0x7f70', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x81d2', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'test r13d, r13d', 'je 0x8390', 'test rbx, rbx', 'jne 0x825e', 'cmp qword [rsp], 0', 'je 0x85c8', 'mov edx, dword [0x00016204]', 'test edx, edx', 'jne 0x836b', 'mov esi, r13d', 'mov edi, ebp', 'lea r12, [0x00010d06]', 'call fcn.00007eb0', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp edi, 1', 'je 0x7f70', 'mov r12d, edi', 'mov edi, dword [0x00016228]', 'mov eax, dword [0x00016208]', 'mov ebx, esi', 'test edi, edi', 'jne 0x7f90', 'mov rbp, qword [0x00016290]', 'test eax, eax', 'je 0x8170', 'xor edi, edi', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
37,gpgtar,164,"['call sym.imp.localtime', 'mov rdi, rbp', 'mov esi, dword [rax]', 'mov ecx, dword [rax + 0x10]', 'mov edx, dword [rax + 0x14]', 'mov r9d, dword [rax + 8]', 'mov r8d, dword [rax + 0xc]', 'push rsi', 'add ecx, 1', 'lea rsi, str._04d__02d__02d__02d:_02d:_02d_', 'mov eax, dword [rax + 4]', 'add edx, 0x76c', 'push rax', 'xor eax, eax', 'call sym.imp.gpgrt_fprintf_unlocked', 'pop rcx', 'mov eax, dword [0x00026648]', 'pop rsi', 'or eax, dword [0x00026664]', 'je 0xed48', 'or eax, dword [0x00026660]', 'jne 0xee10', 'mov eax, dword [0x00026668]', 'test eax, eax', 'je 0xee5b', 'nop word [rax + rax]', 'test ebx, ebx', 'jne 0xed8a', 'cmp r12d, 6', 'je 0xeed8', 'jg 0xef60', 'cmp r12d, 5', 'jne 0xef30', 'test r12d, r12d', 'jns 0xedc0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xf022', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'test r13d, r13d', 'je 0xf1e0', 'test rbx, rbx', 'jne 0xf0ae', 'cmp qword [rsp], 0', 'je 0xf418', 'mov edx, dword [0x00026644]', 'test edx, edx', 'jne 0xf1bb', 'mov esi, r13d', 'mov edi, ebp', 'lea r12, [0x0001d7d6]', 'call fcn.0000ed00', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp edi, 1', 'je 0xedc0', 'mov r12d, edi', 'mov edi, dword [0x00026668]', 'mov eax, dword [0x00026648]', 'mov ebx, esi', 'test edi, edi', 'jne 0xede0', 'mov rbp, qword [0x000266d0]', 'test eax, eax', 'je 0xefc0', 'xor edi, edi', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
38,ls,221,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xeb28', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xeb3e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rcx, qword [var_20h]', 'mov r9, qword [var_28h]', 'mov rdx, qword [0x00024370]', 'mov rsi, qword [0x00024378]', 'lea rdi, [rdx - 0xf0c2ac]', 'cmp rdi, rcx', 'jge 0x9808', 'xor eax, eax', 'cmp rdi, rcx', 'jg 0x9611', 'cmp byte [0x000233c8], 0', 'mov r8, qword [0x000242a8]', 'je 0x9a00', 'lea rdx, str._b__e___Y', 'mov rdx, qword [rdx + rax*8]', 'jmp 0x9643', 'mov rcx, r13', 'mov esi, 0x3e9', 'mov rdi, rbx', 'call fcn.00013280', 'endbr64', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov byte [var_7h], 0', 'push r9', 'push r8', 'xor r8d, r8d', 'lea r9, [var_7h]', 'call fcn.000119f0', 'push r15', 'mov r10, rdi', 'push r14', 'mov r14, rcx', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdx', 'sub rsp, 0x4c8', 'mov r15, qword [rcx + 0x30]', 'mov r13d, dword [rcx + 8]', 'mov rax, qword [arg_500h]', 'mov qword [rsp], rsi', 'mov qword [var_18h], r9', 'mov qword [var_10h], rax', 'mov byte [var_2bh], r8b', 'mov rax, qword fs:[0x28]', 'mov qword [var_4b8h], rax', 'xor eax, eax', 'test r15, r15', 'lea rax, [0x000197fe]', 'cmove r15, rax', 'cmp r13d, 0xc', 'jle 0x11b00', 'sub r13d, 0xc', 'movzx eax, byte [rbx]', 'xor r11d, r11d', 'test al, al', 'je 0x11ab7', 'test r10, r10', 'je 0x11ad3', 'mov rax, qword [var_4b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x13256', 'add rsp, 0x4c8', 'mov rax, r11', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'mov rdx, qword [var_8h]', 'xor rdx, qword fs:[0x28]', 'jne 0x132c5', 'add rsp, 0x18', 'ret', 'test rax, rax', 'je 0x9660', 'cmp byte [rbx], 0', 'jne 0x993c', 'cmp byte [r12 + 0xb8], 0', 'je 0x9a95', 'lea r13, [0x000197e2]', 'jmp 0x930d', 'mov r8d, dword [0x00023014]', 'test r8d, r8d', 'js 0x9970', 'lea r14, [var_70h]', 'mov rdi, qword [0x000242a8]', 'lea rsi, [var_18h]', 'mov qword [var_18h], 0', 'mov rdx, r14', 'call fcn.00017030', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x170c0', 'mov r12, rdi', 'call fcn.00016f50', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00019af0]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x16fe0', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0x16f71', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x9660', 'mov rdx, qword [0x00024370]', 'mov rcx, qword [var_20h]', 'mov rsi, qword [0x00024378]', 'mov r9, qword [var_28h]', 'cmp rdx, rcx', 'jl 0x9a10', 'lea rdi, [0x00024370]', 'call fcn.0000eae0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
39,ls,196,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xeb28', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xeb3e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rcx, qword [var_20h]', 'mov r9, qword [var_28h]', 'mov rdx, qword [0x00024370]', 'mov rsi, qword [0x00024378]', 'lea rdi, [rdx - 0xf0c2ac]', 'cmp rdi, rcx', 'jge 0x9808', 'xor eax, eax', 'cmp rdi, rcx', 'jg 0x9611', 'cmp byte [0x000233c8], 0', 'mov r8, qword [0x000242a8]', 'je 0x9a00', 'lea rdx, str._b__e___Y', 'mov rdx, qword [rdx + rax*8]', 'jmp 0x9643', 'mov rcx, r13', 'mov esi, 0x3e9', 'mov rdi, rbx', 'call fcn.00013280', 'endbr64', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov byte [var_7h], 0', 'push r9', 'push r8', 'xor r8d, r8d', 'lea r9, [var_7h]', 'call fcn.000119f0', 'push r15', 'mov r10, rdi', 'push r14', 'mov r14, rcx', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdx', 'sub rsp, 0x4c8', 'mov r15, qword [rcx + 0x30]', 'mov r13d, dword [rcx + 8]', 'mov rax, qword [arg_500h]', 'mov qword [rsp], rsi', 'mov qword [var_18h], r9', 'mov qword [var_10h], rax', 'mov byte [var_2bh], r8b', 'mov rax, qword fs:[0x28]', 'mov qword [var_4b8h], rax', 'xor eax, eax', 'test r15, r15', 'lea rax, [0x000197fe]', 'cmove r15, rax', 'cmp r13d, 0xc', 'jle 0x11b00', 'sub r13d, 0xc', 'movzx eax, byte [rbx]', 'xor r11d, r11d', 'test al, al', 'je 0x11ab7', 'test r10, r10', 'je 0x11ad3', 'mov rax, qword [var_4b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x13256', 'add rsp, 0x4c8', 'mov rax, r11', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'mov rdx, qword [var_8h]', 'xor rdx, qword fs:[0x28]', 'jne 0x132c5', 'add rsp, 0x18', 'ret', 'test rax, rax', 'je 0x9660', 'cmp byte [rbx], 0', 'jne 0x993c', 'cmp byte [r12 + 0xb8], 0', 'je 0x9a95', 'lea r13, [0x000197e2]', 'jmp 0x930d', 'mov r8d, dword [0x00023014]', 'test r8d, r8d', 'js 0x9970', 'lea r14, [var_70h]', 'mov rdi, qword [0x000242a8]', 'lea rsi, [var_18h]', 'mov qword [var_18h], 0', 'mov rdx, r14', 'call fcn.00017030', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x170c0', 'mov r12, rdi', 'call fcn.00016f50', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00019af0]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x16fe0', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0x16f71', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
40,ls,209,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xeb28', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xeb3e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rcx, qword [var_20h]', 'mov r9, qword [var_28h]', 'mov rdx, qword [0x00024370]', 'mov rsi, qword [0x00024378]', 'lea rdi, [rdx - 0xf0c2ac]', 'cmp rdi, rcx', 'jge 0x9808', 'xor eax, eax', 'cmp rdi, rcx', 'jg 0x9611', 'cmp byte [0x000233c8], 0', 'mov r8, qword [0x000242a8]', 'je 0x9a00', 'lea rdx, str._b__e___Y', 'mov rdx, qword [rdx + rax*8]', 'jmp 0x9643', 'mov rcx, r13', 'mov esi, 0x3e9', 'mov rdi, rbx', 'call fcn.00013280', 'endbr64', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov byte [var_7h], 0', 'push r9', 'push r8', 'xor r8d, r8d', 'lea r9, [var_7h]', 'call fcn.000119f0', 'push r15', 'mov r10, rdi', 'push r14', 'mov r14, rcx', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdx', 'sub rsp, 0x4c8', 'mov r15, qword [rcx + 0x30]', 'mov r13d, dword [rcx + 8]', 'mov rax, qword [arg_500h]', 'mov qword [rsp], rsi', 'mov qword [var_18h], r9', 'mov qword [var_10h], rax', 'mov byte [var_2bh], r8b', 'mov rax, qword fs:[0x28]', 'mov qword [var_4b8h], rax', 'xor eax, eax', 'test r15, r15', 'lea rax, [0x000197fe]', 'cmove r15, rax', 'cmp r13d, 0xc', 'jle 0x11b00', 'sub r13d, 0xc', 'movzx eax, byte [rbx]', 'xor r11d, r11d', 'test al, al', 'je 0x11ab7', 'test r10, r10', 'je 0x11ad3', 'mov rax, qword [var_4b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x13256', 'add rsp, 0x4c8', 'mov rax, r11', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'mov rdx, qword [var_8h]', 'xor rdx, qword fs:[0x28]', 'jne 0x132c5', 'add rsp, 0x18', 'ret', 'test rax, rax', 'je 0x9660', 'cmp byte [rbx], 0', 'jne 0x993c', 'cmp byte [r12 + 0xb8], 0', 'je 0x9a95', 'lea r13, [0x000197e2]', 'jmp 0x930d', 'mov r8d, dword [0x00023014]', 'test r8d, r8d', 'js 0x9970', 'lea r14, [var_70h]', 'mov rdi, qword [0x000242a8]', 'lea rsi, [var_18h]', 'mov qword [var_18h], 0', 'mov rdx, r14', 'call fcn.00017030', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x170c0', 'mov r12, rdi', 'call fcn.00016f50', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00019af0]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x16fe0', 'cmp byte [rbx + 8], 0', 'jne 0x16fc0', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x16f71', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime']"
41,ls,433,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xeb28', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xeb3e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rcx, qword [var_20h]', 'mov r9, qword [var_28h]', 'mov rdx, qword [0x00024370]', 'mov rsi, qword [0x00024378]', 'lea rdi, [rdx - 0xf0c2ac]', 'cmp rdi, rcx', 'jge 0x9808', 'xor eax, eax', 'cmp rdi, rcx', 'jg 0x9611', 'cmp byte [0x000233c8], 0', 'mov r8, qword [0x000242a8]', 'je 0x9a00', 'lea rdx, str._b__e___Y', 'mov rdx, qword [rdx + rax*8]', 'jmp 0x9643', 'mov rcx, r13', 'mov esi, 0x3e9', 'mov rdi, rbx', 'call fcn.00013280', 'endbr64', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov byte [var_7h], 0', 'push r9', 'push r8', 'xor r8d, r8d', 'lea r9, [var_7h]', 'call fcn.000119f0', 'push r15', 'mov r10, rdi', 'push r14', 'mov r14, rcx', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdx', 'sub rsp, 0x4c8', 'mov r15, qword [rcx + 0x30]', 'mov r13d, dword [rcx + 8]', 'mov rax, qword [arg_500h]', 'mov qword [rsp], rsi', 'mov qword [var_18h], r9', 'mov qword [var_10h], rax', 'mov byte [var_2bh], r8b', 'mov rax, qword fs:[0x28]', 'mov qword [var_4b8h], rax', 'xor eax, eax', 'test r15, r15', 'lea rax, [0x000197fe]', 'cmove r15, rax', 'cmp r13d, 0xc', 'jle 0x11b00', 'sub r13d, 0xc', 'movzx eax, byte [rbx]', 'xor r11d, r11d', 'test al, al', 'je 0x11ab7', 'test r10, r10', 'je 0x11ad3', 'mov rax, qword [var_4b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x13256', 'add rsp, 0x4c8', 'mov rax, r11', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'mov rdx, qword [var_8h]', 'xor rdx, qword fs:[0x28]', 'jne 0x132c5', 'add rsp, 0x18', 'ret', 'test rax, rax', 'je 0x9660', 'cmp byte [rbx], 0', 'jne 0x993c', 'cmp byte [r12 + 0xb8], 0', 'je 0x9a95', 'lea r13, [0x000197e2]', 'jmp 0x930d', 'mov r8d, dword [0x00023014]', 'test r8d, r8d', 'js 0x9970', 'lea r14, [var_70h]', 'mov rdi, qword [0x000242a8]', 'lea rsi, [var_18h]', 'mov qword [var_18h], 0', 'mov rdx, r14', 'call fcn.00017030', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x170c0', 'mov r12, rdi', 'call fcn.00016f50', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00019af0]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x16fe0', 'cmp byte [rbx + 8], 0', 'jne 0x16fc0', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x16f71', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
42,ls,81,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17090', 'cmp r13, 1', 'je 0x1709e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x9660', 'mov rdx, qword [0x00024370]', 'mov rcx, qword [var_20h]', 'mov rsi, qword [0x00024378]', 'mov r9, qword [var_28h]', 'cmp rdx, rcx', 'jl 0x9a10', 'lea rdi, [0x00024370]', 'call fcn.0000eae0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
43,ls,101,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17090', 'cmp r13, 1', 'je 0x1709e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
44,ls,100,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17090', 'cmp r13, 1', 'je 0x1709e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime']"
45,ls,324,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17090', 'cmp r13, 1', 'je 0x1709e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
46,ls,283,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00016df0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x16eb0', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0x16e24', 'lea rdx, [rsi + 0x38]', 'mov eax, 1', 'cmp r12, rdx', 'jb 0x16e91', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x17090', 'cmp r13, 1', 'jne 0x170b0', 'add rsp, 8', 'mov rax, rbp', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x9660', 'mov rdx, qword [0x00024370]', 'mov rcx, qword [var_20h]', 'mov rsi, qword [0x00024378]', 'mov r9, qword [var_28h]', 'cmp rdx, rcx', 'jl 0x9a10', 'lea rdi, [0x00024370]', 'call fcn.0000eae0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
47,ls,296,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00016df0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x16eb0', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
48,ls,295,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00016df0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x16eb0', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime']"
49,ls,224,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
50,ls,126,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x9660', 'mov rdx, qword [0x00024370]', 'mov rcx, qword [var_20h]', 'mov rsi, qword [0x00024378]', 'mov r9, qword [var_28h]', 'cmp rdx, rcx', 'jl 0x9a10', 'lea rdi, [0x00024370]', 'call fcn.0000eae0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
51,ls,101,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
52,ls,100,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime']"
53,ls,324,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
54,lsipc,52,"['call sym.imp.localtime_r', 'mov rsi, rbp', 'mov rdi, r12', 'call sym.imp.asctime_r']"
55,lsipc,52,"['call sym.imp.localtime_r', 'lea rsi, [var_40h]', 'mov rdi, rbp', 'call sym.imp.localtime_r']"
56,mattrib,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
57,mbadblocks,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
58,mclasserase,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
59,mcopy,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
60,mdel,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
61,mdir,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
62,mpartition,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
63,mrd,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
64,mren,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
65,mshortname,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
66,mshowfat,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
67,mtools,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
68,mtoolstest,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
69,mtype,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
70,mzip,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
71,ncal,96,"['call sym.imp.localtime', 'mov ecx, dword [rax + 0x14]', 'mov r14d, dword [rax + 0x10]', 'lea ebp, [rcx + 0x76c]', 'add r14d, 1', 'jmp 0x2a19', 'mov eax, dword [0x00009024]', 'test ebx, ebx', 'je 0x2c54', 'add eax, 1', 'jne 0x2a39', 'mov eax, dword [var_1ch]', 'test eax, eax', 'je 0x2a4a', 'mov r15, qword [var_10h]', 'test r15, r15', 'je 0x2b75', 'mov eax, dword [var_18h]', 'xor eax, 1', 'and r13d, eax', 'je 0x2cde', 'mov r12d, dword [rsp]', 'xor r8d, r8d', 'or r12d, dword [var_4h]', 'je 0x2ba1', 'mov r13d, dword [var_20h]', 'add r12d, dword [var_24h]', 'xor eax, eax', 'mov edx, r12d', 'mov r15, qword [var_28h]', 'add r13d, r8d', 'add edx, r13d', 'cmovs r13d, eax', 'cmovs r12d, eax', 'test r15, r15', 'je 0x2db8', 'xor edi, edi', 'call sym.imp.time', 'lea rdi, [timer]', 'mov qword [timer], rax', 'call sym.imp.localtime']"
72,ranlib,269,"['call sym.imp.ctime', 'test rax, rax', 'je 0x8d48', 'lea r9, [rax + 0x14]', 'lea r8, [rax + 4]', 'xor eax, eax', 'mov edx, 0x28', 'lea r13, [var_b0h]', 'lea rcx, str._.12s__.4s', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.__sprintf_chk', 'mov edi, dword [var_28h]', 'lea rsi, [var_a5h]', 'call fcn.000093d0', 'endbr64', 'mov rdx, rdi', 'mov eax, 0x64', 'and edx, 0xf000', 'cmp rdx, 0x4000', 'je 0x9437', 'mov byte [rsi], al', 'mov rax, rdi', 'and eax, 0x100', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 1], al', 'mov rax, rdi', 'and eax, 0x80', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 2], al', 'mov rax, rdi', 'and eax, 0x40', 'cmp rax, 1', 'mov rax, rdi', 'sbb ecx, ecx', 'and eax, 0x20', 'and ecx, 0xffffffb5', 'add ecx, 0x78', 'cmp rax, 1', 'sbb eax, eax', 'mov byte [rsi + 3], cl', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 4], al', 'mov rax, rdi', 'and eax, 0x10', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 5], al', 'mov rax, rdi', 'and eax, 8', 'cmp rax, 1', 'mov rax, rdi', 'sbb edx, edx', 'and eax, 4', 'and edx, 0xffffffb5', 'add edx, 0x78', 'cmp rax, 1', 'sbb eax, eax', 'mov byte [rsi + 6], dl', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 7], al', 'mov rax, rdi', 'and eax, 2', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 8], al', 'mov rax, rdi', 'and eax, 1', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffb5', 'add eax, 0x78', 'mov byte [rsi + 9], al', 'test edi, 0x800', 'je 0x9517', 'test edi, 0x400', 'je 0x9532', 'test edi, 0x200', 'je 0x954c', 'ret', 'mov esi, 1', 'mov rdi, rbp', 'xor eax, eax', 'mov byte [var_afh], 0', 'lea rcx, [var_a6h]', 'lea rdx, str._s__ld__ld__6lu__s_', 'push r13', 'push qword [var_48h]', 'mov r9d, dword [var_40h]', 'mov r8d, dword [var_3ch]', 'call sym.imp.__fprintf_chk', 'pop rax', 'pop rdx', 'jmp 0x8c2b', 'mov rdi, qword [rbx]', 'mov rsi, rbp', 'call sym.imp.fputs', 'test r12d, r12d', 'je 0x8c50', 'mov rsi, rbp', 'mov edi, 0xa', 'call sym.imp.fputc', 'mov rax, qword [var_d8h]', 'xor rax, qword fs:[0x28]', 'jne 0x8d7f', 'add rsp, 0xe8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [rbx + 0xd8]', 'test rbx, rbx', 'jne 0x7820', 'mov edx, dword [0x000111b8]', 'mov rdi, qword [0x00011260]', 'mov rsi, rbx', 'xor ecx, ecx', 'call fcn.00008be0', 'endbr64', 'push r13', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0xe8', 'mov rax, qword fs:[0x28]', 'mov qword [var_d8h], rax', 'xor eax, eax', 'test edx, edx', 'je 0x8c2b', 'mov rax, qword [rbx + 8]', 'lea rsi, [var_10h]', 'mov rdi, rbx', 'call qword [rax + 0x1e0]', 'test eax, eax', 'je 0x8cb0', 'mov rax, qword [var_68h]', 'lea rdi, [timer]', 'mov qword [timer], rax', 'call sym.imp.ctime']"
73,rcp,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0xbd98', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xbe09', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0xbfa5', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0xbf70', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0000be10', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0000bd40', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0001d268]', 'test eax, eax', 'jne 0xbde0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
74,rcp,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xbd77', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xbe09', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0xbfa5', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0xbf70', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0000be10', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0000bd40', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0001d268]', 'test eax, eax', 'jne 0xbde0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
75,rcp,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xbd77', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xbe09', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0xbfa5', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0xbf70', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0000be10', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0000bd40', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0001d268]', 'test eax, eax', 'jne 0xbde0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0xbd98', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
76,rcp,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xbd77', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xbe09', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0xbfa5', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0xbf70', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0000be10', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0000bd40', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0001d268]', 'test eax, eax', 'jne 0xbde0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
77,rcp,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xbd77', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xbe09', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0xbfa5', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0xbf70', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0000be10', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0000bd40', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0001d268]', 'test eax, eax', 'jne 0xbde0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0xbd98', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
78,rcp,139,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xbd77', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xbe09', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0xbfa5', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0xbf70', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0000be10', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0000bd40', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0001d268]', 'test eax, eax', 'jne 0xbde0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0xbd98', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime', 'test eax, eax', 'je 0xbd77', 'xor edi, edi', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
79,script,510,"['call sym.imp.localtime_r', 'jmp 0x8d0c', 'test rax, rax', 'je 0x8d50', 'mov r8, rbx', 'mov rcx, r13', 'mov edx, r12d', 'xor esi, esi', 'mov rdi, r14', 'call fcn.000089d0', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'push r12', 'mov r12, rcx', 'push rbp', 'mov ebp, edx', 'and edx, 1', 'push rbx', 'mov rbx, r8', 'jne 0x8ba0', 'mov eax, ebp', 'and eax, 3', 'cmp eax, 3', 'je 0x8b20', 'test bpl, 2', 'jne 0x8b4c', 'mov r9, r14', 'lea r8, str.._06ld', 'test bpl, 8', 'jne 0x8a37', 'test bpl, 0x10', 'jne 0x8a30', 'and ebp, 4', 'jne 0x8a6e', 'xor eax, eax', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rbx, qword [var_38h]', 'xor rbx, qword fs:[0x28]', 'jne 0x8d77', 'add rsp, 0x40', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.Script_started_on__s__', 'call sym.imp.dcgettext', 'mov rdi, qword [stream]', 'mov rcx, r12', 'mov esi, 1', 'mov rdx, rax', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'test byte [mode], 0x40', 'je 0x4c08', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str._not_executed_on_terminal_', 'call sym.imp.dcgettext', 'mov rdi, qword [stream]', 'mov esi, 1', 'mov rdx, rax', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'jmp 0x434d', 'mov rcx, qword [stream]', 'mov edx, 2', 'mov esi, 1', 'lea rdi, [0x0000a035]', 'call sym.imp.fwrite', 'lea rdi, [var_130h]', 'call fcn.00006220', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edi, 4', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rsi, rsp', 'call sym.imp.clock_gettime', 'mov r8d, eax', 'test eax, eax', 'jne 0x627b', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6294', 'add rsp, 0x20', 'mov eax, r8d', 'pop rbx', 'ret', 'mov r14d, dword [0x0000e04c]', 'and r14d, 4', 'cmp byte [mode], 0', 'js 0x4d2e', 'test r14d, r14d', 'jne 0x506b', 'xor esi, esi', 'mov rdi, rbp', 'call fcn.00005480', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'test byte [0x0000e04c], 0x20', 'jne 0x559f', 'test byte [rbx + 0xa8], 0x40', 'je 0x54c3', 'mov eax, dword [rbx + 0x60]', 'mov edx, eax', 'mov ebp, eax', 'movzx eax, ah', 'and edx, 0x7f', 'and ebp, 0x7f', 'add edx, 1', 'sub ebp, 0xffffff80', 'cmp dl, 2', 'cmovl ebp, eax', 'cmp qword [rbx + 0x18], 0', 'je 0x5550', 'xor edi, edi', 'lea r13, [var_10h]', 'call sym.imp.time', 'mov rdx, r13', 'lea rdi, [var_8h]', 'mov ecx, 0x2a', 'mov esi, 7', 'mov qword [var_8h], rax', 'call fcn.00008cd0', 'endbr64', 'push r14', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12d, esi', 'push rbp', 'mov rbp, rdi', 'push rbx', 'mov rbx, rcx', 'sub rsp, 0x40', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov r14, rsp', 'and esi, 0x40', 'mov rsi, r14', 'je 0x8d48', 'call sym.imp.localtime_r']"
80,script,411,"['call sym.imp.localtime_r', 'jmp 0x8d0c', 'test rax, rax', 'je 0x8d50', 'mov r8, rbx', 'mov rcx, r13', 'mov edx, r12d', 'xor esi, esi', 'mov rdi, r14', 'call fcn.000089d0', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'push r12', 'mov r12, rcx', 'push rbp', 'mov ebp, edx', 'and edx, 1', 'push rbx', 'mov rbx, r8', 'jne 0x8ba0', 'mov eax, ebp', 'and eax, 3', 'cmp eax, 3', 'je 0x8b20', 'test bpl, 2', 'jne 0x8b4c', 'mov r9, r14', 'lea r8, str.._06ld', 'test bpl, 8', 'jne 0x8a37', 'test bpl, 0x10', 'jne 0x8a30', 'and ebp, 4', 'jne 0x8a6e', 'xor eax, eax', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rbx, qword [var_38h]', 'xor rbx, qword fs:[0x28]', 'jne 0x8d77', 'add rsp, 0x40', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.Script_started_on__s__', 'call sym.imp.dcgettext', 'mov rdi, qword [stream]', 'mov rcx, r12', 'mov esi, 1', 'mov rdx, rax', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'test byte [mode], 0x40', 'je 0x4c08', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str._not_executed_on_terminal_', 'call sym.imp.dcgettext', 'mov rdi, qword [stream]', 'mov esi, 1', 'mov rdx, rax', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'jmp 0x434d', 'mov rcx, qword [stream]', 'mov edx, 2', 'mov esi, 1', 'lea rdi, [0x0000a035]', 'call sym.imp.fwrite', 'lea rdi, [var_130h]', 'call fcn.00006220', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edi, 4', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rsi, rsp', 'call sym.imp.clock_gettime']"
81,script,99,"['call sym.imp.clock_gettime', 'mov r8d, eax', 'test eax, eax', 'jne 0x627b', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6294', 'add rsp, 0x20', 'mov eax, r8d', 'pop rbx', 'ret', 'mov r14d, dword [0x0000e04c]', 'and r14d, 4', 'cmp byte [mode], 0', 'js 0x4d2e', 'test r14d, r14d', 'jne 0x506b', 'xor esi, esi', 'mov rdi, rbp', 'call fcn.00005480', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'test byte [0x0000e04c], 0x20', 'jne 0x559f', 'test byte [rbx + 0xa8], 0x40', 'je 0x54c3', 'mov eax, dword [rbx + 0x60]', 'mov edx, eax', 'mov ebp, eax', 'movzx eax, ah', 'and edx, 0x7f', 'and ebp, 0x7f', 'add edx, 1', 'sub ebp, 0xffffff80', 'cmp dl, 2', 'cmovl ebp, eax', 'cmp qword [rbx + 0x18], 0', 'je 0x5550', 'xor edi, edi', 'lea r13, [var_10h]', 'call sym.imp.time', 'mov rdx, r13', 'lea rdi, [var_8h]', 'mov ecx, 0x2a', 'mov esi, 7', 'mov qword [var_8h], rax', 'call fcn.00008cd0', 'endbr64', 'push r14', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12d, esi', 'push rbp', 'mov rbp, rdi', 'push rbx', 'mov rbx, rcx', 'sub rsp, 0x40', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov r14, rsp', 'and esi, 0x40', 'mov rsi, r14', 'je 0x8d48', 'call sym.imp.localtime_r']"
82,script,140,"['call sym.imp.clock_gettime', 'mov r8d, eax', 'test eax, eax', 'jne 0x627b', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6294', 'add rsp, 0x20', 'mov eax, r8d', 'pop rbx', 'ret', 'mov r14d, dword [0x0000e04c]', 'and r14d, 4', 'cmp byte [mode], 0', 'js 0x4d2e', 'test r14d, r14d', 'jne 0x4814', 'mov edx, dword [var_148h]', 'mov esi, 3', 'mov rdi, rbx', 'call sym.imp.poll', 'mov r13d, eax', 'call sym.imp.__errno_location', 'mov r14d, dword [rax]', 'mov r12, rax', 'test byte [0x0000e04c], 4', 'jne 0x47cf', 'test r13d, r13d', 'jns 0x4736', 'je 0x4f5b', 'mov r14d, dword [0x0000e04c]', 'or r15, 0xffffffffffffffff', 'cmp word [rbx + r15*8 + 0xe], 0', 'je 0x47bc', 'and r14b, 4', 'jne 0x499d', 'cmp r15, 1', 'jbe 0x489b', 'test byte [rbx + r15*8 + 0xe], 1', 'jne 0x4bf1', 'mov esi, dword [rbx + r15*8 + 8]', 'lea rdx, [var_14h]', 'mov rdi, rbp', 'call fcn.000058e0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_2038h], rax', 'xor eax, eax', 'mov r12, rdi', 'mov r13d, esi', 'mov r14, rdx', 'test byte [0x0000e04c], 0x10', 'jne 0x5a10', 'mov dword [r14], 0', 'lea rbp, [rsp + 0x30]', 'mov edx, 0x2000', 'mov edi, r13d', 'mov rsi, rbp', 'call sym.imp.read', 'mov rbx, rax', 'test rax, rax', 'js 0x59f0', 'je 0x59c0', 'test r13d, r13d', 'jne 0x5a58', 'cmp dword [r12 + 0x50], r13d', 'jne 0x59c7', 'mov eax, dword [0x0000e04c]', 'test al, 0x10', 'jne 0x5be8', 'test byte [r12 + 0xa8], 0x10', 'jne 0x5e90', 'and eax, 0x10', 'cmp qword [r12 + 0x28], 0', 'mov dword [rsp + 0x14], 0', 'je 0x5c93', 'test eax, eax', 'jne 0x5ffe', 'lea rdi, [rsp + 0x20]', 'call fcn.00006220', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edi, 4', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rsi, rsp', 'call sym.imp.clock_gettime']"
83,top,20673,"['call sym.imp.sprint_uptime', 'test byte [r13 + 0xcc], 0x10', 'lea rdi, str._s6___s_n', 'lea rsi, [r13 + 0x32c]', 'mov rdx, rax', 'lea rax, str._s___s_n', 'cmove rdi, rax', 'xor eax, eax', 'call fcn.00006770', 'sub rsp, 0xd8', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x67cb', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov r8, rdi', 'mov r9, rsp', 'mov qword [var_8h], rax', 'mov ecx, 0x800', 'lea rax, [var_20h]', 'mov edx, 1', 'mov esi, 0x800', 'lea rdi, [0x00041400]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.__vsnprintf_chk', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6841', 'lea rax, [0x00041400]', 'add rsp, 0xd8', 'ret', 'xor edi, edi', 'mov rsi, rax', 'call fcn.0000bf10', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'sub rsp, 0x438', 'lea r13, [0x00046d60]', 'mov dword [var_1ch], edi', 'mov r14, rsi', 'mov rax, qword fs:[0x28]', 'mov qword [var_1428h], rax', 'xor eax, eax', 'nop', 'mov esi, 0xa', 'mov rdi, r14', 'call sym.imp.strchr', 'mov qword [var_8h_2], rax', 'test rax, rax', 'je 0xc1c6', 'cmp byte [r14], 0', 'jne 0xc251', 'mov rax, qword [var_1428h]', 'xor rax, qword fs:[0x28]', 'jne 0xc2a2', 'add rsp, 0x1438', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add dword [0x00046ed0], 1', 'mov eax, dword [r13 + 0xcc]', 'jmp 0xc680', 'test ah, 0x20', 'je 0xc700', 'test ah, 0x10', 'je 0xc69f', 'mov rax, qword [var_38h]', 'xor rax, qword fs:[0x28]', 'jne 0xd4df', 'lea rsp, [var_28h]', 'pop rbx', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'pop rbp', 'ret', 'mov eax, dword [0x00046ed8]', 'sub eax, dword [0x00046ed0]', 'lea rdi, [0x00046ea0]', 'sub eax, 1', 'mov dword [0x00046ed4], eax', 'call sym.imp.putp', 'mov r14d, dword [0x0001f084]', 'test r14d, r14d', 'jne 0x5b18', 'mov eax, dword [0x00046ed4]', 'lea rbx, [0x00044e00]', 'xor r14d, r14d', 'xor r15d, r15d', 'test byte [rbx + 0xcc], 0x10', 'jne 0x5c0d', 'cmp r15d, eax', 'jge 0x546b', 'test byte [r12 + 0xce], 8', 'je 0x5494', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'mov ebx, dword [0x00046cf0]', 'test ebx, ebx', 'je 0x5cf1', 'mov r11d, dword [0x0001f2c4]', 'test r11d, r11d', 'js 0x5c74', 'mov eax, dword [0x0001f074]', 'test eax, eax', 'jle 0x54d1', 'mov r9d, dword [0x0001f074]', 'test r9d, r9d', 'je 0x5b11', 'movss xmm0, dword [0x0001f08c]', 'pxor xmm1, xmm1', 'mov ebx, dword [0x00046ecc]', 'cvttss2si rax, xmm0', 'mov qword [var_20h], rax', 'cvttss2si eax, xmm0', 'cvtsi2ss xmm1, eax', 'subss xmm0, xmm1', 'mulss xmm0, dword [0x00018404]', 'cvttss2si rax, xmm0', 'mov qword [var_28h], rax', 'test ebx, ebx', 'je 0x5b87', 'lea rsi, [var_30h]', 'mov ecx, 0x10', 'mov eax, ebx', 'mov rdi, rsi', 'cld', 'rep stosq qword [rdi], rax', 'xor ecx, ecx', 'xor edx, edx', 'lea r9, [0x00047380]', 'mov edi, 1', 'lea r8, [var_20h]', 'or qword [var_30h], 1', 'call sym.imp.pselect', 'test eax, eax', 'jle 0x53a0', 'mov edi, 1', 'call fcn.0000aa50', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test edi, edi', 'je 0xaaa0', 'cmp edi, 1', 'je 0xacc8', 'movsxd rax, dword [0x000201e0]', 'cmp eax, dword [0x000201dc]', 'jge 0xabc0', 'lea edx, [rax + 1]', 'mov dword [0x000201e0], edx', 'lea rdx, [0x00020200]', 'movsx eax, byte [rdx + rax]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r12d, eax', 'cmp eax, 0x57', 'je 0x5eaa', 'jg 0x5e0b', 'test eax, eax', 'je 0x5beb', 'mov edi, 1', 'call fcn.00006e20', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov rbp, qword [0x00040da8]', 'test edi, edi', 'je 0x6e3e', 'xor edi, edi', 'call sym.imp.time', 'mov rbx, rax', 'sub rax, rbp', 'cmp rax, 2', 'jg 0x6e60', 'call sym.imp.meminfo', 'call sym.imp.cpuinfo', 'call qword [obj.numa_max_node]', 'mov qword [0x00040da8], rbx', 'add eax, 1', 'mov dword [0x00041c80], eax', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'call fcn.00008a40', 'push r14', 'xor edi, edi', 'push r13', 'push r12', 'push rbp', 'push rbx', 'call fcn.000086f0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x88c8', 'movzx eax, byte [rdi + 0x1c]', 'mov rbx, rdi', 'cmp al, 0x5a', 'je 0x88b8', 'add dword [0x00044dc0], 1', 'jmp 0x8741', 'mov r13d, dword [0x00044dd4]', 'mov eax, dword [0x00044db0]', 'mov rbp, qword [0x00044da0]', 'lea r12d, [r13 + 1]', 'cmp r12d, eax', 'jge 0x8860', 'movsxd rax, r13d', 'mov edx, dword [rbx]', 'mov rsi, qword [rbx + 0x28]', 'mov r8, qword [rbx + 0x1b8]', 'mov rdi, qword [rbx + 0x1b0]', 'shl rax, 5', 'add rax, rbp', 'add rsi, qword [rbx + 0x20]', 'mov dword [rax + 0x18], edx', 'mov rdx, qword [0x0001ff40]', 'mov qword [rax], rsi', 'mov qword [rax + 8], r8', 'mov qword [rax + 0x10], rdi', 'mov eax, r13d', 'shl rax, 5', 'add rbp, rax', 'mov eax, dword [rbp + 0x18]', 'and eax, 0x3ff', 'lea rax, [rdx + rax*4]', 'mov edx, dword [rax]', 'mov dword [rbp + 0x1c], edx', 'mov dword [rax], r13d', 'mov edx, dword [rbx]', 'mov rax, qword [0x0001ff48]', 'mov ecx, edx', 'and ecx, 0x3ff', 'movsxd rax, dword [rax + rcx*4]', 'test eax, eax', 'js 0x8807', 'mov dword [rbx + 0x18], esi', 'mov dword [0x00044dd4], r12d', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x8a2d', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov edi, dword [0x00044dd8]', 'xor eax, eax', 'lea rsi, [0x00046f00]', 'call sym.imp.openproc', 'test rax, rax', 'je 0x8c07', 'mov rbp, rax', 'mov eax, dword [0x00046ec4]', 'test eax, eax', 'jne 0x8b30', 'mov r12, qword [reloc.readproc]', 'jmp 0x8ac0', 'movsxd rdi, dword [0x00044dd4]', 'cmp edi, dword [0x00040da0]', 'mov r8, qword [0x00040d98]', 'mov r14, rdi', 'lea r13, [rdi*8]', 'jne 0x8a90', 'lea rdi, [r8 + r13]', 'mov rsi, qword [rdi]', 'mov rdi, rbp', 'call r12', 'mov rdi, rax', 'test rax, rax', 'je 0x8b40', 'mov rdi, rbp', 'call sym.imp.closeproc', 'movsxd rbp, dword [0x00040da0]', 'cmp dword [0x00040d90], ebp', 'je 0x8bc0', 'movsxd rbp, dword [0x00044dd4]', 'lea rbx, [0x00044e00]', 'mov r13, qword [0x00040d98]', 'lea r12, [rbx + 0x16e0]', 'shl rbp, 3', 'mov rdi, qword [rbx + 0x5a0]', 'mov rdx, rbp', 'mov rsi, r13', 'add rbx, 0x5b8', 'call sym.imp.memcpy', 'cmp rbx, r12', 'jne 0x8be0', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov dword [0x00046ed0], 0', 'mov dword [0x0001f070], 0', 'mov dword [0x00041c18], 0', 'call fcn.0000c630', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x388', 'mov r13, qword [0x00044de0]', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov eax, dword [r13 + 0xcc]', 'test ah, 0x40', 'je 0xc680', 'mov ebx, dword [0x00046ed0]', 'lea ecx, [rbx + 1]', 'mov ebx, dword [0x00046ed8]', 'lea edx, [rbx - 1]', 'cmp ecx, edx', 'jl 0xcc78', 'mov r14d, dword [0x0001f084]', 'xor edi, edi', 'test r14d, r14d', 'je 0xccd8', 'call sym.imp.sprint_uptime']"
84,top,20673,"['call sym.imp.sprint_uptime', 'test byte [r13 + 0xcc], 0x10', 'lea rdi, str._s6___s_n', 'lea rsi, [r13 + 0x32c]', 'mov rdx, rax', 'lea rax, str._s___s_n', 'cmove rdi, rax', 'xor eax, eax', 'call fcn.00006770', 'sub rsp, 0xd8', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x67cb', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov r8, rdi', 'mov r9, rsp', 'mov qword [var_8h], rax', 'mov ecx, 0x800', 'lea rax, [var_20h]', 'mov edx, 1', 'mov esi, 0x800', 'lea rdi, [0x00041400]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.__vsnprintf_chk', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6841', 'lea rax, [0x00041400]', 'add rsp, 0xd8', 'ret', 'xor edi, edi', 'mov rsi, rax', 'call fcn.0000bf10', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'sub rsp, 0x438', 'lea r13, [0x00046d60]', 'mov dword [var_1ch], edi', 'mov r14, rsi', 'mov rax, qword fs:[0x28]', 'mov qword [var_1428h], rax', 'xor eax, eax', 'nop', 'mov esi, 0xa', 'mov rdi, r14', 'call sym.imp.strchr', 'mov qword [var_8h_2], rax', 'test rax, rax', 'je 0xc1c6', 'cmp byte [r14], 0', 'jne 0xc251', 'mov rax, qword [var_1428h]', 'xor rax, qword fs:[0x28]', 'jne 0xc2a2', 'add rsp, 0x1438', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add dword [0x00046ed0], 1', 'mov eax, dword [r13 + 0xcc]', 'jmp 0xc680', 'test ah, 0x20', 'je 0xc700', 'test ah, 0x10', 'je 0xc69f', 'mov rax, qword [var_38h]', 'xor rax, qword fs:[0x28]', 'jne 0xd4df', 'lea rsp, [var_28h]', 'pop rbx', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'pop rbp', 'ret', 'mov eax, dword [0x00046ed8]', 'sub eax, dword [0x00046ed0]', 'lea rdi, [0x00046ea0]', 'sub eax, 1', 'mov dword [0x00046ed4], eax', 'call sym.imp.putp', 'mov r14d, dword [0x0001f084]', 'test r14d, r14d', 'jne 0x5b18', 'mov eax, dword [0x00046ed4]', 'lea rbx, [0x00044e00]', 'xor r14d, r14d', 'xor r15d, r15d', 'test byte [rbx + 0xcc], 0x10', 'jne 0x5c0d', 'cmp r15d, eax', 'jge 0x546b', 'test byte [r12 + 0xce], 8', 'je 0x5494', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'mov ebx, dword [0x00046cf0]', 'test ebx, ebx', 'je 0x5cf1', 'mov r11d, dword [0x0001f2c4]', 'test r11d, r11d', 'js 0x5c74', 'mov eax, dword [0x0001f074]', 'test eax, eax', 'jle 0x54d1', 'mov r9d, dword [0x0001f074]', 'test r9d, r9d', 'je 0x5b11', 'movss xmm0, dword [0x0001f08c]', 'pxor xmm1, xmm1', 'mov ebx, dword [0x00046ecc]', 'cvttss2si rax, xmm0', 'mov qword [var_20h], rax', 'cvttss2si eax, xmm0', 'cvtsi2ss xmm1, eax', 'subss xmm0, xmm1', 'mulss xmm0, dword [0x00018404]', 'cvttss2si rax, xmm0', 'mov qword [var_28h], rax', 'test ebx, ebx', 'je 0x5b87', 'lea rsi, [var_30h]', 'mov ecx, 0x10', 'mov eax, ebx', 'mov rdi, rsi', 'cld', 'rep stosq qword [rdi], rax', 'xor ecx, ecx', 'xor edx, edx', 'lea r9, [0x00047380]', 'mov edi, 1', 'lea r8, [var_20h]', 'or qword [var_30h], 1', 'call sym.imp.pselect', 'test eax, eax', 'jle 0x53a0', 'mov edi, 1', 'call fcn.0000aa50', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test edi, edi', 'je 0xaaa0', 'cmp edi, 1', 'je 0xacc8', 'movsxd rax, dword [0x000201e0]', 'cmp eax, dword [0x000201dc]', 'jge 0xabc0', 'lea edx, [rax + 1]', 'mov dword [0x000201e0], edx', 'lea rdx, [0x00020200]', 'movsx eax, byte [rdx + rax]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r12d, eax', 'cmp eax, 0x57', 'je 0x5eaa', 'jg 0x5e0b', 'test eax, eax', 'je 0x5beb', 'mov edi, 1', 'call fcn.00006e20', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov rbp, qword [0x00040da8]', 'test edi, edi', 'je 0x6e3e', 'xor edi, edi', 'call sym.imp.time', 'mov rbx, rax', 'sub rax, rbp', 'cmp rax, 2', 'jg 0x6e60', 'call sym.imp.meminfo', 'call sym.imp.cpuinfo', 'call qword [obj.numa_max_node]', 'mov qword [0x00040da8], rbx', 'add eax, 1', 'mov dword [0x00041c80], eax', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'call fcn.00008a40', 'push r14', 'xor edi, edi', 'push r13', 'push r12', 'push rbp', 'push rbx', 'call fcn.000086f0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x88c8', 'movzx eax, byte [rdi + 0x1c]', 'mov rbx, rdi', 'cmp al, 0x5a', 'je 0x88b8', 'add dword [0x00044dc0], 1', 'jmp 0x8741', 'mov r13d, dword [0x00044dd4]', 'mov eax, dword [0x00044db0]', 'mov rbp, qword [0x00044da0]', 'lea r12d, [r13 + 1]', 'cmp r12d, eax', 'jge 0x8860', 'movsxd rax, r13d', 'mov edx, dword [rbx]', 'mov rsi, qword [rbx + 0x28]', 'mov r8, qword [rbx + 0x1b8]', 'mov rdi, qword [rbx + 0x1b0]', 'shl rax, 5', 'add rax, rbp', 'add rsi, qword [rbx + 0x20]', 'mov dword [rax + 0x18], edx', 'mov rdx, qword [0x0001ff40]', 'mov qword [rax], rsi', 'mov qword [rax + 8], r8', 'mov qword [rax + 0x10], rdi', 'mov eax, r13d', 'shl rax, 5', 'add rbp, rax', 'mov eax, dword [rbp + 0x18]', 'and eax, 0x3ff', 'lea rax, [rdx + rax*4]', 'mov edx, dword [rax]', 'mov dword [rbp + 0x1c], edx', 'mov dword [rax], r13d', 'mov edx, dword [rbx]', 'mov rax, qword [0x0001ff48]', 'mov ecx, edx', 'and ecx, 0x3ff', 'movsxd rax, dword [rax + rcx*4]', 'test eax, eax', 'js 0x8807', 'mov dword [rbx + 0x18], esi', 'mov dword [0x00044dd4], r12d', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x8a2d', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov edi, dword [0x00044dd8]', 'xor eax, eax', 'lea rsi, [0x00046f00]', 'call sym.imp.openproc', 'test rax, rax', 'je 0x8c07', 'mov rbp, rax', 'mov eax, dword [0x00046ec4]', 'test eax, eax', 'jne 0x8b30', 'mov r12, qword [reloc.readproc]', 'jmp 0x8ac0', 'movsxd rdi, dword [0x00044dd4]', 'cmp edi, dword [0x00040da0]', 'mov r8, qword [0x00040d98]', 'mov r14, rdi', 'lea r13, [rdi*8]', 'jne 0x8a90', 'lea rdi, [r8 + r13]', 'mov rsi, qword [rdi]', 'mov rdi, rbp', 'call r12', 'mov rdi, rax', 'test rax, rax', 'je 0x8b40', 'mov rdi, rbp', 'call sym.imp.closeproc', 'movsxd rbp, dword [0x00040da0]', 'cmp dword [0x00040d90], ebp', 'je 0x8bc0', 'movsxd rbp, dword [0x00044dd4]', 'lea rbx, [0x00044e00]', 'mov r13, qword [0x00040d98]', 'lea r12, [rbx + 0x16e0]', 'shl rbp, 3', 'mov rdi, qword [rbx + 0x5a0]', 'mov rdx, rbp', 'mov rsi, r13', 'add rbx, 0x5b8', 'call sym.imp.memcpy', 'cmp rbx, r12', 'jne 0x8be0', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov dword [0x00046ed0], 0', 'mov dword [0x0001f070], 0', 'mov dword [0x00041c18], 0', 'call fcn.0000c630', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x388', 'mov r13, qword [0x00044de0]', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov eax, dword [r13 + 0xcc]', 'test ah, 0x40', 'je 0xc680', 'mov ebx, dword [0x00046ed0]', 'lea ecx, [rbx + 1]', 'mov ebx, dword [0x00046ed8]', 'lea edx, [rbx - 1]', 'cmp ecx, edx', 'jl 0xcc78', 'mov r14d, dword [0x0001f084]', 'xor edi, edi', 'test r14d, r14d', 'je 0xccd8', 'call sym.imp.sprint_uptime']"
85,top,20671,"['call sym.imp.sprint_uptime', 'mov rsi, qword [0x00047400]', 'lea rdi, str._s___s_n', 'mov rdx, rax', 'jmp 0xccaf', 'xor eax, eax', 'call fcn.00006770', 'sub rsp, 0xd8', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x67cb', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov r8, rdi', 'mov r9, rsp', 'mov qword [var_8h], rax', 'mov ecx, 0x800', 'lea rax, [var_20h]', 'mov edx, 1', 'mov esi, 0x800', 'lea rdi, [0x00041400]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.__vsnprintf_chk', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6841', 'lea rax, [0x00041400]', 'add rsp, 0xd8', 'ret', 'xor edi, edi', 'mov rsi, rax', 'call fcn.0000bf10', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'sub rsp, 0x438', 'lea r13, [0x00046d60]', 'mov dword [var_1ch], edi', 'mov r14, rsi', 'mov rax, qword fs:[0x28]', 'mov qword [var_1428h], rax', 'xor eax, eax', 'nop', 'mov esi, 0xa', 'mov rdi, r14', 'call sym.imp.strchr', 'mov qword [var_8h_2], rax', 'test rax, rax', 'je 0xc1c6', 'cmp byte [r14], 0', 'jne 0xc251', 'mov rax, qword [var_1428h]', 'xor rax, qword fs:[0x28]', 'jne 0xc2a2', 'add rsp, 0x1438', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add dword [0x00046ed0], 1', 'mov eax, dword [r13 + 0xcc]', 'jmp 0xc680', 'test ah, 0x20', 'je 0xc700', 'test ah, 0x10', 'je 0xc69f', 'mov rax, qword [var_38h]', 'xor rax, qword fs:[0x28]', 'jne 0xd4df', 'lea rsp, [var_28h]', 'pop rbx', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'pop rbp', 'ret', 'mov eax, dword [0x00046ed8]', 'sub eax, dword [0x00046ed0]', 'lea rdi, [0x00046ea0]', 'sub eax, 1', 'mov dword [0x00046ed4], eax', 'call sym.imp.putp', 'mov r14d, dword [0x0001f084]', 'test r14d, r14d', 'jne 0x5b18', 'mov eax, dword [0x00046ed4]', 'lea rbx, [0x00044e00]', 'xor r14d, r14d', 'xor r15d, r15d', 'test byte [rbx + 0xcc], 0x10', 'jne 0x5c0d', 'cmp r15d, eax', 'jge 0x546b', 'test byte [r12 + 0xce], 8', 'je 0x5494', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'mov ebx, dword [0x00046cf0]', 'test ebx, ebx', 'je 0x5cf1', 'mov r11d, dword [0x0001f2c4]', 'test r11d, r11d', 'js 0x5c74', 'mov eax, dword [0x0001f074]', 'test eax, eax', 'jle 0x54d1', 'mov r9d, dword [0x0001f074]', 'test r9d, r9d', 'je 0x5b11', 'movss xmm0, dword [0x0001f08c]', 'pxor xmm1, xmm1', 'mov ebx, dword [0x00046ecc]', 'cvttss2si rax, xmm0', 'mov qword [var_20h], rax', 'cvttss2si eax, xmm0', 'cvtsi2ss xmm1, eax', 'subss xmm0, xmm1', 'mulss xmm0, dword [0x00018404]', 'cvttss2si rax, xmm0', 'mov qword [var_28h], rax', 'test ebx, ebx', 'je 0x5b87', 'lea rsi, [var_30h]', 'mov ecx, 0x10', 'mov eax, ebx', 'mov rdi, rsi', 'cld', 'rep stosq qword [rdi], rax', 'xor ecx, ecx', 'xor edx, edx', 'lea r9, [0x00047380]', 'mov edi, 1', 'lea r8, [var_20h]', 'or qword [var_30h], 1', 'call sym.imp.pselect', 'test eax, eax', 'jle 0x53a0', 'mov edi, 1', 'call fcn.0000aa50', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test edi, edi', 'je 0xaaa0', 'cmp edi, 1', 'je 0xacc8', 'movsxd rax, dword [0x000201e0]', 'cmp eax, dword [0x000201dc]', 'jge 0xabc0', 'lea edx, [rax + 1]', 'mov dword [0x000201e0], edx', 'lea rdx, [0x00020200]', 'movsx eax, byte [rdx + rax]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r12d, eax', 'cmp eax, 0x57', 'je 0x5eaa', 'jg 0x5e0b', 'test eax, eax', 'je 0x5beb', 'mov edi, 1', 'call fcn.00006e20', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov rbp, qword [0x00040da8]', 'test edi, edi', 'je 0x6e3e', 'xor edi, edi', 'call sym.imp.time', 'mov rbx, rax', 'sub rax, rbp', 'cmp rax, 2', 'jg 0x6e60', 'call sym.imp.meminfo', 'call sym.imp.cpuinfo', 'call qword [obj.numa_max_node]', 'mov qword [0x00040da8], rbx', 'add eax, 1', 'mov dword [0x00041c80], eax', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'call fcn.00008a40', 'push r14', 'xor edi, edi', 'push r13', 'push r12', 'push rbp', 'push rbx', 'call fcn.000086f0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x88c8', 'movzx eax, byte [rdi + 0x1c]', 'mov rbx, rdi', 'cmp al, 0x5a', 'je 0x88b8', 'add dword [0x00044dc0], 1', 'jmp 0x8741', 'mov r13d, dword [0x00044dd4]', 'mov eax, dword [0x00044db0]', 'mov rbp, qword [0x00044da0]', 'lea r12d, [r13 + 1]', 'cmp r12d, eax', 'jge 0x8860', 'movsxd rax, r13d', 'mov edx, dword [rbx]', 'mov rsi, qword [rbx + 0x28]', 'mov r8, qword [rbx + 0x1b8]', 'mov rdi, qword [rbx + 0x1b0]', 'shl rax, 5', 'add rax, rbp', 'add rsi, qword [rbx + 0x20]', 'mov dword [rax + 0x18], edx', 'mov rdx, qword [0x0001ff40]', 'mov qword [rax], rsi', 'mov qword [rax + 8], r8', 'mov qword [rax + 0x10], rdi', 'mov eax, r13d', 'shl rax, 5', 'add rbp, rax', 'mov eax, dword [rbp + 0x18]', 'and eax, 0x3ff', 'lea rax, [rdx + rax*4]', 'mov edx, dword [rax]', 'mov dword [rbp + 0x1c], edx', 'mov dword [rax], r13d', 'mov edx, dword [rbx]', 'mov rax, qword [0x0001ff48]', 'mov ecx, edx', 'and ecx, 0x3ff', 'movsxd rax, dword [rax + rcx*4]', 'test eax, eax', 'js 0x8807', 'mov dword [rbx + 0x18], esi', 'mov dword [0x00044dd4], r12d', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x8a2d', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov edi, dword [0x00044dd8]', 'xor eax, eax', 'lea rsi, [0x00046f00]', 'call sym.imp.openproc', 'test rax, rax', 'je 0x8c07', 'mov rbp, rax', 'mov eax, dword [0x00046ec4]', 'test eax, eax', 'jne 0x8b30', 'mov r12, qword [reloc.readproc]', 'jmp 0x8ac0', 'movsxd rdi, dword [0x00044dd4]', 'cmp edi, dword [0x00040da0]', 'mov r8, qword [0x00040d98]', 'mov r14, rdi', 'lea r13, [rdi*8]', 'jne 0x8a90', 'lea rdi, [r8 + r13]', 'mov rsi, qword [rdi]', 'mov rdi, rbp', 'call r12', 'mov rdi, rax', 'test rax, rax', 'je 0x8b40', 'mov rdi, rbp', 'call sym.imp.closeproc', 'movsxd rbp, dword [0x00040da0]', 'cmp dword [0x00040d90], ebp', 'je 0x8bc0', 'movsxd rbp, dword [0x00044dd4]', 'lea rbx, [0x00044e00]', 'mov r13, qword [0x00040d98]', 'lea r12, [rbx + 0x16e0]', 'shl rbp, 3', 'mov rdi, qword [rbx + 0x5a0]', 'mov rdx, rbp', 'mov rsi, r13', 'add rbx, 0x5b8', 'call sym.imp.memcpy', 'cmp rbx, r12', 'jne 0x8be0', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov dword [0x00046ed0], 0', 'mov dword [0x0001f070], 0', 'mov dword [0x00041c18], 0', 'call fcn.0000c630', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x388', 'mov r13, qword [0x00044de0]', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov eax, dword [r13 + 0xcc]', 'test ah, 0x40', 'je 0xc680', 'mov ebx, dword [0x00046ed0]', 'lea ecx, [rbx + 1]', 'mov ebx, dword [0x00046ed8]', 'lea edx, [rbx - 1]', 'cmp ecx, edx', 'jl 0xcc78', 'mov r14d, dword [0x0001f084]', 'xor edi, edi', 'test r14d, r14d', 'je 0xccd8', 'call sym.imp.sprint_uptime']"
86,top,20671,"['call sym.imp.sprint_uptime', 'mov rsi, qword [0x00047400]', 'lea rdi, str._s___s_n', 'mov rdx, rax', 'jmp 0xccaf', 'xor eax, eax', 'call fcn.00006770', 'sub rsp, 0xd8', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x67cb', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov r8, rdi', 'mov r9, rsp', 'mov qword [var_8h], rax', 'mov ecx, 0x800', 'lea rax, [var_20h]', 'mov edx, 1', 'mov esi, 0x800', 'lea rdi, [0x00041400]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.__vsnprintf_chk', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6841', 'lea rax, [0x00041400]', 'add rsp, 0xd8', 'ret', 'xor edi, edi', 'mov rsi, rax', 'call fcn.0000bf10', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'sub rsp, 0x438', 'lea r13, [0x00046d60]', 'mov dword [var_1ch], edi', 'mov r14, rsi', 'mov rax, qword fs:[0x28]', 'mov qword [var_1428h], rax', 'xor eax, eax', 'nop', 'mov esi, 0xa', 'mov rdi, r14', 'call sym.imp.strchr', 'mov qword [var_8h_2], rax', 'test rax, rax', 'je 0xc1c6', 'cmp byte [r14], 0', 'jne 0xc251', 'mov rax, qword [var_1428h]', 'xor rax, qword fs:[0x28]', 'jne 0xc2a2', 'add rsp, 0x1438', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add dword [0x00046ed0], 1', 'mov eax, dword [r13 + 0xcc]', 'jmp 0xc680', 'test ah, 0x20', 'je 0xc700', 'test ah, 0x10', 'je 0xc69f', 'mov rax, qword [var_38h]', 'xor rax, qword fs:[0x28]', 'jne 0xd4df', 'lea rsp, [var_28h]', 'pop rbx', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'pop rbp', 'ret', 'mov eax, dword [0x00046ed8]', 'sub eax, dword [0x00046ed0]', 'lea rdi, [0x00046ea0]', 'sub eax, 1', 'mov dword [0x00046ed4], eax', 'call sym.imp.putp', 'mov r14d, dword [0x0001f084]', 'test r14d, r14d', 'jne 0x5b18', 'mov eax, dword [0x00046ed4]', 'lea rbx, [0x00044e00]', 'xor r14d, r14d', 'xor r15d, r15d', 'test byte [rbx + 0xcc], 0x10', 'jne 0x5c0d', 'cmp r15d, eax', 'jge 0x546b', 'test byte [r12 + 0xce], 8', 'je 0x5494', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'mov ebx, dword [0x00046cf0]', 'test ebx, ebx', 'je 0x5cf1', 'mov r11d, dword [0x0001f2c4]', 'test r11d, r11d', 'js 0x5c74', 'mov eax, dword [0x0001f074]', 'test eax, eax', 'jle 0x54d1', 'mov r9d, dword [0x0001f074]', 'test r9d, r9d', 'je 0x5b11', 'movss xmm0, dword [0x0001f08c]', 'pxor xmm1, xmm1', 'mov ebx, dword [0x00046ecc]', 'cvttss2si rax, xmm0', 'mov qword [var_20h], rax', 'cvttss2si eax, xmm0', 'cvtsi2ss xmm1, eax', 'subss xmm0, xmm1', 'mulss xmm0, dword [0x00018404]', 'cvttss2si rax, xmm0', 'mov qword [var_28h], rax', 'test ebx, ebx', 'je 0x5b87', 'lea rsi, [var_30h]', 'mov ecx, 0x10', 'mov eax, ebx', 'mov rdi, rsi', 'cld', 'rep stosq qword [rdi], rax', 'xor ecx, ecx', 'xor edx, edx', 'lea r9, [0x00047380]', 'mov edi, 1', 'lea r8, [var_20h]', 'or qword [var_30h], 1', 'call sym.imp.pselect', 'test eax, eax', 'jle 0x53a0', 'mov edi, 1', 'call fcn.0000aa50', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test edi, edi', 'je 0xaaa0', 'cmp edi, 1', 'je 0xacc8', 'movsxd rax, dword [0x000201e0]', 'cmp eax, dword [0x000201dc]', 'jge 0xabc0', 'lea edx, [rax + 1]', 'mov dword [0x000201e0], edx', 'lea rdx, [0x00020200]', 'movsx eax, byte [rdx + rax]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r12d, eax', 'cmp eax, 0x57', 'je 0x5eaa', 'jg 0x5e0b', 'test eax, eax', 'je 0x5beb', 'mov edi, 1', 'call fcn.00006e20', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov rbp, qword [0x00040da8]', 'test edi, edi', 'je 0x6e3e', 'xor edi, edi', 'call sym.imp.time', 'mov rbx, rax', 'sub rax, rbp', 'cmp rax, 2', 'jg 0x6e60', 'call sym.imp.meminfo', 'call sym.imp.cpuinfo', 'call qword [obj.numa_max_node]', 'mov qword [0x00040da8], rbx', 'add eax, 1', 'mov dword [0x00041c80], eax', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'call fcn.00008a40', 'push r14', 'xor edi, edi', 'push r13', 'push r12', 'push rbp', 'push rbx', 'call fcn.000086f0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x88c8', 'movzx eax, byte [rdi + 0x1c]', 'mov rbx, rdi', 'cmp al, 0x5a', 'je 0x88b8', 'add dword [0x00044dc0], 1', 'jmp 0x8741', 'mov r13d, dword [0x00044dd4]', 'mov eax, dword [0x00044db0]', 'mov rbp, qword [0x00044da0]', 'lea r12d, [r13 + 1]', 'cmp r12d, eax', 'jge 0x8860', 'movsxd rax, r13d', 'mov edx, dword [rbx]', 'mov rsi, qword [rbx + 0x28]', 'mov r8, qword [rbx + 0x1b8]', 'mov rdi, qword [rbx + 0x1b0]', 'shl rax, 5', 'add rax, rbp', 'add rsi, qword [rbx + 0x20]', 'mov dword [rax + 0x18], edx', 'mov rdx, qword [0x0001ff40]', 'mov qword [rax], rsi', 'mov qword [rax + 8], r8', 'mov qword [rax + 0x10], rdi', 'mov eax, r13d', 'shl rax, 5', 'add rbp, rax', 'mov eax, dword [rbp + 0x18]', 'and eax, 0x3ff', 'lea rax, [rdx + rax*4]', 'mov edx, dword [rax]', 'mov dword [rbp + 0x1c], edx', 'mov dword [rax], r13d', 'mov edx, dword [rbx]', 'mov rax, qword [0x0001ff48]', 'mov ecx, edx', 'and ecx, 0x3ff', 'movsxd rax, dword [rax + rcx*4]', 'test eax, eax', 'js 0x8807', 'mov dword [rbx + 0x18], esi', 'mov dword [0x00044dd4], r12d', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x8a2d', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov edi, dword [0x00044dd8]', 'xor eax, eax', 'lea rsi, [0x00046f00]', 'call sym.imp.openproc', 'test rax, rax', 'je 0x8c07', 'mov rbp, rax', 'mov eax, dword [0x00046ec4]', 'test eax, eax', 'jne 0x8b30', 'mov r12, qword [reloc.readproc]', 'jmp 0x8ac0', 'movsxd rdi, dword [0x00044dd4]', 'cmp edi, dword [0x00040da0]', 'mov r8, qword [0x00040d98]', 'mov r14, rdi', 'lea r13, [rdi*8]', 'jne 0x8a90', 'lea rdi, [r8 + r13]', 'mov rsi, qword [rdi]', 'mov rdi, rbp', 'call r12', 'mov rdi, rax', 'test rax, rax', 'je 0x8b40', 'mov rdi, rbp', 'call sym.imp.closeproc', 'movsxd rbp, dword [0x00040da0]', 'cmp dword [0x00040d90], ebp', 'je 0x8bc0', 'movsxd rbp, dword [0x00044dd4]', 'lea rbx, [0x00044e00]', 'mov r13, qword [0x00040d98]', 'lea r12, [rbx + 0x16e0]', 'shl rbp, 3', 'mov rdi, qword [rbx + 0x5a0]', 'mov rdx, rbp', 'mov rsi, r13', 'add rbx, 0x5b8', 'call sym.imp.memcpy', 'cmp rbx, r12', 'jne 0x8be0', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov dword [0x00046ed0], 0', 'mov dword [0x0001f070], 0', 'mov dword [0x00041c18], 0', 'call fcn.0000c630', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x388', 'mov r13, qword [0x00044de0]', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov eax, dword [r13 + 0xcc]', 'test ah, 0x40', 'je 0xc680', 'mov ebx, dword [0x00046ed0]', 'lea ecx, [rbx + 1]', 'mov ebx, dword [0x00046ed8]', 'lea edx, [rbx - 1]', 'cmp ecx, edx', 'jl 0xcc78', 'mov r14d, dword [0x0001f084]', 'xor edi, edi', 'test r14d, r14d', 'je 0xccd8', 'call sym.imp.sprint_uptime']"
87,touch,380,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x4da8', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x4dbe', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x80a5', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0x88c8', 'cmp al, 8', 'jg 0x88d0', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x8138', 'lea rdx, [var_f0h]', 'mov rsi, r13', 'mov rdi, r12', 'call fcn.0000cfe0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xd070', 'add rsp, 8', 'mov rdi, r14', 'mov rsi, rdx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'jmp sym.imp.gmtime_r', 'test rax, rax', 'je 0x8b10', 'mov qword [rsp], 0', 'xor r13d, r13d', 'jmp 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'endbr64', 'cmp rdi, 1', 'je 0xcfd0', 'ret', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'movdqa xmm1, xmmword [0x00019120]', 'cmp dword [0x00019144], 3', 'movaps xmmword [0x00019130], xmm1', 'jne 0x3beb', 'mov rax, qword [var_10h]', 'cmp qword [0x00019120], rax', 'jne 0x3beb', 'mov rdx, qword [var_18h]', 'cmp qword [0x00019128], rdx', 'jne 0x3beb', 'xor rax, 1', 'mov qword [var_28h], rdx', 'lea rdi, [var_30h]', 'mov rsi, r14', 'lea rdx, [var_20h]', 'mov qword [var_20h], rax', 'call fcn.00004360', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x3f9d', 'mov qword [0x00019128], 0', 'movdqa xmm2, xmmword [0x00019120]', 'lea rdi, str.POSIXLY_CORRECT', 'movaps xmmword [0x00019130], xmm2', 'call sym.imp.getenv', 'test rax, rax', 'je 0x4190', 'lea rdi, [0x00019120]', 'call sym.imp.localtime']"
88,touch,159,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x4da8', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x4dbe', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x80a5', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0x88c8', 'cmp al, 8', 'jg 0x88d0', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x8138', 'movzx r15d, byte [r14 + 4]', 'lea rsi, [r14 + 4]', 'test r15b, r15b', 'je 0x8138', 'mov rdx, rsi', 'mov eax, r15d', 'mov edi, 1', 'jmp 0x811b', 'cmp al, 0x5c', 'jne 0x8100', 'cmp al, 0x22', 'je 0x8930', 'lea rax, [var_370h]', 'mov qword [rsp], 0', 'mov qword [var_8h], rax', 'cmp rdi, 0x64', 'jg 0x8aba', 'mov rdx, qword [var_8h]', 'cmp r15b, 0x22', 'je 0x8985', 'mov byte [rdx], 0', 'mov rdi, qword [var_8h]', 'mov qword [var_30h], rsi', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test rax, rax', 'je 0xa0ae', 'mov rbp, rax', 'mov rdi, r13', 'mov r9, rbx', 'mov r8, rax', 'xor ecx, ecx', 'mov rdx, r15', 'mov rsi, r14', 'call fcn.00008050', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12, r8', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0x458', 'mov qword [var_20h], rdi', 'mov rdi, rsi', 'mov dword [var_10h], ecx', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov qword [var_28h], rax', 'test r13, r13', 'je 0x8af8', 'lea r13, [var_60h]', 'mov rdi, r13', 'call fcn.00004d60', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
89,touch,380,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x4da8', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x4dbe', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x80a5', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0x88c8', 'cmp al, 8', 'jg 0x88d0', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x8138', 'lea rdx, [var_f0h]', 'mov rsi, r13', 'mov rdi, r12', 'call fcn.0000cfe0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xd070', 'add rsp, 8', 'mov rdi, r14', 'mov rsi, rdx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'jmp sym.imp.gmtime_r', 'test rax, rax', 'je 0x8b10', 'mov qword [rsp], 0', 'xor r13d, r13d', 'jmp 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'endbr64', 'cmp rdi, 1', 'je 0xcfd0', 'ret', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'movdqa xmm1, xmmword [0x00019120]', 'cmp dword [0x00019144], 3', 'movaps xmmword [0x00019130], xmm1', 'jne 0x3beb', 'mov rax, qword [var_10h]', 'cmp qword [0x00019120], rax', 'jne 0x3beb', 'mov rdx, qword [var_18h]', 'cmp qword [0x00019128], rdx', 'jne 0x3beb', 'xor rax, 1', 'mov qword [var_28h], rdx', 'lea rdi, [var_30h]', 'mov rsi, r14', 'lea rdx, [var_20h]', 'mov qword [var_20h], rax', 'call fcn.00004360', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000a0c0', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xa120', 'cmp rdx, 2', 'je 0xa140', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
90,touch,407,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x4da8', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x4dbe', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x80a5', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0x88c8', 'cmp al, 8', 'jg 0x88d0', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x8138', 'lea rdx, [var_f0h]', 'mov rsi, r13', 'mov rdi, r12', 'call fcn.0000cfe0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xd070', 'add rsp, 8', 'mov rdi, r14', 'mov rsi, rdx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'jmp sym.imp.gmtime_r', 'test rax, rax', 'je 0x8b10', 'mov qword [rsp], 0', 'xor r13d, r13d', 'jmp 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'endbr64', 'cmp rdi, 1', 'je 0xcfd0', 'ret', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'movdqa xmm1, xmmword [0x00019120]', 'cmp dword [0x00019144], 3', 'movaps xmmword [0x00019130], xmm1', 'jne 0x3beb', 'mov rax, qword [var_10h]', 'cmp qword [0x00019120], rax', 'jne 0x3beb', 'mov rdx, qword [var_18h]', 'cmp qword [0x00019128], rdx', 'jne 0x3beb', 'xor rax, 1', 'mov qword [var_28h], rdx', 'lea rdi, [var_30h]', 'mov rsi, r14', 'lea rdx, [var_20h]', 'mov qword [var_20h], rax', 'call fcn.00004360', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000a0c0', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xa120', 'mov edx, dword [rsi]', 'mov eax, 1', 'mov dword [rdi], edx', 'cmp dword [rsi], 0x44', 'jg 0xa107', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xa164', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xa1e0', 'lea rax, [r15 + rbx*4 - 0x10]', 'mov esi, dword [rax]', 'lea edx, [rsi - 1]', 'mov dword [var_20h], edx', 'mov edx, dword [rax + 4]', 'mov dword [var_1ch], edx', 'mov edx, dword [rax + 8]', 'mov eax, dword [rax + 0xc]', 'mov dword [var_18h], edx', 'mov dword [var_14h], eax', 'jmp 0xa2cc', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
91,touch,631,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x4da8', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x4dbe', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x80a5', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0x88c8', 'cmp al, 8', 'jg 0x88d0', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x8138', 'lea rdx, [var_f0h]', 'mov rsi, r13', 'mov rdi, r12', 'call fcn.0000cfe0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xd070', 'add rsp, 8', 'mov rdi, r14', 'mov rsi, rdx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'jmp sym.imp.gmtime_r', 'test rax, rax', 'je 0x8b10', 'mov qword [rsp], 0', 'xor r13d, r13d', 'jmp 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'endbr64', 'cmp rdi, 1', 'je 0xcfd0', 'ret', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'movdqa xmm1, xmmword [0x00019120]', 'cmp dword [0x00019144], 3', 'movaps xmmword [0x00019130], xmm1', 'jne 0x3beb', 'mov rax, qword [var_10h]', 'cmp qword [0x00019120], rax', 'jne 0x3beb', 'mov rdx, qword [var_18h]', 'cmp qword [0x00019128], rdx', 'jne 0x3beb', 'xor rax, 1', 'mov qword [var_28h], rdx', 'lea rdi, [var_30h]', 'mov rsi, r14', 'lea rdx, [var_20h]', 'mov qword [var_20h], rax', 'call fcn.00004360', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000a0c0', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xa120', 'mov edx, dword [rsi]', 'mov eax, 1', 'mov dword [rdi], edx', 'cmp dword [rsi], 0x44', 'jg 0xa107', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xa164', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xa1e0', 'lea rax, [r15 + rbx*4 - 0x10]', 'mov esi, dword [rax]', 'lea edx, [rsi - 1]', 'mov dword [var_20h], edx', 'mov edx, dword [rax + 4]', 'mov dword [var_1ch], edx', 'mov edx, dword [rax + 8]', 'mov eax, dword [rax + 0xc]', 'mov dword [var_18h], edx', 'mov dword [var_14h], eax', 'jmp 0xa2cc', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov rdi, rsp', 'call sym.imp.localtime']"
92,touch,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x4da8', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x4dbe', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x80a5', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0x88c8', 'cmp al, 8', 'jg 0x88d0', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x8138', 'movzx r15d, byte [r14 + 4]', 'lea rsi, [r14 + 4]', 'test r15b, r15b', 'je 0x8138', 'mov rdx, rsi', 'mov eax, r15d', 'mov edi, 1', 'jmp 0x811b', 'cmp al, 0x5c', 'jne 0x8100', 'cmp al, 0x22', 'je 0x8930', 'lea rax, [var_370h]', 'mov qword [rsp], 0', 'mov qword [var_8h], rax', 'cmp rdi, 0x64', 'jg 0x8aba', 'mov rdx, qword [var_8h]', 'cmp r15b, 0x22', 'je 0x8985', 'mov byte [rdx], 0', 'mov rdi, qword [var_8h]', 'mov qword [var_30h], rsi', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0xcf63', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd04e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
93,touch,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x4da8', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x4dbe', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x80a5', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0x88c8', 'cmp al, 8', 'jg 0x88d0', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x8138', 'lea rdx, [var_f0h]', 'mov rsi, r13', 'mov rdi, r12', 'call fcn.0000cfe0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xd070', 'mov r12, rdi', 'call fcn.0000cf00', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00012e24]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xcf90', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0xcf21', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime']"
94,touch,340,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x4da8', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x4dbe', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x80a5', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0x88c8', 'cmp al, 8', 'jg 0x88d0', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x8138', 'lea rdx, [var_f0h]', 'mov rsi, r13', 'mov rdi, r12', 'call fcn.0000cfe0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xd070', 'mov r12, rdi', 'call fcn.0000cf00', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00012e24]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xcf90', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0xcf21', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
95,touch,115,"['call sym.imp.localtime', 'test rax, rax', 'je 0xa107', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xa164', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x3f9d', 'mov qword [0x00019128], 0', 'movdqa xmm2, xmmword [0x00019120]', 'lea rdi, str.POSIXLY_CORRECT', 'movaps xmmword [0x00019130], xmm2', 'call sym.imp.getenv', 'test rax, rax', 'je 0x4190', 'lea rdi, [0x00019120]', 'call sym.imp.localtime']"
96,touch,211,"['call sym.imp.localtime', 'test rax, rax', 'je 0xa107', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xa164', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'test r14, r14', 'je 0x3f8b', 'lea r13, [var_10h]', 'mov rdi, r13', 'call fcn.00004d60', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
97,touch,349,"['call sym.imp.localtime', 'test rax, rax', 'je 0xa107', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xa164', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'test r14, r14', 'je 0x3f8b', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000a0c0', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xa120', 'cmp rdx, 2', 'je 0xa140', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
98,touch,76,"['call sym.imp.localtime', 'test rax, rax', 'je 0xa107', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xa164', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xa1e0', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
99,touch,300,"['call sym.imp.localtime', 'test rax, rax', 'je 0xa107', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xa164', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xa1e0', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov rdi, rsp', 'call sym.imp.localtime']"
100,touch,336,"['call sym.imp.localtime', 'test rax, rax', 'je 0xa107', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xa164', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'mov r13, qword [0x00019100]', 'lea rdx, [var_40h]', 'mov edi, 1', 'cmp byte [0x00019141], 0', 'mov rsi, r13', 'jne 0x4091', 'call sym.imp.__xstat', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x4132', 'mov rax, qword [var_88h]', 'mov qword [0x00019120], rax', 'mov rax, qword [var_90h]', 'mov qword [0x00019128], rax', 'mov rax, qword [var_98h]', 'mov qword [0x00019130], rax', 'mov rax, qword [var_a0h]', 'mov qword [0x00019138], rax', 'test r14, r14', 'je 0x3beb', 'mov eax, dword [0x00019144]', 'test al, 1', 'jne 0x40ac', 'lea rdx, [0x00019120]', 'mov rsi, r14', 'mov rdi, rdx', 'call fcn.00004360', 'push r12', 'push rbp', 'mov rbp, rsi', 'sub rsp, 8', 'call fcn.0000a050', 'endbr64', 'push r15', 'mov r15, rdx', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'lea rdi, [0x00012e24]', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.getenv', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0xcf63', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd04e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
101,touch,335,"['call sym.imp.localtime', 'test rax, rax', 'je 0xa107', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xa164', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'mov r13, qword [0x00019100]', 'lea rdx, [var_40h]', 'mov edi, 1', 'cmp byte [0x00019141], 0', 'mov rsi, r13', 'jne 0x4091', 'call sym.imp.__xstat', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x4132', 'mov rax, qword [var_88h]', 'mov qword [0x00019120], rax', 'mov rax, qword [var_90h]', 'mov qword [0x00019128], rax', 'mov rax, qword [var_98h]', 'mov qword [0x00019130], rax', 'mov rax, qword [var_a0h]', 'mov qword [0x00019138], rax', 'test r14, r14', 'je 0x3beb', 'mov eax, dword [0x00019144]', 'test al, 1', 'jne 0x40ac', 'lea rdx, [0x00019120]', 'mov rsi, r14', 'mov rdi, rdx', 'call fcn.00004360', 'push r12', 'push rbp', 'mov rbp, rsi', 'sub rsp, 8', 'call fcn.0000a050', 'endbr64', 'push r15', 'mov r15, rdx', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'lea rdi, [0x00012e24]', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.getenv', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0xcf63', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime']"
102,touch,559,"['call sym.imp.localtime', 'test rax, rax', 'je 0xa107', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xa164', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'mov r13, qword [0x00019100]', 'lea rdx, [var_40h]', 'mov edi, 1', 'cmp byte [0x00019141], 0', 'mov rsi, r13', 'jne 0x4091', 'call sym.imp.__xstat', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x4132', 'mov rax, qword [var_88h]', 'mov qword [0x00019120], rax', 'mov rax, qword [var_90h]', 'mov qword [0x00019128], rax', 'mov rax, qword [var_98h]', 'mov qword [0x00019130], rax', 'mov rax, qword [var_a0h]', 'mov qword [0x00019138], rax', 'test r14, r14', 'je 0x3beb', 'mov eax, dword [0x00019144]', 'test al, 1', 'jne 0x40ac', 'lea rdx, [0x00019120]', 'mov rsi, r14', 'mov rdi, rdx', 'call fcn.00004360', 'push r12', 'push rbp', 'mov rbp, rsi', 'sub rsp, 8', 'call fcn.0000a050', 'endbr64', 'push r15', 'mov r15, rdx', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'lea rdi, [0x00012e24]', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.getenv', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0xcf63', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
103,touch,298,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xa3c8', 'cmp esi, 0x3c', 'jne 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x3f9d', 'mov qword [0x00019128], 0', 'movdqa xmm2, xmmword [0x00019120]', 'lea rdi, str.POSIXLY_CORRECT', 'movaps xmmword [0x00019130], xmm2', 'call sym.imp.getenv', 'test rax, rax', 'je 0x4190', 'lea rdi, [0x00019120]', 'call sym.imp.localtime']"
104,touch,394,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xa3c8', 'cmp esi, 0x3c', 'jne 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'test r14, r14', 'je 0x3f8b', 'lea r13, [var_10h]', 'mov rdi, r13', 'call fcn.00004d60', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
105,touch,370,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xa3c8', 'cmp esi, 0x3c', 'jne 0xa1e0', 'lea r14, [var_b0h]', 'mov edx, 0x10', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.__stpcpy_chk', 'mov edx, 0x3935', 'lea rdi, [var_8h]', 'mov rsi, r14', 'mov word [rax - 2], dx', 'mov edx, r12d', 'mov byte [rax], 0', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000a0c0', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xa120', 'cmp rdx, 2', 'je 0xa140', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
106,touch,394,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xa3c8', 'cmp esi, 0x3c', 'jne 0xa1e0', 'lea r14, [var_b0h]', 'mov edx, 0x10', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.__stpcpy_chk', 'mov edx, 0x3935', 'lea rdi, [var_8h]', 'mov rsi, r14', 'mov word [rax - 2], dx', 'mov edx, r12d', 'mov byte [rax], 0', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000a0c0', 'test al, al', 'je 0xa1e0', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
107,touch,224,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov rdi, rsp', 'call sym.imp.localtime']"
108,touch,519,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xa3c8', 'cmp esi, 0x3c', 'jne 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'mov r13, qword [0x00019100]', 'lea rdx, [var_40h]', 'mov edi, 1', 'cmp byte [0x00019141], 0', 'mov rsi, r13', 'jne 0x4091', 'call sym.imp.__xstat', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x4132', 'mov rax, qword [var_88h]', 'mov qword [0x00019120], rax', 'mov rax, qword [var_90h]', 'mov qword [0x00019128], rax', 'mov rax, qword [var_98h]', 'mov qword [0x00019130], rax', 'mov rax, qword [var_a0h]', 'mov qword [0x00019138], rax', 'test r14, r14', 'je 0x3beb', 'mov eax, dword [0x00019144]', 'test al, 1', 'jne 0x40ac', 'lea rdx, [0x00019120]', 'mov rsi, r14', 'mov rdi, rdx', 'call fcn.00004360', 'push r12', 'push rbp', 'mov rbp, rsi', 'sub rsp, 8', 'call fcn.0000a050', 'endbr64', 'push r15', 'mov r15, rdx', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'lea rdi, [0x00012e24]', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.getenv', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0xcf63', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd04e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
109,touch,518,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xa3c8', 'cmp esi, 0x3c', 'jne 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'mov r13, qword [0x00019100]', 'lea rdx, [var_40h]', 'mov edi, 1', 'cmp byte [0x00019141], 0', 'mov rsi, r13', 'jne 0x4091', 'call sym.imp.__xstat', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x4132', 'mov rax, qword [var_88h]', 'mov qword [0x00019120], rax', 'mov rax, qword [var_90h]', 'mov qword [0x00019128], rax', 'mov rax, qword [var_98h]', 'mov qword [0x00019130], rax', 'mov rax, qword [var_a0h]', 'mov qword [0x00019138], rax', 'test r14, r14', 'je 0x3beb', 'mov eax, dword [0x00019144]', 'test al, 1', 'jne 0x40ac', 'lea rdx, [0x00019120]', 'mov rsi, r14', 'mov rdi, rdx', 'call fcn.00004360', 'push r12', 'push rbp', 'mov rbp, rsi', 'sub rsp, 8', 'call fcn.0000a050', 'endbr64', 'push r15', 'mov r15, rdx', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'lea rdi, [0x00012e24]', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.getenv', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0xcf63', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime']"
110,touch,742,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xa3c8', 'cmp esi, 0x3c', 'jne 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'mov r13, qword [0x00019100]', 'lea rdx, [var_40h]', 'mov edi, 1', 'cmp byte [0x00019141], 0', 'mov rsi, r13', 'jne 0x4091', 'call sym.imp.__xstat', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x4132', 'mov rax, qword [var_88h]', 'mov qword [0x00019120], rax', 'mov rax, qword [var_90h]', 'mov qword [0x00019128], rax', 'mov rax, qword [var_98h]', 'mov qword [0x00019130], rax', 'mov rax, qword [var_a0h]', 'mov qword [0x00019138], rax', 'test r14, r14', 'je 0x3beb', 'mov eax, dword [0x00019144]', 'test al, 1', 'jne 0x40ac', 'lea rdx, [0x00019120]', 'mov rsi, r14', 'mov rdi, rdx', 'call fcn.00004360', 'push r12', 'push rbp', 'mov rbp, rsi', 'sub rsp, 8', 'call fcn.0000a050', 'endbr64', 'push r15', 'mov r15, rdx', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'lea rdi, [0x00012e24]', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.getenv', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0xcf63', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
111,touch,108,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xa348', 'jmp 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x3f9d', 'mov qword [0x00019128], 0', 'movdqa xmm2, xmmword [0x00019120]', 'lea rdi, str.POSIXLY_CORRECT', 'movaps xmmword [0x00019130], xmm2', 'call sym.imp.getenv', 'test rax, rax', 'je 0x4190', 'lea rdi, [0x00019120]', 'call sym.imp.localtime']"
112,touch,204,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xa348', 'jmp 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'test r14, r14', 'je 0x3f8b', 'lea r13, [var_10h]', 'mov rdi, r13', 'call fcn.00004d60', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
113,touch,200,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xa348', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xa3c8', 'cmp esi, 0x3c', 'jne 0xa1e0', 'lea r14, [var_b0h]', 'mov edx, 0x10', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.__stpcpy_chk', 'mov edx, 0x3935', 'lea rdi, [var_8h]', 'mov rsi, r14', 'mov word [rax - 2], dx', 'mov edx, r12d', 'mov byte [rax], 0', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000a0c0', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xa120', 'cmp rdx, 2', 'je 0xa140', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
114,touch,224,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xa348', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xa3c8', 'cmp esi, 0x3c', 'jne 0xa1e0', 'lea r14, [var_b0h]', 'mov edx, 0x10', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.__stpcpy_chk', 'mov edx, 0x3935', 'lea rdi, [var_8h]', 'mov rsi, r14', 'mov word [rax - 2], dx', 'mov edx, r12d', 'mov byte [rax], 0', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000a0c0', 'test al, al', 'je 0xa1e0', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
115,touch,448,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xa348', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xa3c8', 'cmp esi, 0x3c', 'jne 0xa1e0', 'lea r14, [var_b0h]', 'mov edx, 0x10', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.__stpcpy_chk', 'mov edx, 0x3935', 'lea rdi, [var_8h]', 'mov rsi, r14', 'mov word [rax - 2], dx', 'mov edx, r12d', 'mov byte [rax], 0', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000a0c0', 'test al, al', 'je 0xa1e0', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov rdi, rsp', 'call sym.imp.localtime']"
116,touch,329,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xa348', 'jmp 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'mov r13, qword [0x00019100]', 'lea rdx, [var_40h]', 'mov edi, 1', 'cmp byte [0x00019141], 0', 'mov rsi, r13', 'jne 0x4091', 'call sym.imp.__xstat', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x4132', 'mov rax, qword [var_88h]', 'mov qword [0x00019120], rax', 'mov rax, qword [var_90h]', 'mov qword [0x00019128], rax', 'mov rax, qword [var_98h]', 'mov qword [0x00019130], rax', 'mov rax, qword [var_a0h]', 'mov qword [0x00019138], rax', 'test r14, r14', 'je 0x3beb', 'mov eax, dword [0x00019144]', 'test al, 1', 'jne 0x40ac', 'lea rdx, [0x00019120]', 'mov rsi, r14', 'mov rdi, rdx', 'call fcn.00004360', 'push r12', 'push rbp', 'mov rbp, rsi', 'sub rsp, 8', 'call fcn.0000a050', 'endbr64', 'push r15', 'mov r15, rdx', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'lea rdi, [0x00012e24]', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.getenv', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0xcf63', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd04e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
117,touch,328,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xa348', 'jmp 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'mov r13, qword [0x00019100]', 'lea rdx, [var_40h]', 'mov edi, 1', 'cmp byte [0x00019141], 0', 'mov rsi, r13', 'jne 0x4091', 'call sym.imp.__xstat', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x4132', 'mov rax, qword [var_88h]', 'mov qword [0x00019120], rax', 'mov rax, qword [var_90h]', 'mov qword [0x00019128], rax', 'mov rax, qword [var_98h]', 'mov qword [0x00019130], rax', 'mov rax, qword [var_a0h]', 'mov qword [0x00019138], rax', 'test r14, r14', 'je 0x3beb', 'mov eax, dword [0x00019144]', 'test al, 1', 'jne 0x40ac', 'lea rdx, [0x00019120]', 'mov rsi, r14', 'mov rdi, rdx', 'call fcn.00004360', 'push r12', 'push rbp', 'mov rbp, rsi', 'sub rsp, 8', 'call fcn.0000a050', 'endbr64', 'push r15', 'mov r15, rdx', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'lea rdi, [0x00012e24]', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.getenv', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0xcf63', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime']"
118,touch,552,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xa348', 'jmp 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r13d, eax', 'test al, al', 'je 0x4223', 'mov qword [0x00019128], 0', 'movdqa xmm0, xmmword [0x00019120]', 'movaps xmmword [0x00019130], xmm0', 'jmp case.0x3a63.102', 'xor r8d, r8d', 'lea rcx, [0x00018120]', 'mov rsi, rbp', 'mov edi, r12d', 'lea rdx, str.acd:fhmr:t:', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x3bb7', 'cmp dword [0x00019144], 0', 'jne 0x3bca', 'movzx eax, byte [0x00019142]', 'test r13b, r13b', 'je 0x3edb', 'test al, al', 'jne 0x3fc5', 'mov r13, qword [0x00019100]', 'lea rdx, [var_40h]', 'mov edi, 1', 'cmp byte [0x00019141], 0', 'mov rsi, r13', 'jne 0x4091', 'call sym.imp.__xstat', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x4132', 'mov rax, qword [var_88h]', 'mov qword [0x00019120], rax', 'mov rax, qword [var_90h]', 'mov qword [0x00019128], rax', 'mov rax, qword [var_98h]', 'mov qword [0x00019130], rax', 'mov rax, qword [var_a0h]', 'mov qword [0x00019138], rax', 'test r14, r14', 'je 0x3beb', 'mov eax, dword [0x00019144]', 'test al, 1', 'jne 0x40ac', 'lea rdx, [0x00019120]', 'mov rsi, r14', 'mov rdi, rdx', 'call fcn.00004360', 'push r12', 'push rbp', 'mov rbp, rsi', 'sub rsp, 8', 'call fcn.0000a050', 'endbr64', 'push r15', 'mov r15, rdx', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'lea rdi, [0x00012e24]', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.getenv', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0xcf63', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
119,touch,267,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd040', 'cmp r13, 1', 'je 0xd04e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x8883', 'cmp r15, r12', 'je 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x3f9d', 'mov qword [0x00019128], 0', 'movdqa xmm2, xmmword [0x00019120]', 'lea rdi, str.POSIXLY_CORRECT', 'movaps xmmword [0x00019130], xmm2', 'call sym.imp.getenv', 'test rax, rax', 'je 0x4190', 'lea rdi, [0x00019120]', 'call sym.imp.localtime']"
120,touch,208,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd040', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000cda0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xce60', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xcdd4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xce50', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xce38', 'cmp byte [rbx], 0', 'jne 0xce03', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xce78', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xceb8', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xced0', 'mov rdi, r12', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test rax, rax', 'je 0xa0ae', 'mov rbp, rax', 'mov rdi, r13', 'mov r9, rbx', 'mov r8, rax', 'xor ecx, ecx', 'mov rdx, r15', 'mov rsi, r14', 'call fcn.00008050', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12, r8', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0x458', 'mov qword [var_20h], rdi', 'mov rdi, rsi', 'mov dword [var_10h], ecx', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov qword [var_28h], rax', 'test r13, r13', 'je 0x8af8', 'lea r13, [var_60h]', 'mov rdi, r13', 'call fcn.00004d60', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
121,touch,267,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd040', 'cmp r13, 1', 'je 0xd04e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x8883', 'cmp r15, r12', 'je 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000a0c0', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xa120', 'cmp rdx, 2', 'je 0xa140', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
122,touch,291,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd040', 'cmp r13, 1', 'je 0xd04e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x8883', 'cmp r15, r12', 'je 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000a0c0', 'test al, al', 'je 0xa1e0', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
123,touch,515,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd040', 'cmp r13, 1', 'je 0xd04e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x8883', 'cmp r15, r12', 'je 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000a0c0', 'test al, al', 'je 0xa1e0', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov rdi, rsp', 'call sym.imp.localtime']"
124,touch,87,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd040', 'cmp r13, 1', 'je 0xd04e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x8883', 'cmp r15, r12', 'je 0x8890', 'mov rdi, r15', 'call fcn.0000cfc0', 'endbr64', 'cmp rdi, 1', 'je 0xcfd0', 'jmp fcn.0000cc70', 'test rdi, rdi', 'je 0xcc98', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd04e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
125,touch,86,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd040', 'cmp r13, 1', 'je 0xd04e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x8883', 'cmp r15, r12', 'je 0x8890', 'mov rdi, r15', 'call fcn.0000cfc0', 'endbr64', 'cmp rdi, 1', 'je 0xcfd0', 'jmp fcn.0000cc70', 'test rdi, rdi', 'je 0xcc98', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime']"
126,touch,310,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd040', 'cmp r13, 1', 'je 0xd04e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x8883', 'cmp r15, r12', 'je 0x8890', 'mov rdi, r15', 'call fcn.0000cfc0', 'endbr64', 'cmp rdi, 1', 'je 0xcfd0', 'jmp fcn.0000cc70', 'test rdi, rdi', 'je 0xcc98', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
127,touch,468,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000cda0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xce60', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x3f9d', 'mov qword [0x00019128], 0', 'movdqa xmm2, xmmword [0x00019120]', 'lea rdi, str.POSIXLY_CORRECT', 'movaps xmmword [0x00019130], xmm2', 'call sym.imp.getenv', 'test rax, rax', 'je 0x4190', 'lea rdi, [0x00019120]', 'call sym.imp.localtime']"
128,touch,378,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000cda0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xce60', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xcdd4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xce50', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xce38', 'cmp byte [rbx], 0', 'jne 0xce03', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xce78', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xceb8', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xced0', 'mov rdi, r12', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test rax, rax', 'je 0xa0ae', 'mov rbp, rax', 'mov rdi, r13', 'mov r9, rbx', 'mov r8, rax', 'xor ecx, ecx', 'mov rdx, r15', 'mov rsi, r14', 'call fcn.00008050', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12, r8', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0x458', 'mov qword [var_20h], rdi', 'mov rdi, rsi', 'mov dword [var_10h], ecx', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov qword [var_28h], rax', 'test r13, r13', 'je 0x8af8', 'lea r13, [var_60h]', 'mov rdi, r13', 'call fcn.00004d60', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
129,touch,468,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000cda0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xce60', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000a0c0', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xa120', 'cmp rdx, 2', 'je 0xa140', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
130,touch,492,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000cda0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xce60', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000a0c0', 'test al, al', 'je 0xa1e0', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
131,touch,716,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000cda0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xce60', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000a0c0', 'test al, al', 'je 0xa1e0', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov rdi, rsp', 'call sym.imp.localtime']"
132,touch,288,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000cda0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xce60', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, r15', 'call fcn.0000cfc0', 'endbr64', 'cmp rdi, 1', 'je 0xcfd0', 'jmp fcn.0000cc70', 'test rdi, rdi', 'je 0xcc98', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd04e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
133,touch,287,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000cda0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xce60', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, r15', 'call fcn.0000cfc0', 'endbr64', 'cmp rdi, 1', 'je 0xcfd0', 'jmp fcn.0000cc70', 'test rdi, rdi', 'je 0xcc98', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime']"
134,touch,224,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
135,touch,273,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xa45f', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x3f9d', 'mov qword [0x00019128], 0', 'movdqa xmm2, xmmword [0x00019120]', 'lea rdi, str.POSIXLY_CORRECT', 'movaps xmmword [0x00019130], xmm2', 'call sym.imp.getenv', 'test rax, rax', 'je 0x4190', 'lea rdi, [0x00019120]', 'call sym.imp.localtime']"
136,touch,231,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdx, qword [var_10h]', 'mov rsi, r13', 'mov rdi, r15', 'mov rcx, rax', 'mov rbp, rax', 'call fcn.000051b0', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x50', 'mov qword [var_8h], rcx', 'mov rsi, qword fs:[0x28]', 'mov qword [var_48h], rsi', 'xor esi, esi', 'cmp rcx, 0xffffffffffffffff', 'je 0x5220', 'lea rdx, [var_10h]', 'lea rsi, [var_8h]', 'call fcn.0000cfe0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xd070', 'mov r12, rdi', 'call fcn.0000cf00', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00012e24]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xcf90', 'cmp byte [rbx + 8], 0', 'jne 0xcf70', 'mov rdi, rbp', 'call fcn.0000cd00', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xcd70', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xcd63', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test rax, rax', 'je 0xa0ae', 'mov rbp, rax', 'mov rdi, r13', 'mov r9, rbx', 'mov r8, rax', 'xor ecx, ecx', 'mov rdx, r15', 'mov rsi, r14', 'call fcn.00008050', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12, r8', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0x458', 'mov qword [var_20h], rdi', 'mov rdi, rsi', 'mov dword [var_10h], ecx', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov qword [var_28h], rax', 'test r13, r13', 'je 0x8af8', 'lea r13, [var_60h]', 'mov rdi, r13', 'call fcn.00004d60', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
137,touch,273,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000a0c0', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xa120', 'cmp rdx, 2', 'je 0xa140', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
138,touch,297,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000a0c0', 'test al, al', 'je 0xa1e0', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
139,touch,521,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, qword [rsp]', 'call sym.imp.free', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0xa046', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.0000cfc0', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x437b', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_20h]', 'cmp qword [var_30h], rax', 'jne 0x3beb', 'mov rax, qword [var_28h]', 'cmp qword [var_38h], rax', 'jne 0x3beb', 'mov eax, r12d', 'sub eax, dword [obj.optind]', 'sub eax, 1', 'jg 0x40c6', 'call fcn.0000a470', 'endbr64', 'push r12', 'lea rdi, str._POSIX2_VERSION', 'mov r12d, 0x31069', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.getenv', 'test rax, rax', 'je 0xa4a6', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0xa4fb', 'add rsp, 0x10', 'mov eax, r12d', 'pop r12', 'ret', 'cmp eax, 0x30daf', 'jg 0x3f9d', 'movsxd rax, dword [obj.optind]', 'mov edx, 9', 'lea rdi, [0x00019120]', 'mov rsi, qword [rbp + rax*8]', 'call fcn.0000a170', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xa3e0', 'xor r14d, r14d', 'jmp 0xa213', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xa1e0', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xa1e0', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xa1e0', 'add rax, 1', 'cmp rsi, rax', 'jne 0xa230', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xa250', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xa3f0', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000a0c0', 'test al, al', 'je 0xa1e0', 'test r14, r14', 'je 0xa450', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xa302', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xa430', 'mov rdi, rsp', 'call sym.imp.localtime']"
140,touch,93,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, r15', 'call fcn.0000cfc0', 'endbr64', 'cmp rdi, 1', 'je 0xcfd0', 'jmp fcn.0000cc70', 'test rdi, rdi', 'je 0xcc98', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd04e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
141,touch,92,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, r15', 'call fcn.0000cfc0', 'endbr64', 'cmp rdi, 1', 'je 0xcfd0', 'jmp fcn.0000cc70', 'test rdi, rdi', 'je 0xcc98', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime']"
142,touch,316,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xd0f8', 'cmp r13, 1', 'je 0xd10e', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xd1cc', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x9f0a', 'cmp byte [var_289h], 0', 'je 0x8880', 'xor r13d, r13d', 'cmp r15, r12', 'je 0x8890', 'mov rdi, r15', 'call fcn.0000cfc0', 'endbr64', 'cmp rdi, 1', 'je 0xcfd0', 'jmp fcn.0000cc70', 'test rdi, rdi', 'je 0xcc98', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xd1c0', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xd138', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
143,traceroute6,210,"['call sym.imp.clock_gettime', 'mov eax, dword [var_28h]', 'add dword [var_1ch], 1', 'mov edi, 4', 'mov rsi, qword [var_3c8h]', 'mov ebx, dword [var_1ch]', 'mov dword [addrlen], eax', 'mov eax, dword [var_44ch]', 'add rsi, 8', 'bswap eax', 'mov dword [rsi - 8], eax', 'mov eax, ebx', 'bswap eax', 'mov dword [rsi - 4], eax', 'call sym.imp.clock_gettime', 'mov rcx, qword [var_8h]', 'mov r8d, 4', 'mov edi, dword [socket]', 'mov edx, 0x10', 'mov esi, 0x29', 'call sym.imp.setsockopt', 'test eax, eax', 'js 0x3aba', 'mov rbp, qword [src]', 'jmp 0x2dc0', 'movsxd rdx, dword [size]', 'mov rsi, qword [var_3c8h]', 'mov r8, rbp', 'xor ecx, ecx', 'mov edi, dword [socket]', 'mov r9d, 0x1c', 'call sym.imp.sendto', 'mov ebx, eax', 'test eax, eax', 'js 0x2db0', 'mov r13d, dword [size]', 'cmp eax, r13d', 'je 0x2e39', 'mov ebp, 1', 'lea r14, [var_140h]', 'nop word cs:[rax + rax]', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'lea rsi, [0x00004685]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'add qword [var_20h], 1', 'mov rax, qword [var_20h]', 'cmp qword [var_440h], rax', 'jg 0x2d30', 'mov rsi, qword [var_30h]', 'mov edi, 4', 'call sym.imp.clock_gettime']"
144,traceroute6,178,"['call sym.imp.clock_gettime', 'mov rcx, qword [var_8h]', 'mov r8d, 4', 'mov edi, dword [socket]', 'mov edx, 0x10', 'mov esi, 0x29', 'call sym.imp.setsockopt', 'test eax, eax', 'js 0x3aba', 'mov rbp, qword [src]', 'jmp 0x2dc0', 'movsxd rdx, dword [size]', 'mov rsi, qword [var_3c8h]', 'mov r8, rbp', 'xor ecx, ecx', 'mov edi, dword [socket]', 'mov r9d, 0x1c', 'call sym.imp.sendto', 'mov ebx, eax', 'test eax, eax', 'js 0x2db0', 'mov r13d, dword [size]', 'cmp eax, r13d', 'je 0x2e39', 'mov ebp, 1', 'lea r14, [var_140h]', 'nop word cs:[rax + rax]', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'lea rsi, [0x00004685]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'add qword [var_20h], 1', 'mov rax, qword [var_20h]', 'cmp qword [var_440h], rax', 'jg 0x2d30', 'mov rsi, qword [var_30h]', 'mov edi, 4', 'call sym.imp.clock_gettime']"
145,traceroute6,210,"['call sym.imp.clock_gettime', 'mov rcx, qword [var_8h]', 'mov r8d, 4', 'mov edi, dword [socket]', 'mov edx, 0x10', 'mov esi, 0x29', 'call sym.imp.setsockopt', 'test eax, eax', 'js 0x3aba', 'mov rbp, qword [src]', 'jmp 0x2dc0', 'movsxd rdx, dword [size]', 'mov rsi, qword [var_3c8h]', 'mov r8, rbp', 'xor ecx, ecx', 'mov edi, dword [socket]', 'mov r9d, 0x1c', 'call sym.imp.sendto', 'mov ebx, eax', 'test eax, eax', 'js 0x2db0', 'mov r13d, dword [size]', 'cmp eax, r13d', 'je 0x2e39', 'mov ebp, 1', 'lea r14, [var_140h]', 'nop word cs:[rax + rax]', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'lea rsi, [0x00004685]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'add qword [var_20h], 1', 'mov rax, qword [var_20h]', 'cmp qword [var_440h], rax', 'jg 0x2d30', 'mov rsi, qword [var_30h]', 'mov edi, 4', 'call sym.imp.clock_gettime', 'mov eax, dword [var_28h]', 'add dword [var_1ch], 1', 'mov edi, 4', 'mov rsi, qword [var_3c8h]', 'mov ebx, dword [var_1ch]', 'mov dword [addrlen], eax', 'mov eax, dword [var_44ch]', 'add rsi, 8', 'bswap eax', 'mov dword [rsi - 8], eax', 'mov eax, ebx', 'bswap eax', 'mov dword [rsi - 4], eax', 'call sym.imp.clock_gettime']"
146,traceroute6,141,"['call sym.imp.clock_gettime', 'mov rcx, qword [var_8h]', 'mov r8d, 4', 'mov edi, dword [socket]', 'mov edx, 0x10', 'mov esi, 0x29', 'call sym.imp.setsockopt', 'test eax, eax', 'js 0x3aba', 'mov rbp, qword [src]', 'jmp 0x2dc0', 'movsxd rdx, dword [size]', 'mov rsi, qword [var_3c8h]', 'mov r8, rbp', 'xor ecx, ecx', 'mov edi, dword [socket]', 'mov r9d, 0x1c', 'call sym.imp.sendto', 'mov ebx, eax', 'test eax, eax', 'js 0x2db0', 'mov r13d, dword [size]', 'cmp eax, r13d', 'je 0x2e39', 'mov ebp, 1', 'lea r14, [var_140h]', 'nop word cs:[rax + rax]', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'mov rax, qword [var_10h]', 'mov rsi, qword [var_8h]', 'lea r15, [var_120h]', 'lea r13, [var_c80h]', 'mov edi, dword [sockfd]', 'xor edx, edx', 'mov qword [var_88h], 0x200', 'mov qword [var_80h], rax', 'lea rax, [var_80h]', 'mov qword [addrlen], r15', 'mov dword [var_c8h], 0x1c', 'mov qword [var_d0h], rax', 'mov qword [var_d8h], 1', 'mov qword [var_e0h], r13', 'mov qword [var_e8h], 0x200', 'mov dword [var_f0h], 0', 'call sym.imp.recvmsg', 'mov rbx, rax', 'test rax, rax', 'js 0x30f8', 'movsxd rbp, ebx', 'mov r12d, ebx', 'test rbp, rbp', 'je 0x2ed2', 'lea rsi, [var_70h]', 'mov edi, 4', 'call sym.imp.clock_gettime']"
147,traceroute6,148,"['call sym.imp.clock_gettime', 'movzx edx, byte [var_1c1h]', 'movzx r9d, byte [var_1c0h]', 'cmp r9b, 3', 'sete cl', 'test dl, dl', 'sete al', 'test cl, al', 'jne 0x313d', 'cmp r9b, 1', 'jne 0x316b', 'movzx ebp, byte [var_45ch]', 'and ebp, 2', 'je 0x2e50', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'lea rsi, [0x00004685]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'add qword [var_20h], 1', 'mov rax, qword [var_20h]', 'cmp qword [var_440h], rax', 'jg 0x2d30', 'mov rsi, qword [var_30h]', 'mov edi, 4', 'call sym.imp.clock_gettime']"
148,traceroute6,180,"['call sym.imp.clock_gettime', 'movzx edx, byte [var_1c1h]', 'movzx r9d, byte [var_1c0h]', 'cmp r9b, 3', 'sete cl', 'test dl, dl', 'sete al', 'test cl, al', 'jne 0x313d', 'cmp r9b, 1', 'jne 0x316b', 'movzx ebp, byte [var_45ch]', 'and ebp, 2', 'je 0x2e50', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'lea rsi, [0x00004685]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'add qword [var_20h], 1', 'mov rax, qword [var_20h]', 'cmp qword [var_440h], rax', 'jg 0x2d30', 'mov rsi, qword [var_30h]', 'mov edi, 4', 'call sym.imp.clock_gettime', 'mov eax, dword [var_28h]', 'add dword [var_1ch], 1', 'mov edi, 4', 'mov rsi, qword [var_3c8h]', 'mov ebx, dword [var_1ch]', 'mov dword [addrlen], eax', 'mov eax, dword [var_44ch]', 'add rsi, 8', 'bswap eax', 'mov dword [rsi - 8], eax', 'mov eax, ebx', 'bswap eax', 'mov dword [rsi - 4], eax', 'call sym.imp.clock_gettime']"
149,traceroute6,111,"['call sym.imp.clock_gettime', 'movzx edx, byte [var_1c1h]', 'movzx r9d, byte [var_1c0h]', 'cmp r9b, 3', 'sete cl', 'test dl, dl', 'sete al', 'test cl, al', 'jne 0x313d', 'cmp r9b, 1', 'jne 0x316b', 'movzx ebp, byte [var_45ch]', 'and ebp, 2', 'je 0x2e50', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'mov rax, qword [var_10h]', 'mov rsi, qword [var_8h]', 'lea r15, [var_120h]', 'lea r13, [var_c80h]', 'mov edi, dword [sockfd]', 'xor edx, edx', 'mov qword [var_88h], 0x200', 'mov qword [var_80h], rax', 'lea rax, [var_80h]', 'mov qword [addrlen], r15', 'mov dword [var_c8h], 0x1c', 'mov qword [var_d0h], rax', 'mov qword [var_d8h], 1', 'mov qword [var_e0h], r13', 'mov qword [var_e8h], 0x200', 'mov dword [var_f0h], 0', 'call sym.imp.recvmsg', 'mov rbx, rax', 'test rax, rax', 'js 0x30f8', 'movsxd rbp, ebx', 'mov r12d, ebx', 'test rbp, rbp', 'je 0x2ed2', 'lea rsi, [var_70h]', 'mov edi, 4', 'call sym.imp.clock_gettime']"
150,traceroute6.iputils,210,"['call sym.imp.clock_gettime', 'mov eax, dword [var_28h]', 'add dword [var_1ch], 1', 'mov edi, 4', 'mov rsi, qword [var_3c8h]', 'mov ebx, dword [var_1ch]', 'mov dword [addrlen], eax', 'mov eax, dword [var_44ch]', 'add rsi, 8', 'bswap eax', 'mov dword [rsi - 8], eax', 'mov eax, ebx', 'bswap eax', 'mov dword [rsi - 4], eax', 'call sym.imp.clock_gettime', 'mov rcx, qword [var_8h]', 'mov r8d, 4', 'mov edi, dword [socket]', 'mov edx, 0x10', 'mov esi, 0x29', 'call sym.imp.setsockopt', 'test eax, eax', 'js 0x3aba', 'mov rbp, qword [src]', 'jmp 0x2dc0', 'movsxd rdx, dword [size]', 'mov rsi, qword [var_3c8h]', 'mov r8, rbp', 'xor ecx, ecx', 'mov edi, dword [socket]', 'mov r9d, 0x1c', 'call sym.imp.sendto', 'mov ebx, eax', 'test eax, eax', 'js 0x2db0', 'mov r13d, dword [size]', 'cmp eax, r13d', 'je 0x2e39', 'mov ebp, 1', 'lea r14, [var_140h]', 'nop word cs:[rax + rax]', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'lea rsi, [0x00004685]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'add qword [var_20h], 1', 'mov rax, qword [var_20h]', 'cmp qword [var_440h], rax', 'jg 0x2d30', 'mov rsi, qword [var_30h]', 'mov edi, 4', 'call sym.imp.clock_gettime']"
151,traceroute6.iputils,178,"['call sym.imp.clock_gettime', 'mov rcx, qword [var_8h]', 'mov r8d, 4', 'mov edi, dword [socket]', 'mov edx, 0x10', 'mov esi, 0x29', 'call sym.imp.setsockopt', 'test eax, eax', 'js 0x3aba', 'mov rbp, qword [src]', 'jmp 0x2dc0', 'movsxd rdx, dword [size]', 'mov rsi, qword [var_3c8h]', 'mov r8, rbp', 'xor ecx, ecx', 'mov edi, dword [socket]', 'mov r9d, 0x1c', 'call sym.imp.sendto', 'mov ebx, eax', 'test eax, eax', 'js 0x2db0', 'mov r13d, dword [size]', 'cmp eax, r13d', 'je 0x2e39', 'mov ebp, 1', 'lea r14, [var_140h]', 'nop word cs:[rax + rax]', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'lea rsi, [0x00004685]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'add qword [var_20h], 1', 'mov rax, qword [var_20h]', 'cmp qword [var_440h], rax', 'jg 0x2d30', 'mov rsi, qword [var_30h]', 'mov edi, 4', 'call sym.imp.clock_gettime']"
152,traceroute6.iputils,210,"['call sym.imp.clock_gettime', 'mov rcx, qword [var_8h]', 'mov r8d, 4', 'mov edi, dword [socket]', 'mov edx, 0x10', 'mov esi, 0x29', 'call sym.imp.setsockopt', 'test eax, eax', 'js 0x3aba', 'mov rbp, qword [src]', 'jmp 0x2dc0', 'movsxd rdx, dword [size]', 'mov rsi, qword [var_3c8h]', 'mov r8, rbp', 'xor ecx, ecx', 'mov edi, dword [socket]', 'mov r9d, 0x1c', 'call sym.imp.sendto', 'mov ebx, eax', 'test eax, eax', 'js 0x2db0', 'mov r13d, dword [size]', 'cmp eax, r13d', 'je 0x2e39', 'mov ebp, 1', 'lea r14, [var_140h]', 'nop word cs:[rax + rax]', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'lea rsi, [0x00004685]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'add qword [var_20h], 1', 'mov rax, qword [var_20h]', 'cmp qword [var_440h], rax', 'jg 0x2d30', 'mov rsi, qword [var_30h]', 'mov edi, 4', 'call sym.imp.clock_gettime', 'mov eax, dword [var_28h]', 'add dword [var_1ch], 1', 'mov edi, 4', 'mov rsi, qword [var_3c8h]', 'mov ebx, dword [var_1ch]', 'mov dword [addrlen], eax', 'mov eax, dword [var_44ch]', 'add rsi, 8', 'bswap eax', 'mov dword [rsi - 8], eax', 'mov eax, ebx', 'bswap eax', 'mov dword [rsi - 4], eax', 'call sym.imp.clock_gettime']"
153,traceroute6.iputils,141,"['call sym.imp.clock_gettime', 'mov rcx, qword [var_8h]', 'mov r8d, 4', 'mov edi, dword [socket]', 'mov edx, 0x10', 'mov esi, 0x29', 'call sym.imp.setsockopt', 'test eax, eax', 'js 0x3aba', 'mov rbp, qword [src]', 'jmp 0x2dc0', 'movsxd rdx, dword [size]', 'mov rsi, qword [var_3c8h]', 'mov r8, rbp', 'xor ecx, ecx', 'mov edi, dword [socket]', 'mov r9d, 0x1c', 'call sym.imp.sendto', 'mov ebx, eax', 'test eax, eax', 'js 0x2db0', 'mov r13d, dword [size]', 'cmp eax, r13d', 'je 0x2e39', 'mov ebp, 1', 'lea r14, [var_140h]', 'nop word cs:[rax + rax]', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'mov rax, qword [var_10h]', 'mov rsi, qword [var_8h]', 'lea r15, [var_120h]', 'lea r13, [var_c80h]', 'mov edi, dword [sockfd]', 'xor edx, edx', 'mov qword [var_88h], 0x200', 'mov qword [var_80h], rax', 'lea rax, [var_80h]', 'mov qword [addrlen], r15', 'mov dword [var_c8h], 0x1c', 'mov qword [var_d0h], rax', 'mov qword [var_d8h], 1', 'mov qword [var_e0h], r13', 'mov qword [var_e8h], 0x200', 'mov dword [var_f0h], 0', 'call sym.imp.recvmsg', 'mov rbx, rax', 'test rax, rax', 'js 0x30f8', 'movsxd rbp, ebx', 'mov r12d, ebx', 'test rbp, rbp', 'je 0x2ed2', 'lea rsi, [var_70h]', 'mov edi, 4', 'call sym.imp.clock_gettime']"
154,traceroute6.iputils,148,"['call sym.imp.clock_gettime', 'movzx edx, byte [var_1c1h]', 'movzx r9d, byte [var_1c0h]', 'cmp r9b, 3', 'sete cl', 'test dl, dl', 'sete al', 'test cl, al', 'jne 0x313d', 'cmp r9b, 1', 'jne 0x316b', 'movzx ebp, byte [var_45ch]', 'and ebp, 2', 'je 0x2e50', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'lea rsi, [0x00004685]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'add qword [var_20h], 1', 'mov rax, qword [var_20h]', 'cmp qword [var_440h], rax', 'jg 0x2d30', 'mov rsi, qword [var_30h]', 'mov edi, 4', 'call sym.imp.clock_gettime']"
155,traceroute6.iputils,180,"['call sym.imp.clock_gettime', 'movzx edx, byte [var_1c1h]', 'movzx r9d, byte [var_1c0h]', 'cmp r9b, 3', 'sete cl', 'test dl, dl', 'sete al', 'test cl, al', 'jne 0x313d', 'cmp r9b, 1', 'jne 0x316b', 'movzx ebp, byte [var_45ch]', 'and ebp, 2', 'je 0x2e50', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'lea rsi, [0x00004685]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'add qword [var_20h], 1', 'mov rax, qword [var_20h]', 'cmp qword [var_440h], rax', 'jg 0x2d30', 'mov rsi, qword [var_30h]', 'mov edi, 4', 'call sym.imp.clock_gettime', 'mov eax, dword [var_28h]', 'add dword [var_1ch], 1', 'mov edi, 4', 'mov rsi, qword [var_3c8h]', 'mov ebx, dword [var_1ch]', 'mov dword [addrlen], eax', 'mov eax, dword [var_44ch]', 'add rsi, 8', 'bswap eax', 'mov dword [rsi - 8], eax', 'mov eax, ebx', 'bswap eax', 'mov dword [rsi - 4], eax', 'call sym.imp.clock_gettime']"
156,traceroute6.iputils,111,"['call sym.imp.clock_gettime', 'movzx edx, byte [var_1c1h]', 'movzx r9d, byte [var_1c0h]', 'cmp r9b, 3', 'sete cl', 'test dl, dl', 'sete al', 'test cl, al', 'jne 0x313d', 'cmp r9b, 1', 'jne 0x316b', 'movzx ebp, byte [var_45ch]', 'and ebp, 2', 'je 0x2e50', 'mov ecx, 0x10', 'mov rdi, r14', 'xor eax, eax', 'cld', 'rep stosq qword [rdi], rax', 'movsxd rdi, dword [sockfd]', 'call sym.imp.__fdelt_chk', 'mov edi, dword [sockfd]', 'mov r8, rax', 'mov eax, edi', 'sar eax, 0x1f', 'shr eax, 0x1a', 'lea ecx, [rdi + rax]', 'and ecx, 0x3f', 'sub ecx, eax', 'mov eax, 1', 'shl rax, cl', 'or qword [rsp + r8*8 + 0x140], rax', 'test bpl, bpl', 'je 0x2eb4', 'add edi, 1', 'xor ecx, ecx', 'xor edx, edx', 'mov rsi, r14', 'lea r8, [0x00007050]', 'call sym.imp.select', 'test eax, eax', 'jg 0x2ff8', 'mov rax, qword [var_10h]', 'mov rsi, qword [var_8h]', 'lea r15, [var_120h]', 'lea r13, [var_c80h]', 'mov edi, dword [sockfd]', 'xor edx, edx', 'mov qword [var_88h], 0x200', 'mov qword [var_80h], rax', 'lea rax, [var_80h]', 'mov qword [addrlen], r15', 'mov dword [var_c8h], 0x1c', 'mov qword [var_d0h], rax', 'mov qword [var_d8h], 1', 'mov qword [var_e0h], r13', 'mov qword [var_e8h], 0x200', 'mov dword [var_f0h], 0', 'call sym.imp.recvmsg', 'mov rbx, rax', 'test rax, rax', 'js 0x30f8', 'movsxd rbp, ebx', 'mov r12d, ebx', 'test rbp, rbp', 'je 0x2ed2', 'lea rsi, [var_70h]', 'mov edi, 4', 'call sym.imp.clock_gettime']"
157,ubuntu-distro-info,247,"['call sym.imp.mktime', 'mov rdx, qword [var_38h]', 'xor rdx, qword fs:[0x28]', 'jne 0x235b', 'add rsp, 0x48', 'ret', 'mov rdi, rbp', 'mov r12, rax', 'call fcn.000022f0', 'sub rsp, 0x48', 'pxor xmm0, xmm0', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov eax, dword [rdi]', 'movaps xmmword [var_10h], xmm0', 'mov r8, rsp', 'movaps xmmword [rsp], xmm0', 'sub eax, 0x76c', 'movaps xmmword [var_20h], xmm0', 'mov dword [var_14h], eax', 'mov eax, dword [rdi + 4]', 'mov qword [var_30h], 0', 'sub eax, 1', 'mov dword [var_10h], eax', 'mov eax, dword [rdi + 8]', 'mov rdi, r8', 'mov dword [var_ch], eax', 'call sym.imp.mktime']"
158,umax_pp,222,"['call sym.imp.localtime', 'lea rdx, str.__02d:_02d:_02d._06ld____s__', 'mov esi, 1', 'mov r8d, dword [rax + 4]', 'mov ecx, dword [rax + 8]', 'push rbx', 'push qword [var_10h_2]', 'mov r9d, dword [rax]', 'xor eax, eax', 'mov rdi, qword [rbp]', 'call sym.imp.__fprintf_chk', 'mov rdi, qword [rbp]', 'mov rdx, r13', 'mov rcx, r12', 'mov esi, 1', 'call sym.imp.__vfprintf_chk', 'pop rax', 'pop rdx', 'jmp 0x23d4a', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x23e97', 'add rsp, 0xb0', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x3cdf', 'add rsp, 0xd8', 'ret', 'xor eax, eax', 'mov edi, 1', 'lea rsi, str.probe610p_done_..._n', 'call fcn.00003c20', 'sub rsp, 0xd8', 'mov r10, rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x3c79', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov esi, dword [0x0002e490]', 'mov r8, rsp', 'mov rcx, r10', 'lea rax, [arg_e0h]', 'lea rdx, str.umax_pp_low', 'mov dword [rsp], 0x10', 'mov qword [var_8h], rax', 'lea rax, [var_20h]', 'mov qword [var_10h], rax', 'mov dword [var_4h], 0x30', 'call fcn.00023d20', 'endbr64', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0xb0', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'cmp esi, edi', 'jge 0x23d78', 'mov rbp, qword [0x0002dff8]', 'mov rbx, rdx', 'mov r13, rcx', 'mov r12, r8', 'mov rdi, qword [rbp]', 'call sym.imp.fileno', 'lea rdx, [var_10h]', 'mov edi, 1', 'mov esi, eax', 'call sym.imp.__fxstat', 'cmp eax, 0xffffffff', 'je 0x23db7', 'mov r14, rsp', 'xor esi, esi', 'mov rdi, r14', 'call sym.imp.gettimeofday', 'mov rdi, r14', 'call sym.imp.localtime']"
159,unlz4,227,"['call sym.imp.clock', 'sub rax, qword [0x0002f060]', 'cmp rax, fcn.000249f0', 'jg 0x1f7ec', 'mov edx, dword [var_30h]', 'cmp edx, 3', 'jbe 0x1f700', 'mov rax, qword [var_10h]', 'sub rax, r13', 'cmp rbx, rax', 'jbe 0x1f715', 'mov rax, qword [var_18h]', 'mov rcx, r15', 'mov rdx, rbx', 'mov esi, 1', 'lea rdi, [rax + r13]', 'call sym.imp.fread', 'cmp rbx, rax', 'jne 0x1f9f1', 'mov rax, qword [rsp]', 'mov rdi, r15', 'add r13, rbx', 'add r12d, 1', 'mov qword [rax + r14*8], rbx', 'call sym.imp.fclose', 'cmp r12d, dword [var_ch]', 'jae 0x1f8f2', 'mov rax, qword [var_20h]', 'mov r14d, r12d', 'lea rbp, [rax + r14*8]', 'mov rdi, qword [rbp]', 'call fcn.0001e350', 'sub rsp, 0xa8', 'mov rsi, rdi', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'mov rdx, rsp', 'call sym.imp.__xstat', 'mov r8d, eax', 'xor eax, eax', 'test r8d, r8d', 'jne 0x1e39a', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1e3b5', 'add rsp, 0xa8', 'ret', 'mov rdx, qword [var_28h]', 'mov rsi, qword [rbp]', 'mov edi, 1', 'mov rbx, rax', 'call sym.imp.__xstat', 'test eax, eax', 'jne 0x1f79c', 'mov rdi, qword [rbp]', 'lea rsi, [0x0002759a]', 'call sym.imp.fopen', 'mov r15, rax', 'test rax, rax', 'je 0x1fa05', 'mov edx, dword [0x0002f014]', 'cmp edx, 1', 'mov dword [var_30h], edx', 'jbe 0x1f700', 'call sym.imp.clock']"
160,unlz4,26,"['call sym.imp.clock', 'sub rax, qword [0x0002f060]', 'cmp rax, fcn.000249f0', 'jg 0x1f7ec', 'call sym.imp.clock']"
161,unlz4,258,"['call sym.imp.clock', 'mov rcx, qword [rbp]', 'mov esi, 1', 'mov rdi, qword [obj.stderr]', 'mov qword [0x0002f060], rax', 'lea rdx, str.Loading__s...________r', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f014], 3', 'jbe 0x1f700', 'mov rax, qword [var_10h]', 'sub rax, r13', 'cmp rbx, rax', 'jbe 0x1f715', 'mov rax, qword [var_18h]', 'mov rcx, r15', 'mov rdx, rbx', 'mov esi, 1', 'lea rdi, [rax + r13]', 'call sym.imp.fread', 'cmp rbx, rax', 'jne 0x1f9f1', 'mov rax, qword [rsp]', 'mov rdi, r15', 'add r13, rbx', 'add r12d, 1', 'mov qword [rax + r14*8], rbx', 'call sym.imp.fclose', 'cmp r12d, dword [var_ch]', 'jae 0x1f8f2', 'mov rax, qword [var_20h]', 'mov r14d, r12d', 'lea rbp, [rax + r14*8]', 'mov rdi, qword [rbp]', 'call fcn.0001e350', 'sub rsp, 0xa8', 'mov rsi, rdi', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'mov rdx, rsp', 'call sym.imp.__xstat', 'mov r8d, eax', 'xor eax, eax', 'test r8d, r8d', 'jne 0x1e39a', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1e3b5', 'add rsp, 0xa8', 'ret', 'mov rdx, qword [var_28h]', 'mov rsi, qword [rbp]', 'mov edi, 1', 'mov rbx, rax', 'call sym.imp.__xstat', 'test eax, eax', 'jne 0x1f79c', 'mov rdi, qword [rbp]', 'lea rsi, [0x0002759a]', 'call sym.imp.fopen', 'mov r15, rax', 'test rax, rax', 'je 0x1fa05', 'mov edx, dword [0x0002f014]', 'cmp edx, 1', 'mov dword [var_30h], edx', 'jbe 0x1f700', 'call sym.imp.clock']"
162,unlz4,284,"['call sym.imp.clock', 'mov rcx, qword [rbp]', 'mov esi, 1', 'mov rdi, qword [obj.stderr]', 'mov qword [0x0002f060], rax', 'lea rdx, str.Loading__s...________r', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f014], 3', 'jbe 0x1f700', 'mov rax, qword [var_10h]', 'sub rax, r13', 'cmp rbx, rax', 'jbe 0x1f715', 'mov rax, qword [var_18h]', 'mov rcx, r15', 'mov rdx, rbx', 'mov esi, 1', 'lea rdi, [rax + r13]', 'call sym.imp.fread', 'cmp rbx, rax', 'jne 0x1f9f1', 'mov rax, qword [rsp]', 'mov rdi, r15', 'add r13, rbx', 'add r12d, 1', 'mov qword [rax + r14*8], rbx', 'call sym.imp.fclose', 'cmp r12d, dword [var_ch]', 'jae 0x1f8f2', 'mov rax, qword [var_20h]', 'mov r14d, r12d', 'lea rbp, [rax + r14*8]', 'mov rdi, qword [rbp]', 'call fcn.0001e350', 'sub rsp, 0xa8', 'mov rsi, rdi', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'mov rdx, rsp', 'call sym.imp.__xstat', 'mov r8d, eax', 'xor eax, eax', 'test r8d, r8d', 'jne 0x1e39a', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1e3b5', 'add rsp, 0xa8', 'ret', 'mov rdx, qword [var_28h]', 'mov rsi, qword [rbp]', 'mov edi, 1', 'mov rbx, rax', 'call sym.imp.__xstat', 'test eax, eax', 'jne 0x1f79c', 'mov rdi, qword [rbp]', 'lea rsi, [0x0002759a]', 'call sym.imp.fopen', 'mov r15, rax', 'test rax, rax', 'je 0x1fa05', 'mov edx, dword [0x0002f014]', 'cmp edx, 1', 'mov dword [var_30h], edx', 'jbe 0x1f700', 'call sym.imp.clock', 'sub rax, qword [0x0002f060]', 'cmp rax, fcn.000249f0', 'jg 0x1f7ec', 'call sym.imp.clock']"
163,unlz4,150,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x22868', 'mov edx, dword [var_10h]', 'cmp edx, 3', 'jle 0x227c8', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'call sym.imp.fwrite', 'cmp rbp, rax', 'jne 0x22e2b', 'mov rcx, qword [stream]', 'mov rdx, qword [nmemb]', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov r8, rax', 'add rbx, rax', 'test rax, rax', 'je 0x22a50', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor r9d, r9d', 'mov rcx, r13', 'mov rsi, r12', 'call fcn.000119a0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov qword [var_10h], rsi', 'mov qword [s2], rcx', 'mov qword [rsp], r8', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'cmp dword [rdi + 0x20], 2', 'mov eax, dword [rdi + 4]', 'jg 0x11c20', 'mov r11d, dword [rbx + 0x3c]', 'cmp eax, 1', 'lea r13, [0x00010df0]', 'lea rax, [0x00010ea0]', 'cmove r13, rax', 'cmp r11d, 1', 'je 0x11a0b', 'mov rax, 0xffffffffffffffff', 'jmp 0x11bf5', 'mov rdi, qword [var_48h]', 'xor rdi, qword fs:[0x28]', 'jne 0x11d29', 'add rsp, 0x58', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x22e15', 'mov edx, dword [0x0002f080]', 'add r14, rbp', 'cmp edx, 1', 'mov dword [var_10h], edx', 'jle 0x227c8', 'call sym.imp.clock']"
164,unlz4,26,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x22868', 'call sym.imp.clock']"
165,unlz4,178,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x22868', 'mov edx, dword [var_10h]', 'cmp edx, 3', 'jle 0x227c8', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'call sym.imp.fwrite', 'cmp rbp, rax', 'jne 0x22e2b', 'mov rcx, qword [stream]', 'mov rdx, qword [nmemb]', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov r8, rax', 'add rbx, rax', 'test rax, rax', 'je 0x22a50', 'mov qword [var_10h], r14', 'mov r14, qword [stream]', 'mov rdi, r14', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x22fb1', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor ecx, ecx', 'mov rsi, r12', 'call fcn.00011e50', 'endbr64', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'call fcn.00011d30', 'endbr64', 'push r12', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'mov r12, qword [rdi + 0x68]', 'test r12, r12', 'je 0x11de1', 'add rsp, 8', 'mov rax, r12', 'pop rbx', 'pop r12', 'ret', 'cmp rax, 0xffffffffffffffec', 'ja 0x11ebc', 'sub rbp, rax', 'lea r13, [r12 + rax]', 'cmp rbp, 3', 'jbe 0x11ef0', 'add rsp, 8', 'mov rax, 0xfffffffffffffff5', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'add r14, rax', 'sub r14, rbp', 'cmp rax, 0xffffffffffffffed', 'cmovb rax, r14', 'jmp 0x12070', 'mov rbx, qword [var_58h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1213e', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov r13, rax', 'call fcn.00011660', 'pop r10', 'pop r11', 'test eax, eax', 'mov r10, qword [nmemb]', 'jne 0x22f55', 'mov ebx, dword [0x0002f080]', 'cmp ebx, 1', 'jg 0x22bb0', 'mov qword [nmemb], r10', 'call sym.imp.clock']"
166,unlz4,207,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x22868', 'mov edx, dword [var_10h]', 'cmp edx, 3', 'jle 0x227c8', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'call sym.imp.fwrite', 'cmp rbp, rax', 'jne 0x22e2b', 'mov rcx, qword [stream]', 'mov rdx, qword [nmemb]', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov r8, rax', 'add rbx, rax', 'test rax, rax', 'je 0x22a50', 'mov qword [var_10h], r14', 'mov r14, qword [stream]', 'mov rdi, r14', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x22fb1', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor ecx, ecx', 'mov rsi, r12', 'call fcn.00011e50', 'endbr64', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'call fcn.00011d30', 'endbr64', 'push r12', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'mov r12, qword [rdi + 0x68]', 'test r12, r12', 'je 0x11de1', 'add rsp, 8', 'mov rax, r12', 'pop rbx', 'pop r12', 'ret', 'cmp rax, 0xffffffffffffffec', 'ja 0x11ebc', 'sub rbp, rax', 'lea r13, [r12 + rax]', 'cmp rbp, 3', 'jbe 0x11ef0', 'add rsp, 8', 'mov rax, 0xfffffffffffffff5', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'add r14, rax', 'sub r14, rbp', 'cmp rax, 0xffffffffffffffed', 'cmovb rax, r14', 'jmp 0x12070', 'mov rbx, qword [var_58h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1213e', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov r13, rax', 'call fcn.00011660', 'pop r10', 'pop r11', 'test eax, eax', 'mov r10, qword [nmemb]', 'jne 0x22f55', 'mov ebx, dword [0x0002f080]', 'cmp ebx, 1', 'jg 0x22bb0', 'mov qword [nmemb], r10', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r10, qword [nmemb]', 'cmp rax, 0x28b0a', 'jg 0x22bd7', 'mov qword [nmemb], r10', 'call sym.imp.clock']"
167,unlz4,192,"['call sym.imp.clock', 'mov qword [0x0002f078], rax', 'test r14, r14', 'js 0x22a18', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, r14', 'test rbx, rbx', 'js 0x229f0', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, rbx', 'divsd xmm0, xmm1', 'mov rcx, rbx', 'mov rdi, qword [obj.stderr]', 'lea rdx, str._rRead_:__u_MB______.2f_____', 'shr rcx, 0x14', 'mov esi, 1', 'mov eax, 1', 'mulsd xmm0, qword [0x00029ba8]', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'jle 0x227c8', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'call sym.imp.fwrite', 'cmp rbp, rax', 'jne 0x22e2b', 'mov rcx, qword [stream]', 'mov rdx, qword [nmemb]', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov r8, rax', 'add rbx, rax', 'test rax, rax', 'je 0x22a50', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor r9d, r9d', 'mov rcx, r13', 'mov rsi, r12', 'call fcn.000119a0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov qword [var_10h], rsi', 'mov qword [s2], rcx', 'mov qword [rsp], r8', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'cmp dword [rdi + 0x20], 2', 'mov eax, dword [rdi + 4]', 'jg 0x11c20', 'mov r11d, dword [rbx + 0x3c]', 'cmp eax, 1', 'lea r13, [0x00010df0]', 'lea rax, [0x00010ea0]', 'cmove r13, rax', 'cmp r11d, 1', 'je 0x11a0b', 'mov rax, 0xffffffffffffffff', 'jmp 0x11bf5', 'mov rdi, qword [var_48h]', 'xor rdi, qword fs:[0x28]', 'jne 0x11d29', 'add rsp, 0x58', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x22e15', 'mov edx, dword [0x0002f080]', 'add r14, rbp', 'cmp edx, 1', 'mov dword [var_10h], edx', 'jle 0x227c8', 'call sym.imp.clock']"
168,unlz4,218,"['call sym.imp.clock', 'mov qword [0x0002f078], rax', 'test r14, r14', 'js 0x22a18', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, r14', 'test rbx, rbx', 'js 0x229f0', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, rbx', 'divsd xmm0, xmm1', 'mov rcx, rbx', 'mov rdi, qword [obj.stderr]', 'lea rdx, str._rRead_:__u_MB______.2f_____', 'shr rcx, 0x14', 'mov esi, 1', 'mov eax, 1', 'mulsd xmm0, qword [0x00029ba8]', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'jle 0x227c8', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'call sym.imp.fwrite', 'cmp rbp, rax', 'jne 0x22e2b', 'mov rcx, qword [stream]', 'mov rdx, qword [nmemb]', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov r8, rax', 'add rbx, rax', 'test rax, rax', 'je 0x22a50', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor r9d, r9d', 'mov rcx, r13', 'mov rsi, r12', 'call fcn.000119a0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov qword [var_10h], rsi', 'mov qword [s2], rcx', 'mov qword [rsp], r8', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'cmp dword [rdi + 0x20], 2', 'mov eax, dword [rdi + 4]', 'jg 0x11c20', 'mov r11d, dword [rbx + 0x3c]', 'cmp eax, 1', 'lea r13, [0x00010df0]', 'lea rax, [0x00010ea0]', 'cmove r13, rax', 'cmp r11d, 1', 'je 0x11a0b', 'mov rax, 0xffffffffffffffff', 'jmp 0x11bf5', 'mov rdi, qword [var_48h]', 'xor rdi, qword fs:[0x28]', 'jne 0x11d29', 'add rsp, 0x58', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x22e15', 'mov edx, dword [0x0002f080]', 'add r14, rbp', 'cmp edx, 1', 'mov dword [var_10h], edx', 'jle 0x227c8', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x22868', 'call sym.imp.clock']"
169,unlz4,220,"['call sym.imp.clock', 'mov qword [0x0002f078], rax', 'test r14, r14', 'js 0x22a18', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, r14', 'test rbx, rbx', 'js 0x229f0', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, rbx', 'divsd xmm0, xmm1', 'mov rcx, rbx', 'mov rdi, qword [obj.stderr]', 'lea rdx, str._rRead_:__u_MB______.2f_____', 'shr rcx, 0x14', 'mov esi, 1', 'mov eax, 1', 'mulsd xmm0, qword [0x00029ba8]', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'jle 0x227c8', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'call sym.imp.fwrite', 'cmp rbp, rax', 'jne 0x22e2b', 'mov rcx, qword [stream]', 'mov rdx, qword [nmemb]', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov r8, rax', 'add rbx, rax', 'test rax, rax', 'je 0x22a50', 'mov qword [var_10h], r14', 'mov r14, qword [stream]', 'mov rdi, r14', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x22fb1', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor ecx, ecx', 'mov rsi, r12', 'call fcn.00011e50', 'endbr64', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'call fcn.00011d30', 'endbr64', 'push r12', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'mov r12, qword [rdi + 0x68]', 'test r12, r12', 'je 0x11de1', 'add rsp, 8', 'mov rax, r12', 'pop rbx', 'pop r12', 'ret', 'cmp rax, 0xffffffffffffffec', 'ja 0x11ebc', 'sub rbp, rax', 'lea r13, [r12 + rax]', 'cmp rbp, 3', 'jbe 0x11ef0', 'add rsp, 8', 'mov rax, 0xfffffffffffffff5', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'add r14, rax', 'sub r14, rbp', 'cmp rax, 0xffffffffffffffed', 'cmovb rax, r14', 'jmp 0x12070', 'mov rbx, qword [var_58h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1213e', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov r13, rax', 'call fcn.00011660', 'pop r10', 'pop r11', 'test eax, eax', 'mov r10, qword [nmemb]', 'jne 0x22f55', 'mov ebx, dword [0x0002f080]', 'cmp ebx, 1', 'jg 0x22bb0', 'mov qword [nmemb], r10', 'call sym.imp.clock']"
170,unlz4,249,"['call sym.imp.clock', 'mov qword [0x0002f078], rax', 'test r14, r14', 'js 0x22a18', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, r14', 'test rbx, rbx', 'js 0x229f0', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, rbx', 'divsd xmm0, xmm1', 'mov rcx, rbx', 'mov rdi, qword [obj.stderr]', 'lea rdx, str._rRead_:__u_MB______.2f_____', 'shr rcx, 0x14', 'mov esi, 1', 'mov eax, 1', 'mulsd xmm0, qword [0x00029ba8]', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'jle 0x227c8', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'call sym.imp.fwrite', 'cmp rbp, rax', 'jne 0x22e2b', 'mov rcx, qword [stream]', 'mov rdx, qword [nmemb]', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov r8, rax', 'add rbx, rax', 'test rax, rax', 'je 0x22a50', 'mov qword [var_10h], r14', 'mov r14, qword [stream]', 'mov rdi, r14', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x22fb1', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor ecx, ecx', 'mov rsi, r12', 'call fcn.00011e50', 'endbr64', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'call fcn.00011d30', 'endbr64', 'push r12', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'mov r12, qword [rdi + 0x68]', 'test r12, r12', 'je 0x11de1', 'add rsp, 8', 'mov rax, r12', 'pop rbx', 'pop r12', 'ret', 'cmp rax, 0xffffffffffffffec', 'ja 0x11ebc', 'sub rbp, rax', 'lea r13, [r12 + rax]', 'cmp rbp, 3', 'jbe 0x11ef0', 'add rsp, 8', 'mov rax, 0xfffffffffffffff5', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'add r14, rax', 'sub r14, rbp', 'cmp rax, 0xffffffffffffffed', 'cmovb rax, r14', 'jmp 0x12070', 'mov rbx, qword [var_58h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1213e', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov r13, rax', 'call fcn.00011660', 'pop r10', 'pop r11', 'test eax, eax', 'mov r10, qword [nmemb]', 'jne 0x22f55', 'mov ebx, dword [0x0002f080]', 'cmp ebx, 1', 'jg 0x22bb0', 'mov qword [nmemb], r10', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r10, qword [nmemb]', 'cmp rax, 0x28b0a', 'jg 0x22bd7', 'mov qword [nmemb], r10', 'call sym.imp.clock']"
171,unlz4,227,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x23ad0', 'mov edx, dword [var_38h_2]', 'cmp edx, 3', 'jle 0x23a00', 'test r15, r15', 'je 0x23b20', 'mov rdi, rbx', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x24240', 'mov rax, qword [rsp]', 'mov eax, dword [rax + 8]', 'test eax, eax', 'jne 0x23b44', 'test r15, r15', 'je 0x2368a', 'cmp rbp, 0xffffffffffffffff', 'je 0x23c20', 'add qword [var_60h], rbp', 'jmp 0x235e8', 'mov eax, dword [0x0002f074]', 'add dword [0x0002f070], 1', 'test eax, eax', 'je 0x23768', 'mov dword [0x0002f074], 0', 'mov edx, eax', 'and edx, 0xfffffff0', 'cmp edx, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184d2204', 'je 0x23948', 'cmp eax, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184c2102', 'je 0x237f8', 'cmp dword [0x0002f070], 1', 'jne 0x23ba0', 'mov rdi, qword [rsp]', 'mov r8d, dword [rdi + 8]', 'test r8d, r8d', 'jne 0x24003', 'mov esi, dword [rdi + 4]', 'test esi, esi', 'je 0x24003', 'mov ecx, dword [rdi]', 'test ecx, ecx', 'je 0x24003', 'mov rdx, qword [var_10h]', 'mov rsi, rbx', 'lea rcx, [ptr]', 'mov dword [0x0002f070], 0', 'call fcn.00022410', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'lea r11, [rsp - 0x10000]', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'cmp rsp, r11', 'jne 0x22422', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [rsp + 0x10018], rax', 'xor eax, eax', 'mov r14, rdi', 'mov r12, rsi', 'mov rdi, rcx', 'mov r13, rdx', 'mov rcx, rdx', 'mov esi, 1', 'mov edx, 4', 'call sym.imp.fwrite', 'mov qword [var_8h], rax', 'cmp rax, 4', 'jne 0x22518', 'xor r15d, r15d', 'lea rbp, [var_10h]', 'nop', 'mov rcx, r12', 'mov edx, 0x10000', 'mov esi, 1', 'mov rdi, rbp', 'call sym.imp.fread', 'mov edi, dword [r14 + 0x24]', 'mov r8d, r15d', 'mov rdx, rbp', 'mov rcx, rax', 'mov rsi, r13', 'add qword [var_8h], rax', 'mov rbx, rax', 'call fcn.00021d10', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov qword [ptr], rdx', 'mov qword [nitems], rcx', 'test edi, edi', 'je 0x21f1d', 'mov r15d, r8d', 'cmp r8d, 0x40000000', 'ja 0x21ef7', 'mov rax, qword [nitems]', 'mov r14, qword [ptr]', 'mov r13, rax', 'and r13, 0xfffffffffffffff8', 'mov rcx, r13', 'add rcx, r14', 'mov qword [rsp], rcx', 'cmp r14, rcx', 'jae 0x21e04', 'mov rax, qword [nitems]', 'test al, 7', 'je 0x21ee5', 'mov r14, qword [ptr]', 'mov rbp, qword [rsp]', 'add r14, rax', 'cmp rbp, r14', 'jb 0x21e35', 'cmp byte [rbp], 0', 'je 0x21e28', 'add rbp, 1', 'cmp r14, rbp', 'je 0x21f60', 'mov rax, qword [nitems]', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'and eax, 7', 'pop r12', 'pop r13', 'add eax, r15d', 'pop r14', 'pop r15', 'ret', 'mov rcx, qword [var_70h]', 'mov r14d, eax', 'jmp 0x23a99', 'mov edx, dword [0x0002f080]', 'add rbp, rcx', 'cmp edx, 1', 'mov dword [var_38h_2], edx', 'jle 0x23a00', 'call sym.imp.clock']"
172,unlz4,26,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x23ad0', 'call sym.imp.clock']"
173,unlz4,263,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x23ad0', 'mov edx, dword [var_38h_2]', 'cmp edx, 3', 'jle 0x23a00', 'test r15, r15', 'je 0x23b20', 'mov rdi, rbx', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x24240', 'mov rax, qword [rsp]', 'mov eax, dword [rax + 8]', 'test eax, eax', 'jne 0x23b44', 'test r15, r15', 'je 0x2368a', 'cmp rbp, 0xffffffffffffffff', 'je 0x23c20', 'add qword [var_60h], rbp', 'jmp 0x235e8', 'mov eax, dword [0x0002f074]', 'add dword [0x0002f070], 1', 'test eax, eax', 'je 0x23768', 'mov dword [0x0002f074], 0', 'mov edx, eax', 'and edx, 0xfffffff0', 'cmp edx, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184d2204', 'je 0x23948', 'cmp eax, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184c2102', 'je 0x237f8', 'cmp dword [0x0002f080], 3', 'jg 0x23d30', 'mov edi, 0x800000', 'call fcn.00005890', 'endbr64', 'xor eax, eax', 'cmp edi, 0x7e000000', 'ja 0x58bc', 'ret', 'movsxd rdi, eax', 'call sym.imp.malloc', 'mov edi, 0x800000', 'mov r15, rax', 'call sym.imp.malloc', 'mov r13, rax', 'test r15, r15', 'je 0x24134', 'test rax, rax', 'je 0x24134', 'xor r12d, r12d', 'xor ebp, ebp', 'mov r14, r15', 'jmp 0x238f3', 'mov rcx, rbx', 'mov edx, 4', 'mov esi, 1', 'mov rdi, r14', 'call sym.imp.fread', 'test rax, rax', 'jne 0x23850', 'cmp rax, 4', 'jne 0x23e77', 'movzx r8d, byte [r14 + 1]', 'movzx eax, byte [r14]', 'mov edx, r8d', 'movzx r8d, byte [r14 + 2]', 'shl edx, 8', 'shl r8d, 0x10', 'add r8d, edx', 'add eax, r8d', 'movzx r8d, byte [r14 + 3]', 'shl r8d, 0x18', 'lea r15d, [r8 + rax]', 'cmp r15d, 0x808090', 'ja 0x23d00', 'mov edx, r15d', 'mov rcx, rbx', 'mov esi, 1', 'mov rdi, r14', 'mov qword [var_38h_2], rdx', 'call sym.imp.fread', 'mov rdx, qword [var_38h_2]', 'cmp rdx, rax', 'jne 0x23e45', 'mov ecx, 0x800000', 'mov edx, r15d', 'mov rsi, r13', 'mov rdi, r14', 'call fcn.0000dc10', 'endbr64', 'test rdi, rdi', 'je 0xe136', 'test ecx, ecx', 'js 0xe136', 'push r15', 'movsxd r10, edx', 'push r14', 'lea r9, [rdi + r10]', 'mov r14, rdi', 'push r13', 'mov r13, rsi', 'push r12', 'push rbp', 'push rbx', 'movsxd rbx, ecx', 'add rbx, rsi', 'lea rax, [rbx - 0x20]', 'sub rsp, 0x28', 'mov qword [var_18h], rax', 'test ecx, ecx', 'je 0xe070', 'mov eax, 0xffffffff', 'cmp edx, 1', 'jne 0xddbe', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'jns 0x1ed10', 'cdqe', 'add r12d, 1', 'add rbx, 0x38', 'mov qword [rbx - 0x10], rax', 'cmp r12d, dword [var_20h]', 'je 0x1ed58', 'add ebp, 1', 'cmp dword [var_4ch], ebp', 'jne 0x1ecf6', 'mov r12, qword [var_90h]', 'mov rsi, qword [var_80h]', 'mov rbx, qword [var_88h]', 'mov rdi, r12', 'call fcn.0001e4b0', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'call fcn.0001e3e0', 'sub rsp, 0x28', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rsi, rsp', 'call sym.imp.clock_gettime']"
174,unlz4,199,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x23ad0', 'mov edx, dword [var_38h_2]', 'cmp edx, 3', 'jle 0x23a00', 'test r15, r15', 'je 0x23b20', 'mov rdi, rbx', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x24240', 'mov rax, qword [rsp]', 'mov eax, dword [rax + 8]', 'test eax, eax', 'jne 0x23b44', 'test r15, r15', 'je 0x2368a', 'cmp rbp, 0xffffffffffffffff', 'je 0x23c20', 'mov rdi, rbx', 'call sym.imp.fclose', 'mov rsi, qword [rsp]', 'mov eax, dword [0x0002f080]', 'mov edx, dword [rsi + 0x40]', 'test edx, edx', 'jne 0x23cc8', 'cmp eax, 1', 'jg 0x23c70', 'xor eax, eax', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x241c3', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x40', 'mov rdi, rbp', 'call sym.imp.fclose', 'xor eax, eax', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0x246fa', 'add rsp, 0xa0', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x40', 'mov r12d, eax', 'call sym.imp.clock']"
175,unlz4,259,"['call sym.imp.clock', 'mov rdi, qword [obj.stderr]', 'mov rcx, rbp', 'lea rdx, str._rDecompressed_:__u_MB__', 'mov qword [0x0002f078], rax', 'shr rcx, 0x14', 'xor eax, eax', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'jle 0x23a00', 'test r15, r15', 'je 0x23b20', 'mov rdi, rbx', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x24240', 'mov rax, qword [rsp]', 'mov eax, dword [rax + 8]', 'test eax, eax', 'jne 0x23b44', 'test r15, r15', 'je 0x2368a', 'cmp rbp, 0xffffffffffffffff', 'je 0x23c20', 'add qword [var_60h], rbp', 'jmp 0x235e8', 'mov eax, dword [0x0002f074]', 'add dword [0x0002f070], 1', 'test eax, eax', 'je 0x23768', 'mov dword [0x0002f074], 0', 'mov edx, eax', 'and edx, 0xfffffff0', 'cmp edx, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184d2204', 'je 0x23948', 'cmp eax, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184c2102', 'je 0x237f8', 'cmp dword [0x0002f070], 1', 'jne 0x23ba0', 'mov rdi, qword [rsp]', 'mov r8d, dword [rdi + 8]', 'test r8d, r8d', 'jne 0x24003', 'mov esi, dword [rdi + 4]', 'test esi, esi', 'je 0x24003', 'mov ecx, dword [rdi]', 'test ecx, ecx', 'je 0x24003', 'mov rdx, qword [var_10h]', 'mov rsi, rbx', 'lea rcx, [ptr]', 'mov dword [0x0002f070], 0', 'call fcn.00022410', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'lea r11, [rsp - 0x10000]', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'cmp rsp, r11', 'jne 0x22422', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [rsp + 0x10018], rax', 'xor eax, eax', 'mov r14, rdi', 'mov r12, rsi', 'mov rdi, rcx', 'mov r13, rdx', 'mov rcx, rdx', 'mov esi, 1', 'mov edx, 4', 'call sym.imp.fwrite', 'mov qword [var_8h], rax', 'cmp rax, 4', 'jne 0x22518', 'xor r15d, r15d', 'lea rbp, [var_10h]', 'nop', 'mov rcx, r12', 'mov edx, 0x10000', 'mov esi, 1', 'mov rdi, rbp', 'call sym.imp.fread', 'mov edi, dword [r14 + 0x24]', 'mov r8d, r15d', 'mov rdx, rbp', 'mov rcx, rax', 'mov rsi, r13', 'add qword [var_8h], rax', 'mov rbx, rax', 'call fcn.00021d10', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov qword [ptr], rdx', 'mov qword [nitems], rcx', 'test edi, edi', 'je 0x21f1d', 'mov r15d, r8d', 'cmp r8d, 0x40000000', 'ja 0x21ef7', 'mov rax, qword [nitems]', 'mov r14, qword [ptr]', 'mov r13, rax', 'and r13, 0xfffffffffffffff8', 'mov rcx, r13', 'add rcx, r14', 'mov qword [rsp], rcx', 'cmp r14, rcx', 'jae 0x21e04', 'mov rax, qword [nitems]', 'test al, 7', 'je 0x21ee5', 'mov r14, qword [ptr]', 'mov rbp, qword [rsp]', 'add r14, rax', 'cmp rbp, r14', 'jb 0x21e35', 'cmp byte [rbp], 0', 'je 0x21e28', 'add rbp, 1', 'cmp r14, rbp', 'je 0x21f60', 'mov rax, qword [nitems]', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'and eax, 7', 'pop r12', 'pop r13', 'add eax, r15d', 'pop r14', 'pop r15', 'ret', 'mov rcx, qword [var_70h]', 'mov r14d, eax', 'jmp 0x23a99', 'mov edx, dword [0x0002f080]', 'add rbp, rcx', 'cmp edx, 1', 'mov dword [var_38h_2], edx', 'jle 0x23a00', 'call sym.imp.clock']"
176,unlz4,285,"['call sym.imp.clock', 'mov rdi, qword [obj.stderr]', 'mov rcx, rbp', 'lea rdx, str._rDecompressed_:__u_MB__', 'mov qword [0x0002f078], rax', 'shr rcx, 0x14', 'xor eax, eax', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'jle 0x23a00', 'test r15, r15', 'je 0x23b20', 'mov rdi, rbx', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x24240', 'mov rax, qword [rsp]', 'mov eax, dword [rax + 8]', 'test eax, eax', 'jne 0x23b44', 'test r15, r15', 'je 0x2368a', 'cmp rbp, 0xffffffffffffffff', 'je 0x23c20', 'add qword [var_60h], rbp', 'jmp 0x235e8', 'mov eax, dword [0x0002f074]', 'add dword [0x0002f070], 1', 'test eax, eax', 'je 0x23768', 'mov dword [0x0002f074], 0', 'mov edx, eax', 'and edx, 0xfffffff0', 'cmp edx, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184d2204', 'je 0x23948', 'cmp eax, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184c2102', 'je 0x237f8', 'cmp dword [0x0002f070], 1', 'jne 0x23ba0', 'mov rdi, qword [rsp]', 'mov r8d, dword [rdi + 8]', 'test r8d, r8d', 'jne 0x24003', 'mov esi, dword [rdi + 4]', 'test esi, esi', 'je 0x24003', 'mov ecx, dword [rdi]', 'test ecx, ecx', 'je 0x24003', 'mov rdx, qword [var_10h]', 'mov rsi, rbx', 'lea rcx, [ptr]', 'mov dword [0x0002f070], 0', 'call fcn.00022410', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'lea r11, [rsp - 0x10000]', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'cmp rsp, r11', 'jne 0x22422', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [rsp + 0x10018], rax', 'xor eax, eax', 'mov r14, rdi', 'mov r12, rsi', 'mov rdi, rcx', 'mov r13, rdx', 'mov rcx, rdx', 'mov esi, 1', 'mov edx, 4', 'call sym.imp.fwrite', 'mov qword [var_8h], rax', 'cmp rax, 4', 'jne 0x22518', 'xor r15d, r15d', 'lea rbp, [var_10h]', 'nop', 'mov rcx, r12', 'mov edx, 0x10000', 'mov esi, 1', 'mov rdi, rbp', 'call sym.imp.fread', 'mov edi, dword [r14 + 0x24]', 'mov r8d, r15d', 'mov rdx, rbp', 'mov rcx, rax', 'mov rsi, r13', 'add qword [var_8h], rax', 'mov rbx, rax', 'call fcn.00021d10', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov qword [ptr], rdx', 'mov qword [nitems], rcx', 'test edi, edi', 'je 0x21f1d', 'mov r15d, r8d', 'cmp r8d, 0x40000000', 'ja 0x21ef7', 'mov rax, qword [nitems]', 'mov r14, qword [ptr]', 'mov r13, rax', 'and r13, 0xfffffffffffffff8', 'mov rcx, r13', 'add rcx, r14', 'mov qword [rsp], rcx', 'cmp r14, rcx', 'jae 0x21e04', 'mov rax, qword [nitems]', 'test al, 7', 'je 0x21ee5', 'mov r14, qword [ptr]', 'mov rbp, qword [rsp]', 'add r14, rax', 'cmp rbp, r14', 'jb 0x21e35', 'cmp byte [rbp], 0', 'je 0x21e28', 'add rbp, 1', 'cmp r14, rbp', 'je 0x21f60', 'mov rax, qword [nitems]', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'and eax, 7', 'pop r12', 'pop r13', 'add eax, r15d', 'pop r14', 'pop r15', 'ret', 'mov rcx, qword [var_70h]', 'mov r14d, eax', 'jmp 0x23a99', 'mov edx, dword [0x0002f080]', 'add rbp, rcx', 'cmp edx, 1', 'mov dword [var_38h_2], edx', 'jle 0x23a00', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x23ad0', 'call sym.imp.clock']"
177,unlz4,295,"['call sym.imp.clock', 'mov rdi, qword [obj.stderr]', 'mov rcx, rbp', 'lea rdx, str._rDecompressed_:__u_MB__', 'mov qword [0x0002f078], rax', 'shr rcx, 0x14', 'xor eax, eax', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'jle 0x23a00', 'test r15, r15', 'je 0x23b20', 'mov rdi, rbx', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x24240', 'mov rax, qword [rsp]', 'mov eax, dword [rax + 8]', 'test eax, eax', 'jne 0x23b44', 'test r15, r15', 'je 0x2368a', 'cmp rbp, 0xffffffffffffffff', 'je 0x23c20', 'add qword [var_60h], rbp', 'jmp 0x235e8', 'mov eax, dword [0x0002f074]', 'add dword [0x0002f070], 1', 'test eax, eax', 'je 0x23768', 'mov dword [0x0002f074], 0', 'mov edx, eax', 'and edx, 0xfffffff0', 'cmp edx, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184d2204', 'je 0x23948', 'cmp eax, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184c2102', 'je 0x237f8', 'cmp dword [0x0002f080], 3', 'jg 0x23d30', 'mov edi, 0x800000', 'call fcn.00005890', 'endbr64', 'xor eax, eax', 'cmp edi, 0x7e000000', 'ja 0x58bc', 'ret', 'movsxd rdi, eax', 'call sym.imp.malloc', 'mov edi, 0x800000', 'mov r15, rax', 'call sym.imp.malloc', 'mov r13, rax', 'test r15, r15', 'je 0x24134', 'test rax, rax', 'je 0x24134', 'xor r12d, r12d', 'xor ebp, ebp', 'mov r14, r15', 'jmp 0x238f3', 'mov rcx, rbx', 'mov edx, 4', 'mov esi, 1', 'mov rdi, r14', 'call sym.imp.fread', 'test rax, rax', 'jne 0x23850', 'cmp rax, 4', 'jne 0x23e77', 'movzx r8d, byte [r14 + 1]', 'movzx eax, byte [r14]', 'mov edx, r8d', 'movzx r8d, byte [r14 + 2]', 'shl edx, 8', 'shl r8d, 0x10', 'add r8d, edx', 'add eax, r8d', 'movzx r8d, byte [r14 + 3]', 'shl r8d, 0x18', 'lea r15d, [r8 + rax]', 'cmp r15d, 0x808090', 'ja 0x23d00', 'mov edx, r15d', 'mov rcx, rbx', 'mov esi, 1', 'mov rdi, r14', 'mov qword [var_38h_2], rdx', 'call sym.imp.fread', 'mov rdx, qword [var_38h_2]', 'cmp rdx, rax', 'jne 0x23e45', 'mov ecx, 0x800000', 'mov edx, r15d', 'mov rsi, r13', 'mov rdi, r14', 'call fcn.0000dc10', 'endbr64', 'test rdi, rdi', 'je 0xe136', 'test ecx, ecx', 'js 0xe136', 'push r15', 'movsxd r10, edx', 'push r14', 'lea r9, [rdi + r10]', 'mov r14, rdi', 'push r13', 'mov r13, rsi', 'push r12', 'push rbp', 'push rbx', 'movsxd rbx, ecx', 'add rbx, rsi', 'lea rax, [rbx - 0x20]', 'sub rsp, 0x28', 'mov qword [var_18h], rax', 'test ecx, ecx', 'je 0xe070', 'mov eax, 0xffffffff', 'cmp edx, 1', 'jne 0xddbe', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'jns 0x1ed10', 'cdqe', 'add r12d, 1', 'add rbx, 0x38', 'mov qword [rbx - 0x10], rax', 'cmp r12d, dword [var_20h]', 'je 0x1ed58', 'add ebp, 1', 'cmp dword [var_4ch], ebp', 'jne 0x1ecf6', 'mov r12, qword [var_90h]', 'mov rsi, qword [var_80h]', 'mov rbx, qword [var_88h]', 'mov rdi, r12', 'call fcn.0001e4b0', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'call fcn.0001e3e0', 'sub rsp, 0x28', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rsi, rsp', 'call sym.imp.clock_gettime']"
178,unlz4,231,"['call sym.imp.clock', 'mov rdi, qword [obj.stderr]', 'mov rcx, rbp', 'lea rdx, str._rDecompressed_:__u_MB__', 'mov qword [0x0002f078], rax', 'shr rcx, 0x14', 'xor eax, eax', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'jle 0x23a00', 'test r15, r15', 'je 0x23b20', 'mov rdi, rbx', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x24240', 'mov rax, qword [rsp]', 'mov eax, dword [rax + 8]', 'test eax, eax', 'jne 0x23b44', 'test r15, r15', 'je 0x2368a', 'cmp rbp, 0xffffffffffffffff', 'je 0x23c20', 'mov rdi, rbx', 'call sym.imp.fclose', 'mov rsi, qword [rsp]', 'mov eax, dword [0x0002f080]', 'mov edx, dword [rsi + 0x40]', 'test edx, edx', 'jne 0x23cc8', 'cmp eax, 1', 'jg 0x23c70', 'xor eax, eax', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x241c3', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x40', 'mov rdi, rbp', 'call sym.imp.fclose', 'xor eax, eax', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0x246fa', 'add rsp, 0xa0', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x40', 'mov r12d, eax', 'call sym.imp.clock']"
179,unlz4,147,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x1e428', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, qword [rsp]', 'mov rdx, qword [var_8h]', 'jne 0x1e447', 'add rsp, 0x28', 'ret', 'mov qword [var_88h], rbx', 'mov qword [var_80h], rdx', 'mov qword [var_90h], rax', 'mov rax, qword [ptr]', 'mov r8d, dword [var_20h]', 'xor r12d, r12d', 'lea rbx, [rax + 8]', 'test r8d, r8d', 'jne 0x1ed25', 'mov rsi, qword [rbx + 0x20]', 'mov rdi, qword [rbx + 8]', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 0x18]', 'call fcn.0000dc10', 'endbr64', 'test rdi, rdi', 'je 0xe136', 'test ecx, ecx', 'js 0xe136', 'push r15', 'movsxd r10, edx', 'push r14', 'lea r9, [rdi + r10]', 'mov r14, rdi', 'push r13', 'mov r13, rsi', 'push r12', 'push rbp', 'push rbx', 'movsxd rbx, ecx', 'add rbx, rsi', 'lea rax, [rbx - 0x20]', 'sub rsp, 0x28', 'mov qword [var_18h], rax', 'test ecx, ecx', 'je 0xe070', 'mov eax, 0xffffffff', 'cmp edx, 1', 'jne 0xddbe', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x23e5f', 'movsxd rcx, eax', 'mov rax, qword [rsp]', 'mov rsi, qword [var_10h]', 'mov r8d, r12d', 'mov rdx, r13', 'add rbp, rcx', 'mov edi, dword [rax + 0x24]', 'call fcn.00021d10', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov qword [ptr], rdx', 'mov qword [nitems], rcx', 'test edi, edi', 'je 0x21f1d', 'mov r15d, r8d', 'cmp r8d, 0x40000000', 'ja 0x21ef7', 'mov rax, qword [nitems]', 'mov r14, qword [ptr]', 'mov r13, rax', 'and r13, 0xfffffffffffffff8', 'mov rcx, r13', 'add rcx, r14', 'mov qword [rsp], rcx', 'cmp r14, rcx', 'jae 0x21e04', 'mov rax, qword [nitems]', 'test al, 7', 'je 0x21ee5', 'mov r14, qword [ptr]', 'mov rbp, qword [rsp]', 'add r14, rax', 'cmp rbp, r14', 'jb 0x21e35', 'cmp byte [rbp], 0', 'je 0x21e28', 'add rbp, 1', 'cmp r14, rbp', 'je 0x21f60', 'mov rax, qword [nitems]', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'and eax, 7', 'pop r12', 'pop r13', 'add eax, r15d', 'pop r14', 'pop r15', 'ret', 'mov rcx, qword [var_70h]', 'mov r14d, eax', 'jmp 0x23a99', 'mov edx, dword [0x0002f080]', 'add rbp, rcx', 'cmp edx, 1', 'mov dword [var_38h_2], edx', 'jle 0x23a00', 'call sym.imp.clock']"
180,unlz4,173,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x1e428', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, qword [rsp]', 'mov rdx, qword [var_8h]', 'jne 0x1e447', 'add rsp, 0x28', 'ret', 'mov qword [var_88h], rbx', 'mov qword [var_80h], rdx', 'mov qword [var_90h], rax', 'mov rax, qword [ptr]', 'mov r8d, dword [var_20h]', 'xor r12d, r12d', 'lea rbx, [rax + 8]', 'test r8d, r8d', 'jne 0x1ed25', 'mov rsi, qword [rbx + 0x20]', 'mov rdi, qword [rbx + 8]', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 0x18]', 'call fcn.0000dc10', 'endbr64', 'test rdi, rdi', 'je 0xe136', 'test ecx, ecx', 'js 0xe136', 'push r15', 'movsxd r10, edx', 'push r14', 'lea r9, [rdi + r10]', 'mov r14, rdi', 'push r13', 'mov r13, rsi', 'push r12', 'push rbp', 'push rbx', 'movsxd rbx, ecx', 'add rbx, rsi', 'lea rax, [rbx - 0x20]', 'sub rsp, 0x28', 'mov qword [var_18h], rax', 'test ecx, ecx', 'je 0xe070', 'mov eax, 0xffffffff', 'cmp edx, 1', 'jne 0xddbe', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x23e5f', 'movsxd rcx, eax', 'mov rax, qword [rsp]', 'mov rsi, qword [var_10h]', 'mov r8d, r12d', 'mov rdx, r13', 'add rbp, rcx', 'mov edi, dword [rax + 0x24]', 'call fcn.00021d10', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov qword [ptr], rdx', 'mov qword [nitems], rcx', 'test edi, edi', 'je 0x21f1d', 'mov r15d, r8d', 'cmp r8d, 0x40000000', 'ja 0x21ef7', 'mov rax, qword [nitems]', 'mov r14, qword [ptr]', 'mov r13, rax', 'and r13, 0xfffffffffffffff8', 'mov rcx, r13', 'add rcx, r14', 'mov qword [rsp], rcx', 'cmp r14, rcx', 'jae 0x21e04', 'mov rax, qword [nitems]', 'test al, 7', 'je 0x21ee5', 'mov r14, qword [ptr]', 'mov rbp, qword [rsp]', 'add r14, rax', 'cmp rbp, r14', 'jb 0x21e35', 'cmp byte [rbp], 0', 'je 0x21e28', 'add rbp, 1', 'cmp r14, rbp', 'je 0x21f60', 'mov rax, qword [nitems]', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'and eax, 7', 'pop r12', 'pop r13', 'add eax, r15d', 'pop r14', 'pop r15', 'ret', 'mov rcx, qword [var_70h]', 'mov r14d, eax', 'jmp 0x23a99', 'mov edx, dword [0x0002f080]', 'add rbp, rcx', 'cmp edx, 1', 'mov dword [var_38h_2], edx', 'jle 0x23a00', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x23ad0', 'call sym.imp.clock']"
181,unlz4,43,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x1e428', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, qword [rsp]', 'mov rdx, qword [var_8h]', 'jne 0x1e447', 'add rsp, 0x28', 'ret', 'mov rbp, rax', 'mov rbx, rdx', 'jmp 0x1e485', 'call fcn.0001e3e0', 'sub rsp, 0x28', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rsi, rsp', 'call sym.imp.clock_gettime']"
182,unlz4,317,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x1e428', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, qword [rsp]', 'mov rdx, qword [var_8h]', 'jne 0x1e447', 'add rsp, 0x28', 'ret', 'mov qword [var_88h], rbx', 'mov qword [var_80h], rdx', 'mov qword [var_90h], rax', 'mov rax, qword [ptr]', 'mov r8d, dword [var_20h]', 'xor r12d, r12d', 'lea rbx, [rax + 8]', 'test r8d, r8d', 'jne 0x1ed25', 'mov rsi, qword [rbx + 0x20]', 'mov rdi, qword [rbx + 8]', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 0x18]', 'call fcn.0000dc10', 'endbr64', 'test rdi, rdi', 'je 0xe136', 'test ecx, ecx', 'js 0xe136', 'push r15', 'movsxd r10, edx', 'push r14', 'lea r9, [rdi + r10]', 'mov r14, rdi', 'push r13', 'mov r13, rsi', 'push r12', 'push rbp', 'push rbx', 'movsxd rbx, ecx', 'add rbx, rsi', 'lea rax, [rbx - 0x20]', 'sub rsp, 0x28', 'mov qword [var_18h], rax', 'test ecx, ecx', 'je 0xe070', 'mov eax, 0xffffffff', 'cmp edx, 1', 'jne 0xddbe', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x23e5f', 'movsxd rcx, eax', 'mov rax, qword [rsp]', 'mov rsi, qword [var_10h]', 'mov r8d, r12d', 'mov rdx, r13', 'add rbp, rcx', 'mov edi, dword [rax + 0x24]', 'call fcn.00021d10', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov qword [ptr], rdx', 'mov qword [nitems], rcx', 'test edi, edi', 'je 0x21f1d', 'mov r15d, r8d', 'cmp r8d, 0x40000000', 'ja 0x21ef7', 'mov rax, qword [nitems]', 'mov r14, qword [ptr]', 'mov r13, rax', 'and r13, 0xfffffffffffffff8', 'mov rcx, r13', 'add rcx, r14', 'mov qword [rsp], rcx', 'cmp r14, rcx', 'jae 0x21e04', 'mov rax, qword [nitems]', 'test al, 7', 'je 0x21ee5', 'mov r14, qword [ptr]', 'mov rbp, qword [rsp]', 'add r14, rax', 'cmp rbp, r14', 'jb 0x21e35', 'cmp byte [rbp], 0', 'je 0x21e28', 'add rbp, 1', 'cmp r14, rbp', 'je 0x21f60', 'mov rax, qword [nitems]', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'and eax, 7', 'pop r12', 'pop r13', 'add eax, r15d', 'pop r14', 'pop r15', 'ret', 'mov rcx, qword [var_70h]', 'mov r14d, eax', 'jmp 0x23a99', 'mov edx, dword [0x0002f080]', 'add rbp, rcx', 'cmp edx, 1', 'mov dword [var_38h_2], edx', 'jle 0x23a00', 'test r15, r15', 'je 0x23b20', 'mov rdi, rbx', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x24240', 'mov rax, qword [rsp]', 'mov eax, dword [rax + 8]', 'test eax, eax', 'jne 0x23b44', 'test r15, r15', 'je 0x2368a', 'cmp rbp, 0xffffffffffffffff', 'je 0x23c20', 'mov rdi, rbx', 'call sym.imp.fclose', 'mov rsi, qword [rsp]', 'mov eax, dword [0x0002f080]', 'mov edx, dword [rsi + 0x40]', 'test edx, edx', 'jne 0x23cc8', 'cmp eax, 1', 'jg 0x23c70', 'xor eax, eax', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x241c3', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x40', 'mov rdi, rbp', 'call sym.imp.fclose', 'xor eax, eax', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0x246fa', 'add rsp, 0xa0', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x40', 'mov r12d, eax', 'call sym.imp.clock']"
183,unlz4,548,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x214c8', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, qword [rsp]', 'mov rdx, qword [var_8h]', 'jne 0x214e7', 'add rsp, 0x28', 'ret', 'mov qword [rsp], rax', 'mov r13, rdx', 'call sym.imp.clock', 'lea rdi, [var_20h]', 'mov rsi, r14', 'mov qword [var_18h], rax', 'call fcn.00021780', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x58', 'mov r13, qword [rsi + 0x10]', 'mov esi, 0x64', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea rdi, [var_30h]', 'call fcn.000118b0', 'endbr64', 'push rbp', 'mov ebp, esi', 'mov esi, 0xb8', 'push rbx', 'mov rbx, rdi', 'mov edi, 1', 'sub rsp, 8', 'call sym.imp.calloc', 'test rax, rax', 'je 0x118e9', 'mov rax, 0xfffffffffffffff7', 'jmp 0x118e2', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x218a7', 'mov rdi, r13', 'call sym.imp.malloc', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_18h], r13', 'mov qword [var_10h], rax', 'call fcn.00011710', 'endbr64', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x11780', 'mov qword [var_30h], 0', 'pxor xmm0, xmm0', 'movaps xmmword [rsp], xmm0', 'movaps xmmword [canary], xmm0', 'movaps xmmword [var_20h], xmm0', 'jmp 0x11752', 'xor edx, edx', 'mov rsi, rsp', 'mov dword [var_24h], 1', 'call fcn.00010ad0', 'test rsi, rsi', 'je 0x10b70', 'xor r10d, r10d', 'test rdi, rdi', 'mov r9d, 2', 'mov r8d, 2', 'sete r10b', 'mov esi, 0xffff', 'mov ecx, 0x10000', 'jmp 0x10b18', 'cmp rdx, rsi', 'cmova rdx, rsi', 'xor r11d, r11d', 'add rdi, rdx', 'xor edx, edx', 'mov rax, rdi', 'div rcx', 'mov edx, eax', 'test r10d, r10d', 'je 0x10b42', 'mov eax, eax', 'imul rdx, r9', 'imul rax, rcx', 'add rdx, r8', 'add rax, r11', 'lea rax, [rax + rdx*4]', 'ret', 'add rax, 0x13', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1179d', 'add rsp, 0x48', 'ret', 'mov rdi, rax', 'mov qword [var_28h], rax', 'call sym.imp.malloc', 'cmp qword [var_10h], 0', 'mov qword [var_20h], rax', 'je 0x21894', 'test rax, rax', 'je 0x21894', 'mov eax, dword [rbx + 0x2c]', 'test eax, eax', 'je 0x21890', 'xor ebx, ebx', 'jmp 0x21846', 'mov qword [var_38h], rbx', 'movdqa xmm0, xmmword [var_10h]', 'movdqa xmm1, xmmword [var_20h]', 'movdqa xmm2, xmmword [var_30h]', 'movups xmmword [r12], xmm0', 'movups xmmword [r12 + 0x10], xmm1', 'movups xmmword [r12 + 0x20], xmm2', 'mov rax, qword [var_48h]', 'xor rax, qword fs:[0x28]', 'jne 0x218be', 'add rsp, 0x58', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [var_30h]', 'mov r15, qword [var_20h]', 'sub rsp, 8', 'mov r8, qword [var_48h]', 'mov r9, qword [var_50h]', 'mov rdi, r14', 'mov ecx, dword [var_8h]', 'mov rdx, rbx', 'mov rsi, r15', 'push rcx', 'push r12', 'push rbp', 'mov rcx, qword [var_58h_2]', 'mov qword [var_30h_2], r9', 'mov qword [var_8h], r8', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rax, 0xfffffffffffffff5', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'mov r10, qword [var_10h]', 'test eax, eax', 'jne 0x22f6c', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'mov qword [stream], r10', 'call sym.imp.fwrite', 'mov qword [var_10h], rax', 'cmp rbp, rax', 'jne 0x22f3e', 'mov r10, qword [stream]', 'mov rbx, r10', 'test r10, r10', 'je 0x22a5a', 'mov qword [stream], r14', 'mov r8, r10', 'mov r14, qword [var_10h]', 'jmp 0x2280a', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor r9d, r9d', 'mov rcx, r13', 'mov rsi, r12', 'call fcn.000119a0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov qword [var_10h], rsi', 'mov qword [s2], rcx', 'mov qword [rsp], r8', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'cmp dword [rdi + 0x20], 2', 'mov eax, dword [rdi + 4]', 'jg 0x11c20', 'mov r11d, dword [rbx + 0x3c]', 'cmp eax, 1', 'lea r13, [0x00010f40]', 'lea rax, [0x00010e00]', 'cmovne r13, rax', 'cmp r11d, 1', 'jne 0x11c43', 'mov rax, 0xffffffffffffffff', 'jmp 0x11bf5', 'mov rdi, qword [var_48h]', 'xor rdi, qword fs:[0x28]', 'jne 0x11d29', 'add rsp, 0x58', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'test eax, eax', 'jne 0x22e15', 'mov edx, dword [0x0002f080]', 'add r14, rbp', 'cmp edx, 1', 'mov dword [var_10h], edx', 'jle 0x227c8', 'call sym.imp.clock']"
184,unlz4,574,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x214c8', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, qword [rsp]', 'mov rdx, qword [var_8h]', 'jne 0x214e7', 'add rsp, 0x28', 'ret', 'mov qword [rsp], rax', 'mov r13, rdx', 'call sym.imp.clock', 'lea rdi, [var_20h]', 'mov rsi, r14', 'mov qword [var_18h], rax', 'call fcn.00021780', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x58', 'mov r13, qword [rsi + 0x10]', 'mov esi, 0x64', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea rdi, [var_30h]', 'call fcn.000118b0', 'endbr64', 'push rbp', 'mov ebp, esi', 'mov esi, 0xb8', 'push rbx', 'mov rbx, rdi', 'mov edi, 1', 'sub rsp, 8', 'call sym.imp.calloc', 'test rax, rax', 'je 0x118e9', 'mov rax, 0xfffffffffffffff7', 'jmp 0x118e2', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x218a7', 'mov rdi, r13', 'call sym.imp.malloc', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_18h], r13', 'mov qword [var_10h], rax', 'call fcn.00011710', 'endbr64', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x11780', 'mov qword [var_30h], 0', 'pxor xmm0, xmm0', 'movaps xmmword [rsp], xmm0', 'movaps xmmword [canary], xmm0', 'movaps xmmword [var_20h], xmm0', 'jmp 0x11752', 'xor edx, edx', 'mov rsi, rsp', 'mov dword [var_24h], 1', 'call fcn.00010ad0', 'test rsi, rsi', 'je 0x10b70', 'xor r10d, r10d', 'test rdi, rdi', 'mov r9d, 2', 'mov r8d, 2', 'sete r10b', 'mov esi, 0xffff', 'mov ecx, 0x10000', 'jmp 0x10b18', 'cmp rdx, rsi', 'cmova rdx, rsi', 'xor r11d, r11d', 'add rdi, rdx', 'xor edx, edx', 'mov rax, rdi', 'div rcx', 'mov edx, eax', 'test r10d, r10d', 'je 0x10b42', 'mov eax, eax', 'imul rdx, r9', 'imul rax, rcx', 'add rdx, r8', 'add rax, r11', 'lea rax, [rax + rdx*4]', 'ret', 'add rax, 0x13', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1179d', 'add rsp, 0x48', 'ret', 'mov rdi, rax', 'mov qword [var_28h], rax', 'call sym.imp.malloc', 'cmp qword [var_10h], 0', 'mov qword [var_20h], rax', 'je 0x21894', 'test rax, rax', 'je 0x21894', 'mov eax, dword [rbx + 0x2c]', 'test eax, eax', 'je 0x21890', 'xor ebx, ebx', 'jmp 0x21846', 'mov qword [var_38h], rbx', 'movdqa xmm0, xmmword [var_10h]', 'movdqa xmm1, xmmword [var_20h]', 'movdqa xmm2, xmmword [var_30h]', 'movups xmmword [r12], xmm0', 'movups xmmword [r12 + 0x10], xmm1', 'movups xmmword [r12 + 0x20], xmm2', 'mov rax, qword [var_48h]', 'xor rax, qword fs:[0x28]', 'jne 0x218be', 'add rsp, 0x58', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [var_30h]', 'mov r15, qword [var_20h]', 'sub rsp, 8', 'mov r8, qword [var_48h]', 'mov r9, qword [var_50h]', 'mov rdi, r14', 'mov ecx, dword [var_8h]', 'mov rdx, rbx', 'mov rsi, r15', 'push rcx', 'push r12', 'push rbp', 'mov rcx, qword [var_58h_2]', 'mov qword [var_30h_2], r9', 'mov qword [var_8h], r8', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rax, 0xfffffffffffffff5', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'mov r10, qword [var_10h]', 'test eax, eax', 'jne 0x22f6c', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'mov qword [stream], r10', 'call sym.imp.fwrite', 'mov qword [var_10h], rax', 'cmp rbp, rax', 'jne 0x22f3e', 'mov r10, qword [stream]', 'mov rbx, r10', 'test r10, r10', 'je 0x22a5a', 'mov qword [stream], r14', 'mov r8, r10', 'mov r14, qword [var_10h]', 'jmp 0x2280a', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor r9d, r9d', 'mov rcx, r13', 'mov rsi, r12', 'call fcn.000119a0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov qword [var_10h], rsi', 'mov qword [s2], rcx', 'mov qword [rsp], r8', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'cmp dword [rdi + 0x20], 2', 'mov eax, dword [rdi + 4]', 'jg 0x11c20', 'mov r11d, dword [rbx + 0x3c]', 'cmp eax, 1', 'lea r13, [0x00010f40]', 'lea rax, [0x00010e00]', 'cmovne r13, rax', 'cmp r11d, 1', 'jne 0x11c43', 'mov rax, 0xffffffffffffffff', 'jmp 0x11bf5', 'mov rdi, qword [var_48h]', 'xor rdi, qword fs:[0x28]', 'jne 0x11d29', 'add rsp, 0x58', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'test eax, eax', 'jne 0x22e15', 'mov edx, dword [0x0002f080]', 'add r14, rbp', 'cmp edx, 1', 'mov dword [var_10h], edx', 'jle 0x227c8', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x22868', 'call sym.imp.clock']"
185,unlz4,426,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x214c8', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, qword [rsp]', 'mov rdx, qword [var_8h]', 'jne 0x214e7', 'add rsp, 0x28', 'ret', 'mov qword [rsp], rax', 'mov r13, rdx', 'call sym.imp.clock', 'lea rdi, [var_20h]', 'mov rsi, r14', 'mov qword [var_18h], rax', 'call fcn.00021780', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x58', 'mov r13, qword [rsi + 0x10]', 'mov esi, 0x64', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea rdi, [var_30h]', 'call fcn.000118b0', 'endbr64', 'push rbp', 'mov ebp, esi', 'mov esi, 0xb8', 'push rbx', 'mov rbx, rdi', 'mov edi, 1', 'sub rsp, 8', 'call sym.imp.calloc', 'test rax, rax', 'je 0x118e9', 'mov rax, 0xfffffffffffffff7', 'jmp 0x118e2', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x218a7', 'mov rdi, r13', 'call sym.imp.malloc', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_18h], r13', 'mov qword [var_10h], rax', 'call fcn.00011710', 'endbr64', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x11780', 'mov qword [var_30h], 0', 'pxor xmm0, xmm0', 'movaps xmmword [rsp], xmm0', 'movaps xmmword [canary], xmm0', 'movaps xmmword [var_20h], xmm0', 'jmp 0x11752', 'xor edx, edx', 'mov rsi, rsp', 'mov dword [var_24h], 1', 'call fcn.00010ad0', 'test rsi, rsi', 'je 0x10b70', 'xor r10d, r10d', 'test rdi, rdi', 'mov r9d, 2', 'mov r8d, 2', 'sete r10b', 'mov esi, 0xffff', 'mov ecx, 0x10000', 'jmp 0x10b18', 'cmp rdx, rsi', 'cmova rdx, rsi', 'xor r11d, r11d', 'add rdi, rdx', 'xor edx, edx', 'mov rax, rdi', 'div rcx', 'mov edx, eax', 'test r10d, r10d', 'je 0x10b42', 'mov eax, eax', 'imul rdx, r9', 'imul rax, rcx', 'add rdx, r8', 'add rax, r11', 'lea rax, [rax + rdx*4]', 'ret', 'add rax, 0x13', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1179d', 'add rsp, 0x48', 'ret', 'mov rdi, rax', 'mov qword [var_28h], rax', 'call sym.imp.malloc', 'cmp qword [var_10h], 0', 'mov qword [var_20h], rax', 'je 0x21894', 'test rax, rax', 'je 0x21894', 'mov eax, dword [rbx + 0x2c]', 'test eax, eax', 'je 0x21890', 'xor ebx, ebx', 'jmp 0x21846', 'mov qword [var_38h], rbx', 'movdqa xmm0, xmmword [var_10h]', 'movdqa xmm1, xmmword [var_20h]', 'movdqa xmm2, xmmword [var_30h]', 'movups xmmword [r12], xmm0', 'movups xmmword [r12 + 0x10], xmm1', 'movups xmmword [r12 + 0x20], xmm2', 'mov rax, qword [var_48h]', 'xor rax, qword fs:[0x28]', 'jne 0x218be', 'add rsp, 0x58', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [var_30h]', 'mov r15, qword [var_20h]', 'sub rsp, 8', 'mov r8, qword [var_48h]', 'mov r9, qword [var_50h]', 'mov rdi, r14', 'mov ecx, dword [var_8h]', 'mov rdx, rbx', 'mov rsi, r15', 'push rcx', 'push r12', 'push rbp', 'mov rcx, qword [var_58h_2]', 'mov qword [var_30h_2], r9', 'mov qword [var_8h], r8', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'test rax, rax', 'je 0x22a40', 'mov dword [var_3ch], 1', 'jmp 0x229bd', 'mov rax, qword [var_128h]', 'xor rax, qword fs:[0x28]', 'jne 0x22f39', 'mov eax, dword [var_3ch]', 'add rsp, 0x138', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r9, qword [var_30h_2]', 'mov rsi, rbx', 'mov rdi, r15', 'mov r8, qword [var_8h]', 'add rsp, 0x20', 'mov r14d, eax', 'mov rcx, r9', 'mov rdx, r8', 'call fcn.00023460', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdx', 'call sym.imp.free', 'mov rdi, r13', 'call sym.imp.free', 'mov rdi, r12', 'call fcn.00011890', 'endbr64', 'test rdi, rdi', 'je 0x118a0', 'ret', 'mov rdi, rbp', 'call fcn.00011900', 'endbr64', 'test rdi, rdi', 'je 0x11930', 'xor eax, eax', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'test eax, eax', 'jne 0x234a0', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'call sym.imp.clock', 'mov rbx, rax', 'call fcn.00021480', 'sub rsp, 0x28', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rsi, rsp', 'call sym.imp.clock_gettime']"
186,unlz4,551,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x214c8', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, qword [rsp]', 'mov rdx, qword [var_8h]', 'jne 0x214e7', 'add rsp, 0x28', 'ret', 'mov qword [rsp], rax', 'mov r13, rdx', 'call sym.imp.clock', 'lea rdi, [var_20h]', 'mov rsi, r14', 'mov qword [var_18h], rax', 'call fcn.00021780', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x58', 'mov r13, qword [rsi + 0x10]', 'mov esi, 0x64', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea rdi, [var_30h]', 'call fcn.000118b0', 'endbr64', 'push rbp', 'mov ebp, esi', 'mov esi, 0xb8', 'push rbx', 'mov rbx, rdi', 'mov edi, 1', 'sub rsp, 8', 'call sym.imp.calloc', 'test rax, rax', 'je 0x118e9', 'mov rax, 0xfffffffffffffff7', 'jmp 0x118e2', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x218a7', 'mov rdi, r13', 'call sym.imp.malloc', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_18h], r13', 'mov qword [var_10h], rax', 'call fcn.00011710', 'endbr64', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x11780', 'mov qword [var_30h], 0', 'pxor xmm0, xmm0', 'movaps xmmword [rsp], xmm0', 'movaps xmmword [canary], xmm0', 'movaps xmmword [var_20h], xmm0', 'jmp 0x11752', 'xor edx, edx', 'mov rsi, rsp', 'mov dword [var_24h], 1', 'call fcn.00010ad0', 'test rsi, rsi', 'je 0x10b70', 'xor r10d, r10d', 'test rdi, rdi', 'mov r9d, 2', 'mov r8d, 2', 'sete r10b', 'mov esi, 0xffff', 'mov ecx, 0x10000', 'jmp 0x10b18', 'cmp rdx, rsi', 'cmova rdx, rsi', 'xor r11d, r11d', 'add rdi, rdx', 'xor edx, edx', 'mov rax, rdi', 'div rcx', 'mov edx, eax', 'test r10d, r10d', 'je 0x10b42', 'mov eax, eax', 'imul rdx, r9', 'imul rax, rcx', 'add rdx, r8', 'add rax, r11', 'lea rax, [rax + rdx*4]', 'ret', 'add rax, 0x13', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1179d', 'add rsp, 0x48', 'ret', 'mov rdi, rax', 'mov qword [var_28h], rax', 'call sym.imp.malloc', 'cmp qword [var_10h], 0', 'mov qword [var_20h], rax', 'je 0x21894', 'test rax, rax', 'je 0x21894', 'mov eax, dword [rbx + 0x2c]', 'test eax, eax', 'je 0x21890', 'xor ebx, ebx', 'jmp 0x21846', 'mov qword [var_38h], rbx', 'movdqa xmm0, xmmword [var_10h]', 'movdqa xmm1, xmmword [var_20h]', 'movdqa xmm2, xmmword [var_30h]', 'movups xmmword [r12], xmm0', 'movups xmmword [r12 + 0x10], xmm1', 'movups xmmword [r12 + 0x20], xmm2', 'mov rax, qword [var_48h]', 'xor rax, qword fs:[0x28]', 'jne 0x218be', 'add rsp, 0x58', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [var_30h]', 'mov r15, qword [var_20h]', 'sub rsp, 8', 'mov r8, qword [var_48h]', 'mov r9, qword [var_50h]', 'mov rdi, r14', 'mov ecx, dword [var_8h]', 'mov rdx, rbx', 'mov rsi, r15', 'push rcx', 'push r12', 'push rbp', 'mov rcx, qword [var_58h_2]', 'mov qword [var_30h_2], r9', 'mov qword [var_8h], r8', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rcx, r8', 'jmp fcn.00011330', 'push r14', 'pxor xmm0, xmm0', 'mov r14, rdx', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rcx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x40', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rcx, rcx', 'mov rax, rsp', 'movaps xmmword [rsp], xmm0', 'cmove rbp, rax', 'movaps xmmword [var_10h], xmm0', 'xor r13d, r13d', 'mov qword [var_30h], 0', 'movaps xmmword [var_20h], xmm0', 'movdqu xmm1, xmmword [rbp]', 'movups xmmword [rdi], xmm1', 'movdqu xmm2, xmmword [rbp + 0x10]', 'movups xmmword [rdi + 0x10], xmm2', 'movdqu xmm3, xmmword [rbp + 0x20]', 'movups xmmword [rdi + 0x20], xmm3', 'mov rax, qword [rbp + 0x30]', 'mov qword [rdi + 0x30], rax', 'mov eax, dword [rdi + 0x20]', 'cmp eax, 2', 'setg r13b', 'add r13d, 1', 'cmp word [rdi + 0xb0], r13w', 'jb 0x11588', 'mov rdi, qword [rdi + 0xa8]', 'call sym.imp.free', 'cmp dword [rbx + 0x20], 2', 'jle 0x11630', 'call fcn.0000a140', 'mov qword [rbx + 0xa8], rax', 'jmp 0x115aa', 'test rax, rax', 'je 0x11648', 'mov rax, 0xfffffffffffffff7', 'jmp 0x1153a', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11654', 'add rsp, 0x40', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'cmp rax, 0xffffffffffffffec', 'ja 0x12070', 'mov rbx, qword [var_58h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1213e', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov r13, rax', 'call fcn.00011660', 'pop r10', 'pop r11', 'test eax, eax', 'mov r10, qword [nmemb]', 'jne 0x22f55', 'mov ebx, dword [0x0002f080]', 'cmp ebx, 1', 'jg 0x22bb0', 'mov qword [nmemb], r10', 'call sym.imp.clock']"
187,unlz4,580,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x214c8', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, qword [rsp]', 'mov rdx, qword [var_8h]', 'jne 0x214e7', 'add rsp, 0x28', 'ret', 'mov qword [rsp], rax', 'mov r13, rdx', 'call sym.imp.clock', 'lea rdi, [var_20h]', 'mov rsi, r14', 'mov qword [var_18h], rax', 'call fcn.00021780', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x58', 'mov r13, qword [rsi + 0x10]', 'mov esi, 0x64', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea rdi, [var_30h]', 'call fcn.000118b0', 'endbr64', 'push rbp', 'mov ebp, esi', 'mov esi, 0xb8', 'push rbx', 'mov rbx, rdi', 'mov edi, 1', 'sub rsp, 8', 'call sym.imp.calloc', 'test rax, rax', 'je 0x118e9', 'mov rax, 0xfffffffffffffff7', 'jmp 0x118e2', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x218a7', 'mov rdi, r13', 'call sym.imp.malloc', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_18h], r13', 'mov qword [var_10h], rax', 'call fcn.00011710', 'endbr64', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x11780', 'mov qword [var_30h], 0', 'pxor xmm0, xmm0', 'movaps xmmword [rsp], xmm0', 'movaps xmmword [canary], xmm0', 'movaps xmmword [var_20h], xmm0', 'jmp 0x11752', 'xor edx, edx', 'mov rsi, rsp', 'mov dword [var_24h], 1', 'call fcn.00010ad0', 'test rsi, rsi', 'je 0x10b70', 'xor r10d, r10d', 'test rdi, rdi', 'mov r9d, 2', 'mov r8d, 2', 'sete r10b', 'mov esi, 0xffff', 'mov ecx, 0x10000', 'jmp 0x10b18', 'cmp rdx, rsi', 'cmova rdx, rsi', 'xor r11d, r11d', 'add rdi, rdx', 'xor edx, edx', 'mov rax, rdi', 'div rcx', 'mov edx, eax', 'test r10d, r10d', 'je 0x10b42', 'mov eax, eax', 'imul rdx, r9', 'imul rax, rcx', 'add rdx, r8', 'add rax, r11', 'lea rax, [rax + rdx*4]', 'ret', 'add rax, 0x13', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1179d', 'add rsp, 0x48', 'ret', 'mov rdi, rax', 'mov qword [var_28h], rax', 'call sym.imp.malloc', 'cmp qword [var_10h], 0', 'mov qword [var_20h], rax', 'je 0x21894', 'test rax, rax', 'je 0x21894', 'mov eax, dword [rbx + 0x2c]', 'test eax, eax', 'je 0x21890', 'xor ebx, ebx', 'jmp 0x21846', 'mov qword [var_38h], rbx', 'movdqa xmm0, xmmword [var_10h]', 'movdqa xmm1, xmmword [var_20h]', 'movdqa xmm2, xmmword [var_30h]', 'movups xmmword [r12], xmm0', 'movups xmmword [r12 + 0x10], xmm1', 'movups xmmword [r12 + 0x20], xmm2', 'mov rax, qword [var_48h]', 'xor rax, qword fs:[0x28]', 'jne 0x218be', 'add rsp, 0x58', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [var_30h]', 'mov r15, qword [var_20h]', 'sub rsp, 8', 'mov r8, qword [var_48h]', 'mov r9, qword [var_50h]', 'mov rdi, r14', 'mov ecx, dword [var_8h]', 'mov rdx, rbx', 'mov rsi, r15', 'push rcx', 'push r12', 'push rbp', 'mov rcx, qword [var_58h_2]', 'mov qword [var_30h_2], r9', 'mov qword [var_8h], r8', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rcx, r8', 'jmp fcn.00011330', 'push r14', 'pxor xmm0, xmm0', 'mov r14, rdx', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rcx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x40', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rcx, rcx', 'mov rax, rsp', 'movaps xmmword [rsp], xmm0', 'cmove rbp, rax', 'movaps xmmword [var_10h], xmm0', 'xor r13d, r13d', 'mov qword [var_30h], 0', 'movaps xmmword [var_20h], xmm0', 'movdqu xmm1, xmmword [rbp]', 'movups xmmword [rdi], xmm1', 'movdqu xmm2, xmmword [rbp + 0x10]', 'movups xmmword [rdi + 0x10], xmm2', 'movdqu xmm3, xmmword [rbp + 0x20]', 'movups xmmword [rdi + 0x20], xmm3', 'mov rax, qword [rbp + 0x30]', 'mov qword [rdi + 0x30], rax', 'mov eax, dword [rdi + 0x20]', 'cmp eax, 2', 'setg r13b', 'add r13d, 1', 'cmp word [rdi + 0xb0], r13w', 'jb 0x11588', 'mov rdi, qword [rdi + 0xa8]', 'call sym.imp.free', 'cmp dword [rbx + 0x20], 2', 'jle 0x11630', 'call fcn.0000a140', 'mov qword [rbx + 0xa8], rax', 'jmp 0x115aa', 'test rax, rax', 'je 0x11648', 'mov rax, 0xfffffffffffffff7', 'jmp 0x1153a', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11654', 'add rsp, 0x40', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'cmp rax, 0xffffffffffffffec', 'ja 0x12070', 'mov rbx, qword [var_58h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1213e', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov r13, rax', 'call fcn.00011660', 'pop r10', 'pop r11', 'test eax, eax', 'mov r10, qword [nmemb]', 'jne 0x22f55', 'mov ebx, dword [0x0002f080]', 'cmp ebx, 1', 'jg 0x22bb0', 'mov qword [nmemb], r10', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r10, qword [nmemb]', 'cmp rax, 0x28b0a', 'jg 0x22bd7', 'mov qword [nmemb], r10', 'call sym.imp.clock']"
188,unlz4,35,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x214c8', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, qword [rsp]', 'mov rdx, qword [var_8h]', 'jne 0x214e7', 'add rsp, 0x28', 'ret', 'mov qword [rsp], rax', 'mov r13, rdx', 'call sym.imp.clock']"
189,unlz4,393,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x214c8', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, qword [rsp]', 'mov rdx, qword [var_8h]', 'jne 0x214e7', 'add rsp, 0x28', 'ret', 'mov qword [rsp], rax', 'mov r13, rdx', 'call sym.imp.clock', 'lea rdi, [var_20h]', 'mov rsi, r14', 'mov qword [var_18h], rax', 'call fcn.00021780', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x58', 'mov r13, qword [rsi + 0x10]', 'mov esi, 0x64', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea rdi, [var_30h]', 'call fcn.000118b0', 'endbr64', 'push rbp', 'mov ebp, esi', 'mov esi, 0xb8', 'push rbx', 'mov rbx, rdi', 'mov edi, 1', 'sub rsp, 8', 'call sym.imp.calloc', 'test rax, rax', 'je 0x118e9', 'mov rax, 0xfffffffffffffff7', 'jmp 0x118e2', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x218a7', 'mov rdi, r13', 'call sym.imp.malloc', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_18h], r13', 'mov qword [var_10h], rax', 'call fcn.00011710', 'endbr64', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x11780', 'mov qword [var_30h], 0', 'pxor xmm0, xmm0', 'movaps xmmword [rsp], xmm0', 'movaps xmmword [canary], xmm0', 'movaps xmmword [var_20h], xmm0', 'jmp 0x11752', 'xor edx, edx', 'mov rsi, rsp', 'mov dword [var_24h], 1', 'call fcn.00010ad0', 'test rsi, rsi', 'je 0x10b70', 'xor r10d, r10d', 'test rdi, rdi', 'mov r9d, 2', 'mov r8d, 2', 'sete r10b', 'mov esi, 0xffff', 'mov ecx, 0x10000', 'jmp 0x10b18', 'cmp rdx, rsi', 'cmova rdx, rsi', 'xor r11d, r11d', 'add rdi, rdx', 'xor edx, edx', 'mov rax, rdi', 'div rcx', 'mov edx, eax', 'test r10d, r10d', 'je 0x10b42', 'mov eax, eax', 'imul rdx, r9', 'imul rax, rcx', 'add rdx, r8', 'add rax, r11', 'lea rax, [rax + rdx*4]', 'ret', 'add rax, 0x13', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1179d', 'add rsp, 0x48', 'ret', 'mov rdi, rax', 'mov qword [var_28h], rax', 'call sym.imp.malloc', 'cmp qword [var_10h], 0', 'mov qword [var_20h], rax', 'je 0x21894', 'test rax, rax', 'je 0x21894', 'mov eax, dword [rbx + 0x2c]', 'test eax, eax', 'je 0x21890', 'xor ebx, ebx', 'jmp 0x21846', 'mov qword [var_38h], rbx', 'movdqa xmm0, xmmword [var_10h]', 'movdqa xmm1, xmmword [var_20h]', 'movdqa xmm2, xmmword [var_30h]', 'movups xmmword [r12], xmm0', 'movups xmmword [r12 + 0x10], xmm1', 'movups xmmword [r12 + 0x20], xmm2', 'mov rax, qword [var_48h]', 'xor rax, qword fs:[0x28]', 'jne 0x218be', 'add rsp, 0x58', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [var_30h]', 'mov r15, qword [var_20h]', 'sub rsp, 8', 'mov r8, qword [var_48h]', 'mov r9, qword [var_50h]', 'mov rdi, r14', 'mov ecx, dword [var_8h]', 'mov rdx, rbx', 'mov rsi, r15', 'push rcx', 'push r12', 'push rbp', 'mov rcx, qword [var_58h_2]', 'mov qword [var_30h_2], r9', 'mov qword [var_8h], r8', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'test rax, rax', 'je 0x22a40', 'mov dword [var_3ch], 1', 'jmp 0x229bd', 'mov rax, qword [var_128h]', 'xor rax, qword fs:[0x28]', 'jne 0x22f39', 'mov eax, dword [var_3ch]', 'add rsp, 0x138', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r9, qword [var_30h_2]', 'mov rsi, rbx', 'mov rdi, r15', 'mov r8, qword [var_8h]', 'add rsp, 0x20', 'mov r14d, eax', 'mov rcx, r9', 'mov rdx, r8', 'call fcn.00023460', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdx', 'call sym.imp.free', 'mov rdi, r13', 'call sym.imp.free', 'mov rdi, r12', 'call fcn.00011890', 'endbr64', 'test rdi, rdi', 'je 0x118a0', 'ret', 'mov rdi, rbp', 'call fcn.00011900', 'endbr64', 'test rdi, rdi', 'je 0x11930', 'xor eax, eax', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'test eax, eax', 'jne 0x234a0', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'call sym.imp.clock']"
190,unlz4,475,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r10, qword [nmemb]', 'cmp rax, 0x28b0a', 'jg 0x22bd7', 'cmp ebx, 3', 'jle 0x22945', 'mov rcx, r15', 'mov rdx, r13', 'mov esi, 1', 'mov rdi, r12', 'mov qword [nmemb], r10', 'call sym.imp.fwrite', 'mov r10, qword [nmemb]', 'cmp r13, rax', 'mov rbp, rax', 'jne 0x22f83', 'mov rdi, r14', 'mov qword [nmemb], r10', 'call sym.imp.fclose', 'mov rdi, qword [s1]', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'mov r10, qword [nmemb]', 'test eax, eax', 'jne 0x22ce0', 'mov rax, qword [var_30h]', 'mov ebx, dword [0x0002f080]', 'mov eax, dword [rax + 0x40]', 'test eax, eax', 'jne 0x22ca8', 'mov qword [nmemb], r10', 'cmp ebx, 1', 'jg 0x22ac0', 'mov rax, qword [var_128h]', 'xor rax, qword fs:[0x28]', 'jne 0x22f39', 'mov eax, dword [var_3ch]', 'add rsp, 0x138', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add dword [var_14h], eax', 'add rsp, 0x20', 'cmp rbx, qword [var_38h]', 'je 0x25520', 'lea rsi, str.stdout', 'mov rdi, r13', 'mov r12, qword [rbx]', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x25450', 'sub rsp, 8', 'mov eax, dword [var_48h]', 'push rax', 'lea rax, str.stdout', 'push rax', 'jmp 0x254b4', 'push r12', 'mov r9, qword [var_20h]', 'mov rdx, r15', 'mov rsi, r14', 'mov r8, qword [var_18h]', 'mov rcx, qword [var_28h]', 'add rbx, 8', 'mov rdi, qword [var_30h]', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'push r13', 'lea rsi, str.stdin', 'push r12', 'mov r12, rdi', 'sub rsp, 8', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x21210', 'cmp dword [0x0002f080], 3', 'jg 0x211f0', 'mov r13, qword [obj.stdin]', 'add rsp, 8', 'mov rax, r13', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rax, 0xfffffffffffffff5', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'mov r10, qword [var_10h]', 'test eax, eax', 'jne 0x22f6c', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'mov qword [stream], r10', 'call sym.imp.fwrite', 'mov qword [var_10h], rax', 'cmp rbp, rax', 'jne 0x22f3e', 'mov r10, qword [stream]', 'mov rbx, r10', 'test r10, r10', 'je 0x22a5a', 'mov qword [stream], r14', 'mov r8, r10', 'mov r14, qword [var_10h]', 'jmp 0x2280a', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor r9d, r9d', 'mov rcx, r13', 'mov rsi, r12', 'call fcn.000119a0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov qword [var_10h], rsi', 'mov qword [s2], rcx', 'mov qword [rsp], r8', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'cmp dword [rdi + 0x20], 2', 'mov eax, dword [rdi + 4]', 'jg 0x11c20', 'mov r11d, dword [rbx + 0x3c]', 'cmp eax, 1', 'lea r13, [0x00010f40]', 'lea rax, [0x00010e00]', 'cmovne r13, rax', 'cmp r11d, 1', 'jne 0x11c43', 'mov rax, 0xffffffffffffffff', 'jmp 0x11bf5', 'mov rdi, qword [var_48h]', 'xor rdi, qword fs:[0x28]', 'jne 0x11d29', 'add rsp, 0x58', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'test eax, eax', 'jne 0x22e15', 'mov edx, dword [0x0002f080]', 'add r14, rbp', 'cmp edx, 1', 'mov dword [var_10h], edx', 'jle 0x227c8', 'call sym.imp.clock']"
191,unlz4,501,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r10, qword [nmemb]', 'cmp rax, 0x28b0a', 'jg 0x22bd7', 'cmp ebx, 3', 'jle 0x22945', 'mov rcx, r15', 'mov rdx, r13', 'mov esi, 1', 'mov rdi, r12', 'mov qword [nmemb], r10', 'call sym.imp.fwrite', 'mov r10, qword [nmemb]', 'cmp r13, rax', 'mov rbp, rax', 'jne 0x22f83', 'mov rdi, r14', 'mov qword [nmemb], r10', 'call sym.imp.fclose', 'mov rdi, qword [s1]', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'mov r10, qword [nmemb]', 'test eax, eax', 'jne 0x22ce0', 'mov rax, qword [var_30h]', 'mov ebx, dword [0x0002f080]', 'mov eax, dword [rax + 0x40]', 'test eax, eax', 'jne 0x22ca8', 'mov qword [nmemb], r10', 'cmp ebx, 1', 'jg 0x22ac0', 'mov rax, qword [var_128h]', 'xor rax, qword fs:[0x28]', 'jne 0x22f39', 'mov eax, dword [var_3ch]', 'add rsp, 0x138', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add dword [var_14h], eax', 'add rsp, 0x20', 'cmp rbx, qword [var_38h]', 'je 0x25520', 'lea rsi, str.stdout', 'mov rdi, r13', 'mov r12, qword [rbx]', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x25450', 'sub rsp, 8', 'mov eax, dword [var_48h]', 'push rax', 'lea rax, str.stdout', 'push rax', 'jmp 0x254b4', 'push r12', 'mov r9, qword [var_20h]', 'mov rdx, r15', 'mov rsi, r14', 'mov r8, qword [var_18h]', 'mov rcx, qword [var_28h]', 'add rbx, 8', 'mov rdi, qword [var_30h]', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'push r13', 'lea rsi, str.stdin', 'push r12', 'mov r12, rdi', 'sub rsp, 8', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x21210', 'cmp dword [0x0002f080], 3', 'jg 0x211f0', 'mov r13, qword [obj.stdin]', 'add rsp, 8', 'mov rax, r13', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rax, 0xfffffffffffffff5', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'mov r10, qword [var_10h]', 'test eax, eax', 'jne 0x22f6c', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'mov qword [stream], r10', 'call sym.imp.fwrite', 'mov qword [var_10h], rax', 'cmp rbp, rax', 'jne 0x22f3e', 'mov r10, qword [stream]', 'mov rbx, r10', 'test r10, r10', 'je 0x22a5a', 'mov qword [stream], r14', 'mov r8, r10', 'mov r14, qword [var_10h]', 'jmp 0x2280a', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor r9d, r9d', 'mov rcx, r13', 'mov rsi, r12', 'call fcn.000119a0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov qword [var_10h], rsi', 'mov qword [s2], rcx', 'mov qword [rsp], r8', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'cmp dword [rdi + 0x20], 2', 'mov eax, dword [rdi + 4]', 'jg 0x11c20', 'mov r11d, dword [rbx + 0x3c]', 'cmp eax, 1', 'lea r13, [0x00010f40]', 'lea rax, [0x00010e00]', 'cmovne r13, rax', 'cmp r11d, 1', 'jne 0x11c43', 'mov rax, 0xffffffffffffffff', 'jmp 0x11bf5', 'mov rdi, qword [var_48h]', 'xor rdi, qword fs:[0x28]', 'jne 0x11d29', 'add rsp, 0x58', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'test eax, eax', 'jne 0x22e15', 'mov edx, dword [0x0002f080]', 'add r14, rbp', 'cmp edx, 1', 'mov dword [var_10h], edx', 'jle 0x227c8', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x22868', 'call sym.imp.clock']"
192,unlz4,479,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r10, qword [nmemb]', 'cmp rax, 0x28b0a', 'jg 0x22bd7', 'cmp ebx, 3', 'jle 0x22945', 'mov rcx, r15', 'mov rdx, r13', 'mov esi, 1', 'mov rdi, r12', 'mov qword [nmemb], r10', 'call sym.imp.fwrite', 'mov r10, qword [nmemb]', 'cmp r13, rax', 'mov rbp, rax', 'jne 0x22f83', 'mov rdi, r14', 'mov qword [nmemb], r10', 'call sym.imp.fclose', 'mov rdi, qword [s1]', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'mov r10, qword [nmemb]', 'test eax, eax', 'jne 0x22ce0', 'mov rax, qword [var_30h]', 'mov ebx, dword [0x0002f080]', 'mov eax, dword [rax + 0x40]', 'test eax, eax', 'jne 0x22ca8', 'mov qword [nmemb], r10', 'cmp ebx, 1', 'jg 0x22ac0', 'mov rax, qword [var_128h]', 'xor rax, qword fs:[0x28]', 'jne 0x22f39', 'mov eax, dword [var_3ch]', 'add rsp, 0x138', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add dword [var_14h], eax', 'add rsp, 0x20', 'cmp rbx, qword [var_38h]', 'je 0x25520', 'lea rsi, str.stdout', 'mov rdi, r13', 'mov r12, qword [rbx]', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x25450', 'sub rsp, 8', 'mov eax, dword [var_48h]', 'push rax', 'lea rax, str.stdout', 'push rax', 'jmp 0x254b4', 'push r12', 'mov r9, qword [var_20h]', 'mov rdx, r15', 'mov rsi, r14', 'mov r8, qword [var_18h]', 'mov rcx, qword [var_28h]', 'add rbx, 8', 'mov rdi, qword [var_30h]', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'push r13', 'lea rsi, str.stdin', 'push r12', 'mov r12, rdi', 'sub rsp, 8', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x21210', 'cmp dword [0x0002f080], 3', 'jg 0x211f0', 'mov r13, qword [obj.stdin]', 'add rsp, 8', 'mov rax, r13', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rcx, r8', 'jmp fcn.00011330', 'push r14', 'pxor xmm0, xmm0', 'mov r14, rdx', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rcx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x40', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rcx, rcx', 'mov rax, rsp', 'movaps xmmword [rsp], xmm0', 'cmove rbp, rax', 'movaps xmmword [var_10h], xmm0', 'xor r13d, r13d', 'mov qword [var_30h], 0', 'movaps xmmword [var_20h], xmm0', 'movdqu xmm1, xmmword [rbp]', 'movups xmmword [rdi], xmm1', 'movdqu xmm2, xmmword [rbp + 0x10]', 'movups xmmword [rdi + 0x10], xmm2', 'movdqu xmm3, xmmword [rbp + 0x20]', 'movups xmmword [rdi + 0x20], xmm3', 'mov rax, qword [rbp + 0x30]', 'mov qword [rdi + 0x30], rax', 'mov eax, dword [rdi + 0x20]', 'cmp eax, 2', 'setg r13b', 'add r13d, 1', 'cmp word [rdi + 0xb0], r13w', 'jb 0x11588', 'cmp r13w, word [rdi + 0xb2]', 'je 0x113ea', 'mov rdi, qword [rdi + 0xa8]', 'cmp eax, 2', 'jg 0x11608', 'mov esi, 0x4020', 'call fcn.0000a170', 'endbr64', 'cmp rsi, 0x401f', 'jbe 0xa190', 'test rdi, rdi', 'je 0xa190', 'test dil, 7', 'jne 0xa190', 'jmp fcn.00005850', 'sub rsp, 8', 'mov edx, 0x4020', 'xor esi, esi', 'call sym.imp.memset', 'add rsp, 8', 'ret', 'mov rax, r12', 'pop r12', 'ret', 'mov qword [rbx + 0xa8], rax', 'jmp 0x115aa', 'test rax, rax', 'je 0x11648', 'mov rax, 0xfffffffffffffff7', 'jmp 0x1153a', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11654', 'add rsp, 0x40', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'cmp rax, 0xffffffffffffffec', 'ja 0x12070', 'mov rbx, qword [var_58h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1213e', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov r13, rax', 'call fcn.00011660', 'pop r10', 'pop r11', 'test eax, eax', 'mov r10, qword [nmemb]', 'jne 0x22f55', 'mov ebx, dword [0x0002f080]', 'cmp ebx, 1', 'jg 0x22bb0', 'mov qword [nmemb], r10', 'call sym.imp.clock']"
193,unlz4,29,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r10, qword [nmemb]', 'cmp rax, 0x28b0a', 'jg 0x22bd7', 'mov qword [nmemb], r10', 'call sym.imp.clock']"
194,unlz4,523,"['call sym.imp.clock', 'test r13, r13', 'mov r10, qword [nmemb]', 'mov qword [0x0002f078], rax', 'js 0x22dd6', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, r13', 'xor eax, eax', 'test r10, r10', 'sete al', 'add rax, r10', 'js 0x22df7', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, rax', 'divsd xmm0, xmm1', 'mov rcx, r10', 'mov rdi, qword [obj.stderr]', 'lea rdx, str._rRead_:__u_MB______.2f_____', 'shr rcx, 0x14', 'mov esi, 1', 'mov eax, 1', 'mov qword [nmemb], r10', 'mulsd xmm0, qword [0x00029ba8]', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'mov r10, qword [nmemb]', 'jle 0x22945', 'mov rcx, r15', 'mov rdx, r13', 'mov esi, 1', 'mov rdi, r12', 'mov qword [nmemb], r10', 'call sym.imp.fwrite', 'mov r10, qword [nmemb]', 'cmp r13, rax', 'mov rbp, rax', 'jne 0x22f83', 'mov rdi, r14', 'mov qword [nmemb], r10', 'call sym.imp.fclose', 'mov rdi, qword [s1]', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'mov r10, qword [nmemb]', 'test eax, eax', 'jne 0x22ce0', 'mov rax, qword [var_30h]', 'mov ebx, dword [0x0002f080]', 'mov eax, dword [rax + 0x40]', 'test eax, eax', 'jne 0x22ca8', 'mov qword [nmemb], r10', 'cmp ebx, 1', 'jg 0x22ac0', 'mov rax, qword [var_128h]', 'xor rax, qword fs:[0x28]', 'jne 0x22f39', 'mov eax, dword [var_3ch]', 'add rsp, 0x138', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add dword [var_14h], eax', 'add rsp, 0x20', 'cmp rbx, qword [var_38h]', 'je 0x25520', 'lea rsi, str.stdout', 'mov rdi, r13', 'mov r12, qword [rbx]', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x25450', 'sub rsp, 8', 'mov eax, dword [var_48h]', 'push rax', 'lea rax, str.stdout', 'push rax', 'jmp 0x254b4', 'push r12', 'mov r9, qword [var_20h]', 'mov rdx, r15', 'mov rsi, r14', 'mov r8, qword [var_18h]', 'mov rcx, qword [var_28h]', 'add rbx, 8', 'mov rdi, qword [var_30h]', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'push r13', 'lea rsi, str.stdin', 'push r12', 'mov r12, rdi', 'sub rsp, 8', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x21210', 'cmp dword [0x0002f080], 3', 'jg 0x211f0', 'mov r13, qword [obj.stdin]', 'add rsp, 8', 'mov rax, r13', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rax, 0xfffffffffffffff5', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'mov r10, qword [var_10h]', 'test eax, eax', 'jne 0x22f6c', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'mov qword [stream], r10', 'call sym.imp.fwrite', 'mov qword [var_10h], rax', 'cmp rbp, rax', 'jne 0x22f3e', 'mov r10, qword [stream]', 'mov rbx, r10', 'test r10, r10', 'je 0x22a5a', 'mov qword [stream], r14', 'mov r8, r10', 'mov r14, qword [var_10h]', 'jmp 0x2280a', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor r9d, r9d', 'mov rcx, r13', 'mov rsi, r12', 'call fcn.000119a0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov qword [var_10h], rsi', 'mov qword [s2], rcx', 'mov qword [rsp], r8', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'cmp dword [rdi + 0x20], 2', 'mov eax, dword [rdi + 4]', 'jg 0x11c20', 'mov r11d, dword [rbx + 0x3c]', 'cmp eax, 1', 'lea r13, [0x00010f40]', 'lea rax, [0x00010e00]', 'cmovne r13, rax', 'cmp r11d, 1', 'jne 0x11c43', 'mov rax, 0xffffffffffffffff', 'jmp 0x11bf5', 'mov rdi, qword [var_48h]', 'xor rdi, qword fs:[0x28]', 'jne 0x11d29', 'add rsp, 0x58', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'test eax, eax', 'jne 0x22e15', 'mov edx, dword [0x0002f080]', 'add r14, rbp', 'cmp edx, 1', 'mov dword [var_10h], edx', 'jle 0x227c8', 'call sym.imp.clock']"
195,unlz4,549,"['call sym.imp.clock', 'test r13, r13', 'mov r10, qword [nmemb]', 'mov qword [0x0002f078], rax', 'js 0x22dd6', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, r13', 'xor eax, eax', 'test r10, r10', 'sete al', 'add rax, r10', 'js 0x22df7', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, rax', 'divsd xmm0, xmm1', 'mov rcx, r10', 'mov rdi, qword [obj.stderr]', 'lea rdx, str._rRead_:__u_MB______.2f_____', 'shr rcx, 0x14', 'mov esi, 1', 'mov eax, 1', 'mov qword [nmemb], r10', 'mulsd xmm0, qword [0x00029ba8]', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'mov r10, qword [nmemb]', 'jle 0x22945', 'mov rcx, r15', 'mov rdx, r13', 'mov esi, 1', 'mov rdi, r12', 'mov qword [nmemb], r10', 'call sym.imp.fwrite', 'mov r10, qword [nmemb]', 'cmp r13, rax', 'mov rbp, rax', 'jne 0x22f83', 'mov rdi, r14', 'mov qword [nmemb], r10', 'call sym.imp.fclose', 'mov rdi, qword [s1]', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'mov r10, qword [nmemb]', 'test eax, eax', 'jne 0x22ce0', 'mov rax, qword [var_30h]', 'mov ebx, dword [0x0002f080]', 'mov eax, dword [rax + 0x40]', 'test eax, eax', 'jne 0x22ca8', 'mov qword [nmemb], r10', 'cmp ebx, 1', 'jg 0x22ac0', 'mov rax, qword [var_128h]', 'xor rax, qword fs:[0x28]', 'jne 0x22f39', 'mov eax, dword [var_3ch]', 'add rsp, 0x138', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add dword [var_14h], eax', 'add rsp, 0x20', 'cmp rbx, qword [var_38h]', 'je 0x25520', 'lea rsi, str.stdout', 'mov rdi, r13', 'mov r12, qword [rbx]', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x25450', 'sub rsp, 8', 'mov eax, dword [var_48h]', 'push rax', 'lea rax, str.stdout', 'push rax', 'jmp 0x254b4', 'push r12', 'mov r9, qword [var_20h]', 'mov rdx, r15', 'mov rsi, r14', 'mov r8, qword [var_18h]', 'mov rcx, qword [var_28h]', 'add rbx, 8', 'mov rdi, qword [var_30h]', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'push r13', 'lea rsi, str.stdin', 'push r12', 'mov r12, rdi', 'sub rsp, 8', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x21210', 'cmp dword [0x0002f080], 3', 'jg 0x211f0', 'mov r13, qword [obj.stdin]', 'add rsp, 8', 'mov rax, r13', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rax, 0xfffffffffffffff5', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'mov r10, qword [var_10h]', 'test eax, eax', 'jne 0x22f6c', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'mov qword [stream], r10', 'call sym.imp.fwrite', 'mov qword [var_10h], rax', 'cmp rbp, rax', 'jne 0x22f3e', 'mov r10, qword [stream]', 'mov rbx, r10', 'test r10, r10', 'je 0x22a5a', 'mov qword [stream], r14', 'mov r8, r10', 'mov r14, qword [var_10h]', 'jmp 0x2280a', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor r9d, r9d', 'mov rcx, r13', 'mov rsi, r12', 'call fcn.000119a0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov qword [var_10h], rsi', 'mov qword [s2], rcx', 'mov qword [rsp], r8', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'cmp dword [rdi + 0x20], 2', 'mov eax, dword [rdi + 4]', 'jg 0x11c20', 'mov r11d, dword [rbx + 0x3c]', 'cmp eax, 1', 'lea r13, [0x00010f40]', 'lea rax, [0x00010e00]', 'cmovne r13, rax', 'cmp r11d, 1', 'jne 0x11c43', 'mov rax, 0xffffffffffffffff', 'jmp 0x11bf5', 'mov rdi, qword [var_48h]', 'xor rdi, qword fs:[0x28]', 'jne 0x11d29', 'add rsp, 0x58', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'test eax, eax', 'jne 0x22e15', 'mov edx, dword [0x0002f080]', 'add r14, rbp', 'cmp edx, 1', 'mov dword [var_10h], edx', 'jle 0x227c8', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x22868', 'call sym.imp.clock']"
196,unlz4,527,"['call sym.imp.clock', 'test r13, r13', 'mov r10, qword [nmemb]', 'mov qword [0x0002f078], rax', 'js 0x22dd6', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, r13', 'xor eax, eax', 'test r10, r10', 'sete al', 'add rax, r10', 'js 0x22df7', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, rax', 'divsd xmm0, xmm1', 'mov rcx, r10', 'mov rdi, qword [obj.stderr]', 'lea rdx, str._rRead_:__u_MB______.2f_____', 'shr rcx, 0x14', 'mov esi, 1', 'mov eax, 1', 'mov qword [nmemb], r10', 'mulsd xmm0, qword [0x00029ba8]', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'mov r10, qword [nmemb]', 'jle 0x22945', 'mov rcx, r15', 'mov rdx, r13', 'mov esi, 1', 'mov rdi, r12', 'mov qword [nmemb], r10', 'call sym.imp.fwrite', 'mov r10, qword [nmemb]', 'cmp r13, rax', 'mov rbp, rax', 'jne 0x22f83', 'mov rdi, r14', 'mov qword [nmemb], r10', 'call sym.imp.fclose', 'mov rdi, qword [s1]', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'mov r10, qword [nmemb]', 'test eax, eax', 'jne 0x22ce0', 'mov rax, qword [var_30h]', 'mov ebx, dword [0x0002f080]', 'mov eax, dword [rax + 0x40]', 'test eax, eax', 'jne 0x22ca8', 'mov qword [nmemb], r10', 'cmp ebx, 1', 'jg 0x22ac0', 'mov rax, qword [var_128h]', 'xor rax, qword fs:[0x28]', 'jne 0x22f39', 'mov eax, dword [var_3ch]', 'add rsp, 0x138', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add dword [var_14h], eax', 'add rsp, 0x20', 'cmp rbx, qword [var_38h]', 'je 0x25520', 'lea rsi, str.stdout', 'mov rdi, r13', 'mov r12, qword [rbx]', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x25450', 'sub rsp, 8', 'mov eax, dword [var_48h]', 'push rax', 'lea rax, str.stdout', 'push rax', 'jmp 0x254b4', 'push r12', 'mov r9, qword [var_20h]', 'mov rdx, r15', 'mov rsi, r14', 'mov r8, qword [var_18h]', 'mov rcx, qword [var_28h]', 'add rbx, 8', 'mov rdi, qword [var_30h]', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'push r13', 'lea rsi, str.stdin', 'push r12', 'mov r12, rdi', 'sub rsp, 8', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x21210', 'cmp dword [0x0002f080], 3', 'jg 0x211f0', 'mov r13, qword [obj.stdin]', 'add rsp, 8', 'mov rax, r13', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rcx, r8', 'jmp fcn.00011330', 'push r14', 'pxor xmm0, xmm0', 'mov r14, rdx', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rcx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x40', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rcx, rcx', 'mov rax, rsp', 'movaps xmmword [rsp], xmm0', 'cmove rbp, rax', 'movaps xmmword [var_10h], xmm0', 'xor r13d, r13d', 'mov qword [var_30h], 0', 'movaps xmmword [var_20h], xmm0', 'movdqu xmm1, xmmword [rbp]', 'movups xmmword [rdi], xmm1', 'movdqu xmm2, xmmword [rbp + 0x10]', 'movups xmmword [rdi + 0x10], xmm2', 'movdqu xmm3, xmmword [rbp + 0x20]', 'movups xmmword [rdi + 0x20], xmm3', 'mov rax, qword [rbp + 0x30]', 'mov qword [rdi + 0x30], rax', 'mov eax, dword [rdi + 0x20]', 'cmp eax, 2', 'setg r13b', 'add r13d, 1', 'cmp word [rdi + 0xb0], r13w', 'jb 0x11588', 'cmp r13w, word [rdi + 0xb2]', 'je 0x113ea', 'mov rdi, qword [rdi + 0xa8]', 'cmp eax, 2', 'jg 0x11608', 'mov esi, 0x4020', 'call fcn.0000a170', 'endbr64', 'cmp rsi, 0x401f', 'jbe 0xa190', 'test rdi, rdi', 'je 0xa190', 'test dil, 7', 'jne 0xa190', 'jmp fcn.00005850', 'sub rsp, 8', 'mov edx, 0x4020', 'xor esi, esi', 'call sym.imp.memset', 'add rsp, 8', 'ret', 'mov rax, r12', 'pop r12', 'ret', 'mov qword [rbx + 0xa8], rax', 'jmp 0x115aa', 'test rax, rax', 'je 0x11648', 'mov rax, 0xfffffffffffffff7', 'jmp 0x1153a', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11654', 'add rsp, 0x40', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'cmp rax, 0xffffffffffffffec', 'ja 0x12070', 'mov rbx, qword [var_58h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1213e', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov r13, rax', 'call fcn.00011660', 'pop r10', 'pop r11', 'test eax, eax', 'mov r10, qword [nmemb]', 'jne 0x22f55', 'mov ebx, dword [0x0002f080]', 'cmp ebx, 1', 'jg 0x22bb0', 'mov qword [nmemb], r10', 'call sym.imp.clock']"
197,unlz4,556,"['call sym.imp.clock', 'test r13, r13', 'mov r10, qword [nmemb]', 'mov qword [0x0002f078], rax', 'js 0x22dd6', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, r13', 'xor eax, eax', 'test r10, r10', 'sete al', 'add rax, r10', 'js 0x22df7', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, rax', 'divsd xmm0, xmm1', 'mov rcx, r10', 'mov rdi, qword [obj.stderr]', 'lea rdx, str._rRead_:__u_MB______.2f_____', 'shr rcx, 0x14', 'mov esi, 1', 'mov eax, 1', 'mov qword [nmemb], r10', 'mulsd xmm0, qword [0x00029ba8]', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'mov r10, qword [nmemb]', 'jle 0x22945', 'mov rcx, r15', 'mov rdx, r13', 'mov esi, 1', 'mov rdi, r12', 'mov qword [nmemb], r10', 'call sym.imp.fwrite', 'mov r10, qword [nmemb]', 'cmp r13, rax', 'mov rbp, rax', 'jne 0x22f83', 'mov rdi, r14', 'mov qword [nmemb], r10', 'call sym.imp.fclose', 'mov rdi, qword [s1]', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'mov r10, qword [nmemb]', 'test eax, eax', 'jne 0x22ce0', 'mov rax, qword [var_30h]', 'mov ebx, dword [0x0002f080]', 'mov eax, dword [rax + 0x40]', 'test eax, eax', 'jne 0x22ca8', 'mov qword [nmemb], r10', 'cmp ebx, 1', 'jg 0x22ac0', 'mov rax, qword [var_128h]', 'xor rax, qword fs:[0x28]', 'jne 0x22f39', 'mov eax, dword [var_3ch]', 'add rsp, 0x138', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add dword [var_14h], eax', 'add rsp, 0x20', 'cmp rbx, qword [var_38h]', 'je 0x25520', 'lea rsi, str.stdout', 'mov rdi, r13', 'mov r12, qword [rbx]', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x25450', 'sub rsp, 8', 'mov eax, dword [var_48h]', 'push rax', 'lea rax, str.stdout', 'push rax', 'jmp 0x254b4', 'push r12', 'mov r9, qword [var_20h]', 'mov rdx, r15', 'mov rsi, r14', 'mov r8, qword [var_18h]', 'mov rcx, qword [var_28h]', 'add rbx, 8', 'mov rdi, qword [var_30h]', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'push r13', 'lea rsi, str.stdin', 'push r12', 'mov r12, rdi', 'sub rsp, 8', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x21210', 'cmp dword [0x0002f080], 3', 'jg 0x211f0', 'mov r13, qword [obj.stdin]', 'add rsp, 8', 'mov rax, r13', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rcx, r8', 'jmp fcn.00011330', 'push r14', 'pxor xmm0, xmm0', 'mov r14, rdx', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rcx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x40', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rcx, rcx', 'mov rax, rsp', 'movaps xmmword [rsp], xmm0', 'cmove rbp, rax', 'movaps xmmword [var_10h], xmm0', 'xor r13d, r13d', 'mov qword [var_30h], 0', 'movaps xmmword [var_20h], xmm0', 'movdqu xmm1, xmmword [rbp]', 'movups xmmword [rdi], xmm1', 'movdqu xmm2, xmmword [rbp + 0x10]', 'movups xmmword [rdi + 0x10], xmm2', 'movdqu xmm3, xmmword [rbp + 0x20]', 'movups xmmword [rdi + 0x20], xmm3', 'mov rax, qword [rbp + 0x30]', 'mov qword [rdi + 0x30], rax', 'mov eax, dword [rdi + 0x20]', 'cmp eax, 2', 'setg r13b', 'add r13d, 1', 'cmp word [rdi + 0xb0], r13w', 'jb 0x11588', 'cmp r13w, word [rdi + 0xb2]', 'je 0x113ea', 'mov rdi, qword [rdi + 0xa8]', 'cmp eax, 2', 'jg 0x11608', 'mov esi, 0x4020', 'call fcn.0000a170', 'endbr64', 'cmp rsi, 0x401f', 'jbe 0xa190', 'test rdi, rdi', 'je 0xa190', 'test dil, 7', 'jne 0xa190', 'jmp fcn.00005850', 'sub rsp, 8', 'mov edx, 0x4020', 'xor esi, esi', 'call sym.imp.memset', 'add rsp, 8', 'ret', 'mov rax, r12', 'pop r12', 'ret', 'mov qword [rbx + 0xa8], rax', 'jmp 0x115aa', 'test rax, rax', 'je 0x11648', 'mov rax, 0xfffffffffffffff7', 'jmp 0x1153a', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11654', 'add rsp, 0x40', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'cmp rax, 0xffffffffffffffec', 'ja 0x12070', 'mov rbx, qword [var_58h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1213e', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov r13, rax', 'call fcn.00011660', 'pop r10', 'pop r11', 'test eax, eax', 'mov r10, qword [nmemb]', 'jne 0x22f55', 'mov ebx, dword [0x0002f080]', 'cmp ebx, 1', 'jg 0x22bb0', 'mov qword [nmemb], r10', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r10, qword [nmemb]', 'cmp rax, 0x28b0a', 'jg 0x22bd7', 'mov qword [nmemb], r10', 'call sym.imp.clock']"
198,unlz4,184,"['call sym.imp.clock', 'mov qword [var_30h], rax', 'test r15, r15', 'je 0x24f93', 'lea rsi, [rbx + 0x24]', 'lea rdi, [rbx + 4]', 'mov rdx, r12', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov qword [stream], rax', 'test rax, rax', 'je 0x24fe7', 'mov edi, 0x800000', 'call sym.imp.malloc', 'movsxd rdi, r14d', 'add rdi, 4', 'mov r13, rax', 'call sym.imp.malloc', 'mov rbp, rax', 'test r13, r13', 'je 0x24fb9', 'test rax, rax', 'je 0x24fb9', 'mov dword [rax], 0x184c2102', 'mov rcx, qword [stream]', 'mov edx, 4', 'mov rdi, rax', 'mov esi, 1', 'call sym.imp.fwrite', 'mov r12, rax', 'cmp rax, 4', 'jne 0x24fd0', 'xor ebx, ebx', 'jmp 0x24b64', 'mov rcx, qword [var_10h]', 'mov edx, 0x800000', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'cmp rax, 0x800000', 'ja 0x24eac', 'test rax, rax', 'je 0x24ce0', 'mov rdi, qword [var_10h]', 'call sym.imp.ferror', 'mov r14d, dword [0x0002f080]', 'test eax, eax', 'jne 0x24fa6', 'call sym.imp.clock']"
199,unlz4,189,"['call sym.imp.clock', 'mov qword [var_30h], rax', 'test r15, r15', 'je 0x24f93', 'lea rsi, [rbx + 0x24]', 'lea rdi, [rbx + 4]', 'mov rdx, r12', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov qword [stream], rax', 'test rax, rax', 'je 0x24fe7', 'mov edi, 0x800000', 'call sym.imp.malloc', 'movsxd rdi, r14d', 'add rdi, 4', 'mov r13, rax', 'call sym.imp.malloc', 'mov rbp, rax', 'test r13, r13', 'je 0x24fb9', 'test rax, rax', 'je 0x24fb9', 'mov dword [rax], 0x184c2102', 'mov rcx, qword [stream]', 'mov edx, 4', 'mov rdi, rax', 'mov esi, 1', 'call sym.imp.fwrite', 'mov r12, rax', 'cmp rax, 4', 'jne 0x24fd0', 'xor ebx, ebx', 'jmp 0x24b64', 'mov rcx, qword [var_10h]', 'mov edx, 0x800000', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'cmp rax, 0x800000', 'ja 0x24eac', 'test rax, rax', 'je 0x24ce0', 'mov edx, eax', 'mov r8d, dword [var_28h]', 'add rbx, rax', 'lea rsi, [rbp + 4]', 'mov rax, qword [var_20h]', 'mov ecx, r14d', 'mov rdi, r13', 'call rax', 'mov edx, dword [0x0002f080]', 'lea r9d, [rax + 4]', 'mov r8d, eax', 'movsxd r15, r9d', 'mov dword [var_8h], edx', 'add r12, r15', 'cmp edx, 1', 'jle 0x24b30', 'mov dword [var_2ch], eax', 'call sym.imp.clock']"
200,unlz4,218,"['call sym.imp.clock', 'mov qword [var_30h], rax', 'test r15, r15', 'je 0x24f93', 'lea rsi, [rbx + 0x24]', 'lea rdi, [rbx + 4]', 'mov rdx, r12', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov qword [stream], rax', 'test rax, rax', 'je 0x24fe7', 'mov edi, 0x800000', 'call sym.imp.malloc', 'movsxd rdi, r14d', 'add rdi, 4', 'mov r13, rax', 'call sym.imp.malloc', 'mov rbp, rax', 'test r13, r13', 'je 0x24fb9', 'test rax, rax', 'je 0x24fb9', 'mov dword [rax], 0x184c2102', 'mov rcx, qword [stream]', 'mov edx, 4', 'mov rdi, rax', 'mov esi, 1', 'call sym.imp.fwrite', 'mov r12, rax', 'cmp rax, 4', 'jne 0x24fd0', 'xor ebx, ebx', 'jmp 0x24b64', 'mov rcx, qword [var_10h]', 'mov edx, 0x800000', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'cmp rax, 0x800000', 'ja 0x24eac', 'test rax, rax', 'je 0x24ce0', 'mov edx, eax', 'mov r8d, dword [var_28h]', 'add rbx, rax', 'lea rsi, [rbp + 4]', 'mov rax, qword [var_20h]', 'mov ecx, r14d', 'mov rdi, r13', 'call rax', 'mov edx, dword [0x0002f080]', 'lea r9d, [rax + 4]', 'mov r8d, eax', 'movsxd r15, r9d', 'mov dword [var_8h], edx', 'add r12, r15', 'cmp edx, 1', 'jle 0x24b30', 'mov dword [var_2ch], eax', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r8d, dword [var_2ch]', 'cmp rax, 0x28b0a', 'jg 0x24bf5', 'mov dword [var_8h], r8d', 'call sym.imp.clock']"
201,unlz4,106,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r8d, dword [var_2ch]', 'cmp rax, 0x28b0a', 'jg 0x24bf5', 'mov edx, dword [var_8h]', 'cmp edx, 3', 'jle 0x24b30', 'test r8d, r8d', 'jle 0x24efe', 'cmp r14d, r8d', 'jle 0x24edf', 'mov rcx, qword [stream]', 'mov rdx, r15', 'mov esi, 1', 'mov rdi, rbp', 'mov dword [rbp], r8d', 'call sym.imp.fwrite', 'cmp r15, rax', 'jne 0x24ecb', 'mov rcx, qword [var_10h]', 'mov edx, 0x800000', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'cmp rax, 0x800000', 'ja 0x24eac', 'test rax, rax', 'je 0x24ce0', 'mov rdi, qword [var_10h]', 'call sym.imp.ferror', 'mov r14d, dword [0x0002f080]', 'test eax, eax', 'jne 0x24fa6', 'call sym.imp.clock']"
202,unlz4,111,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r8d, dword [var_2ch]', 'cmp rax, 0x28b0a', 'jg 0x24bf5', 'mov edx, dword [var_8h]', 'cmp edx, 3', 'jle 0x24b30', 'test r8d, r8d', 'jle 0x24efe', 'cmp r14d, r8d', 'jle 0x24edf', 'mov rcx, qword [stream]', 'mov rdx, r15', 'mov esi, 1', 'mov rdi, rbp', 'mov dword [rbp], r8d', 'call sym.imp.fwrite', 'cmp r15, rax', 'jne 0x24ecb', 'mov rcx, qword [var_10h]', 'mov edx, 0x800000', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'cmp rax, 0x800000', 'ja 0x24eac', 'test rax, rax', 'je 0x24ce0', 'mov edx, eax', 'mov r8d, dword [var_28h]', 'add rbx, rax', 'lea rsi, [rbp + 4]', 'mov rax, qword [var_20h]', 'mov ecx, r14d', 'mov rdi, r13', 'call rax', 'mov edx, dword [0x0002f080]', 'lea r9d, [rax + 4]', 'mov r8d, eax', 'movsxd r15, r9d', 'mov dword [var_8h], edx', 'add r12, r15', 'cmp edx, 1', 'jle 0x24b30', 'mov dword [var_2ch], eax', 'call sym.imp.clock']"
203,unlz4,29,"['call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r8d, dword [var_2ch]', 'cmp rax, 0x28b0a', 'jg 0x24bf5', 'mov dword [var_8h], r8d', 'call sym.imp.clock']"
204,unlz4,150,"['call sym.imp.clock', 'test r12, r12', 'mov r8d, dword [var_8h]', 'mov qword [0x0002f078], rax', 'js 0x24cb8', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, r12', 'test rbx, rbx', 'js 0x24c90', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, rbx', 'divsd xmm0, xmm1', 'mov rcx, rbx', 'mov rdi, qword [obj.stderr]', 'lea rdx, str._rRead_:__i_MB_____.2f_____', 'shr rcx, 0x14', 'mov esi, 1', 'mov eax, 1', 'mov dword [var_8h], r8d', 'mulsd xmm0, qword [0x00029ba8]', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'mov r8d, dword [var_8h]', 'jle 0x24b30', 'test r8d, r8d', 'jle 0x24efe', 'cmp r14d, r8d', 'jle 0x24edf', 'mov rcx, qword [stream]', 'mov rdx, r15', 'mov esi, 1', 'mov rdi, rbp', 'mov dword [rbp], r8d', 'call sym.imp.fwrite', 'cmp r15, rax', 'jne 0x24ecb', 'mov rcx, qword [var_10h]', 'mov edx, 0x800000', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'cmp rax, 0x800000', 'ja 0x24eac', 'test rax, rax', 'je 0x24ce0', 'mov rdi, qword [var_10h]', 'call sym.imp.ferror', 'mov r14d, dword [0x0002f080]', 'test eax, eax', 'jne 0x24fa6', 'call sym.imp.clock']"
205,unlz4,155,"['call sym.imp.clock', 'test r12, r12', 'mov r8d, dword [var_8h]', 'mov qword [0x0002f078], rax', 'js 0x24cb8', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, r12', 'test rbx, rbx', 'js 0x24c90', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, rbx', 'divsd xmm0, xmm1', 'mov rcx, rbx', 'mov rdi, qword [obj.stderr]', 'lea rdx, str._rRead_:__i_MB_____.2f_____', 'shr rcx, 0x14', 'mov esi, 1', 'mov eax, 1', 'mov dword [var_8h], r8d', 'mulsd xmm0, qword [0x00029ba8]', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'mov r8d, dword [var_8h]', 'jle 0x24b30', 'test r8d, r8d', 'jle 0x24efe', 'cmp r14d, r8d', 'jle 0x24edf', 'mov rcx, qword [stream]', 'mov rdx, r15', 'mov esi, 1', 'mov rdi, rbp', 'mov dword [rbp], r8d', 'call sym.imp.fwrite', 'cmp r15, rax', 'jne 0x24ecb', 'mov rcx, qword [var_10h]', 'mov edx, 0x800000', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'cmp rax, 0x800000', 'ja 0x24eac', 'test rax, rax', 'je 0x24ce0', 'mov edx, eax', 'mov r8d, dword [var_28h]', 'add rbx, rax', 'lea rsi, [rbp + 4]', 'mov rax, qword [var_20h]', 'mov ecx, r14d', 'mov rdi, r13', 'call rax', 'mov edx, dword [0x0002f080]', 'lea r9d, [rax + 4]', 'mov r8d, eax', 'movsxd r15, r9d', 'mov dword [var_8h], edx', 'add r12, r15', 'cmp edx, 1', 'jle 0x24b30', 'mov dword [var_2ch], eax', 'call sym.imp.clock']"
206,unlz4,184,"['call sym.imp.clock', 'test r12, r12', 'mov r8d, dword [var_8h]', 'mov qword [0x0002f078], rax', 'js 0x24cb8', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, r12', 'test rbx, rbx', 'js 0x24c90', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, rbx', 'divsd xmm0, xmm1', 'mov rcx, rbx', 'mov rdi, qword [obj.stderr]', 'lea rdx, str._rRead_:__i_MB_____.2f_____', 'shr rcx, 0x14', 'mov esi, 1', 'mov eax, 1', 'mov dword [var_8h], r8d', 'mulsd xmm0, qword [0x00029ba8]', 'call sym.imp.__fprintf_chk', 'cmp dword [0x0002f080], 3', 'mov r8d, dword [var_8h]', 'jle 0x24b30', 'test r8d, r8d', 'jle 0x24efe', 'cmp r14d, r8d', 'jle 0x24edf', 'mov rcx, qword [stream]', 'mov rdx, r15', 'mov esi, 1', 'mov rdi, rbp', 'mov dword [rbp], r8d', 'call sym.imp.fwrite', 'cmp r15, rax', 'jne 0x24ecb', 'mov rcx, qword [var_10h]', 'mov edx, 0x800000', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'cmp rax, 0x800000', 'ja 0x24eac', 'test rax, rax', 'je 0x24ce0', 'mov edx, eax', 'mov r8d, dword [var_28h]', 'add rbx, rax', 'lea rsi, [rbp + 4]', 'mov rax, qword [var_20h]', 'mov ecx, r14d', 'mov rdi, r13', 'call rax', 'mov edx, dword [0x0002f080]', 'lea r9d, [rax + 4]', 'mov r8d, eax', 'movsxd r15, r9d', 'mov dword [var_8h], edx', 'add r12, r15', 'cmp edx, 1', 'jle 0x24b30', 'mov dword [var_2ch], eax', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r8d, dword [var_2ch]', 'cmp rax, 0x28b0a', 'jg 0x24bf5', 'mov dword [var_8h], r8d', 'call sym.imp.clock']"
207,unlz4,513,"['call sym.imp.clock', 'lea rdi, [var_20h]', 'mov rsi, r14', 'mov qword [var_18h], rax', 'call fcn.00021780', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x58', 'mov r13, qword [rsi + 0x10]', 'mov esi, 0x64', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea rdi, [var_30h]', 'call fcn.000118b0', 'endbr64', 'push rbp', 'mov ebp, esi', 'mov esi, 0xb8', 'push rbx', 'mov rbx, rdi', 'mov edi, 1', 'sub rsp, 8', 'call sym.imp.calloc', 'test rax, rax', 'je 0x118e9', 'mov rax, 0xfffffffffffffff7', 'jmp 0x118e2', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x218a7', 'mov rdi, r13', 'call sym.imp.malloc', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_18h], r13', 'mov qword [var_10h], rax', 'call fcn.00011710', 'endbr64', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x11780', 'mov qword [var_30h], 0', 'pxor xmm0, xmm0', 'movaps xmmword [rsp], xmm0', 'movaps xmmword [canary], xmm0', 'movaps xmmword [var_20h], xmm0', 'jmp 0x11752', 'xor edx, edx', 'mov rsi, rsp', 'mov dword [var_24h], 1', 'call fcn.00010ad0', 'test rsi, rsi', 'je 0x10b70', 'xor r10d, r10d', 'test rdi, rdi', 'mov r9d, 2', 'mov r8d, 2', 'sete r10b', 'mov esi, 0xffff', 'mov ecx, 0x10000', 'jmp 0x10b18', 'cmp rdx, rsi', 'cmova rdx, rsi', 'xor r11d, r11d', 'add rdi, rdx', 'xor edx, edx', 'mov rax, rdi', 'div rcx', 'mov edx, eax', 'test r10d, r10d', 'je 0x10b42', 'mov eax, eax', 'imul rdx, r9', 'imul rax, rcx', 'add rdx, r8', 'add rax, r11', 'lea rax, [rax + rdx*4]', 'ret', 'add rax, 0x13', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1179d', 'add rsp, 0x48', 'ret', 'mov rdi, rax', 'mov qword [var_28h], rax', 'call sym.imp.malloc', 'cmp qword [var_10h], 0', 'mov qword [var_20h], rax', 'je 0x21894', 'test rax, rax', 'je 0x21894', 'mov eax, dword [rbx + 0x2c]', 'test eax, eax', 'je 0x21890', 'xor ebx, ebx', 'jmp 0x21846', 'mov qword [var_38h], rbx', 'movdqa xmm0, xmmword [var_10h]', 'movdqa xmm1, xmmword [var_20h]', 'movdqa xmm2, xmmword [var_30h]', 'movups xmmword [r12], xmm0', 'movups xmmword [r12 + 0x10], xmm1', 'movups xmmword [r12 + 0x20], xmm2', 'mov rax, qword [var_48h]', 'xor rax, qword fs:[0x28]', 'jne 0x218be', 'add rsp, 0x58', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [var_30h]', 'mov r15, qword [var_20h]', 'sub rsp, 8', 'mov r8, qword [var_48h]', 'mov r9, qword [var_50h]', 'mov rdi, r14', 'mov ecx, dword [var_8h]', 'mov rdx, rbx', 'mov rsi, r15', 'push rcx', 'push r12', 'push rbp', 'mov rcx, qword [var_58h_2]', 'mov qword [var_30h_2], r9', 'mov qword [var_8h], r8', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rax, 0xfffffffffffffff5', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'mov r10, qword [var_10h]', 'test eax, eax', 'jne 0x22f6c', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'mov qword [stream], r10', 'call sym.imp.fwrite', 'mov qword [var_10h], rax', 'cmp rbp, rax', 'jne 0x22f3e', 'mov r10, qword [stream]', 'mov rbx, r10', 'test r10, r10', 'je 0x22a5a', 'mov qword [stream], r14', 'mov r8, r10', 'mov r14, qword [var_10h]', 'jmp 0x2280a', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor r9d, r9d', 'mov rcx, r13', 'mov rsi, r12', 'call fcn.000119a0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov qword [var_10h], rsi', 'mov qword [s2], rcx', 'mov qword [rsp], r8', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'cmp dword [rdi + 0x20], 2', 'mov eax, dword [rdi + 4]', 'jg 0x11c20', 'mov r11d, dword [rbx + 0x3c]', 'cmp eax, 1', 'lea r13, [0x00010f40]', 'lea rax, [0x00010e00]', 'cmovne r13, rax', 'cmp r11d, 1', 'jne 0x11c43', 'mov rax, 0xffffffffffffffff', 'jmp 0x11bf5', 'mov rdi, qword [var_48h]', 'xor rdi, qword fs:[0x28]', 'jne 0x11d29', 'add rsp, 0x58', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'test eax, eax', 'jne 0x22e15', 'mov edx, dword [0x0002f080]', 'add r14, rbp', 'cmp edx, 1', 'mov dword [var_10h], edx', 'jle 0x227c8', 'call sym.imp.clock']"
208,unlz4,539,"['call sym.imp.clock', 'lea rdi, [var_20h]', 'mov rsi, r14', 'mov qword [var_18h], rax', 'call fcn.00021780', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x58', 'mov r13, qword [rsi + 0x10]', 'mov esi, 0x64', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea rdi, [var_30h]', 'call fcn.000118b0', 'endbr64', 'push rbp', 'mov ebp, esi', 'mov esi, 0xb8', 'push rbx', 'mov rbx, rdi', 'mov edi, 1', 'sub rsp, 8', 'call sym.imp.calloc', 'test rax, rax', 'je 0x118e9', 'mov rax, 0xfffffffffffffff7', 'jmp 0x118e2', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x218a7', 'mov rdi, r13', 'call sym.imp.malloc', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_18h], r13', 'mov qword [var_10h], rax', 'call fcn.00011710', 'endbr64', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x11780', 'mov qword [var_30h], 0', 'pxor xmm0, xmm0', 'movaps xmmword [rsp], xmm0', 'movaps xmmword [canary], xmm0', 'movaps xmmword [var_20h], xmm0', 'jmp 0x11752', 'xor edx, edx', 'mov rsi, rsp', 'mov dword [var_24h], 1', 'call fcn.00010ad0', 'test rsi, rsi', 'je 0x10b70', 'xor r10d, r10d', 'test rdi, rdi', 'mov r9d, 2', 'mov r8d, 2', 'sete r10b', 'mov esi, 0xffff', 'mov ecx, 0x10000', 'jmp 0x10b18', 'cmp rdx, rsi', 'cmova rdx, rsi', 'xor r11d, r11d', 'add rdi, rdx', 'xor edx, edx', 'mov rax, rdi', 'div rcx', 'mov edx, eax', 'test r10d, r10d', 'je 0x10b42', 'mov eax, eax', 'imul rdx, r9', 'imul rax, rcx', 'add rdx, r8', 'add rax, r11', 'lea rax, [rax + rdx*4]', 'ret', 'add rax, 0x13', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1179d', 'add rsp, 0x48', 'ret', 'mov rdi, rax', 'mov qword [var_28h], rax', 'call sym.imp.malloc', 'cmp qword [var_10h], 0', 'mov qword [var_20h], rax', 'je 0x21894', 'test rax, rax', 'je 0x21894', 'mov eax, dword [rbx + 0x2c]', 'test eax, eax', 'je 0x21890', 'xor ebx, ebx', 'jmp 0x21846', 'mov qword [var_38h], rbx', 'movdqa xmm0, xmmword [var_10h]', 'movdqa xmm1, xmmword [var_20h]', 'movdqa xmm2, xmmword [var_30h]', 'movups xmmword [r12], xmm0', 'movups xmmword [r12 + 0x10], xmm1', 'movups xmmword [r12 + 0x20], xmm2', 'mov rax, qword [var_48h]', 'xor rax, qword fs:[0x28]', 'jne 0x218be', 'add rsp, 0x58', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [var_30h]', 'mov r15, qword [var_20h]', 'sub rsp, 8', 'mov r8, qword [var_48h]', 'mov r9, qword [var_50h]', 'mov rdi, r14', 'mov ecx, dword [var_8h]', 'mov rdx, rbx', 'mov rsi, r15', 'push rcx', 'push r12', 'push rbp', 'mov rcx, qword [var_58h_2]', 'mov qword [var_30h_2], r9', 'mov qword [var_8h], r8', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rax, 0xfffffffffffffff5', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'mov r10, qword [var_10h]', 'test eax, eax', 'jne 0x22f6c', 'mov rcx, r15', 'mov rdx, rbp', 'mov esi, 1', 'mov rdi, r12', 'mov qword [stream], r10', 'call sym.imp.fwrite', 'mov qword [var_10h], rax', 'cmp rbp, rax', 'jne 0x22f3e', 'mov r10, qword [stream]', 'mov rbx, r10', 'test r10, r10', 'je 0x22a5a', 'mov qword [stream], r14', 'mov r8, r10', 'mov r14, qword [var_10h]', 'jmp 0x2280a', 'mov rdi, qword [var_20h]', 'mov rdx, qword [var_18h]', 'xor r9d, r9d', 'mov rcx, r13', 'mov rsi, r12', 'call fcn.000119a0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x58', 'mov qword [var_10h], rsi', 'mov qword [s2], rcx', 'mov qword [rsp], r8', 'mov qword [var_8h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'cmp dword [rdi + 0x20], 2', 'mov eax, dword [rdi + 4]', 'jg 0x11c20', 'mov r11d, dword [rbx + 0x3c]', 'cmp eax, 1', 'lea r13, [0x00010f40]', 'lea rax, [0x00010e00]', 'cmovne r13, rax', 'cmp r11d, 1', 'jne 0x11c43', 'mov rax, 0xffffffffffffffff', 'jmp 0x11bf5', 'mov rdi, qword [var_48h]', 'xor rdi, qword fs:[0x28]', 'jne 0x11d29', 'add rsp, 0x58', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'test eax, eax', 'jne 0x22e15', 'mov edx, dword [0x0002f080]', 'add r14, rbp', 'cmp edx, 1', 'mov dword [var_10h], edx', 'jle 0x227c8', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x22868', 'call sym.imp.clock']"
209,unlz4,391,"['call sym.imp.clock', 'lea rdi, [var_20h]', 'mov rsi, r14', 'mov qword [var_18h], rax', 'call fcn.00021780', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x58', 'mov r13, qword [rsi + 0x10]', 'mov esi, 0x64', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea rdi, [var_30h]', 'call fcn.000118b0', 'endbr64', 'push rbp', 'mov ebp, esi', 'mov esi, 0xb8', 'push rbx', 'mov rbx, rdi', 'mov edi, 1', 'sub rsp, 8', 'call sym.imp.calloc', 'test rax, rax', 'je 0x118e9', 'mov rax, 0xfffffffffffffff7', 'jmp 0x118e2', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x218a7', 'mov rdi, r13', 'call sym.imp.malloc', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_18h], r13', 'mov qword [var_10h], rax', 'call fcn.00011710', 'endbr64', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x11780', 'mov qword [var_30h], 0', 'pxor xmm0, xmm0', 'movaps xmmword [rsp], xmm0', 'movaps xmmword [canary], xmm0', 'movaps xmmword [var_20h], xmm0', 'jmp 0x11752', 'xor edx, edx', 'mov rsi, rsp', 'mov dword [var_24h], 1', 'call fcn.00010ad0', 'test rsi, rsi', 'je 0x10b70', 'xor r10d, r10d', 'test rdi, rdi', 'mov r9d, 2', 'mov r8d, 2', 'sete r10b', 'mov esi, 0xffff', 'mov ecx, 0x10000', 'jmp 0x10b18', 'cmp rdx, rsi', 'cmova rdx, rsi', 'xor r11d, r11d', 'add rdi, rdx', 'xor edx, edx', 'mov rax, rdi', 'div rcx', 'mov edx, eax', 'test r10d, r10d', 'je 0x10b42', 'mov eax, eax', 'imul rdx, r9', 'imul rax, rcx', 'add rdx, r8', 'add rax, r11', 'lea rax, [rax + rdx*4]', 'ret', 'add rax, 0x13', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1179d', 'add rsp, 0x48', 'ret', 'mov rdi, rax', 'mov qword [var_28h], rax', 'call sym.imp.malloc', 'cmp qword [var_10h], 0', 'mov qword [var_20h], rax', 'je 0x21894', 'test rax, rax', 'je 0x21894', 'mov eax, dword [rbx + 0x2c]', 'test eax, eax', 'je 0x21890', 'xor ebx, ebx', 'jmp 0x21846', 'mov qword [var_38h], rbx', 'movdqa xmm0, xmmword [var_10h]', 'movdqa xmm1, xmmword [var_20h]', 'movdqa xmm2, xmmword [var_30h]', 'movups xmmword [r12], xmm0', 'movups xmmword [r12 + 0x10], xmm1', 'movups xmmword [r12 + 0x20], xmm2', 'mov rax, qword [var_48h]', 'xor rax, qword fs:[0x28]', 'jne 0x218be', 'add rsp, 0x58', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [var_30h]', 'mov r15, qword [var_20h]', 'sub rsp, 8', 'mov r8, qword [var_48h]', 'mov r9, qword [var_50h]', 'mov rdi, r14', 'mov ecx, dword [var_8h]', 'mov rdx, rbx', 'mov rsi, r15', 'push rcx', 'push r12', 'push rbp', 'mov rcx, qword [var_58h_2]', 'mov qword [var_30h_2], r9', 'mov qword [var_8h], r8', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'test rax, rax', 'je 0x22a40', 'mov dword [var_3ch], 1', 'jmp 0x229bd', 'mov rax, qword [var_128h]', 'xor rax, qword fs:[0x28]', 'jne 0x22f39', 'mov eax, dword [var_3ch]', 'add rsp, 0x138', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r9, qword [var_30h_2]', 'mov rsi, rbx', 'mov rdi, r15', 'mov r8, qword [var_8h]', 'add rsp, 0x20', 'mov r14d, eax', 'mov rcx, r9', 'mov rdx, r8', 'call fcn.00023460', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdx', 'call sym.imp.free', 'mov rdi, r13', 'call sym.imp.free', 'mov rdi, r12', 'call fcn.00011890', 'endbr64', 'test rdi, rdi', 'je 0x118a0', 'ret', 'mov rdi, rbp', 'call fcn.00011900', 'endbr64', 'test rdi, rdi', 'je 0x11930', 'xor eax, eax', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'test eax, eax', 'jne 0x234a0', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'call sym.imp.clock', 'mov rbx, rax', 'call fcn.00021480', 'sub rsp, 0x28', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rsi, rsp', 'call sym.imp.clock_gettime']"
210,unlz4,516,"['call sym.imp.clock', 'lea rdi, [var_20h]', 'mov rsi, r14', 'mov qword [var_18h], rax', 'call fcn.00021780', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x58', 'mov r13, qword [rsi + 0x10]', 'mov esi, 0x64', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea rdi, [var_30h]', 'call fcn.000118b0', 'endbr64', 'push rbp', 'mov ebp, esi', 'mov esi, 0xb8', 'push rbx', 'mov rbx, rdi', 'mov edi, 1', 'sub rsp, 8', 'call sym.imp.calloc', 'test rax, rax', 'je 0x118e9', 'mov rax, 0xfffffffffffffff7', 'jmp 0x118e2', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x218a7', 'mov rdi, r13', 'call sym.imp.malloc', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_18h], r13', 'mov qword [var_10h], rax', 'call fcn.00011710', 'endbr64', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x11780', 'mov qword [var_30h], 0', 'pxor xmm0, xmm0', 'movaps xmmword [rsp], xmm0', 'movaps xmmword [canary], xmm0', 'movaps xmmword [var_20h], xmm0', 'jmp 0x11752', 'xor edx, edx', 'mov rsi, rsp', 'mov dword [var_24h], 1', 'call fcn.00010ad0', 'test rsi, rsi', 'je 0x10b70', 'xor r10d, r10d', 'test rdi, rdi', 'mov r9d, 2', 'mov r8d, 2', 'sete r10b', 'mov esi, 0xffff', 'mov ecx, 0x10000', 'jmp 0x10b18', 'cmp rdx, rsi', 'cmova rdx, rsi', 'xor r11d, r11d', 'add rdi, rdx', 'xor edx, edx', 'mov rax, rdi', 'div rcx', 'mov edx, eax', 'test r10d, r10d', 'je 0x10b42', 'mov eax, eax', 'imul rdx, r9', 'imul rax, rcx', 'add rdx, r8', 'add rax, r11', 'lea rax, [rax + rdx*4]', 'ret', 'add rax, 0x13', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1179d', 'add rsp, 0x48', 'ret', 'mov rdi, rax', 'mov qword [var_28h], rax', 'call sym.imp.malloc', 'cmp qword [var_10h], 0', 'mov qword [var_20h], rax', 'je 0x21894', 'test rax, rax', 'je 0x21894', 'mov eax, dword [rbx + 0x2c]', 'test eax, eax', 'je 0x21890', 'xor ebx, ebx', 'jmp 0x21846', 'mov qword [var_38h], rbx', 'movdqa xmm0, xmmword [var_10h]', 'movdqa xmm1, xmmword [var_20h]', 'movdqa xmm2, xmmword [var_30h]', 'movups xmmword [r12], xmm0', 'movups xmmword [r12 + 0x10], xmm1', 'movups xmmword [r12 + 0x20], xmm2', 'mov rax, qword [var_48h]', 'xor rax, qword fs:[0x28]', 'jne 0x218be', 'add rsp, 0x58', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [var_30h]', 'mov r15, qword [var_20h]', 'sub rsp, 8', 'mov r8, qword [var_48h]', 'mov r9, qword [var_50h]', 'mov rdi, r14', 'mov ecx, dword [var_8h]', 'mov rdx, rbx', 'mov rsi, r15', 'push rcx', 'push r12', 'push rbp', 'mov rcx, qword [var_58h_2]', 'mov qword [var_30h_2], r9', 'mov qword [var_8h], r8', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rcx, r8', 'jmp fcn.00011330', 'push r14', 'pxor xmm0, xmm0', 'mov r14, rdx', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rcx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x40', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rcx, rcx', 'mov rax, rsp', 'movaps xmmword [rsp], xmm0', 'cmove rbp, rax', 'movaps xmmword [var_10h], xmm0', 'xor r13d, r13d', 'mov qword [var_30h], 0', 'movaps xmmword [var_20h], xmm0', 'movdqu xmm1, xmmword [rbp]', 'movups xmmword [rdi], xmm1', 'movdqu xmm2, xmmword [rbp + 0x10]', 'movups xmmword [rdi + 0x10], xmm2', 'movdqu xmm3, xmmword [rbp + 0x20]', 'movups xmmword [rdi + 0x20], xmm3', 'mov rax, qword [rbp + 0x30]', 'mov qword [rdi + 0x30], rax', 'mov eax, dword [rdi + 0x20]', 'cmp eax, 2', 'setg r13b', 'add r13d, 1', 'cmp word [rdi + 0xb0], r13w', 'jb 0x11588', 'mov rdi, qword [rdi + 0xa8]', 'call sym.imp.free', 'cmp dword [rbx + 0x20], 2', 'jle 0x11630', 'call fcn.0000a140', 'mov qword [rbx + 0xa8], rax', 'jmp 0x115aa', 'test rax, rax', 'je 0x11648', 'mov rax, 0xfffffffffffffff7', 'jmp 0x1153a', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11654', 'add rsp, 0x40', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'cmp rax, 0xffffffffffffffec', 'ja 0x12070', 'mov rbx, qword [var_58h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1213e', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov r13, rax', 'call fcn.00011660', 'pop r10', 'pop r11', 'test eax, eax', 'mov r10, qword [nmemb]', 'jne 0x22f55', 'mov ebx, dword [0x0002f080]', 'cmp ebx, 1', 'jg 0x22bb0', 'mov qword [nmemb], r10', 'call sym.imp.clock']"
211,unlz4,545,"['call sym.imp.clock', 'lea rdi, [var_20h]', 'mov rsi, r14', 'mov qword [var_18h], rax', 'call fcn.00021780', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x58', 'mov r13, qword [rsi + 0x10]', 'mov esi, 0x64', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea rdi, [var_30h]', 'call fcn.000118b0', 'endbr64', 'push rbp', 'mov ebp, esi', 'mov esi, 0xb8', 'push rbx', 'mov rbx, rdi', 'mov edi, 1', 'sub rsp, 8', 'call sym.imp.calloc', 'test rax, rax', 'je 0x118e9', 'mov rax, 0xfffffffffffffff7', 'jmp 0x118e2', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x218a7', 'mov rdi, r13', 'call sym.imp.malloc', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_18h], r13', 'mov qword [var_10h], rax', 'call fcn.00011710', 'endbr64', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x11780', 'mov qword [var_30h], 0', 'pxor xmm0, xmm0', 'movaps xmmword [rsp], xmm0', 'movaps xmmword [canary], xmm0', 'movaps xmmword [var_20h], xmm0', 'jmp 0x11752', 'xor edx, edx', 'mov rsi, rsp', 'mov dword [var_24h], 1', 'call fcn.00010ad0', 'test rsi, rsi', 'je 0x10b70', 'xor r10d, r10d', 'test rdi, rdi', 'mov r9d, 2', 'mov r8d, 2', 'sete r10b', 'mov esi, 0xffff', 'mov ecx, 0x10000', 'jmp 0x10b18', 'cmp rdx, rsi', 'cmova rdx, rsi', 'xor r11d, r11d', 'add rdi, rdx', 'xor edx, edx', 'mov rax, rdi', 'div rcx', 'mov edx, eax', 'test r10d, r10d', 'je 0x10b42', 'mov eax, eax', 'imul rdx, r9', 'imul rax, rcx', 'add rdx, r8', 'add rax, r11', 'lea rax, [rax + rdx*4]', 'ret', 'add rax, 0x13', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1179d', 'add rsp, 0x48', 'ret', 'mov rdi, rax', 'mov qword [var_28h], rax', 'call sym.imp.malloc', 'cmp qword [var_10h], 0', 'mov qword [var_20h], rax', 'je 0x21894', 'test rax, rax', 'je 0x21894', 'mov eax, dword [rbx + 0x2c]', 'test eax, eax', 'je 0x21890', 'xor ebx, ebx', 'jmp 0x21846', 'mov qword [var_38h], rbx', 'movdqa xmm0, xmmword [var_10h]', 'movdqa xmm1, xmmword [var_20h]', 'movdqa xmm2, xmmword [var_30h]', 'movups xmmword [r12], xmm0', 'movups xmmword [r12 + 0x10], xmm1', 'movups xmmword [r12 + 0x20], xmm2', 'mov rax, qword [var_48h]', 'xor rax, qword fs:[0x28]', 'jne 0x218be', 'add rsp, 0x58', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [var_30h]', 'mov r15, qword [var_20h]', 'sub rsp, 8', 'mov r8, qword [var_48h]', 'mov r9, qword [var_50h]', 'mov rdi, r14', 'mov ecx, dword [var_8h]', 'mov rdx, rbx', 'mov rsi, r15', 'push rcx', 'push r12', 'push rbp', 'mov rcx, qword [var_58h_2]', 'mov qword [var_30h_2], r9', 'mov qword [var_8h], r8', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'test rax, rax', 'je 0x22a40', 'lea rsi, [r15 + 0x24]', 'lea rdi, [r15 + 4]', 'mov rdx, rbp', 'mov r14, rax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r15, rax', 'test rax, rax', 'je 0x22da0', 'mov rsi, qword [var_30h]', 'mov eax, dword [arg_180h]', 'pxor xmm0, xmm0', 'movups xmmword [var_68h], xmm0', 'mov dword [var_70h], eax', 'mov eax, dword [rsi + 0x20]', 'movups xmmword [var_58h], xmm0', 'mov ebp, dword [rsi + 0x28]', 'mov dword [var_54h], eax', 'mov eax, dword [rsi + 0xc]', 'movups xmmword [var_78h], xmm0', 'mov dword [var_50h], eax', 'mov eax, dword [rsi + 0x18]', 'mov dword [var_74h], 1', 'mov dword [var_6ch], eax', 'mov eax, dword [rsi + 0x1c]', 'mov dword [var_58h], eax', 'mov eax, dword [rsi + 0x30]', 'mov dword [var_78h], eax', 'test ebp, ebp', 'jne 0x22b60', 'mov rdx, qword [nmemb]', 'mov rcx, r14', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.fread', 'mov rdi, r14', 'mov qword [var_10h], rax', 'call sym.imp.ferror', 'mov r10, qword [var_10h]', 'test eax, eax', 'mov dword [var_3ch], eax', 'jne 0x22fc8', 'cmp qword [nmemb], r10', 'ja 0x228f0', 'mov rdx, qword [var_18h]', 'mov rdi, qword [var_20h]', 'mov rcx, rbx', 'mov rsi, r12', 'lea r8, [var_50h]', 'mov qword [var_10h], r10', 'call fcn.00011940', 'endbr64', 'mov r9, rdx', 'mov rdx, rcx', 'cmp r9, 0x12', 'jbe 0x11960', 'mov rcx, r8', 'jmp fcn.00011330', 'push r14', 'pxor xmm0, xmm0', 'mov r14, rdx', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rcx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x40', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rcx, rcx', 'mov rax, rsp', 'movaps xmmword [rsp], xmm0', 'cmove rbp, rax', 'movaps xmmword [var_10h], xmm0', 'xor r13d, r13d', 'mov qword [var_30h], 0', 'movaps xmmword [var_20h], xmm0', 'movdqu xmm1, xmmword [rbp]', 'movups xmmword [rdi], xmm1', 'movdqu xmm2, xmmword [rbp + 0x10]', 'movups xmmword [rdi + 0x10], xmm2', 'movdqu xmm3, xmmword [rbp + 0x20]', 'movups xmmword [rdi + 0x20], xmm3', 'mov rax, qword [rbp + 0x30]', 'mov qword [rdi + 0x30], rax', 'mov eax, dword [rdi + 0x20]', 'cmp eax, 2', 'setg r13b', 'add r13d, 1', 'cmp word [rdi + 0xb0], r13w', 'jb 0x11588', 'mov rdi, qword [rdi + 0xa8]', 'call sym.imp.free', 'cmp dword [rbx + 0x20], 2', 'jle 0x11630', 'call fcn.0000a140', 'mov qword [rbx + 0xa8], rax', 'jmp 0x115aa', 'test rax, rax', 'je 0x11648', 'mov rax, 0xfffffffffffffff7', 'jmp 0x1153a', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11654', 'add rsp, 0x40', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'cmp rax, 0xffffffffffffffec', 'ja 0x12070', 'mov rbx, qword [var_58h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1213e', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rax', 'mov r13, rax', 'call fcn.00011660', 'pop r10', 'pop r11', 'test eax, eax', 'mov r10, qword [nmemb]', 'jne 0x22f55', 'mov ebx, dword [0x0002f080]', 'cmp ebx, 1', 'jg 0x22bb0', 'mov qword [nmemb], r10', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'mov r10, qword [nmemb]', 'cmp rax, 0x28b0a', 'jg 0x22bd7', 'mov qword [nmemb], r10', 'call sym.imp.clock']"
212,unlz4,358,"['call sym.imp.clock', 'lea rdi, [var_20h]', 'mov rsi, r14', 'mov qword [var_18h], rax', 'call fcn.00021780', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x58', 'mov r13, qword [rsi + 0x10]', 'mov esi, 0x64', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea rdi, [var_30h]', 'call fcn.000118b0', 'endbr64', 'push rbp', 'mov ebp, esi', 'mov esi, 0xb8', 'push rbx', 'mov rbx, rdi', 'mov edi, 1', 'sub rsp, 8', 'call sym.imp.calloc', 'test rax, rax', 'je 0x118e9', 'mov rax, 0xfffffffffffffff7', 'jmp 0x118e2', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'endbr64', 'xor eax, eax', 'cmp rdi, 0xffffffffffffffec', 'seta al', 'ret', 'test eax, eax', 'jne 0x218a7', 'mov rdi, r13', 'call sym.imp.malloc', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_18h], r13', 'mov qword [var_10h], rax', 'call fcn.00011710', 'endbr64', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x11780', 'mov qword [var_30h], 0', 'pxor xmm0, xmm0', 'movaps xmmword [rsp], xmm0', 'movaps xmmword [canary], xmm0', 'movaps xmmword [var_20h], xmm0', 'jmp 0x11752', 'xor edx, edx', 'mov rsi, rsp', 'mov dword [var_24h], 1', 'call fcn.00010ad0', 'test rsi, rsi', 'je 0x10b70', 'xor r10d, r10d', 'test rdi, rdi', 'mov r9d, 2', 'mov r8d, 2', 'sete r10b', 'mov esi, 0xffff', 'mov ecx, 0x10000', 'jmp 0x10b18', 'cmp rdx, rsi', 'cmova rdx, rsi', 'xor r11d, r11d', 'add rdi, rdx', 'xor edx, edx', 'mov rax, rdi', 'div rcx', 'mov edx, eax', 'test r10d, r10d', 'je 0x10b42', 'mov eax, eax', 'imul rdx, r9', 'imul rax, rcx', 'add rdx, r8', 'add rax, r11', 'lea rax, [rax + rdx*4]', 'ret', 'add rax, 0x13', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1179d', 'add rsp, 0x48', 'ret', 'mov rdi, rax', 'mov qword [var_28h], rax', 'call sym.imp.malloc', 'cmp qword [var_10h], 0', 'mov qword [var_20h], rax', 'je 0x21894', 'test rax, rax', 'je 0x21894', 'mov eax, dword [rbx + 0x2c]', 'test eax, eax', 'je 0x21890', 'xor ebx, ebx', 'jmp 0x21846', 'mov qword [var_38h], rbx', 'movdqa xmm0, xmmword [var_10h]', 'movdqa xmm1, xmmword [var_20h]', 'movdqa xmm2, xmmword [var_30h]', 'movups xmmword [r12], xmm0', 'movups xmmword [r12 + 0x10], xmm1', 'movups xmmword [r12 + 0x20], xmm2', 'mov rax, qword [var_48h]', 'xor rax, qword fs:[0x28]', 'jne 0x218be', 'add rsp, 0x58', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [var_30h]', 'mov r15, qword [var_20h]', 'sub rsp, 8', 'mov r8, qword [var_48h]', 'mov r9, qword [var_50h]', 'mov rdi, r14', 'mov ecx, dword [var_8h]', 'mov rdx, rbx', 'mov rsi, r15', 'push rcx', 'push r12', 'push rbp', 'mov rcx, qword [var_58h_2]', 'mov qword [var_30h_2], r9', 'mov qword [var_8h], r8', 'call fcn.00022620', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, r9', 'sub rsp, 0x138', 'mov rax, qword [r15 + 0x10]', 'mov qword [var_30h], rdi', 'mov rbp, qword [arg_178h]', 'mov rdi, qword [arg_170h]', 'mov qword [var_18h], rcx', 'mov qword [var_20h], r8', 'mov qword [filename], rdi', 'mov qword [s1], rbp', 'mov rcx, qword fs:[0x28]', 'mov qword [var_128h], rcx', 'xor ecx, ecx', 'mov qword [nmemb], rax', 'call fcn.000211b0', 'test rax, rax', 'je 0x22a40', 'mov dword [var_3ch], 1', 'jmp 0x229bd', 'mov rax, qword [var_128h]', 'xor rax, qword fs:[0x28]', 'jne 0x22f39', 'mov eax, dword [var_3ch]', 'add rsp, 0x138', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r9, qword [var_30h_2]', 'mov rsi, rbx', 'mov rdi, r15', 'mov r8, qword [var_8h]', 'add rsp, 0x20', 'mov r14d, eax', 'mov rcx, r9', 'mov rdx, r8', 'call fcn.00023460', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdx', 'call sym.imp.free', 'mov rdi, r13', 'call sym.imp.free', 'mov rdi, r12', 'call fcn.00011890', 'endbr64', 'test rdi, rdi', 'je 0x118a0', 'ret', 'mov rdi, rbp', 'call fcn.00011900', 'endbr64', 'test rdi, rdi', 'je 0x11930', 'xor eax, eax', 'ret', 'mov rdi, rax', 'mov rbp, rax', 'call fcn.00011660', 'test eax, eax', 'jne 0x234a0', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'call sym.imp.clock']"
213,unlz4,33,"['call sym.imp.clock', 'mov rbx, rax', 'call fcn.00021480', 'sub rsp, 0x28', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rsi, rsp', 'call sym.imp.clock_gettime']"
214,unlz4,354,"['call sym.imp.clock', 'push qword [var_38h]', 'mov rsi, r12', 'mov rdx, r13', 'push qword [var_38h_2]', 'mov rdi, rbp', 'mov rbx, rax', 'push qword [var_38h_3]', 'push qword [var_38h_4]', 'push qword [var_38h_5]', 'push qword [var_38h_6]', 'push qword [var_38h_7]', 'push qword [var_38h_8]', 'call fcn.00024540', 'push r15', 'push r14', 'mov r14, rdx', 'push r13', 'mov r13, rsi', 'lea rsi, [rdi + 0x24]', 'push r12', 'mov r12, rdi', 'add rdi, 4', 'push rbp', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x246f0', 'lea rsi, str.stdin', 'mov rdi, r13', 'mov rbp, rax', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x24620', 'mov qword [arg_f0h], rbp', 'mov rsi, r13', 'mov rdi, r12', 'push qword [arg_108h]', 'push qword [arg_108h_2]', 'push qword [arg_f0h]', 'push qword [arg_108h_3]', 'push qword [arg_108h_4]', 'push qword [arg_108h_5]', 'push qword [arg_108h_6]', 'push qword [arg_108h_7]', 'call fcn.00023530', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x98', 'mov qword [rsp], rdi', 'mov rdi, rsi', 'mov qword [filename], rsi', 'mov rax, qword fs:[0x28]', 'mov qword [var_88h], rax', 'xor eax, eax', 'mov rax, qword [arg_f0h]', 'mov qword [var_10h], rax', 'call fcn.000211b0', 'push r13', 'lea rsi, str.stdin', 'push r12', 'mov r12, rdi', 'sub rsp, 8', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x21210', 'cmp dword [0x0002f080], 3', 'jg 0x211f0', 'mov r13, qword [obj.stdin]', 'add rsp, 8', 'mov rax, r13', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x23d90', 'mov qword [var_60h], 0', 'mov rbx, rax', 'mov rax, qword [arg_d0h]', 'mov qword [var_20h], rax', 'mov rax, qword [arg_d8h]', 'mov qword [var_58h], rax', 'mov rax, qword [arg_e0h]', 'mov qword [var_18h], rax', 'mov rax, qword [arg_e8h]', 'mov qword [var_8h], rax', 'mov rax, qword [arg_f8h]', 'mov qword [var_40h], rax', 'mov rax, qword [arg_100h]', 'mov qword [var_38h], rax', 'mov rax, qword [arg_108h]', 'mov qword [var_30h], rax', 'nop word [rax + rax]', 'mov eax, dword [0x0002f074]', 'add dword [0x0002f070], 1', 'test eax, eax', 'je 0x23768', 'mov dword [0x0002f074], 0', 'mov edx, eax', 'and edx, 0xfffffff0', 'cmp edx, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184d2204', 'je 0x23948', 'cmp eax, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184c2102', 'je 0x237f8', 'cmp dword [0x0002f070], 1', 'jne 0x23ba0', 'mov rdi, qword [rsp]', 'mov r8d, dword [rdi + 8]', 'test r8d, r8d', 'jne 0x24003', 'mov esi, dword [rdi + 4]', 'test esi, esi', 'je 0x24003', 'mov ecx, dword [rdi]', 'test ecx, ecx', 'je 0x24003', 'mov rdx, qword [var_10h]', 'mov rsi, rbx', 'lea rcx, [ptr]', 'mov dword [0x0002f070], 0', 'call fcn.00022410', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'lea r11, [rsp - 0x10000]', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'cmp rsp, r11', 'jne 0x22422', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [rsp + 0x10018], rax', 'xor eax, eax', 'mov r14, rdi', 'mov r12, rsi', 'mov rdi, rcx', 'mov r13, rdx', 'mov rcx, rdx', 'mov esi, 1', 'mov edx, 4', 'call sym.imp.fwrite', 'mov qword [var_8h], rax', 'cmp rax, 4', 'jne 0x22518', 'xor r15d, r15d', 'lea rbp, [var_10h]', 'nop', 'mov rcx, r12', 'mov edx, 0x10000', 'mov esi, 1', 'mov rdi, rbp', 'call sym.imp.fread', 'mov edi, dword [r14 + 0x24]', 'mov r8d, r15d', 'mov rdx, rbp', 'mov rcx, rax', 'mov rsi, r13', 'add qword [var_8h], rax', 'mov rbx, rax', 'call fcn.00021d10', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov qword [ptr], rdx', 'mov qword [nitems], rcx', 'test edi, edi', 'je 0x21f1d', 'mov r15d, r8d', 'cmp r8d, 0x40000000', 'ja 0x21ef7', 'mov rax, qword [nitems]', 'mov r14, qword [ptr]', 'mov r13, rax', 'and r13, 0xfffffffffffffff8', 'mov rcx, r13', 'add rcx, r14', 'mov qword [rsp], rcx', 'cmp r14, rcx', 'jae 0x21e04', 'mov rax, qword [nitems]', 'test al, 7', 'je 0x21ee5', 'mov r14, qword [ptr]', 'mov rbp, qword [rsp]', 'add r14, rax', 'cmp rbp, r14', 'jb 0x21e35', 'cmp byte [rbp], 0', 'je 0x21e28', 'add rbp, 1', 'cmp r14, rbp', 'je 0x21f60', 'mov rax, qword [nitems]', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'and eax, 7', 'pop r12', 'pop r13', 'add eax, r15d', 'pop r14', 'pop r15', 'ret', 'mov rcx, qword [var_70h]', 'mov r14d, eax', 'jmp 0x23a99', 'mov edx, dword [0x0002f080]', 'add rbp, rcx', 'cmp edx, 1', 'mov dword [var_38h_2], edx', 'jle 0x23a00', 'call sym.imp.clock']"
215,unlz4,380,"['call sym.imp.clock', 'push qword [var_38h]', 'mov rsi, r12', 'mov rdx, r13', 'push qword [var_38h_2]', 'mov rdi, rbp', 'mov rbx, rax', 'push qword [var_38h_3]', 'push qword [var_38h_4]', 'push qword [var_38h_5]', 'push qword [var_38h_6]', 'push qword [var_38h_7]', 'push qword [var_38h_8]', 'call fcn.00024540', 'push r15', 'push r14', 'mov r14, rdx', 'push r13', 'mov r13, rsi', 'lea rsi, [rdi + 0x24]', 'push r12', 'mov r12, rdi', 'add rdi, 4', 'push rbp', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x246f0', 'lea rsi, str.stdin', 'mov rdi, r13', 'mov rbp, rax', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x24620', 'mov qword [arg_f0h], rbp', 'mov rsi, r13', 'mov rdi, r12', 'push qword [arg_108h]', 'push qword [arg_108h_2]', 'push qword [arg_f0h]', 'push qword [arg_108h_3]', 'push qword [arg_108h_4]', 'push qword [arg_108h_5]', 'push qword [arg_108h_6]', 'push qword [arg_108h_7]', 'call fcn.00023530', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x98', 'mov qword [rsp], rdi', 'mov rdi, rsi', 'mov qword [filename], rsi', 'mov rax, qword fs:[0x28]', 'mov qword [var_88h], rax', 'xor eax, eax', 'mov rax, qword [arg_f0h]', 'mov qword [var_10h], rax', 'call fcn.000211b0', 'push r13', 'lea rsi, str.stdin', 'push r12', 'mov r12, rdi', 'sub rsp, 8', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x21210', 'cmp dword [0x0002f080], 3', 'jg 0x211f0', 'mov r13, qword [obj.stdin]', 'add rsp, 8', 'mov rax, r13', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x23d90', 'mov qword [var_60h], 0', 'mov rbx, rax', 'mov rax, qword [arg_d0h]', 'mov qword [var_20h], rax', 'mov rax, qword [arg_d8h]', 'mov qword [var_58h], rax', 'mov rax, qword [arg_e0h]', 'mov qword [var_18h], rax', 'mov rax, qword [arg_e8h]', 'mov qword [var_8h], rax', 'mov rax, qword [arg_f8h]', 'mov qword [var_40h], rax', 'mov rax, qword [arg_100h]', 'mov qword [var_38h], rax', 'mov rax, qword [arg_108h]', 'mov qword [var_30h], rax', 'nop word [rax + rax]', 'mov eax, dword [0x0002f074]', 'add dword [0x0002f070], 1', 'test eax, eax', 'je 0x23768', 'mov dword [0x0002f074], 0', 'mov edx, eax', 'and edx, 0xfffffff0', 'cmp edx, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184d2204', 'je 0x23948', 'cmp eax, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184c2102', 'je 0x237f8', 'cmp dword [0x0002f070], 1', 'jne 0x23ba0', 'mov rdi, qword [rsp]', 'mov r8d, dword [rdi + 8]', 'test r8d, r8d', 'jne 0x24003', 'mov esi, dword [rdi + 4]', 'test esi, esi', 'je 0x24003', 'mov ecx, dword [rdi]', 'test ecx, ecx', 'je 0x24003', 'mov rdx, qword [var_10h]', 'mov rsi, rbx', 'lea rcx, [ptr]', 'mov dword [0x0002f070], 0', 'call fcn.00022410', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'lea r11, [rsp - 0x10000]', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'cmp rsp, r11', 'jne 0x22422', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [rsp + 0x10018], rax', 'xor eax, eax', 'mov r14, rdi', 'mov r12, rsi', 'mov rdi, rcx', 'mov r13, rdx', 'mov rcx, rdx', 'mov esi, 1', 'mov edx, 4', 'call sym.imp.fwrite', 'mov qword [var_8h], rax', 'cmp rax, 4', 'jne 0x22518', 'xor r15d, r15d', 'lea rbp, [var_10h]', 'nop', 'mov rcx, r12', 'mov edx, 0x10000', 'mov esi, 1', 'mov rdi, rbp', 'call sym.imp.fread', 'mov edi, dword [r14 + 0x24]', 'mov r8d, r15d', 'mov rdx, rbp', 'mov rcx, rax', 'mov rsi, r13', 'add qword [var_8h], rax', 'mov rbx, rax', 'call fcn.00021d10', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov qword [ptr], rdx', 'mov qword [nitems], rcx', 'test edi, edi', 'je 0x21f1d', 'mov r15d, r8d', 'cmp r8d, 0x40000000', 'ja 0x21ef7', 'mov rax, qword [nitems]', 'mov r14, qword [ptr]', 'mov r13, rax', 'and r13, 0xfffffffffffffff8', 'mov rcx, r13', 'add rcx, r14', 'mov qword [rsp], rcx', 'cmp r14, rcx', 'jae 0x21e04', 'mov rax, qword [nitems]', 'test al, 7', 'je 0x21ee5', 'mov r14, qword [ptr]', 'mov rbp, qword [rsp]', 'add r14, rax', 'cmp rbp, r14', 'jb 0x21e35', 'cmp byte [rbp], 0', 'je 0x21e28', 'add rbp, 1', 'cmp r14, rbp', 'je 0x21f60', 'mov rax, qword [nitems]', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'and eax, 7', 'pop r12', 'pop r13', 'add eax, r15d', 'pop r14', 'pop r15', 'ret', 'mov rcx, qword [var_70h]', 'mov r14d, eax', 'jmp 0x23a99', 'mov edx, dword [0x0002f080]', 'add rbp, rcx', 'cmp edx, 1', 'mov dword [var_38h_2], edx', 'jle 0x23a00', 'call sym.imp.clock', 'sub rax, qword [0x0002f078]', 'cmp rax, 0x28b0a', 'jg 0x23ad0', 'call sym.imp.clock']"
216,unlz4,390,"['call sym.imp.clock', 'push qword [var_38h]', 'mov rsi, r12', 'mov rdx, r13', 'push qword [var_38h_2]', 'mov rdi, rbp', 'mov rbx, rax', 'push qword [var_38h_3]', 'push qword [var_38h_4]', 'push qword [var_38h_5]', 'push qword [var_38h_6]', 'push qword [var_38h_7]', 'push qword [var_38h_8]', 'call fcn.00024540', 'push r15', 'push r14', 'mov r14, rdx', 'push r13', 'mov r13, rsi', 'lea rsi, [rdi + 0x24]', 'push r12', 'mov r12, rdi', 'add rdi, 4', 'push rbp', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x246f0', 'lea rsi, str.stdin', 'mov rdi, r13', 'mov rbp, rax', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x24620', 'mov qword [arg_f0h], rbp', 'mov rsi, r13', 'mov rdi, r12', 'push qword [arg_108h]', 'push qword [arg_108h_2]', 'push qword [arg_f0h]', 'push qword [arg_108h_3]', 'push qword [arg_108h_4]', 'push qword [arg_108h_5]', 'push qword [arg_108h_6]', 'push qword [arg_108h_7]', 'call fcn.00023530', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x98', 'mov qword [rsp], rdi', 'mov rdi, rsi', 'mov qword [filename], rsi', 'mov rax, qword fs:[0x28]', 'mov qword [var_88h], rax', 'xor eax, eax', 'mov rax, qword [arg_f0h]', 'mov qword [var_10h], rax', 'call fcn.000211b0', 'push r13', 'lea rsi, str.stdin', 'push r12', 'mov r12, rdi', 'sub rsp, 8', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x21210', 'cmp dword [0x0002f080], 3', 'jg 0x211f0', 'mov r13, qword [obj.stdin]', 'add rsp, 8', 'mov rax, r13', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x23d90', 'mov qword [var_60h], 0', 'mov rbx, rax', 'mov rax, qword [arg_d0h]', 'mov qword [var_20h], rax', 'mov rax, qword [arg_d8h]', 'mov qword [var_58h], rax', 'mov rax, qword [arg_e0h]', 'mov qword [var_18h], rax', 'mov rax, qword [arg_e8h]', 'mov qword [var_8h], rax', 'mov rax, qword [arg_f8h]', 'mov qword [var_40h], rax', 'mov rax, qword [arg_100h]', 'mov qword [var_38h], rax', 'mov rax, qword [arg_108h]', 'mov qword [var_30h], rax', 'nop word [rax + rax]', 'mov eax, dword [0x0002f074]', 'add dword [0x0002f070], 1', 'test eax, eax', 'je 0x23768', 'mov dword [0x0002f074], 0', 'mov edx, eax', 'and edx, 0xfffffff0', 'cmp edx, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184d2204', 'je 0x23948', 'cmp eax, 0x184d2a50', 'je 0x236a0', 'cmp eax, 0x184c2102', 'je 0x237f8', 'cmp dword [0x0002f080], 3', 'jg 0x23d30', 'mov edi, 0x800000', 'call fcn.00005890', 'endbr64', 'xor eax, eax', 'cmp edi, 0x7e000000', 'ja 0x58bc', 'ret', 'movsxd rdi, eax', 'call sym.imp.malloc', 'mov edi, 0x800000', 'mov r15, rax', 'call sym.imp.malloc', 'mov r13, rax', 'test r15, r15', 'je 0x24134', 'test rax, rax', 'je 0x24134', 'xor r12d, r12d', 'xor ebp, ebp', 'mov r14, r15', 'jmp 0x238f3', 'mov rcx, rbx', 'mov edx, 4', 'mov esi, 1', 'mov rdi, r14', 'call sym.imp.fread', 'test rax, rax', 'jne 0x23850', 'cmp rax, 4', 'jne 0x23e77', 'movzx r8d, byte [r14 + 1]', 'movzx eax, byte [r14]', 'mov edx, r8d', 'movzx r8d, byte [r14 + 2]', 'shl edx, 8', 'shl r8d, 0x10', 'add r8d, edx', 'add eax, r8d', 'movzx r8d, byte [r14 + 3]', 'shl r8d, 0x18', 'lea r15d, [r8 + rax]', 'cmp r15d, 0x808090', 'ja 0x23d00', 'mov edx, r15d', 'mov rcx, rbx', 'mov esi, 1', 'mov rdi, r14', 'mov qword [var_38h_2], rdx', 'call sym.imp.fread', 'mov rdx, qword [var_38h_2]', 'cmp rdx, rax', 'jne 0x23e45', 'mov ecx, 0x800000', 'mov edx, r15d', 'mov rsi, r13', 'mov rdi, r14', 'call fcn.0000dc10', 'endbr64', 'test rdi, rdi', 'je 0xe136', 'test ecx, ecx', 'js 0xe136', 'push r15', 'movsxd r10, edx', 'push r14', 'lea r9, [rdi + r10]', 'mov r14, rdi', 'push r13', 'mov r13, rsi', 'push r12', 'push rbp', 'push rbx', 'movsxd rbx, ecx', 'add rbx, rsi', 'lea rax, [rbx - 0x20]', 'sub rsp, 0x28', 'mov qword [var_18h], rax', 'test ecx, ecx', 'je 0xe070', 'mov eax, 0xffffffff', 'cmp edx, 1', 'jne 0xddbe', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'jns 0x1ed10', 'cdqe', 'add r12d, 1', 'add rbx, 0x38', 'mov qword [rbx - 0x10], rax', 'cmp r12d, dword [var_20h]', 'je 0x1ed58', 'add ebp, 1', 'cmp dword [var_4ch], ebp', 'jne 0x1ecf6', 'mov r12, qword [var_90h]', 'mov rsi, qword [var_80h]', 'mov rbx, qword [var_88h]', 'mov rdi, r12', 'call fcn.0001e4b0', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'call fcn.0001e3e0', 'sub rsp, 0x28', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rsi, rsp', 'call sym.imp.clock_gettime']"
217,unlz4,106,"['call sym.imp.clock', 'push qword [var_38h]', 'mov rsi, r12', 'mov rdx, r13', 'push qword [var_38h_2]', 'mov rdi, rbp', 'mov rbx, rax', 'push qword [var_38h_3]', 'push qword [var_38h_4]', 'push qword [var_38h_5]', 'push qword [var_38h_6]', 'push qword [var_38h_7]', 'push qword [var_38h_8]', 'call fcn.00024540', 'push r15', 'push r14', 'mov r14, rdx', 'push r13', 'mov r13, rsi', 'lea rsi, [rdi + 0x24]', 'push r12', 'mov r12, rdi', 'add rdi, 4', 'push rbp', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call fcn.00021270', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x21456', 'mov rbp, rdi', 'mov rbx, rsi', 'mov rdi, rdx', 'mov r12, rdx', 'lea rsi, str.stdout', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x212e8', 'cmp dword [0x0002f080], 3', 'jg 0x21330', 'cmp dword [rbx], 1', 'mov r13, qword [obj.stdout]', 'jne 0x212d4', 'add rsp, 8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'test rax, rax', 'je 0x246f0', 'mov eax, 1', 'jmp 0x245f5', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0x246fa', 'add rsp, 0xa0', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x40', 'mov r12d, eax', 'call sym.imp.clock']"
218,unlzma,24,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x93a0', 'mov dword [0x000140d4], 0', 'xor edi, edi', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
219,unxz,24,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x93a0', 'mov dword [0x000140d4], 0', 'xor edi, edi', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
220,unzip,231,"['call sym.imp.localtime', 'cmp dword [0x0002e11c], 9', 'jle 0x17afa', 'test rax, rax', 'je 0x17c00', 'mov eax, dword [0x000272d0]', 'movdqa xmm0, xmmword [str.______________:__:__]', 'mov dword [r12 + 0x10], eax', 'movzx eax, byte [0x000272d4]', 'movaps xmmword [r12], xmm0', 'mov byte [r12 + 0x14], al', 'jmp 0x17abb', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17c29', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r8, rbx', 'mov edx, 0x10000', 'lea rcx, [0x0002909a]', 'mov r9, rax', 'mov esi, 1', 'lea rdi, [0x0010e1e0]', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'xor ecx, ecx', 'movsxd rdx, eax', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'call fcn.00012820', 'movzx eax, word [0x0011e2d2]', 'test ax, ax', 'je 0x18ba4', 'movzx edi, ax', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x18a10', 'cmp r15d, eax', 'cmovl r15d, eax', 'cmp eax, 1', 'jg 0x19672', 'mov r14d, r15d', 'mov r12d, r14d', 'cmp r12d, 1', 'jg 0x19bac', 'mov eax, dword [0x0002e130]', 'test eax, eax', 'jne 0x1c33a', 'mov rsi, qword [var_10h]', 'mov rdi, qword [var_20h]', 'lea r14, [0x00026f2b]', 'call fcn.00012780', 'endbr64', 'xor eax, eax', 'test rdi, rdi', 'je 0x127ef', 'cmp rdi, 0x1e8480', 'jbe 0x127d0', 'mov rax, rdi', 'shr rax, 1', 'cmp rdi, rsi', 'jae 0x12800', 'mov rdx, rdi', 'sub rdx, rsi', 'imul rdx, rdx, 0x3e8', 'add rax, rdx', 'xor edx, edx', 'div rdi', 'ret', 'mov edx, 0x10000', 'lea rcx, str._3d__', 'mov esi, 1', 'add eax, 5', 'lea rdi, [0x0010e1e0]', 'movsxd r8, eax', 'sar eax, 0x1f', 'imul r8, r8, 0x66666667', 'sar r8, 0x22', 'sub r8d, eax', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'movsxd rdx, eax', 'xor ecx, ecx', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'jmp 0x1b5cf', 'mov rdi, qword [0x0011e250]', 'test rdi, rdi', 'je 0x1bbb8', 'xor edi, edi', 'jmp 0x1b60c', 'mov rsi, rbp', 'mov r12, qword [0x0011f578]', 'mov byte [var_c0h], 0', 'call fcn.000179f0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x17b03', 'cmp byte [rsi], 1', 'je 0x17ae8', 'call sym.imp.localtime']"
221,unzip,220,"['call sym.imp.localtime', 'cmp dword [0x0002e11c], 9', 'jle 0x17afa', 'test rax, rax', 'je 0x17c00', 'mov eax, dword [0x000272d0]', 'movdqa xmm0, xmmword [str.______________:__:__]', 'mov dword [r12 + 0x10], eax', 'movzx eax, byte [0x000272d4]', 'movaps xmmword [r12], xmm0', 'mov byte [r12 + 0x14], al', 'jmp 0x17abb', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17c29', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r8, rbx', 'mov edx, 0x10000', 'lea rcx, [0x0002909a]', 'mov r9, rax', 'mov esi, 1', 'lea rdi, [0x0010e1e0]', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'xor ecx, ecx', 'movsxd rdx, eax', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'call fcn.00012820', 'movzx eax, word [0x0011e2d2]', 'test ax, ax', 'je 0x18ba4', 'movzx edi, ax', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x12446', 'mov ecx, dword [0x0002e180]', 'test ecx, ecx', 'jne 0x12520', 'lea rdx, [0x0011e450]', 'mov ecx, dword [rdx]', 'add rdx, 4', 'lea eax, [rcx - 0x1010101]', 'not ecx', 'and eax, ecx', 'and eax, 0x80808080', 'je 0x12527', 'mov ecx, eax', 'shr ecx, 0x10', 'test eax, 0x8080', 'cmove eax, ecx', 'lea rcx, [rdx + 2]', 'cmove rdx, rcx', 'mov esi, eax', 'add sil, al', 'sbb rdx, 3', 'sub rdx, rbx', 'je 0x125a0', 'mov rdi, qword [0x0011e250]', 'mov rcx, qword [0x0011e2a8]', 'test rdi, rdi', 'je 0x12620', 'mov rdi, rcx', 'call fcn.0000f6c0', 'endbr64', 'push rbp', 'mov r8d, edi', 'mov rdx, rdi', 'push rbx', 'shr r8d, 0x19', 'shr rdx, 0x15', 'mov rbx, rdi', 'lea r9d, [r8 + 0xa]', 'and edx, 0xf', 'lea esi, [r8 + 0x7bb]', 'mov ecx, ebx', 'imul r10d, r9d, 0x16d', 'sar esi, 2', 'sub edx, 1', 'mov r11d, ebx', 'sub rsp, 0x18', 'movsxd rbp, edx', 'shr ecx, 0xb', 'and r11d, 0x1f', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, rdi', 'and ecx, 0x1f', 'add r11d, r11d', 'shr rax, 0x10', 'lea r10d, [rsi + r10 - 0x1ec]', 'lea rsi, obj.ydays', 'and eax, 0x1f', 'movzx esi, word [rsi + rbp*2]', 'lea edi, [rax - 1]', 'mov eax, ebx', 'shr eax, 5', 'add esi, r10d', 'and eax, 0x3f', 'cmp edx, 1', 'jle 0xf761', 'imul eax, eax, 0x3c', 'movsxd rdx, ecx', 'imul rdx, rdx, 0xe10', 'add eax, r11d', 'cdqe', 'add rax, rdx', 'lea edx, [rdi + rsi]', 'imul rdx, rdx, 0x15180', 'add rax, rdx', 'add rax, qword [obj.__timezone]', 'cmp rbx, 0x7431ffff', 'jbe 0xf7b0', 'test rax, rax', 'mov edx, 0x7fffffff', 'cmovs rax, rdx', 'mov qword [rsp], rax', 'mov rdi, rsp', 'call sym.imp.localtime']"
222,unzip,175,"['call sym.imp.localtime', 'cmp dword [0x0002e11c], 9', 'jle 0x17afa', 'test rax, rax', 'je 0x17c00', 'mov eax, dword [0x000272d0]', 'movdqa xmm0, xmmword [str.______________:__:__]', 'mov dword [r12 + 0x10], eax', 'movzx eax, byte [0x000272d4]', 'movaps xmmword [r12], xmm0', 'mov byte [r12 + 0x14], al', 'jmp 0x17abb', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17c29', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r8, rbx', 'mov edx, 0x10000', 'lea rcx, [0x0002909a]', 'mov r9, rax', 'mov esi, 1', 'lea rdi, [0x0010e1e0]', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'xor ecx, ecx', 'movsxd rdx, eax', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'call fcn.00012820', 'movzx eax, word [0x0011e2d2]', 'test ax, ax', 'je 0x18ba4', 'movzx edi, ax', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x129b3', 'mov r10d, dword [0x0002e180]', 'test r10d, r10d', 'jne 0x12a90', 'mov rdi, qword [0x0011e250]', 'mov rcx, qword [0x0011e2a8]', 'test rdi, rdi', 'je 0x12acb', 'movzx esi, word [0x0011e2d0]', 'xor r9d, r9d', 'lea r8, [var_50h]', 'mov edx, 1', 'call fcn.00016820', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x38', 'mov dword [var_14h], edx', 'mov qword [var_18h], rcx', 'mov qword [var_8h], r8', 'test rdi, rdi', 'je 0x16968', 'xor r12d, r12d', 'add rsp, 0x38', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, 1', 'jne 0x12f20', 'lea rdi, [timer]', 'call sym.imp.localtime']"
223,unzip,193,"['call sym.imp.localtime', 'mov rdx, rax', 'mov rax, qword [rsp]', 'test rdx, rdx', 'je 0xf7db', 'cmp rbx, 0x7431ffff', 'jbe 0xf810', 'cmp rax, 0x6fffffff', 'mov edx, 0xffffffff', 'cmovle rax, rdx', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf828', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, qword [rsp]', 'cmp qword [rdi], rax', 'jge 0x125f0', 'movzx edi, word [0x0011e2d2]', 'add qword [r14], 1', 'test di, di', 'je 0x12512', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x18a10', 'cmp r15d, eax', 'cmovl r15d, eax', 'cmp eax, 1', 'jg 0x19672', 'mov r14d, r15d', 'mov r12d, r14d', 'cmp r12d, 1', 'jg 0x19bac', 'mov eax, dword [0x0002e130]', 'test eax, eax', 'jne 0x1c33a', 'mov rsi, qword [var_10h]', 'mov rdi, qword [var_20h]', 'lea r14, [0x00026f2b]', 'call fcn.00012780', 'endbr64', 'xor eax, eax', 'test rdi, rdi', 'je 0x127ef', 'cmp rdi, 0x1e8480', 'jbe 0x127d0', 'mov rax, rdi', 'shr rax, 1', 'cmp rdi, rsi', 'jae 0x12800', 'mov rdx, rdi', 'sub rdx, rsi', 'imul rdx, rdx, 0x3e8', 'add rax, rdx', 'xor edx, edx', 'div rdi', 'ret', 'mov edx, 0x10000', 'lea rcx, str._3d__', 'mov esi, 1', 'add eax, 5', 'lea rdi, [0x0010e1e0]', 'movsxd r8, eax', 'sar eax, 0x1f', 'imul r8, r8, 0x66666667', 'sar r8, 0x22', 'sub r8d, eax', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'movsxd rdx, eax', 'xor ecx, ecx', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'jmp 0x1b5cf', 'mov rdi, qword [0x0011e250]', 'test rdi, rdi', 'je 0x1bbb8', 'xor edi, edi', 'jmp 0x1b60c', 'mov rsi, rbp', 'mov r12, qword [0x0011f578]', 'mov byte [var_c0h], 0', 'call fcn.000179f0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x17b03', 'cmp byte [rsi], 1', 'je 0x17ae8', 'call sym.imp.localtime']"
224,unzip,182,"['call sym.imp.localtime', 'mov rdx, rax', 'mov rax, qword [rsp]', 'test rdx, rdx', 'je 0xf7db', 'cmp rbx, 0x7431ffff', 'jbe 0xf810', 'cmp rax, 0x6fffffff', 'mov edx, 0xffffffff', 'cmovle rax, rdx', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf828', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, qword [rsp]', 'cmp qword [rdi], rax', 'jge 0x125f0', 'movzx edi, word [0x0011e2d2]', 'add qword [r14], 1', 'test di, di', 'je 0x12512', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x12446', 'mov ecx, dword [0x0002e180]', 'test ecx, ecx', 'jne 0x12520', 'lea rdx, [0x0011e450]', 'mov ecx, dword [rdx]', 'add rdx, 4', 'lea eax, [rcx - 0x1010101]', 'not ecx', 'and eax, ecx', 'and eax, 0x80808080', 'je 0x12527', 'mov ecx, eax', 'shr ecx, 0x10', 'test eax, 0x8080', 'cmove eax, ecx', 'lea rcx, [rdx + 2]', 'cmove rdx, rcx', 'mov esi, eax', 'add sil, al', 'sbb rdx, 3', 'sub rdx, rbx', 'je 0x125a0', 'mov rdi, qword [0x0011e250]', 'mov rcx, qword [0x0011e2a8]', 'test rdi, rdi', 'je 0x12620', 'mov rdi, rcx', 'call fcn.0000f6c0', 'endbr64', 'push rbp', 'mov r8d, edi', 'mov rdx, rdi', 'push rbx', 'shr r8d, 0x19', 'shr rdx, 0x15', 'mov rbx, rdi', 'lea r9d, [r8 + 0xa]', 'and edx, 0xf', 'lea esi, [r8 + 0x7bb]', 'mov ecx, ebx', 'imul r10d, r9d, 0x16d', 'sar esi, 2', 'sub edx, 1', 'mov r11d, ebx', 'sub rsp, 0x18', 'movsxd rbp, edx', 'shr ecx, 0xb', 'and r11d, 0x1f', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, rdi', 'and ecx, 0x1f', 'add r11d, r11d', 'shr rax, 0x10', 'lea r10d, [rsi + r10 - 0x1ec]', 'lea rsi, obj.ydays', 'and eax, 0x1f', 'movzx esi, word [rsi + rbp*2]', 'lea edi, [rax - 1]', 'mov eax, ebx', 'shr eax, 5', 'add esi, r10d', 'and eax, 0x3f', 'cmp edx, 1', 'jle 0xf761', 'imul eax, eax, 0x3c', 'movsxd rdx, ecx', 'imul rdx, rdx, 0xe10', 'add eax, r11d', 'cdqe', 'add rax, rdx', 'lea edx, [rdi + rsi]', 'imul rdx, rdx, 0x15180', 'add rax, rdx', 'add rax, qword [obj.__timezone]', 'cmp rbx, 0x7431ffff', 'jbe 0xf7b0', 'test rax, rax', 'mov edx, 0x7fffffff', 'cmovs rax, rdx', 'mov qword [rsp], rax', 'mov rdi, rsp', 'call sym.imp.localtime']"
225,unzip,137,"['call sym.imp.localtime', 'mov rdx, rax', 'mov rax, qword [rsp]', 'test rdx, rdx', 'je 0xf7db', 'cmp rbx, 0x7431ffff', 'jbe 0xf810', 'cmp rax, 0x6fffffff', 'mov edx, 0xffffffff', 'cmovle rax, rdx', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf828', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, qword [rsp]', 'cmp qword [rdi], rax', 'jge 0x125f0', 'movzx edi, word [0x0011e2d2]', 'add qword [r14], 1', 'test di, di', 'je 0x12512', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x129b3', 'mov r10d, dword [0x0002e180]', 'test r10d, r10d', 'jne 0x12a90', 'mov rdi, qword [0x0011e250]', 'mov rcx, qword [0x0011e2a8]', 'test rdi, rdi', 'je 0x12acb', 'movzx esi, word [0x0011e2d0]', 'xor r9d, r9d', 'lea r8, [var_50h]', 'mov edx, 1', 'call fcn.00016820', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x38', 'mov dword [var_14h], edx', 'mov qword [var_18h], rcx', 'mov qword [var_8h], r8', 'test rdi, rdi', 'je 0x16968', 'xor r12d, r12d', 'add rsp, 0x38', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, 1', 'jne 0x12f20', 'lea rdi, [timer]', 'call sym.imp.localtime']"
226,unzip,151,"['call sym.imp.localtime', 'test rax, rax', 'je 0x12ac4', 'mov ebx, dword [rax + 0x10]', 'add ebx, 1', 'mov dword [var_8h], ebx', 'mov ebx, dword [rax + 0xc]', 'mov dword [var_ch], ebx', 'mov ebx, dword [rax + 0x14]', 'lea r13d, [rbx + 0x76c]', 'mov ebx, dword [rax + 8]', 'mov eax, dword [rax + 4]', 'mov dword [var_10h], ebx', 'mov dword [var_14h], eax', 'jmp 0x12b0b', 'mov rbp, qword [0x0011e290]', 'test byte [0x0011e2ca], 1', 'mov rdi, qword [0x0011e298]', 'lea rax, [rbp - 0xc]', 'cmovne rbp, rax', 'mov rsi, rbp', 'call fcn.00012780', 'endbr64', 'xor eax, eax', 'test rdi, rdi', 'je 0x127ef', 'cmp rdi, 0x1e8480', 'jbe 0x127d0', 'mov rax, rdi', 'shr rax, 1', 'cmp rdi, rsi', 'jae 0x12800', 'mov rdx, rdi', 'sub rdx, rsi', 'imul rdx, rdx, 0x3e8', 'add rax, rdx', 'xor edx, edx', 'div rdi', 'ret', 'mov edx, 0x10000', 'lea rcx, str._3d__', 'mov esi, 1', 'add eax, 5', 'lea rdi, [0x0010e1e0]', 'movsxd r8, eax', 'sar eax, 0x1f', 'imul r8, r8, 0x66666667', 'sar r8, 0x22', 'sub r8d, eax', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'movsxd rdx, eax', 'xor ecx, ecx', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'jmp 0x1b5cf', 'mov rdi, qword [0x0011e250]', 'test rdi, rdi', 'je 0x1bbb8', 'xor edi, edi', 'jmp 0x1b60c', 'mov rsi, rbp', 'mov r12, qword [0x0011f578]', 'mov byte [var_c0h], 0', 'call fcn.000179f0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x17b03', 'cmp byte [rsi], 1', 'je 0x17ae8', 'call sym.imp.localtime']"
227,unzip,369,"['call sym.imp.localtime', 'test rax, rax', 'je 0x12ac4', 'mov ebx, dword [rax + 0x10]', 'add ebx, 1', 'mov dword [var_8h], ebx', 'mov ebx, dword [rax + 0xc]', 'mov dword [var_ch], ebx', 'mov ebx, dword [rax + 0x14]', 'lea r13d, [rbx + 0x76c]', 'mov ebx, dword [rax + 8]', 'mov eax, dword [rax + 4]', 'mov dword [var_10h], ebx', 'mov dword [var_14h], eax', 'jmp 0x12b0b', 'mov rbp, qword [0x0011e290]', 'test byte [0x0011e2ca], 1', 'mov rdi, qword [0x0011e298]', 'lea rax, [rbp - 0xc]', 'cmovne rbp, rax', 'mov rsi, rbp', 'call fcn.00012780', 'endbr64', 'xor eax, eax', 'test rdi, rdi', 'je 0x127ef', 'cmp rdi, 0x1e8480', 'jbe 0x127d0', 'mov rax, rdi', 'shr rax, 1', 'cmp rdi, rsi', 'jae 0x12800', 'mov rdx, rdi', 'sub rdx, rsi', 'imul rdx, rdx, 0x3e8', 'add rax, rdx', 'xor edx, edx', 'div rdi', 'ret', 'mov edx, 0x10000', 'lea rcx, str._3d__', 'mov esi, 1', 'add eax, 5', 'lea rdi, [0x0010e1e0]', 'movsxd r8, eax', 'sar eax, 0x1f', 'imul r8, r8, 0x66666667', 'sar r8, 0x22', 'sub r8d, eax', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'movsxd rdx, eax', 'xor ecx, ecx', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'jmp 0x1b5cf', 'mov rdi, qword [0x0011e250]', 'test rdi, rdi', 'je 0x1bbb8', 'xor edi, edi', 'jmp 0x1b60c', 'mov rsi, rbp', 'mov r12, qword [0x0011f578]', 'mov byte [var_c0h], 0', 'call fcn.000179f0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x17b03', 'mov rax, qword [0x0011e2a8]', 'mov ebp, eax', 'mov r8, rax', 'mov r13, rax', 'mov r14d, eax', 'shr ebp, 0x19', 'mov r15d, eax', 'shr r8, 0x15', 'lea ebx, [rax + rax]', 'shr r13, 0x10', 'shr r14d, 0xb', 'add ebp, 0x50', 'and r8d, 0xf', 'shr r15d, 5', 'and r13d, 0x1f', 'and r14d, 0x1f', 'and ebx, 0x3e', 'and r15d, 0x3f', 'jmp 0x17a56', 'lea eax, [r8 - 1]', 'lea rdx, [0x00027180]', 'lea r9, [rdx + rax*4]', 'cmp eax, 0xb', 'ja 0x17ba0', 'cmp dword [0x0002e11c], 9', 'jg 0x17bdf', 'push rbx', 'lea r8d, [arg_76ch]', 'lea rcx, str._u__s__u__02u:_02u:_02u', 'push r15', 'push r14', 'push r13', 'jmp 0x17b77', 'mov rdx, 0xffffffffffffffff', 'mov esi, 1', 'mov rdi, r12', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'add rsp, 0x20', 'jmp 0x17abb', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17c29', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r8, rbx', 'mov edx, 0x10000', 'lea rcx, [0x0002909a]', 'mov r9, rax', 'mov esi, 1', 'lea rdi, [0x0010e1e0]', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'xor ecx, ecx', 'movsxd rdx, eax', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'call fcn.00012820', 'movzx eax, word [0x0011e2d2]', 'test ax, ax', 'je 0x18ba4', 'movzx edi, ax', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x12446', 'mov ecx, dword [0x0002e180]', 'test ecx, ecx', 'jne 0x12520', 'lea rdx, [0x0011e450]', 'mov ecx, dword [rdx]', 'add rdx, 4', 'lea eax, [rcx - 0x1010101]', 'not ecx', 'and eax, ecx', 'and eax, 0x80808080', 'je 0x12527', 'mov ecx, eax', 'shr ecx, 0x10', 'test eax, 0x8080', 'cmove eax, ecx', 'lea rcx, [rdx + 2]', 'cmove rdx, rcx', 'mov esi, eax', 'add sil, al', 'sbb rdx, 3', 'sub rdx, rbx', 'je 0x125a0', 'mov rdi, qword [0x0011e250]', 'mov rcx, qword [0x0011e2a8]', 'test rdi, rdi', 'je 0x12620', 'mov rdi, rcx', 'call fcn.0000f6c0', 'endbr64', 'push rbp', 'mov r8d, edi', 'mov rdx, rdi', 'push rbx', 'shr r8d, 0x19', 'shr rdx, 0x15', 'mov rbx, rdi', 'lea r9d, [r8 + 0xa]', 'and edx, 0xf', 'lea esi, [r8 + 0x7bb]', 'mov ecx, ebx', 'imul r10d, r9d, 0x16d', 'sar esi, 2', 'sub edx, 1', 'mov r11d, ebx', 'sub rsp, 0x18', 'movsxd rbp, edx', 'shr ecx, 0xb', 'and r11d, 0x1f', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, rdi', 'and ecx, 0x1f', 'add r11d, r11d', 'shr rax, 0x10', 'lea r10d, [rsi + r10 - 0x1ec]', 'lea rsi, obj.ydays', 'and eax, 0x1f', 'movzx esi, word [rsi + rbp*2]', 'lea edi, [rax - 1]', 'mov eax, ebx', 'shr eax, 5', 'add esi, r10d', 'and eax, 0x3f', 'cmp edx, 1', 'jle 0xf761', 'imul eax, eax, 0x3c', 'movsxd rdx, ecx', 'imul rdx, rdx, 0xe10', 'add eax, r11d', 'cdqe', 'add rax, rdx', 'lea edx, [rdi + rsi]', 'imul rdx, rdx, 0x15180', 'add rax, rdx', 'add rax, qword [obj.__timezone]', 'cmp rbx, 0x7431ffff', 'jbe 0xf7b0', 'test rax, rax', 'mov edx, 0x7fffffff', 'cmovs rax, rdx', 'mov qword [rsp], rax', 'mov rdi, rsp', 'call sym.imp.localtime']"
228,unzip,323,"['call sym.imp.localtime', 'test rax, rax', 'je 0x12ac4', 'mov ebx, dword [rax + 0x10]', 'add ebx, 1', 'mov dword [var_8h], ebx', 'mov ebx, dword [rax + 0xc]', 'mov dword [var_ch], ebx', 'mov ebx, dword [rax + 0x14]', 'lea r13d, [rbx + 0x76c]', 'mov ebx, dword [rax + 8]', 'mov eax, dword [rax + 4]', 'mov dword [var_10h], ebx', 'mov dword [var_14h], eax', 'jmp 0x12b0b', 'mov rbp, qword [0x0011e290]', 'test byte [0x0011e2ca], 1', 'mov rdi, qword [0x0011e298]', 'lea rax, [rbp - 0xc]', 'cmovne rbp, rax', 'mov rsi, rbp', 'call fcn.00012780', 'endbr64', 'xor eax, eax', 'test rdi, rdi', 'je 0x127ef', 'cmp rdi, 0x1e8480', 'jbe 0x127d0', 'mov rax, rdi', 'shr rax, 1', 'cmp rdi, rsi', 'jae 0x12800', 'mov rdx, rdi', 'sub rdx, rsi', 'imul rdx, rdx, 0x3e8', 'add rax, rdx', 'xor edx, edx', 'div rdi', 'ret', 'mov edx, 0x10000', 'lea rcx, str._3d__', 'mov esi, 1', 'add eax, 5', 'lea rdi, [0x0010e1e0]', 'movsxd r8, eax', 'sar eax, 0x1f', 'imul r8, r8, 0x66666667', 'sar r8, 0x22', 'sub r8d, eax', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'movsxd rdx, eax', 'xor ecx, ecx', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'jmp 0x1b5cf', 'mov rdi, qword [0x0011e250]', 'test rdi, rdi', 'je 0x1bbb8', 'xor edi, edi', 'jmp 0x1b60c', 'mov rsi, rbp', 'mov r12, qword [0x0011f578]', 'mov byte [var_c0h], 0', 'call fcn.000179f0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x17b03', 'mov rax, qword [0x0011e2a8]', 'mov ebp, eax', 'mov r8, rax', 'mov r13, rax', 'mov r14d, eax', 'shr ebp, 0x19', 'mov r15d, eax', 'shr r8, 0x15', 'lea ebx, [rax + rax]', 'shr r13, 0x10', 'shr r14d, 0xb', 'add ebp, 0x50', 'and r8d, 0xf', 'shr r15d, 5', 'and r13d, 0x1f', 'and r14d, 0x1f', 'and ebx, 0x3e', 'and r15d, 0x3f', 'jmp 0x17a56', 'lea eax, [r8 - 1]', 'lea rdx, [0x00027180]', 'lea r9, [rdx + rax*4]', 'cmp eax, 0xb', 'ja 0x17ba0', 'cmp dword [0x0002e11c], 9', 'jg 0x17bdf', 'push rbx', 'lea r8d, [arg_76ch]', 'lea rcx, str._u__s__u__02u:_02u:_02u', 'push r15', 'push r14', 'push r13', 'jmp 0x17b77', 'mov rdx, 0xffffffffffffffff', 'mov esi, 1', 'mov rdi, r12', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'add rsp, 0x20', 'jmp 0x17abb', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17c29', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r8, rbx', 'mov edx, 0x10000', 'lea rcx, [0x0002909a]', 'mov r9, rax', 'mov esi, 1', 'lea rdi, [0x0010e1e0]', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'xor ecx, ecx', 'movsxd rdx, eax', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'call fcn.00012820', 'movzx eax, word [0x0011e2d2]', 'test ax, ax', 'je 0x18ba4', 'movzx edi, ax', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x129b3', 'mov r10d, dword [0x0002e180]', 'test r10d, r10d', 'jne 0x12a90', 'mov rdi, qword [0x0011e250]', 'mov rcx, qword [0x0011e2a8]', 'test rdi, rdi', 'je 0x12acb', 'movzx esi, word [0x0011e2d0]', 'xor r9d, r9d', 'lea r8, [var_50h]', 'mov edx, 1', 'call fcn.00016820', 'test al, 1', 'jne 0x12f20', 'lea rdi, [timer]', 'call sym.imp.localtime']"
229,unzipsfx,220,"['call sym.imp.localtime', 'mov rdx, rax', 'mov rax, qword [rsp]', 'test rdx, rdx', 'je 0x870b', 'cmp rbx, 0x7431ffff', 'jbe 0x8740', 'cmp rax, 0x6fffffff', 'mov edx, 0xffffffff', 'cmovle rax, rdx', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x8758', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'xor r12d, r12d', 'cmp rbp, rax', 'setge r12b', 'jmp 0x87b9', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x8941', 'add rsp, 0x20', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x681e', 'mov esi, dword [0x000150d8]', 'test esi, esi', 'jne case.0x6657.89', 'mov eax, dword [0x00015110]', 'jmp 0x5299', 'mov rdx, qword [0x000d51b8]', 'movabs rdi, 0x100000000', 'mov qword [0x000e11e8], 0', 'mov qword [0x000e11f0], 0', 'mov qword [0x000e13bc], rdi', 'mov qword [0x000e11c8], 0', 'test byte [rdx + 0x2c], 0x40', 'je 0x5948', 'mov dword [0x000e13e8], 0', 'test eax, eax', 'je 0x5aa8', 'mov r15d, dword [0x0001510c]', 'test r15d, r15d', 'jne 0x5310', 'call fcn.000079b0', 'endbr64', 'movsxd rcx, dword [0x000e11e0]', 'mov rax, qword [0x00015188]', 'mov rdx, rcx', 'cmp rcx, rax', 'jle 0x7a00', 'test rax, rax', 'js 0x7a18', 'mov ecx, eax', 'sub edx, eax', 'add rax, qword [0x000e11d8]', 'mov dword [0x000e2538], edx', 'mov qword [0x000e2540], rax', 'xor eax, eax', 'mov dword [0x000e11e0], ecx', 'mov qword [0x00015188], rax', 'ret', 'mov eax, dword [0x000e11e0]', 'jmp 0x7b40', 'sub eax, 1', 'mov dword [0x000e11e0], eax', 'mov rax, qword [0x000e11d8]', 'lea rdx, [rax + 1]', 'mov qword [0x000e11d8], rdx', 'movzx eax, byte [rax]', 'add rsp, 8', 'ret', 'cmp eax, 0xffffffff', 'jne 0x5e65', 'mov rsi, qword [0x000e1428]', 'test rsi, rsi', 'je 0x5d38', 'mov eax, dword [0x00015110]', 'xor r15d, r15d', 'or eax, dword [0x000150dc]', 'jne 0x5c63', 'call fcn.0000f330', 'endbr64', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x40', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov rbp, rsp', 'lea rsi, [var_20h]', 'mov rdi, rbp', 'call fcn.0000dfd0', 'push r12', 'mov rcx, qword [0x000e1250]', 'push rbp', 'mov rbp, rdi', 'mov rdi, qword [0x000e1230]', 'push rbx', 'test rdi, rdi', 'je 0xe030', 'mov rdi, rcx', 'xor ebx, ebx', 'call fcn.000085f0', 'endbr64', 'push rbp', 'mov r8d, edi', 'mov rdx, rdi', 'push rbx', 'shr r8d, 0x19', 'shr rdx, 0x15', 'mov rbx, rdi', 'lea r9d, [r8 + 0xa]', 'and edx, 0xf', 'lea esi, [r8 + 0x7bb]', 'mov ecx, ebx', 'imul r10d, r9d, 0x16d', 'sar esi, 2', 'sub edx, 1', 'mov r11d, ebx', 'sub rsp, 0x18', 'movsxd rbp, edx', 'shr ecx, 0xb', 'and r11d, 0x1f', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, rdi', 'and ecx, 0x1f', 'add r11d, r11d', 'shr rax, 0x10', 'lea r10d, [rsi + r10 - 0x1ec]', 'lea rsi, obj.ydays', 'and eax, 0x1f', 'movzx esi, word [rsi + rbp*2]', 'lea edi, [rax - 1]', 'mov eax, ebx', 'shr eax, 5', 'add esi, r10d', 'and eax, 0x3f', 'cmp edx, 1', 'jle 0x8691', 'imul eax, eax, 0x3c', 'movsxd rdx, ecx', 'imul rdx, rdx, 0xe10', 'add eax, r11d', 'cdqe', 'add rax, rdx', 'lea edx, [rdi + rsi]', 'imul rdx, rdx, 0x15180', 'add rax, rdx', 'add rax, qword [obj.__timezone]', 'cmp rbx, 0x7431ffff', 'jbe 0x86e0', 'test rax, rax', 'mov edx, 0x7fffffff', 'cmovs rax, rdx', 'mov qword [rsp], rax', 'mov rdi, rsp', 'call sym.imp.localtime']"
230,update-alternatives,246,"['call sym.imp.localtime', 'lea rdx, str._Y__m__d__H:_M:_S', 'mov esi, 0x40', 'mov rdi, rbx', 'mov rcx, rax', 'call sym.imp.strftime', 'mov r8, rbx', 'mov esi, 1', 'mov rdi, rbp', 'lea rcx, str.update_alternatives', 'lea rdx, str._s__s:_', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rdi, qword [0x0000e960]', 'mov esi, 1', 'mov rdx, r12', 'lea rax, [arg_150h]', 'lea rcx, [var_8h]', 'mov dword [var_8h], 8', 'mov qword [var_10h], rax', 'lea rax, [var_70h]', 'mov dword [var_ch], 0x30', 'mov qword [var_18h], rax', 'call sym.imp.__vfprintf_chk', 'mov rsi, qword [0x0000e960]', 'mov edi, 0xa', 'call sym.imp.fputc', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x5117', 'add rsp, 0x128', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov dword [rbx + 0x18], ebp', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rax, r12', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r12, rax', 'jmp 0x3452', 'cmp byte [var_3bh], 0', 'jne 0x347e', 'mov rdi, qword [var_8h]', 'mov rdx, r12', 'mov rsi, rbp', 'call fcn.00006f30', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x118', 'mov rax, qword fs:[0x28]', 'mov qword [var_108h], rax', 'xor eax, eax', 'cmp qword [rdi + 0x28], 0', 'je 0x7750', 'mov rsi, qword [rdi]', 'lea rdi, str.link_group__s_fully_removed', 'call fcn.00004f60', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x128', 'mov qword [var_78h], rsi', 'mov qword [var_80h], rdx', 'mov qword [var_88h], rcx', 'mov qword [var_90h], r8', 'mov qword [var_98h], r9', 'test al, al', 'je 0x4fd9', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'mov rbp, qword [0x0000e960]', 'test rbp, rbp', 'je 0x50c0', 'mov r13, rsp', 'lea rbx, [var_20h]', 'mov rdi, r13', 'call sym.imp.time', 'mov rdi, r13', 'call sym.imp.localtime']"
231,utmpdump,222,"['call sym.imp.localtime_r', 'jmp 0x432c', 'test rax, rax', 'je 0x4370', 'mov rsi, qword [rbx + 8]', 'mov r8, rbp', 'mov rcx, r13', 'mov edx, r12d', 'mov rdi, r14', 'call fcn.000040c0', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'push r12', 'mov r12, rcx', 'push rbp', 'mov ebp, edx', 'and edx, 1', 'push rbx', 'mov rbx, r8', 'jne 0x4290', 'mov eax, ebp', 'and eax, 3', 'cmp eax, 3', 'je 0x4210', 'test bpl, 2', 'jne 0x423c', 'mov r9, r14', 'lea r8, str.._06ld', 'test bpl, 8', 'jne 0x4127', 'test bpl, 0x10', 'jne 0x4120', 'and ebp, 4', 'jne 0x415e', 'xor eax, eax', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rbx, qword [var_38h]', 'xor rbx, qword fs:[0x28]', 'jne 0x439a', 'add rsp, 0x40', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'jne 0x2f62', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x2fba', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rcx, r12', 'mov edx, 1', 'mov esi, 0x180', 'mov rdi, rbp', 'call sym.imp.fread', 'cmp rax, 1', 'je 0x2ffe', 'mov rsi, rbx', 'mov rdi, rbp', 'call fcn.00002e30', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'lea rsi, [rdi + 0x15c]', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x98', 'mov ecx, dword [rdi + 0x160]', 'mov rax, qword fs:[0x28]', 'mov qword [var_88h], rax', 'xor eax, eax', 'test ecx, ecx', 'jne 0x2e79', 'lea rdx, [var_50h]', 'mov ecx, 0x2e', 'mov edi, 0xa', 'call sym.imp.inet_ntop', 'mov r12, rax', 'lea r13, [var_20h]', 'lea rdi, [var_10h]', 'mov ecx, 0x28', 'movsxd rax, dword [rbx + 0x154]', 'mov rdx, r13', 'mov esi, 0x77', 'mov qword [var_10h], rax', 'movsxd rax, dword [rbx + 0x158]', 'mov qword [var_18h], rax', 'call fcn.000042f0', 'endbr64', 'push r14', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12d, esi', 'push rbp', 'mov rbp, rcx', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x40', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov r14, rsp', 'and esi, 0x40', 'mov rsi, r14', 'je 0x4368', 'call sym.imp.localtime_r']"
232,valgrind-di-server,407,"['call sym.imp.ctime', 'mov rdx, r12', 'mov edi, 1', 'lea rsi, str.valgrind_di_server__s_at__s', 'mov rcx, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'add rsp, 0x10', 'pop r12', 'ret', 'lea rsi, [0x00002b00]', 'mov edi, 2', 'call sym.imp.__sysv_signal', 'mov edx, dword [0x00008050]', 'mov rdi, qword [0x00008068]', 'xor esi, esi', 'mov dword [0x00008070], 0', 'imul rdx, rdx, 0x38', 'call sym.imp.memset', 'xor edx, edx', 'mov esi, 1', 'mov edi, 2', 'call sym.imp.socket', 'mov ebx, eax', 'test eax, eax', 'js 0x17fe', 'lea r12, [optval]', 'mov r8d, 4', 'mov edx, 2', 'mov edi, eax', 'mov rcx, r12', 'mov esi, 1', 'mov dword [optval], 1', 'call sym.imp.setsockopt', 'test eax, eax', 'js 0x17e6', 'rol bp, 8', 'lea rsi, [address]', 'mov edx, 0x10', 'mov edi, ebx', 'mov word [address], 2', 'mov dword [var_34h], 0', 'mov word [var_32h], bp', 'call sym.imp.bind', 'test eax, eax', 'js 0x1816', 'mov esi, dword [0x00008050]', 'mov edi, ebx', 'lea rbp, [var_18h]', 'call sym.imp.listen', 'test eax, eax', 'jne 0x183d', 'lea rax, [var_14h]', 'mov r14d, 0x3e8', 'mov qword [rsp], rax', 'xor edx, edx', 'mov esi, 1', 'mov rdi, rbp', 'mov dword [var_18h], ebx', 'mov dword [var_1ch], 1', 'call sym.imp.poll', 'mov r15d, eax', 'test eax, eax', 'je 0x1855', 'cmp qword [0x00008060], 0', 'je 0x1a83', 'cmp qword [0x00008058], 0', 'je 0x1a9e', 'mov r8, qword [0x00008060]', 'mov r9, qword [0x00008058]', 'xor edx, edx', 'mov rax, qword [0x00008068]', 'jmp 0x18ba', 'cmp dword [0x00008050], edx', 'ja 0x188a', 'movsxd rsi, r15d', 'mov edx, 0x14', 'mov rdi, r8', 'call sym.imp.poll', 'test eax, eax', 'js 0x1ad1', 'je 0x1639', 'xor r13d, r13d', 'jmp 0x18e9', 'cmp r15d, r13d', 'jle 0x1639', 'mov rax, qword [0x00008060]', 'test byte [rax + r13*8 + 6], 1', 'je 0x18e5', 'mov rax, qword [0x00008058]', 'mov ecx, dword [rax + r13*4]', 'mov edi, ecx', 'mov dword [var_ch], ecx', 'call fcn.00003280', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'lea r11, [rsp - 0x20000]', 'sub rsp, fcn.00001000', 'or qword [rsp], 0', 'cmp rsp, r11', 'jne 0x3292', 'sub rsp, 0x48', 'test edi, edi', 'js 0x3d93', 'cmp edi, dword [0x00008050]', 'jae 0x3d93', 'movsxd rdi, edi', 'mov rax, qword [0x00008068]', 'lea rbx, [rdi*8]', 'sub rbx, rdi', 'shl rbx, 3', 'add rax, rbx', 'cmp byte [rax], 0', 'je 0x3eaf', 'mov r13d, dword [rax + 4]', 'lea rsi, [var_38h]', 'mov edx, 8', 'xor ebp, ebp', 'xor r12d, r12d', 'mov edi, r13d', 'call fcn.00002a90', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x2adf', 'xor r12d, r12d', 'jmp 0x2ad1', 'add rsp, 8', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'cmp eax, 8', 'je 0x33c0', 'mov rcx, qword [0x00008068]', 'add rcx, rbx', 'mov edi, dword [rcx + 4]', 'test edi, edi', 'jle 0x3324', 'mov edi, dword [rcx + 8]', 'test edi, edi', 'jle 0x333a', 'mov r8, qword [rcx + 0x20]', 'test r8, r8', 'jne 0x3610', 'pxor xmm0, xmm0', 'mov qword [rcx + 0x30], 0', 'movups xmmword [rcx], xmm0', 'movups xmmword [rcx + 0x10], xmm0', 'movups xmmword [rcx + 0x20], xmm0', 'test rbp, rbp', 'je 0x337d', 'test r12, r12', 'je 0x33b8', 'mov eax, 1', 'jmp 0x33a1', 'add rsp, 0x20048', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'movsxd rcx, dword [var_ch]', 'test al, al', 'jne 0x1a21', 'mov rdi, qword [obj.stdout]', 'sub dword [0x00008070], 1', 'call sym.imp.fflush', 'cmp dword [0x00008070], 0', 'jne 0x18e5', 'cmp byte [var_bh], 0', 'je 0x18e5', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'lea rdi, str.exited', 'call fcn.00002580', 'push r12', 'mov r12, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'call sym.imp.time', 'lea rdi, [timer]', 'mov qword [timer], rax', 'call sym.imp.ctime']"
233,valgrind-listener,494,"['call sym.imp.ctime', 'mov rdx, r12', 'mov edi, 1', 'lea rsi, str.valgrind_listener__s_at__s', 'mov rcx, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'add rsp, 0x10', 'pop r12', 'ret', 'lea rsi, [0x00001d10]', 'mov edi, 2', 'call sym.imp.signal', 'xor eax, eax', 'cmp dword [0x00004050], 0', 'mov dword [0x0000404c], 0', 'je 0x14c2', 'xor edx, edx', 'mov esi, 1', 'mov edi, 2', 'call sym.imp.socket', 'mov ebx, eax', 'test eax, eax', 'js 0x16ee', 'lea rcx, [optval]', 'mov r8d, 4', 'mov edx, 2', 'mov edi, eax', 'mov esi, 1', 'mov dword [optval], 1', 'call sym.imp.setsockopt', 'test eax, eax', 'js 0x16d6', 'rol bp, 8', 'lea rsi, [address]', 'mov edx, 0x10', 'mov edi, ebx', 'mov word [address], 2', 'mov dword [var_44h], 0', 'mov word [var_42h], bp', 'call sym.imp.bind', 'test eax, eax', 'js 0x172a', 'mov esi, dword [0x00004050]', 'mov edi, ebx', 'lea r13, [var_50h]', 'call sym.imp.listen', 'test eax, eax', 'jne 0x1751', 'lea rax, [var_2ch]', 'lea r14, [var_30h]', 'mov qword [var_8h], rax', 'mov qword [var_50h], 0', 'xor esi, esi', 'mov rdi, r13', 'mov qword [var_58h], 0xbebc200', 'call sym.imp.nanosleep', 'mov r12, qword [var_8h]', 'xor edx, edx', 'mov esi, 1', 'mov rdi, r13', 'mov dword [var_50h], ebx', 'mov dword [var_54h], 1', 'call sym.imp.poll', 'test eax, eax', 'je 0x1769', 'mov ebp, eax', 'mov rdi, qword [0x00004058]', 'xor eax, eax', 'xor esi, esi', 'jmp 0x17be', 'cmp dword [0x00004050], eax', 'ja 0x1778', 'xor edx, edx', 'call sym.imp.poll', 'test eax, eax', 'js 0x1a8f', 'je 0x1563', 'mov dword [var_14h], ebx', 'xor r12d, r12d', 'mov qword [var_18h], r14', 'jmp 0x17ed', 'cmp ebp, r12d', 'jle 0x1a81', 'mov rax, qword [0x00004058]', 'lea r14, [r12*8]', 'add rax, r14', 'test byte [rax + 6], 1', 'je 0x17e9', 'mov r15d, dword [rax]', 'mov esi, 3', 'xor eax, eax', 'mov edi, r15d', 'call sym.imp.fcntl', 'mov esi, 4', 'mov edi, r15d', 'and ah, 0xf7', 'mov edx, eax', 'xor eax, eax', 'call sym.imp.fcntl', 'test eax, eax', 'jne 0x1abf', 'mov edx, 0x63', 'mov rsi, r13', 'mov edi, r15d', 'call sym.imp.read', 'mov ebx, eax', 'test eax, eax', 'jg 0x18a6', 'mov rax, qword [0x00004058]', 'mov edi, dword [rax + r14]', 'call sym.imp.close', 'mov rcx, qword [0x00004058]', 'mov rax, qword [0x00004060]', 'mov edx, dword [0x00004050]', 'add rcx, r14', 'lea rsi, [rax + rdx*4]', 'jmp 0x1890', 'cmp rsi, rax', 'jne 0x187f', 'mov rdx, rax', 'mov edi, dword [rcx]', 'add rax, 4', 'cmp dword [rdx], edi', 'je 0x19fe', 'mov dword [rdx], 0', 'mov eax, dword [0x0000404c]', 'mov edi, 1', 'lea rsi, str._n__d______________________DISCONNECT_____________________n__d__n__d__', 'lea edx, [rax - 1]', 'xor eax, eax', 'mov r8d, edx', 'mov ecx, edx', 'mov dword [0x0000404c], edx', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'cmp dword [0x0000404c], 0', 'jne 0x17e9', 'cmp byte [var_13h], 0', 'je 0x17e9', 'lea rsi, [0x000025cb]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'lea rdi, str.exited', 'call fcn.00001c60', 'push r12', 'mov r12, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'call sym.imp.time', 'lea rdi, [timer]', 'mov qword [timer], rax', 'call sym.imp.ctime']"
234,xz,24,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x93a0', 'mov dword [0x000140d4], 0', 'xor edi, edi', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
235,zdump,161,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x3320', 'xor r14d, r14d', 'jmp 0x27d4', 'mov rbp, qword [var_70h]', 'cmp rbp, qword [var_10h]', 'jge 0x2af5', 'cmp byte [var_4fh], 0', 'jne 0x2b38', 'mov rbx, qword [ptr]', 'mov rdi, qword [rbx]', 'lea rax, [rbx + 8]', 'mov qword [obj.__environ], rax', 'call sym.imp.free', 'add qword [var_18h], 8', 'mov rax, qword [var_18h]', 'cmp qword [var_50h], rax', 'jne 0x26a0', 'mov rax, qword [var_18h]', 'mov r12, qword [rax]', 'mov rax, qword [0x00007080]', 'mov qword [ptr], rax', 'test rax, rax', 'je 0x3200', 'mov rdi, r12', 'call sym.imp.strlen', 'lea rdi, [rax + 4]', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov dword [rax], 0x3d5a54', 'mov rsi, r12', 'call sym.imp.strcat', 'mov rbx, qword [ptr]', 'mov qword [rbx], rax', 'mov qword [0x00007080], rbx', 'mov qword [obj.__environ], rbx', 'call sym.imp.tzset', 'cmp byte [var_4eh], 0', 'je 0x3298', 'movabs rax, 0x8000000000000000', 'cmp byte [var_4fh], 0', 'mov byte [0x00007099], 0', 'mov qword [var_70h], rax', 'je 0x3328', 'mov rbx, qword [var_60h]', 'cmp rbx, rax', 'jle 0x273e', 'mov rsi, qword [var_58h]', 'lea rdi, [var_70h]', 'call sym.imp.localtime_r']"
236,zdump,69,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x3320', 'xor r14d, r14d', 'jmp 0x27d4', 'mov rbp, qword [var_70h]', 'cmp rbp, qword [var_10h]', 'jge 0x2af5', 'lea r13, [var_d0h]', 'lea r12, [var_78h]', 'mov r15, rbp', 'nop dword [rax]', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r']"
237,zdump,128,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x3320', 'xor r14d, r14d', 'jmp 0x27d4', 'mov rbp, qword [var_70h]', 'cmp rbp, qword [var_10h]', 'jge 0x2af5', 'lea r13, [var_d0h]', 'lea r12, [var_78h]', 'mov r15, rbp', 'nop dword [rax]', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r']"
238,zdump,204,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x3320', 'xor r14d, r14d', 'jmp 0x27d4', 'mov rbp, qword [var_70h]', 'cmp rbp, qword [var_10h]', 'jge 0x2af5', 'lea r13, [var_d0h]', 'lea r12, [var_78h]', 'mov r15, rbp', 'nop dword [rax]', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'lea rbp, [var_150h]', 'mov qword [var_28h], r12', 'lea r14, [var_88h]', 'mov qword [var_30h], r13', 'mov r12, rbp', 'mov r13, r8', 'mov rbp, r15', 'mov r15, rdx', 'nop dword [rax]', 'mov rdx, r15', 'sar rdx, 1', 'add rdx, r13', 'cmp r13, rdx', 'jl 0x2dd0', 'add rdx, 1', 'mov qword [var_88h], rdx', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp.localtime_r']"
239,zdump,189,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x3320', 'xor r14d, r14d', 'jmp 0x27d4', 'mov rbp, qword [var_70h]', 'cmp rbp, qword [var_10h]', 'jge 0x2af5', 'lea r13, [var_d0h]', 'lea r12, [var_78h]', 'mov r15, rbp', 'nop dword [rax]', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r']"
240,zdump,191,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x3320', 'xor r14d, r14d', 'jmp 0x27d4', 'mov rbp, qword [var_70h]', 'cmp rbp, qword [var_10h]', 'jge 0x2af5', 'cmp byte [var_4fh], 0', 'jne 0x2b38', 'mov rbx, qword [ptr]', 'mov rdi, qword [rbx]', 'lea rax, [rbx + 8]', 'mov qword [obj.__environ], rax', 'call sym.imp.free', 'add qword [var_18h], 8', 'mov rax, qword [var_18h]', 'cmp qword [var_50h], rax', 'jne 0x26a0', 'mov rax, qword [var_18h]', 'mov r12, qword [rax]', 'mov rax, qword [0x00007080]', 'mov qword [ptr], rax', 'test rax, rax', 'je 0x3200', 'mov rdi, r12', 'call sym.imp.strlen', 'lea rdi, [rax + 4]', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov dword [rax], 0x3d5a54', 'mov rsi, r12', 'call sym.imp.strcat', 'mov rbx, qword [ptr]', 'mov qword [rbx], rax', 'mov qword [0x00007080], rbx', 'mov qword [obj.__environ], rbx', 'call sym.imp.tzset', 'cmp byte [var_4eh], 0', 'je 0x3298', 'mov rax, qword [var_18h]', 'mov esi, dword [0x000070a8]', 'lea rdi, str.__s__', 'mov r12, qword [rax]', 'mov rax, qword [var_68h]', 'mov rdx, r12', 'mov qword [var_110h], rax', 'xor eax, eax', 'call sym.imp.printf', 'lea rdi, [var_110h]', 'lea rsi, [var_150h]', 'call sym.imp.localtime_r']"
241,zdump,230,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x3320', 'xor r14d, r14d', 'jmp 0x27d4', 'mov rbp, qword [var_70h]', 'cmp rbp, qword [var_10h]', 'jge 0x2af5', 'cmp byte [var_4fh], 0', 'jne 0x2b38', 'movabs rax, 0x7ffffffffffeae7f', 'mov rbx, qword [var_18h]', 'mov rsi, rax', 'mov qword [var_70h], rax', 'mov rdi, qword [rbx]', 'call fcn.00003d20', 'push r12', 'mov rdx, rdi', 'push rbp', 'mov rbp, rdi', 'lea rdi, str.__s__', 'push rbx', 'sub rsp, 0x90', 'mov qword [canary], rsi', 'mov esi, dword [0x000070a8]', 'lea r12, [canary]', 'mov rax, qword fs:[0x28]', 'mov qword [var_88h], rax', 'xor eax, eax', 'call sym.imp.printf', 'lea rsi, [var_50h]', 'mov rdi, r12', 'call sym.imp.gmtime_r', 'test rax, rax', 'je 0x3e68', 'mov rsi, qword [canary]', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'jmp 0x3d8c', 'lea rdi, [0x00005092]', 'xor eax, eax', 'call sym.imp.printf', 'mov rdi, r12', 'lea rsi, [var_10h]', 'call sym.imp.localtime_r']"
242,zdump,165,"['call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov r15, qword [var_78h]', 'test r14b, r14b', 'je 0x31c0', 'mov qword [var_70h], r15', 'jmp 0x2aea', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'cmp byte [var_4fh], 0', 'jne 0x2b38', 'mov rbx, qword [ptr]', 'mov rdi, qword [rbx]', 'lea rax, [rbx + 8]', 'mov qword [obj.__environ], rax', 'call sym.imp.free', 'add qword [var_18h], 8', 'mov rax, qword [var_18h]', 'cmp qword [var_50h], rax', 'jne 0x26a0', 'mov rax, qword [var_18h]', 'mov r12, qword [rax]', 'mov rax, qword [0x00007080]', 'mov qword [ptr], rax', 'test rax, rax', 'je 0x3200', 'mov rdi, r12', 'call sym.imp.strlen', 'lea rdi, [rax + 4]', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov dword [rax], 0x3d5a54', 'mov rsi, r12', 'call sym.imp.strcat', 'mov rbx, qword [ptr]', 'mov qword [rbx], rax', 'mov qword [0x00007080], rbx', 'mov qword [obj.__environ], rbx', 'call sym.imp.tzset', 'cmp byte [var_4eh], 0', 'je 0x3298', 'movabs rax, 0x8000000000000000', 'cmp byte [var_4fh], 0', 'mov byte [0x00007099], 0', 'mov qword [var_70h], rax', 'je 0x3328', 'mov rbx, qword [var_60h]', 'cmp rbx, rax', 'jle 0x273e', 'mov rsi, qword [var_58h]', 'lea rdi, [var_70h]', 'call sym.imp.localtime_r']"
243,zdump,69,"['call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov r15, qword [var_78h]', 'test r14b, r14b', 'je 0x31c0', 'mov qword [var_70h], r15', 'jmp 0x2aea', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r']"
244,zdump,59,"['call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r']"
245,zdump,135,"['call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'lea rbp, [var_150h]', 'mov qword [var_28h], r12', 'lea r14, [var_88h]', 'mov qword [var_30h], r13', 'mov r12, rbp', 'mov r13, r8', 'mov rbp, r15', 'mov r15, rdx', 'nop dword [rax]', 'mov rdx, r15', 'sar rdx, 1', 'add rdx, r13', 'cmp r13, rdx', 'jl 0x2dd0', 'add rdx, 1', 'mov qword [var_88h], rdx', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp.localtime_r']"
246,zdump,120,"['call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r']"
247,zdump,195,"['call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov r15, qword [var_78h]', 'test r14b, r14b', 'je 0x31c0', 'mov qword [var_70h], r15', 'jmp 0x2aea', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'cmp byte [var_4fh], 0', 'jne 0x2b38', 'mov rbx, qword [ptr]', 'mov rdi, qword [rbx]', 'lea rax, [rbx + 8]', 'mov qword [obj.__environ], rax', 'call sym.imp.free', 'add qword [var_18h], 8', 'mov rax, qword [var_18h]', 'cmp qword [var_50h], rax', 'jne 0x26a0', 'mov rax, qword [var_18h]', 'mov r12, qword [rax]', 'mov rax, qword [0x00007080]', 'mov qword [ptr], rax', 'test rax, rax', 'je 0x3200', 'mov rdi, r12', 'call sym.imp.strlen', 'lea rdi, [rax + 4]', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov dword [rax], 0x3d5a54', 'mov rsi, r12', 'call sym.imp.strcat', 'mov rbx, qword [ptr]', 'mov qword [rbx], rax', 'mov qword [0x00007080], rbx', 'mov qword [obj.__environ], rbx', 'call sym.imp.tzset', 'cmp byte [var_4eh], 0', 'je 0x3298', 'mov rax, qword [var_18h]', 'mov esi, dword [0x000070a8]', 'lea rdi, str.__s__', 'mov r12, qword [rax]', 'mov rax, qword [var_68h]', 'mov rdx, r12', 'mov qword [var_110h], rax', 'xor eax, eax', 'call sym.imp.printf', 'lea rdi, [var_110h]', 'lea rsi, [var_150h]', 'call sym.imp.localtime_r']"
248,zdump,234,"['call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov r15, qword [var_78h]', 'test r14b, r14b', 'je 0x31c0', 'mov qword [var_70h], r15', 'jmp 0x2aea', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'cmp byte [var_4fh], 0', 'jne 0x2b38', 'movabs rax, 0x7ffffffffffeae7f', 'mov rbx, qword [var_18h]', 'mov rsi, rax', 'mov qword [var_70h], rax', 'mov rdi, qword [rbx]', 'call fcn.00003d20', 'push r12', 'mov rdx, rdi', 'push rbp', 'mov rbp, rdi', 'lea rdi, str.__s__', 'push rbx', 'sub rsp, 0x90', 'mov qword [canary], rsi', 'mov esi, dword [0x000070a8]', 'lea r12, [canary]', 'mov rax, qword fs:[0x28]', 'mov qword [var_88h], rax', 'xor eax, eax', 'call sym.imp.printf', 'lea rsi, [var_50h]', 'mov rdi, r12', 'call sym.imp.gmtime_r', 'test rax, rax', 'je 0x3e68', 'mov rsi, qword [canary]', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'jmp 0x3d8c', 'lea rdi, [0x00005092]', 'xor eax, eax', 'call sym.imp.printf', 'mov rdi, r12', 'lea rsi, [var_10h]', 'call sym.imp.localtime_r']"
249,zdump,315,"['call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'mov rsi, rdx', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'cmp byte [var_4fh], 0', 'jne 0x2b38', 'mov rbx, qword [ptr]', 'mov rdi, qword [rbx]', 'lea rax, [rbx + 8]', 'mov qword [obj.__environ], rax', 'call sym.imp.free', 'add qword [var_18h], 8', 'mov rax, qword [var_18h]', 'cmp qword [var_50h], rax', 'jne 0x26a0', 'mov rax, qword [var_18h]', 'mov r12, qword [rax]', 'mov rax, qword [0x00007080]', 'mov qword [ptr], rax', 'test rax, rax', 'je 0x3200', 'mov rdi, r12', 'call sym.imp.strlen', 'lea rdi, [rax + 4]', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov dword [rax], 0x3d5a54', 'mov rsi, r12', 'call sym.imp.strcat', 'mov rbx, qword [ptr]', 'mov qword [rbx], rax', 'mov qword [0x00007080], rbx', 'mov qword [obj.__environ], rbx', 'call sym.imp.tzset', 'cmp byte [var_4eh], 0', 'je 0x3298', 'movabs rax, 0x8000000000000000', 'cmp byte [var_4fh], 0', 'mov byte [0x00007099], 0', 'mov qword [var_70h], rax', 'je 0x3328', 'mov rbx, qword [var_60h]', 'cmp rbx, rax', 'jle 0x273e', 'mov rsi, qword [var_58h]', 'lea rdi, [var_70h]', 'call sym.imp.localtime_r']"
250,zdump,219,"['call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'mov rsi, rdx', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r']"
251,zdump,278,"['call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'mov rsi, rdx', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r']"
252,zdump,76,"['call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'lea rbp, [var_150h]', 'mov qword [var_28h], r12', 'lea r14, [var_88h]', 'mov qword [var_30h], r13', 'mov r12, rbp', 'mov r13, r8', 'mov rbp, r15', 'mov r15, rdx', 'nop dword [rax]', 'mov rdx, r15', 'sar rdx, 1', 'add rdx, r13', 'cmp r13, rdx', 'jl 0x2dd0', 'add rdx, 1', 'mov qword [var_88h], rdx', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp.localtime_r']"
253,zdump,61,"['call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r']"
254,zdump,345,"['call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'mov rsi, rdx', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'cmp byte [var_4fh], 0', 'jne 0x2b38', 'mov rbx, qword [ptr]', 'mov rdi, qword [rbx]', 'lea rax, [rbx + 8]', 'mov qword [obj.__environ], rax', 'call sym.imp.free', 'add qword [var_18h], 8', 'mov rax, qword [var_18h]', 'cmp qword [var_50h], rax', 'jne 0x26a0', 'mov rax, qword [var_18h]', 'mov r12, qword [rax]', 'mov rax, qword [0x00007080]', 'mov qword [ptr], rax', 'test rax, rax', 'je 0x3200', 'mov rdi, r12', 'call sym.imp.strlen', 'lea rdi, [rax + 4]', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov dword [rax], 0x3d5a54', 'mov rsi, r12', 'call sym.imp.strcat', 'mov rbx, qword [ptr]', 'mov qword [rbx], rax', 'mov qword [0x00007080], rbx', 'mov qword [obj.__environ], rbx', 'call sym.imp.tzset', 'cmp byte [var_4eh], 0', 'je 0x3298', 'mov rax, qword [var_18h]', 'mov esi, dword [0x000070a8]', 'lea rdi, str.__s__', 'mov r12, qword [rax]', 'mov rax, qword [var_68h]', 'mov rdx, r12', 'mov qword [var_110h], rax', 'xor eax, eax', 'call sym.imp.printf', 'lea rdi, [var_110h]', 'lea rsi, [var_150h]', 'call sym.imp.localtime_r']"
255,zdump,284,"['call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'mov r14, qword [var_18h]', 'mov rax, qword [var_78h]', 'mov rdi, qword [r14]', 'lea rsi, [rax - 1]', 'call fcn.00003d20', 'push r12', 'mov rdx, rdi', 'push rbp', 'mov rbp, rdi', 'lea rdi, str.__s__', 'push rbx', 'sub rsp, 0x90', 'mov qword [canary], rsi', 'mov esi, dword [0x000070a8]', 'lea r12, [canary]', 'mov rax, qword fs:[0x28]', 'mov qword [var_88h], rax', 'xor eax, eax', 'call sym.imp.printf', 'lea rsi, [var_50h]', 'mov rdi, r12', 'call sym.imp.gmtime_r', 'test rax, rax', 'je 0x3e68', 'mov rsi, qword [canary]', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'jmp 0x3d8c', 'lea rdi, [0x00005092]', 'xor eax, eax', 'call sym.imp.printf', 'mov rdi, r12', 'lea rsi, [var_10h]', 'call sym.imp.localtime_r']"
256,zdump,324,"['call sym.imp.localtime_r', 'test rax, rax', 'setne dl', 'test bl, bl', 'je 0x2df0', 'mov r9, qword [var_88h]', 'cmp bl, dl', 'je 0x2e10', 'mov r13, qword [var_80h]', 'mov r15, r9', 'sub r15, r13', 'jmp 0x2a6f', 'mov rbp, r9', 'cmp r15, 1', 'jg 0x2918', 'mov r12, qword [var_28h]', 'mov r13, qword [var_30h]', 'mov r15, rbp', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'mov rsi, rdx', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'cmp byte [var_4fh], 0', 'jne 0x2b38', 'mov rbx, qword [ptr]', 'mov rdi, qword [rbx]', 'lea rax, [rbx + 8]', 'mov qword [obj.__environ], rax', 'call sym.imp.free', 'add qword [var_18h], 8', 'mov rax, qword [var_18h]', 'cmp qword [var_50h], rax', 'jne 0x26a0', 'mov rax, qword [var_18h]', 'mov r12, qword [rax]', 'mov rax, qword [0x00007080]', 'mov qword [ptr], rax', 'test rax, rax', 'je 0x3200', 'mov rdi, r12', 'call sym.imp.strlen', 'lea rdi, [rax + 4]', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov dword [rax], 0x3d5a54', 'mov rsi, r12', 'call sym.imp.strcat', 'mov rbx, qword [ptr]', 'mov qword [rbx], rax', 'mov qword [0x00007080], rbx', 'mov qword [obj.__environ], rbx', 'call sym.imp.tzset', 'cmp byte [var_4eh], 0', 'je 0x3298', 'movabs rax, 0x8000000000000000', 'cmp byte [var_4fh], 0', 'mov byte [0x00007099], 0', 'mov qword [var_70h], rax', 'je 0x3328', 'mov rbx, qword [var_60h]', 'cmp rbx, rax', 'jle 0x273e', 'mov rsi, qword [var_58h]', 'lea rdi, [var_70h]', 'call sym.imp.localtime_r']"
257,zdump,228,"['call sym.imp.localtime_r', 'test rax, rax', 'setne dl', 'test bl, bl', 'je 0x2df0', 'mov r9, qword [var_88h]', 'cmp bl, dl', 'je 0x2e10', 'mov r13, qword [var_80h]', 'mov r15, r9', 'sub r15, r13', 'jmp 0x2a6f', 'mov rbp, r9', 'cmp r15, 1', 'jg 0x2918', 'mov r12, qword [var_28h]', 'mov r13, qword [var_30h]', 'mov r15, rbp', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'mov rsi, rdx', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r']"
258,zdump,287,"['call sym.imp.localtime_r', 'test rax, rax', 'setne dl', 'test bl, bl', 'je 0x2df0', 'mov r9, qword [var_88h]', 'cmp bl, dl', 'je 0x2e10', 'mov r13, qword [var_80h]', 'mov r15, r9', 'sub r15, r13', 'jmp 0x2a6f', 'mov rbp, r9', 'cmp r15, 1', 'jg 0x2918', 'mov r12, qword [var_28h]', 'mov r13, qword [var_30h]', 'mov r15, rbp', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'mov rsi, rdx', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r']"
259,zdump,73,"['call sym.imp.localtime_r', 'test rax, rax', 'setne dl', 'test bl, bl', 'je 0x2df0', 'mov r9, qword [var_88h]', 'cmp bl, dl', 'je 0x2e10', 'mov r13, qword [var_80h]', 'mov r15, r9', 'sub r15, r13', 'jmp 0x2a6f', 'mov rbp, r9', 'cmp r15, 1', 'jg 0x2918', 'mov rdx, r15', 'sar rdx, 1', 'add rdx, r13', 'cmp r13, rdx', 'jl 0x2dd0', 'add rdx, 1', 'mov qword [var_88h], rdx', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp.localtime_r']"
260,zdump,70,"['call sym.imp.localtime_r', 'test rax, rax', 'setne dl', 'test bl, bl', 'je 0x2df0', 'mov r9, qword [var_88h]', 'cmp bl, dl', 'je 0x2e10', 'mov r13, qword [var_80h]', 'mov r15, r9', 'sub r15, r13', 'jmp 0x2a6f', 'mov rbp, r9', 'cmp r15, 1', 'jg 0x2918', 'mov r12, qword [var_28h]', 'mov r13, qword [var_30h]', 'mov r15, rbp', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r']"
261,zdump,354,"['call sym.imp.localtime_r', 'test rax, rax', 'setne dl', 'test bl, bl', 'je 0x2df0', 'mov r9, qword [var_88h]', 'cmp bl, dl', 'je 0x2e10', 'mov r13, qword [var_80h]', 'mov r15, r9', 'sub r15, r13', 'jmp 0x2a6f', 'mov rbp, r9', 'cmp r15, 1', 'jg 0x2918', 'mov r12, qword [var_28h]', 'mov r13, qword [var_30h]', 'mov r15, rbp', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'mov rsi, rdx', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'cmp byte [var_4fh], 0', 'jne 0x2b38', 'mov rbx, qword [ptr]', 'mov rdi, qword [rbx]', 'lea rax, [rbx + 8]', 'mov qword [obj.__environ], rax', 'call sym.imp.free', 'add qword [var_18h], 8', 'mov rax, qword [var_18h]', 'cmp qword [var_50h], rax', 'jne 0x26a0', 'mov rax, qword [var_18h]', 'mov r12, qword [rax]', 'mov rax, qword [0x00007080]', 'mov qword [ptr], rax', 'test rax, rax', 'je 0x3200', 'mov rdi, r12', 'call sym.imp.strlen', 'lea rdi, [rax + 4]', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov dword [rax], 0x3d5a54', 'mov rsi, r12', 'call sym.imp.strcat', 'mov rbx, qword [ptr]', 'mov qword [rbx], rax', 'mov qword [0x00007080], rbx', 'mov qword [obj.__environ], rbx', 'call sym.imp.tzset', 'cmp byte [var_4eh], 0', 'je 0x3298', 'mov rax, qword [var_18h]', 'mov esi, dword [0x000070a8]', 'lea rdi, str.__s__', 'mov r12, qword [rax]', 'mov rax, qword [var_68h]', 'mov rdx, r12', 'mov qword [var_110h], rax', 'xor eax, eax', 'call sym.imp.printf', 'lea rdi, [var_110h]', 'lea rsi, [var_150h]', 'call sym.imp.localtime_r']"
262,zdump,293,"['call sym.imp.localtime_r', 'test rax, rax', 'setne dl', 'test bl, bl', 'je 0x2df0', 'mov r9, qword [var_88h]', 'cmp bl, dl', 'je 0x2e10', 'mov r13, qword [var_80h]', 'mov r15, r9', 'sub r15, r13', 'jmp 0x2a6f', 'mov rbp, r9', 'cmp r15, 1', 'jg 0x2918', 'mov r12, qword [var_28h]', 'mov r13, qword [var_30h]', 'mov r15, rbp', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'mov r14, qword [var_18h]', 'mov rax, qword [var_78h]', 'mov rdi, qword [r14]', 'lea rsi, [rax - 1]', 'call fcn.00003d20', 'push r12', 'mov rdx, rdi', 'push rbp', 'mov rbp, rdi', 'lea rdi, str.__s__', 'push rbx', 'sub rsp, 0x90', 'mov qword [canary], rsi', 'mov esi, dword [0x000070a8]', 'lea r12, [canary]', 'mov rax, qword fs:[0x28]', 'mov qword [var_88h], rax', 'xor eax, eax', 'call sym.imp.printf', 'lea rsi, [var_50h]', 'mov rdi, r12', 'call sym.imp.gmtime_r', 'test rax, rax', 'je 0x3e68', 'mov rsi, qword [canary]', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'jmp 0x3d8c', 'lea rdi, [0x00005092]', 'xor eax, eax', 'call sym.imp.printf', 'mov rdi, r12', 'lea rsi, [var_10h]', 'call sym.imp.localtime_r']"
263,zdump,254,"['call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'mov rsi, rdx', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'cmp byte [var_4fh], 0', 'jne 0x2b38', 'mov rbx, qword [ptr]', 'mov rdi, qword [rbx]', 'lea rax, [rbx + 8]', 'mov qword [obj.__environ], rax', 'call sym.imp.free', 'add qword [var_18h], 8', 'mov rax, qword [var_18h]', 'cmp qword [var_50h], rax', 'jne 0x26a0', 'mov rax, qword [var_18h]', 'mov r12, qword [rax]', 'mov rax, qword [0x00007080]', 'mov qword [ptr], rax', 'test rax, rax', 'je 0x3200', 'mov rdi, r12', 'call sym.imp.strlen', 'lea rdi, [rax + 4]', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov dword [rax], 0x3d5a54', 'mov rsi, r12', 'call sym.imp.strcat', 'mov rbx, qword [ptr]', 'mov qword [rbx], rax', 'mov qword [0x00007080], rbx', 'mov qword [obj.__environ], rbx', 'call sym.imp.tzset', 'cmp byte [var_4eh], 0', 'je 0x3298', 'movabs rax, 0x8000000000000000', 'cmp byte [var_4fh], 0', 'mov byte [0x00007099], 0', 'mov qword [var_70h], rax', 'je 0x3328', 'mov rbx, qword [var_60h]', 'cmp rbx, rax', 'jle 0x273e', 'mov rsi, qword [var_58h]', 'lea rdi, [var_70h]', 'call sym.imp.localtime_r']"
264,zdump,158,"['call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'mov rsi, rdx', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r']"
265,zdump,217,"['call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'mov rsi, rdx', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r']"
266,zdump,264,"['call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'lea rax, [var_b0h]', 'mov r13, rsi', 'mov r15, rcx', 'mov dword [var_34h], 0x37', 'mov qword [var_10h], 0', 'mov rbp, rax', 'mov qword [rsp], rax', 'mov qword [size], 0x3e8', 'nop word cs:[rax + rax]', 'mov rsi, qword [var_38h]', 'mov rbx, qword [size]', 'movzx eax, byte [rsi]', 'mov r12, rsi', 'jmp 0x3fd1', 'cmp al, 0x25', 'jne 0x3f18', 'test al, al', 'jne 0x42e0', 'mov r14, r12', 'sub r14, rsi', 'lea rdi, [r14 + 2]', 'cmp rdi, 0x63', 'ja 0x4010', 'lea r8, [s1]', 'mov rdx, r14', 'mov rdi, r8', 'call sym.imp.memcpy', 'mov rcx, r13', 'mov rsi, rbx', 'mov rdi, rbp', 'mov r8, rax', 'mov eax, 0x58', 'mov word [r8 + r14], ax', 'mov rdx, r8', 'call sym.imp.strftime', 'mov r14, rax', 'test r14, r14', 'je 0x4070', 'lea rax, [r14 - 1]', 'lea rcx, [r12 + 1]', 'add rbp, rax', 'sub rbx, rax', 'cmp byte [r12], 0', 'mov qword [ptr], rcx', 'je 0x43b0', 'mov byte [rbp], 0', 'mov rdi, qword [rsp]', 'call sym.imp.puts', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'mov rdi, qword [var_10h]', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp sym.imp.free', 'endbr64', 'bnd jmp qword [reloc.free]', 'mov rax, qword [0x00007070]', 'lea rdi, [rax + r14 + 1]', 'cmp rax, rdi', 'ja 0x3554', 'mov qword [0x00007070], rdi', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov qword [0x00007078], rax', 'mov rsi, rbp', 'call sym.imp.strcpy', 'mov qword [s2], rax', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'lea rbp, [var_150h]', 'mov qword [var_28h], r12', 'lea r14, [var_88h]', 'mov qword [var_30h], r13', 'mov r12, rbp', 'mov r13, r8', 'mov rbp, r15', 'mov r15, rdx', 'nop dword [rax]', 'mov rdx, r15', 'sar rdx, 1', 'add rdx, r13', 'cmp r13, rdx', 'jl 0x2dd0', 'add rdx, 1', 'mov qword [var_88h], rdx', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp.localtime_r']"
267,zdump,249,"['call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'lea rax, [var_b0h]', 'mov r13, rsi', 'mov r15, rcx', 'mov dword [var_34h], 0x37', 'mov qword [var_10h], 0', 'mov rbp, rax', 'mov qword [rsp], rax', 'mov qword [size], 0x3e8', 'nop word cs:[rax + rax]', 'mov rsi, qword [var_38h]', 'mov rbx, qword [size]', 'movzx eax, byte [rsi]', 'mov r12, rsi', 'jmp 0x3fd1', 'cmp al, 0x25', 'jne 0x3f18', 'test al, al', 'jne 0x42e0', 'mov r14, r12', 'sub r14, rsi', 'lea rdi, [r14 + 2]', 'cmp rdi, 0x63', 'ja 0x4010', 'lea r8, [s1]', 'mov rdx, r14', 'mov rdi, r8', 'call sym.imp.memcpy', 'mov rcx, r13', 'mov rsi, rbx', 'mov rdi, rbp', 'mov r8, rax', 'mov eax, 0x58', 'mov word [r8 + r14], ax', 'mov rdx, r8', 'call sym.imp.strftime', 'mov r14, rax', 'test r14, r14', 'je 0x4070', 'lea rax, [r14 - 1]', 'lea rcx, [r12 + 1]', 'add rbp, rax', 'sub rbx, rax', 'cmp byte [r12], 0', 'mov qword [ptr], rcx', 'je 0x43b0', 'mov byte [rbp], 0', 'mov rdi, qword [rsp]', 'call sym.imp.puts', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'mov rdi, qword [var_10h]', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp sym.imp.free', 'endbr64', 'bnd jmp qword [reloc.free]', 'mov rax, qword [0x00007070]', 'lea rdi, [rax + r14 + 1]', 'cmp rax, rdi', 'ja 0x3554', 'mov qword [0x00007070], rdi', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov qword [0x00007078], rax', 'mov rsi, rbp', 'call sym.imp.strcpy', 'mov qword [s2], rax', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r']"
268,zdump,284,"['call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'test rax, rax', 'mov rax, qword [var_18h]', 'mov ecx, 0', 'mov rsi, rbx', 'cmovne rcx, qword [var_100h]', 'mov rdx, qword [var_78h]', 'lea rdi, str._Y__m__d_t_L_t_Q', 'mov r8, qword [rax]', 'call fcn.00003e90', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x4a8', 'mov qword [var_38h], rdi', 'mov qword [var_28h], r8', 'mov rax, qword fs:[0x28]', 'mov qword [var_498h], rax', 'xor eax, eax', 'test rsi, rsi', 'je 0x4430', 'mov rsi, rdx', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_498h]', 'xor rax, qword fs:[0x28]', 'jne 0x44b4', 'add rsp, 0x4a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'cmp byte [var_4fh], 0', 'jne 0x2b38', 'mov rbx, qword [ptr]', 'mov rdi, qword [rbx]', 'lea rax, [rbx + 8]', 'mov qword [obj.__environ], rax', 'call sym.imp.free', 'add qword [var_18h], 8', 'mov rax, qword [var_18h]', 'cmp qword [var_50h], rax', 'jne 0x26a0', 'mov rax, qword [var_18h]', 'mov r12, qword [rax]', 'mov rax, qword [0x00007080]', 'mov qword [ptr], rax', 'test rax, rax', 'je 0x3200', 'mov rdi, r12', 'call sym.imp.strlen', 'lea rdi, [rax + 4]', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov dword [rax], 0x3d5a54', 'mov rsi, r12', 'call sym.imp.strcat', 'mov rbx, qword [ptr]', 'mov qword [rbx], rax', 'mov qword [0x00007080], rbx', 'mov qword [obj.__environ], rbx', 'call sym.imp.tzset', 'cmp byte [var_4eh], 0', 'je 0x3298', 'mov rax, qword [var_18h]', 'mov esi, dword [0x000070a8]', 'lea rdi, str.__s__', 'mov r12, qword [rax]', 'mov rax, qword [var_68h]', 'mov rdx, r12', 'mov qword [var_110h], rax', 'xor eax, eax', 'call sym.imp.printf', 'lea rdi, [var_110h]', 'lea rsi, [var_150h]', 'call sym.imp.localtime_r']"
269,zdump,223,"['call sym.imp.localtime_r', 'cmp byte [var_4dh], 0', 'mov rbx, rax', 'je 0x31d0', 'mov r14, qword [var_18h]', 'mov rax, qword [var_78h]', 'mov rdi, qword [r14]', 'lea rsi, [rax - 1]', 'call fcn.00003d20', 'push r12', 'mov rdx, rdi', 'push rbp', 'mov rbp, rdi', 'lea rdi, str.__s__', 'push rbx', 'sub rsp, 0x90', 'mov qword [canary], rsi', 'mov esi, dword [0x000070a8]', 'lea r12, [canary]', 'mov rax, qword fs:[0x28]', 'mov qword [var_88h], rax', 'xor eax, eax', 'call sym.imp.printf', 'lea rsi, [var_50h]', 'mov rdi, r12', 'call sym.imp.gmtime_r', 'test rax, rax', 'je 0x3e68', 'mov rsi, qword [canary]', 'lea rdi, [0x000050ac]', 'call sym.imp.printf', 'jmp 0x3d8c', 'lea rdi, [0x00005092]', 'xor eax, eax', 'call sym.imp.printf', 'mov rdi, r12', 'lea rsi, [var_10h]', 'call sym.imp.localtime_r']"
270,zdump,163,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'lea rdi, str.NULL', 'xor eax, eax', 'jmp sym.imp.printf', 'test rbx, rbx', 'je 0x335b', 'mov rsi, qword [rbx + 0x30]', 'cmp byte [rsi], 0', 'jne 0x33c6', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [rbx + 0x30]', 'cmp byte [rdi], 0', 'je 0x2b38', 'mov rsi, r12', 'call fcn.00003a50', 'cmp byte [0x00007099], 0', 'jne 0x3b51', 'push r13', 'mov rdx, rdi', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'jmp 0x3a9c', 'movzx eax, byte [rdx]', 'cmp al, 0x5a', 'jle 0x3a78', 'cmp al, 0x40', 'jg 0x3a98', 'lea ecx, [rax - 0x2b]', 'and ecx, 0xfd', 'je 0x3a98', 'movsx ecx, al', 'sub ecx, 0x30', 'cmp ecx, 9', 'ja 0x3ab0', 'sub rdx, rbx', 'cmp rdx, 2', 'jle 0x3adf', 'cmp rdx, 6', 'jg 0x3b52', 'test al, al', 'je 0x3b46', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'jmp 0x3dfb', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x3e7e', 'add rsp, 0x90', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_70h]', 'jmp 0x272f', 'mov rbx, qword [var_60h]', 'cmp rbx, rax', 'jle 0x273e', 'mov rsi, qword [var_58h]', 'lea rdi, [var_70h]', 'call sym.imp.localtime_r']"
271,zdump,172,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'lea rdi, str.NULL', 'xor eax, eax', 'jmp sym.imp.printf', 'test rbx, rbx', 'je 0x335b', 'mov rsi, qword [rbx + 0x30]', 'cmp byte [rsi], 0', 'jne 0x33c6', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [rbx + 0x30]', 'cmp byte [rdi], 0', 'je 0x2b38', 'mov rsi, r12', 'call fcn.00003a50', 'cmp byte [0x00007099], 0', 'jne 0x3b51', 'push r13', 'mov rdx, rdi', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'jmp 0x3a9c', 'movzx eax, byte [rdx]', 'cmp al, 0x5a', 'jle 0x3a78', 'cmp al, 0x40', 'jg 0x3a98', 'lea ecx, [rax - 0x2b]', 'and ecx, 0xfd', 'je 0x3a98', 'movsx ecx, al', 'sub ecx, 0x30', 'cmp ecx, 9', 'ja 0x3ab0', 'sub rdx, rbx', 'cmp rdx, 2', 'jle 0x3adf', 'cmp rdx, 6', 'jg 0x3b52', 'test al, al', 'je 0x3b46', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'jmp 0x3dfb', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x3e7e', 'add rsp, 0x90', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'jmp 0x2ad4', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r']"
272,zdump,231,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'lea rdi, str.NULL', 'xor eax, eax', 'jmp sym.imp.printf', 'test rbx, rbx', 'je 0x335b', 'mov rsi, qword [rbx + 0x30]', 'cmp byte [rsi], 0', 'jne 0x33c6', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [rbx + 0x30]', 'cmp byte [rdi], 0', 'je 0x2b38', 'mov rsi, r12', 'call fcn.00003a50', 'cmp byte [0x00007099], 0', 'jne 0x3b51', 'push r13', 'mov rdx, rdi', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'jmp 0x3a9c', 'movzx eax, byte [rdx]', 'cmp al, 0x5a', 'jle 0x3a78', 'cmp al, 0x40', 'jg 0x3a98', 'lea ecx, [rax - 0x2b]', 'and ecx, 0xfd', 'je 0x3a98', 'movsx ecx, al', 'sub ecx, 0x30', 'cmp ecx, 9', 'ja 0x3ab0', 'sub rdx, rbx', 'cmp rdx, 2', 'jle 0x3adf', 'cmp rdx, 6', 'jg 0x3b52', 'test al, al', 'je 0x3b46', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'jmp 0x3dfb', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x3e7e', 'add rsp, 0x90', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'jmp 0x2ad4', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r']"
273,zdump,307,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'lea rdi, str.NULL', 'xor eax, eax', 'jmp sym.imp.printf', 'test rbx, rbx', 'je 0x335b', 'mov rsi, qword [rbx + 0x30]', 'cmp byte [rsi], 0', 'jne 0x33c6', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [rbx + 0x30]', 'cmp byte [rdi], 0', 'je 0x2b38', 'mov rsi, r12', 'call fcn.00003a50', 'cmp byte [0x00007099], 0', 'jne 0x3b51', 'push r13', 'mov rdx, rdi', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'jmp 0x3a9c', 'movzx eax, byte [rdx]', 'cmp al, 0x5a', 'jle 0x3a78', 'cmp al, 0x40', 'jg 0x3a98', 'lea ecx, [rax - 0x2b]', 'and ecx, 0xfd', 'je 0x3a98', 'movsx ecx, al', 'sub ecx, 0x30', 'cmp ecx, 9', 'ja 0x3ab0', 'sub rdx, rbx', 'cmp rdx, 2', 'jle 0x3adf', 'cmp rdx, 6', 'jg 0x3b52', 'test al, al', 'je 0x3b46', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'jmp 0x3dfb', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x3e7e', 'add rsp, 0x90', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'jmp 0x2ad4', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'lea rbp, [var_150h]', 'mov qword [var_28h], r12', 'lea r14, [var_88h]', 'mov qword [var_30h], r13', 'mov r12, rbp', 'mov r13, r8', 'mov rbp, r15', 'mov r15, rdx', 'nop dword [rax]', 'mov rdx, r15', 'sar rdx, 1', 'add rdx, r13', 'cmp r13, rdx', 'jl 0x2dd0', 'add rdx, 1', 'mov qword [var_88h], rdx', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp.localtime_r']"
274,zdump,292,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'lea rdi, str.NULL', 'xor eax, eax', 'jmp sym.imp.printf', 'test rbx, rbx', 'je 0x335b', 'mov rsi, qword [rbx + 0x30]', 'cmp byte [rsi], 0', 'jne 0x33c6', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [rbx + 0x30]', 'cmp byte [rdi], 0', 'je 0x2b38', 'mov rsi, r12', 'call fcn.00003a50', 'cmp byte [0x00007099], 0', 'jne 0x3b51', 'push r13', 'mov rdx, rdi', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'jmp 0x3a9c', 'movzx eax, byte [rdx]', 'cmp al, 0x5a', 'jle 0x3a78', 'cmp al, 0x40', 'jg 0x3a98', 'lea ecx, [rax - 0x2b]', 'and ecx, 0xfd', 'je 0x3a98', 'movsx ecx, al', 'sub ecx, 0x30', 'cmp ecx, 9', 'ja 0x3ab0', 'sub rdx, rbx', 'cmp rdx, 2', 'jle 0x3adf', 'cmp rdx, 6', 'jg 0x3b52', 'test al, al', 'je 0x3b46', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'jmp 0x3dfb', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x3e7e', 'add rsp, 0x90', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'jmp 0x2ad4', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r']"
275,zdump,235,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'lea rdi, str.NULL', 'xor eax, eax', 'jmp sym.imp.printf', 'test rbx, rbx', 'je 0x335b', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2b38', 'mov rbx, qword [ptr]', 'mov rdi, qword [rbx]', 'lea rax, [rbx + 8]', 'mov qword [obj.__environ], rax', 'call sym.imp.free', 'add qword [var_18h], 8', 'mov rax, qword [var_18h]', 'cmp qword [var_50h], rax', 'jne 0x26a0', 'mov rax, qword [var_18h]', 'mov r12, qword [rax]', 'mov rax, qword [0x00007080]', 'mov qword [ptr], rax', 'test rax, rax', 'je 0x3200', 'mov rdi, r12', 'call sym.imp.strlen', 'lea rdi, [rax + 4]', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov dword [rax], 0x3d5a54', 'mov rsi, r12', 'call sym.imp.strcat', 'mov rbx, qword [ptr]', 'mov qword [rbx], rax', 'mov qword [0x00007080], rbx', 'mov qword [obj.__environ], rbx', 'call sym.imp.tzset', 'cmp byte [var_4eh], 0', 'je 0x3298', 'mov rax, qword [var_18h]', 'mov esi, dword [0x000070a8]', 'lea rdi, str.__s__', 'mov r12, qword [rax]', 'mov rax, qword [var_68h]', 'mov rdx, r12', 'mov qword [var_110h], rax', 'xor eax, eax', 'call sym.imp.printf', 'lea rdi, [var_110h]', 'lea rsi, [var_150h]', 'call sym.imp.localtime_r']"
276,zdump,194,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'push rbx', 'movsxd rax, dword [rdi + 0x18]', 'mov rbx, rdi', 'lea rsi, [0x00005004]', 'cmp eax, 6', 'jbe 0x39e0', 'movsxd rax, dword [rbx + 0x10]', 'lea rdx, [0x00005004]', 'cmp eax, 0xb', 'jbe 0x39c8', 'mov eax, dword [rbx]', 'sub rsp, 8', 'mov ecx, dword [rbx + 0xc]', 'lea rdi, str._s__s_3d__.2d:_.2d:_.2d_', 'push rax', 'mov r8d, dword [rbx + 8]', 'xor eax, eax', 'mov r9d, dword [rbx + 4]', 'call sym.imp.printf', 'movsxd rsi, dword [rbx + 0x14]', 'mov rdx, rsi', 'imul rsi, rsi, 0x66666667', 'mov eax, edx', 'sar eax, 0x1f', 'sar rsi, 0x22', 'sub esi, eax', 'lea eax, [rsi + rsi*4]', 'mov ecx, esi', 'lea r8d, [rsi + 0xbe]', 'pop rsi', 'add eax, eax', 'pop rdi', 'sub edx, eax', 'mov esi, edx', 'jns 0x3a08', 'test r8d, r8d', 'jns 0x39af', 'test r8d, r8d', 'jne 0x3a20', 'lea rdi, [0x000050e9]', 'xor eax, eax', 'pop rbx', 'jmp sym.imp.printf', 'lea rdi, [0x0000508e]', 'xor eax, eax', 'call sym.imp.printf', 'lea rdi, [0x00005092]', 'xor eax, eax', 'call sym.imp.printf', 'mov rdi, r12', 'lea rsi, [var_10h]', 'call sym.imp.localtime_r']"
277,zdump,118,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'lea rdi, str.NULL', 'xor eax, eax', 'jmp sym.imp.printf', 'test rbx, rbx', 'je 0x3e40', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x3dfb', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x3e7e', 'add rsp, 0x90', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rax, qword [var_70h]', 'jmp 0x272f', 'mov rbx, qword [var_60h]', 'cmp rbx, rax', 'jle 0x273e', 'mov rsi, qword [var_58h]', 'lea rdi, [var_70h]', 'call sym.imp.localtime_r']"
278,zdump,127,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'lea rdi, str.NULL', 'xor eax, eax', 'jmp sym.imp.printf', 'test rbx, rbx', 'je 0x3e40', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x3dfb', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x3e7e', 'add rsp, 0x90', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'jmp 0x2ad4', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r']"
279,zdump,186,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'lea rdi, str.NULL', 'xor eax, eax', 'jmp sym.imp.printf', 'test rbx, rbx', 'je 0x3e40', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x3dfb', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x3e7e', 'add rsp, 0x90', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'jmp 0x2ad4', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r']"
280,zdump,262,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'lea rdi, str.NULL', 'xor eax, eax', 'jmp sym.imp.printf', 'test rbx, rbx', 'je 0x3e40', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x3dfb', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x3e7e', 'add rsp, 0x90', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'jmp 0x2ad4', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'lea rbp, [var_150h]', 'mov qword [var_28h], r12', 'lea r14, [var_88h]', 'mov qword [var_30h], r13', 'mov r12, rbp', 'mov r13, r8', 'mov rbp, r15', 'mov r15, rdx', 'nop dword [rax]', 'mov rdx, r15', 'sar rdx, 1', 'add rdx, r13', 'cmp r13, rdx', 'jl 0x2dd0', 'add rdx, 1', 'mov qword [var_88h], rdx', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp.localtime_r']"
281,zdump,247,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'lea rdi, str.NULL', 'xor eax, eax', 'jmp sym.imp.printf', 'test rbx, rbx', 'je 0x3e40', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x3dfb', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x3e7e', 'add rsp, 0x90', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'jmp 0x2ad4', 'mov r15, qword [var_78h]', 'xor r14d, r14d', 'mov qword [var_70h], r15', 'test rbx, rbx', 'jne 0x31b0', 'cmp qword [var_10h], r15', 'jg 0x27f8', 'movabs rsi, 0x7fffffffffff573e', 'mov rbx, qword [var_10h]', 'mov rax, rbx', 'cmp r15, rsi', 'jg 0x2820', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], rax', 'call sym.imp.localtime_r', 'test rax, rax', 'setne al', 'cmp al, r14b', 'je 0x2ec8', 'mov rbx, qword [var_70h]', 'mov r15, qword [var_78h]', 'lea rsi, [var_110h]', 'lea rdi, [var_80h]', 'mov qword [var_80h], rbx', 'call sym.imp.localtime_r', 'test rax, rax', 'setne bl', 'je 0x28d7', 'mov r8, qword [var_80h]', 'mov rdx, r15', 'sub rdx, r8', 'cmp rdx, 1', 'jle 0x2a89', 'mov rsi, r13', 'mov rdi, r12', 'mov qword [var_78h], r15', 'call sym.imp.localtime_r']"
282,zdump,244,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'lea rdi, str.NULL', 'xor eax, eax', 'jmp sym.imp.printf', 'test rbx, rbx', 'je 0x3e40', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x3dfb', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x3e7e', 'add rsp, 0x90', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'nop dword [rax]', 'mov rbx, qword [ptr]', 'mov rdi, qword [rbx]', 'lea rax, [rbx + 8]', 'mov qword [obj.__environ], rax', 'call sym.imp.free', 'add qword [var_18h], 8', 'mov rax, qword [var_18h]', 'cmp qword [var_50h], rax', 'jne 0x26a0', 'mov rax, qword [var_18h]', 'mov r12, qword [rax]', 'mov rax, qword [0x00007080]', 'mov qword [ptr], rax', 'test rax, rax', 'je 0x3200', 'mov rdi, r12', 'call sym.imp.strlen', 'lea rdi, [rax + 4]', 'call sym.imp.malloc', 'mov rdi, rax', 'test rax, rax', 'je 0x353e', 'mov dword [rax], 0x3d5a54', 'mov rsi, r12', 'call sym.imp.strcat', 'mov rbx, qword [ptr]', 'mov qword [rbx], rax', 'mov qword [0x00007080], rbx', 'mov qword [obj.__environ], rbx', 'call sym.imp.tzset', 'cmp byte [var_4eh], 0', 'je 0x3298', 'mov rax, qword [var_18h]', 'mov esi, dword [0x000070a8]', 'lea rdi, str.__s__', 'mov r12, qword [rax]', 'mov rax, qword [var_68h]', 'mov rdx, r12', 'mov qword [var_110h], rax', 'xor eax, eax', 'call sym.imp.printf', 'lea rdi, [var_110h]', 'lea rsi, [var_150h]', 'call sym.imp.localtime_r']"
283,zdump,194,"['call sym.imp.localtime_r', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.00003920', 'test rdi, rdi', 'je 0x3a40', 'push rbx', 'movsxd rax, dword [rdi + 0x18]', 'mov rbx, rdi', 'lea rsi, [0x00005004]', 'cmp eax, 6', 'jbe 0x39e0', 'movsxd rax, dword [rbx + 0x10]', 'lea rdx, [0x00005004]', 'cmp eax, 0xb', 'jbe 0x39c8', 'mov eax, dword [rbx]', 'sub rsp, 8', 'mov ecx, dword [rbx + 0xc]', 'lea rdi, str._s__s_3d__.2d:_.2d:_.2d_', 'push rax', 'mov r8d, dword [rbx + 8]', 'xor eax, eax', 'mov r9d, dword [rbx + 4]', 'call sym.imp.printf', 'movsxd rsi, dword [rbx + 0x14]', 'mov rdx, rsi', 'imul rsi, rsi, 0x66666667', 'mov eax, edx', 'sar eax, 0x1f', 'sar rsi, 0x22', 'sub esi, eax', 'lea eax, [rsi + rsi*4]', 'mov ecx, esi', 'lea r8d, [rsi + 0xbe]', 'pop rsi', 'add eax, eax', 'pop rdi', 'sub edx, eax', 'mov esi, edx', 'jns 0x3a08', 'test r8d, r8d', 'jns 0x39af', 'test r8d, r8d', 'jne 0x3a20', 'lea rdi, [0x000050e9]', 'xor eax, eax', 'pop rbx', 'jmp sym.imp.printf', 'lea rdi, [0x0000508e]', 'xor eax, eax', 'call sym.imp.printf', 'lea rdi, [0x00005092]', 'xor eax, eax', 'call sym.imp.printf', 'mov rdi, r12', 'lea rsi, [var_10h]', 'call sym.imp.localtime_r']"
284,zip,423,"['call sym.imp.localtime', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.__________n', 'mov edx, 0xa', 'mov esi, 1', 'mov rbx, rax', 'call sym.imp.fwrite', 'mov rdi, rbx', 'call sym.imp.asctime', 'mov rdi, qword [obj.logfile]', 'lea rdx, str.Zip_log_opened__s', 'mov rcx, rax', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.command_line_arguments:_n_', 'mov edx, 0x19', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rax, qword [var_a8h]', 'mov rbp, qword [rax + 8]', 'test rbp, rbp', 'je 0x8d96', 'mov rcx, qword [obj.logfile]', 'lea rdi, [0x00024fdd]', 'mov edx, 2', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rdi, qword [obj.logfile]', 'call sym.imp.fflush', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'cmp dword [obj.fix], 0', 'je 0x9a97', 'cmp dword [obj.diff_mode], 0', 'jne 0xe144', 'movzx ecx, byte [var_20h]', 'mov eax, dword [0x00233010]', 'xor ecx, 1', 'cmp eax, 4', 'sete dl', 'jne 0xa7de', 'test cl, cl', 'je 0x8eed', 'lea rsi, str._____________________zip__F_indamagedarchive___out_outfixedarchive', 'lea rdi, str.fix_options__F_and__FF_require___out:_n', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov rdi, rbp', 'xor ebx, ebx', 'jmp 0x8c2f', 'mov esi, 0x2f', 'call sym.imp.strrchr', 'test rax, rax', 'jne 0x8c28', 'test rbx, rbx', 'mov esi, 0x2e', 'cmove rbx, rbp', 'mov rdi, rbx', 'call sym.imp.strrchr', 'test rax, rax', 'je 0xd004', 'cmp dword [obj.logfile_append], 1', 'lea rsi, [var_f0h]', 'mov rdi, rbp', 'sbb eax, eax', 'and eax, 0x16', 'add eax, 0x61', 'mov word [var_f0h], ax', 'call sym.imp.fopen64', 'test rax, rax', 'mov qword [obj.logfile], rax', 'je 0xe40d', 'lea rbx, [timer]', 'mov r12d, 0x10', 'lea r13, [0x0002da3a]', 'mov rdi, rbx', 'call sym.imp.time', 'mov rdi, rbx', 'call sym.imp.localtime']"
285,zip,78,"['call sym.imp.localtime', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.__________n', 'mov edx, 0xa', 'mov esi, 1', 'mov rbx, rax', 'call sym.imp.fwrite', 'mov rdi, rbx', 'call sym.imp.asctime']"
286,zip,379,"['call sym.imp.localtime', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.__________n', 'mov edx, 0xa', 'mov esi, 1', 'mov rbx, rax', 'call sym.imp.fwrite', 'mov rdi, rbx', 'call sym.imp.asctime', 'mov rdi, qword [obj.logfile]', 'lea rdx, str.Zip_log_opened__s', 'mov rcx, rax', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.command_line_arguments:_n_', 'mov edx, 0x19', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rax, qword [var_a8h]', 'mov rbp, qword [rax + 8]', 'test rbp, rbp', 'je 0x8d96', 'mov rcx, qword [obj.logfile]', 'lea rdi, [0x00024fdd]', 'mov edx, 2', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rdi, qword [obj.logfile]', 'call sym.imp.fflush', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'jmp 0x8e96', 'mov rsi, qword [obj.out_path]', 'mov rdi, qword [obj.in_path]', 'call fcn.000204c0', 'movzx eax, byte [rdi]', 'movzx edx, byte [rsi]', 'mov r8d, eax', 'sub eax, edx', 'jne 0x20500', 'test dl, dl', 'je 0x20500', 'test r8b, r8b', 'jne 0x204e9', 'jmp 0x20502', 'ret', 'test eax, eax', 'jne 0xac56', 'mov qword [r14 + 0x30], 0', 'mov rax, qword [arg_98h]', 'add qword [obj.files_total], 1', 'lea rdx, [rax + 2]', 'cmp rdx, 1', 'jbe 0xac83', 'mov r14, qword [r14 + 0x40]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.noisy], 0', 'je 0xabd3', 'mov eax, dword [0x00233010]', 'test eax, eax', 'je 0xab81', 'cmp eax, 3', 'je 0xab81', 'mov rdi, qword [r14]', 'xor ecx, ecx', 'mov rdx, rbx', 'xor esi, esi', 'call fcn.00021c90', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'mov r12, rdx', 'mov rbx, rdi', 'mov rbp, rcx', 'sub rsp, 0xa8', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'cmp rbx, qword [obj.label]', 'je 0x21e40', 'lea edi, [rax + 1]', 'mov r15, rax', 'movsxd rdi, edi', 'call sym.imp.malloc', 'test rax, rax', 'mov r14, rax', 'je 0x21ef0', 'mov rsi, rbx', 'mov rdi, r14', 'movsxd r15, r15d', 'call sym.imp.strcpy', 'lea rax, [r14 + r15 - 1]', 'cmp byte [rax], 0x2f', 'je 0x21eb0', 'cmp byte [rbx], 0x2d', 'je 0x21df0', 'mov eax, dword [obj.linkput]', 'mov rbx, rsp', 'mov rdx, rsp', 'mov rsi, r14', 'mov edi, 1', 'test eax, eax', 'je 0x21e88', 'call sym.imp.__lxstat64', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x21e9a', 'mov rdi, r14', 'call sym.imp.free', 'test r13, r13', 'je 0x21d7b', 'test r12, r12', 'je 0x21d9f', 'test rbp, rbp', 'je 0x21dba', 'lea rdi, [rbx + 0x58]', 'call fcn.0001aa30', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, qword [rdi]', 'mov rdi, rsp', 'add rax, 1', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
287,zip,444,"['call sym.imp.localtime', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.__________n', 'mov edx, 0xa', 'mov esi, 1', 'mov rbx, rax', 'call sym.imp.fwrite', 'mov rdi, rbx', 'call sym.imp.asctime', 'mov rdi, qword [obj.logfile]', 'lea rdx, str.Zip_log_opened__s', 'mov rcx, rax', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.command_line_arguments:_n_', 'mov edx, 0x19', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rax, qword [var_a8h]', 'mov rbp, qword [rax + 8]', 'test rbp, rbp', 'je 0x8d96', 'mov rcx, qword [obj.logfile]', 'lea rdi, [0x00024fdd]', 'mov edx, 2', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rdi, qword [obj.logfile]', 'call sym.imp.fflush', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'jmp 0x8e96', 'mov rsi, qword [obj.out_path]', 'mov rdi, qword [obj.in_path]', 'call fcn.000204c0', 'movzx eax, byte [rdi]', 'movzx edx, byte [rsi]', 'mov r8d, eax', 'sub eax, edx', 'jne 0x20500', 'test dl, dl', 'je 0x20500', 'test r8b, r8b', 'jne 0x204e9', 'jmp 0x20502', 'ret', 'test eax, eax', 'jne 0xac56', 'mov qword [r14 + 0x30], 0', 'mov rax, qword [arg_98h]', 'add qword [obj.files_total], 1', 'lea rdx, [rax + 2]', 'cmp rdx, 1', 'jbe 0xac83', 'mov r14, qword [r14 + 0x40]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.noisy], 0', 'je 0xabd3', 'mov eax, dword [0x00233010]', 'test eax, eax', 'je 0xab81', 'cmp eax, 3', 'je 0xab81', 'mov rdi, qword [r14]', 'xor ecx, ecx', 'mov rdx, rbx', 'xor esi, esi', 'call fcn.00021c90', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'mov r12, rdx', 'mov rbx, rdi', 'mov rbp, rcx', 'sub rsp, 0xa8', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'cmp rbx, qword [obj.label]', 'je 0x21e40', 'lea edi, [rax + 1]', 'mov r15, rax', 'movsxd rdi, edi', 'call sym.imp.malloc', 'test rax, rax', 'mov r14, rax', 'je 0x21ef0', 'mov rsi, rbx', 'mov rdi, r14', 'movsxd r15, r15d', 'call sym.imp.strcpy', 'lea rax, [r14 + r15 - 1]', 'cmp byte [rax], 0x2f', 'je 0x21eb0', 'cmp byte [rbx], 0x2d', 'je 0x21df0', 'mov eax, dword [obj.linkput]', 'mov rbx, rsp', 'mov rdx, rsp', 'mov rsi, r14', 'mov edi, 1', 'test eax, eax', 'je 0x21e88', 'call sym.imp.__lxstat64', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x21e9a', 'mov rdi, r14', 'call sym.imp.free', 'test r13, r13', 'je 0x21d7b', 'test r12, r12', 'je 0x21d9f', 'test rbp, rbp', 'je 0x21dba', 'lea rdi, [rbx + 0x58]', 'call fcn.0001aa30', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, qword [rdi]', 'mov rdi, rsp', 'add rax, 1', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime', 'test rax, rax', 'je 0x1aae0', 'xor edi, edi', 'call sym.imp.time', 'add rax, 1', 'mov rdi, rsp', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
288,zip,337,"['call sym.imp.localtime', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.__________n', 'mov edx, 0xa', 'mov esi, 1', 'mov rbx, rax', 'call sym.imp.fwrite', 'mov rdi, rbx', 'call sym.imp.asctime', 'mov rdi, qword [obj.logfile]', 'lea rdx, str.Zip_log_opened__s', 'mov rcx, rax', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.command_line_arguments:_n_', 'mov edx, 0x19', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rax, qword [var_a8h]', 'mov rbp, qword [rax + 8]', 'test rbp, rbp', 'je 0x8d96', 'mov rcx, qword [obj.logfile]', 'lea rdi, [0x00024fdd]', 'mov edx, 2', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rdi, qword [obj.logfile]', 'call sym.imp.fflush', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'jmp 0x8e96', 'mov rsi, qword [obj.out_path]', 'mov rdi, qword [obj.in_path]', 'call fcn.000204c0', 'movzx eax, byte [rdi]', 'movzx edx, byte [rsi]', 'mov r8d, eax', 'sub eax, edx', 'jne 0x20500', 'test dl, dl', 'je 0x20500', 'test r8b, r8b', 'jne 0x204e9', 'jmp 0x20502', 'ret', 'test eax, eax', 'jne 0xac56', 'mov qword [r14 + 0x30], 0', 'mov rax, qword [arg_98h]', 'add qword [obj.files_total], 1', 'lea rdx, [rax + 2]', 'cmp rdx, 1', 'jbe 0xac83', 'mov r14, qword [r14 + 0x40]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.mesg_line_started], 0', 'jne 0xce1f', 'mov eax, dword [obj.show_files]', 'test eax, eax', 'mov dword [arg_28h], eax', 'je 0xb2f5', 'cmp qword [arg_18h], 0', 'jne 0xd076', 'cmp qword [obj.found], 0', 'je 0xdc6f', 'cmp dword [obj.diff_mode], 0', 'jne 0xb30f', 'cmp qword [obj.zfiles], 0', 'je 0xe24c', 'cmp dword [obj.allow_empty_archive], 0', 'jne 0xb30f', 'cmp dword [0x00234648], 0', 'je 0xe270', 'mov eax, dword [0x00233010]', 'sub eax, 2', 'cmp eax, 1', 'jbe 0xe33b', 'mov edi, 0xc', 'call fcn.0000fd30', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 0x20', 'mov edx, dword [0x0023464c]', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test edx, edx', 'je 0xfe88', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xff0f', 'cmp byte [rax], 0x2d', 'jne 0xfe9d', 'mov rbx, qword [obj.zfiles]', 'xor r14d, r14d', 'mov r12, rsp', 'lea r13, [var_8h]', 'test rbx, rbx', 'jne 0xfee7', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'cmp byte [rdx + rax - 1], 0x2f', 'je 0xfedb', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'mov rdi, qword [obj.zipfile]', 'mov rsi, r14', 'call fcn.00021c40', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call fcn.0001ab30', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
289,zip,413,"['call sym.imp.localtime', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.__________n', 'mov edx, 0xa', 'mov esi, 1', 'mov rbx, rax', 'call sym.imp.fwrite', 'mov rdi, rbx', 'call sym.imp.asctime', 'mov rdi, qword [obj.logfile]', 'lea rdx, str.Zip_log_opened__s', 'mov rcx, rax', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.command_line_arguments:_n_', 'mov edx, 0x19', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rax, qword [var_a8h]', 'mov rbp, qword [rax + 8]', 'test rbp, rbp', 'je 0x8d96', 'mov rcx, qword [obj.logfile]', 'lea rdi, [0x00024fdd]', 'mov edx, 2', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rdi, qword [obj.logfile]', 'call sym.imp.fflush', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'jmp 0x8e96', 'mov rsi, qword [obj.out_path]', 'mov rdi, qword [obj.in_path]', 'call fcn.000204c0', 'movzx eax, byte [rdi]', 'movzx edx, byte [rsi]', 'mov r8d, eax', 'sub eax, edx', 'jne 0x20500', 'test dl, dl', 'je 0x20500', 'test r8b, r8b', 'jne 0x204e9', 'jmp 0x20502', 'ret', 'test eax, eax', 'jne 0xac56', 'mov qword [r14 + 0x30], 0', 'mov rax, qword [arg_98h]', 'add qword [obj.files_total], 1', 'lea rdx, [rax + 2]', 'cmp rdx, 1', 'jbe 0xac83', 'mov r14, qword [r14 + 0x40]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.mesg_line_started], 0', 'jne 0xce1f', 'mov eax, dword [obj.show_files]', 'test eax, eax', 'mov dword [arg_28h], eax', 'je 0xb2f5', 'cmp qword [arg_18h], 0', 'jne 0xd076', 'cmp qword [obj.found], 0', 'je 0xdc6f', 'cmp dword [obj.diff_mode], 0', 'jne 0xb30f', 'cmp qword [obj.zfiles], 0', 'je 0xe24c', 'cmp dword [obj.allow_empty_archive], 0', 'jne 0xb30f', 'cmp dword [0x00234648], 0', 'je 0xe270', 'mov eax, dword [0x00233010]', 'sub eax, 2', 'cmp eax, 1', 'jbe 0xe33b', 'mov edi, 0xc', 'call fcn.0000fd30', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 0x20', 'mov edx, dword [0x0023464c]', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test edx, edx', 'je 0xfe88', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xff0f', 'cmp byte [rax], 0x2d', 'jne 0xfe9d', 'mov rbx, qword [obj.zfiles]', 'xor r14d, r14d', 'mov r12, rsp', 'lea r13, [var_8h]', 'test rbx, rbx', 'jne 0xfee7', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'cmp byte [rdx + rax - 1], 0x2f', 'je 0xfedb', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'mov rdi, qword [obj.zipfile]', 'mov rsi, r14', 'call fcn.00021c40', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call fcn.0001ab30', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime', 'lea edx, [rbx + rbx]', 'mov dword [rax + 0x20], 0xffffffff', 'mov rdi, rax', 'and edx, 0x3e', 'mov dword [rax], edx', 'mov edx, ebx', 'sar edx, 5', 'and edx, 0x3f', 'mov dword [rax + 4], edx', 'mov edx, ebx', 'sar edx, 0xb', 'and edx, 0x1f', 'mov dword [rax + 8], edx', 'mov rdx, rbx', 'shr rdx, 0x10', 'and edx, 0x1f', 'mov dword [rax + 0xc], edx', 'mov rdx, rbx', 'shr rbx, 0x19', 'shr rdx, 0x15', 'and ebx, 0x7f', 'and edx, 0xf', 'add ebx, 0x50', 'sub edx, 1', 'mov dword [rax + 0x14], ebx', 'mov dword [rax + 0x10], edx', 'call sym.imp.mktime']"
290,zip,345,"['call sym.imp.asctime', 'mov rdi, qword [obj.logfile]', 'lea rdx, str.Zip_log_opened__s', 'mov rcx, rax', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.command_line_arguments:_n_', 'mov edx, 0x19', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rax, qword [var_a8h]', 'mov rbp, qword [rax + 8]', 'test rbp, rbp', 'je 0x8d96', 'mov rcx, qword [obj.logfile]', 'lea rdi, [0x00024fdd]', 'mov edx, 2', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rdi, qword [obj.logfile]', 'call sym.imp.fflush', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'cmp dword [obj.fix], 0', 'je 0x9a97', 'cmp dword [obj.diff_mode], 0', 'jne 0xe144', 'movzx ecx, byte [var_20h]', 'mov eax, dword [0x00233010]', 'xor ecx, 1', 'cmp eax, 4', 'sete dl', 'jne 0xa7de', 'test cl, cl', 'je 0x8eed', 'lea rsi, str._____________________zip__F_indamagedarchive___out_outfixedarchive', 'lea rdi, str.fix_options__F_and__FF_require___out:_n', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov rdi, rbp', 'xor ebx, ebx', 'jmp 0x8c2f', 'mov esi, 0x2f', 'call sym.imp.strrchr', 'test rax, rax', 'jne 0x8c28', 'test rbx, rbx', 'mov esi, 0x2e', 'cmove rbx, rbp', 'mov rdi, rbx', 'call sym.imp.strrchr', 'test rax, rax', 'je 0xd004', 'cmp dword [obj.logfile_append], 1', 'lea rsi, [var_f0h]', 'mov rdi, rbp', 'sbb eax, eax', 'and eax, 0x16', 'add eax, 0x61', 'mov word [var_f0h], ax', 'call sym.imp.fopen64', 'test rax, rax', 'mov qword [obj.logfile], rax', 'je 0xe40d', 'lea rbx, [timer]', 'mov r12d, 0x10', 'lea r13, [0x0002da3a]', 'mov rdi, rbx', 'call sym.imp.time', 'mov rdi, rbx', 'call sym.imp.localtime']"
291,zip,423,"['call sym.imp.asctime', 'mov rdi, qword [obj.logfile]', 'lea rdx, str.Zip_log_opened__s', 'mov rcx, rax', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.command_line_arguments:_n_', 'mov edx, 0x19', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rax, qword [var_a8h]', 'mov rbp, qword [rax + 8]', 'test rbp, rbp', 'je 0x8d96', 'mov rcx, qword [obj.logfile]', 'lea rdi, [0x00024fdd]', 'mov edx, 2', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rdi, qword [obj.logfile]', 'call sym.imp.fflush', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'cmp dword [obj.fix], 0', 'je 0x9a97', 'cmp dword [obj.diff_mode], 0', 'jne 0xe144', 'movzx ecx, byte [var_20h]', 'mov eax, dword [0x00233010]', 'xor ecx, 1', 'cmp eax, 4', 'sete dl', 'jne 0xa7de', 'test cl, cl', 'je 0x8eed', 'lea rsi, str._____________________zip__F_indamagedarchive___out_outfixedarchive', 'lea rdi, str.fix_options__F_and__FF_require___out:_n', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov rdi, rbp', 'xor ebx, ebx', 'jmp 0x8c2f', 'mov esi, 0x2f', 'call sym.imp.strrchr', 'test rax, rax', 'jne 0x8c28', 'test rbx, rbx', 'mov esi, 0x2e', 'cmove rbx, rbp', 'mov rdi, rbx', 'call sym.imp.strrchr', 'test rax, rax', 'je 0xd004', 'cmp dword [obj.logfile_append], 1', 'lea rsi, [var_f0h]', 'mov rdi, rbp', 'sbb eax, eax', 'and eax, 0x16', 'add eax, 0x61', 'mov word [var_f0h], ax', 'call sym.imp.fopen64', 'test rax, rax', 'mov qword [obj.logfile], rax', 'je 0xe40d', 'lea rbx, [timer]', 'mov r12d, 0x10', 'lea r13, [0x0002da3a]', 'mov rdi, rbx', 'call sym.imp.time', 'mov rdi, rbx', 'call sym.imp.localtime', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.__________n', 'mov edx, 0xa', 'mov esi, 1', 'mov rbx, rax', 'call sym.imp.fwrite', 'mov rdi, rbx', 'call sym.imp.asctime']"
292,zip,301,"['call sym.imp.asctime', 'mov rdi, qword [obj.logfile]', 'lea rdx, str.Zip_log_opened__s', 'mov rcx, rax', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.command_line_arguments:_n_', 'mov edx, 0x19', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rax, qword [var_a8h]', 'mov rbp, qword [rax + 8]', 'test rbp, rbp', 'je 0x8d96', 'mov rcx, qword [obj.logfile]', 'lea rdi, [0x00024fdd]', 'mov edx, 2', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rdi, qword [obj.logfile]', 'call sym.imp.fflush', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'jmp 0x8e96', 'mov rsi, qword [obj.out_path]', 'mov rdi, qword [obj.in_path]', 'call fcn.000204c0', 'movzx eax, byte [rdi]', 'movzx edx, byte [rsi]', 'mov r8d, eax', 'sub eax, edx', 'jne 0x20500', 'test dl, dl', 'je 0x20500', 'test r8b, r8b', 'jne 0x204e9', 'jmp 0x20502', 'ret', 'test eax, eax', 'jne 0xac56', 'mov qword [r14 + 0x30], 0', 'mov rax, qword [arg_98h]', 'add qword [obj.files_total], 1', 'lea rdx, [rax + 2]', 'cmp rdx, 1', 'jbe 0xac83', 'mov r14, qword [r14 + 0x40]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.noisy], 0', 'je 0xabd3', 'mov eax, dword [0x00233010]', 'test eax, eax', 'je 0xab81', 'cmp eax, 3', 'je 0xab81', 'mov rdi, qword [r14]', 'xor ecx, ecx', 'mov rdx, rbx', 'xor esi, esi', 'call fcn.00021c90', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'mov r12, rdx', 'mov rbx, rdi', 'mov rbp, rcx', 'sub rsp, 0xa8', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'cmp rbx, qword [obj.label]', 'je 0x21e40', 'lea edi, [rax + 1]', 'mov r15, rax', 'movsxd rdi, edi', 'call sym.imp.malloc', 'test rax, rax', 'mov r14, rax', 'je 0x21ef0', 'mov rsi, rbx', 'mov rdi, r14', 'movsxd r15, r15d', 'call sym.imp.strcpy', 'lea rax, [r14 + r15 - 1]', 'cmp byte [rax], 0x2f', 'je 0x21eb0', 'cmp byte [rbx], 0x2d', 'je 0x21df0', 'mov eax, dword [obj.linkput]', 'mov rbx, rsp', 'mov rdx, rsp', 'mov rsi, r14', 'mov edi, 1', 'test eax, eax', 'je 0x21e88', 'call sym.imp.__lxstat64', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x21e9a', 'mov rdi, r14', 'call sym.imp.free', 'test r13, r13', 'je 0x21d7b', 'test r12, r12', 'je 0x21d9f', 'test rbp, rbp', 'je 0x21dba', 'lea rdi, [rbx + 0x58]', 'call fcn.0001aa30', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, qword [rdi]', 'mov rdi, rsp', 'add rax, 1', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
293,zip,366,"['call sym.imp.asctime', 'mov rdi, qword [obj.logfile]', 'lea rdx, str.Zip_log_opened__s', 'mov rcx, rax', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.command_line_arguments:_n_', 'mov edx, 0x19', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rax, qword [var_a8h]', 'mov rbp, qword [rax + 8]', 'test rbp, rbp', 'je 0x8d96', 'mov rcx, qword [obj.logfile]', 'lea rdi, [0x00024fdd]', 'mov edx, 2', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rdi, qword [obj.logfile]', 'call sym.imp.fflush', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'jmp 0x8e96', 'mov rsi, qword [obj.out_path]', 'mov rdi, qword [obj.in_path]', 'call fcn.000204c0', 'movzx eax, byte [rdi]', 'movzx edx, byte [rsi]', 'mov r8d, eax', 'sub eax, edx', 'jne 0x20500', 'test dl, dl', 'je 0x20500', 'test r8b, r8b', 'jne 0x204e9', 'jmp 0x20502', 'ret', 'test eax, eax', 'jne 0xac56', 'mov qword [r14 + 0x30], 0', 'mov rax, qword [arg_98h]', 'add qword [obj.files_total], 1', 'lea rdx, [rax + 2]', 'cmp rdx, 1', 'jbe 0xac83', 'mov r14, qword [r14 + 0x40]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.noisy], 0', 'je 0xabd3', 'mov eax, dword [0x00233010]', 'test eax, eax', 'je 0xab81', 'cmp eax, 3', 'je 0xab81', 'mov rdi, qword [r14]', 'xor ecx, ecx', 'mov rdx, rbx', 'xor esi, esi', 'call fcn.00021c90', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'mov r12, rdx', 'mov rbx, rdi', 'mov rbp, rcx', 'sub rsp, 0xa8', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'cmp rbx, qword [obj.label]', 'je 0x21e40', 'lea edi, [rax + 1]', 'mov r15, rax', 'movsxd rdi, edi', 'call sym.imp.malloc', 'test rax, rax', 'mov r14, rax', 'je 0x21ef0', 'mov rsi, rbx', 'mov rdi, r14', 'movsxd r15, r15d', 'call sym.imp.strcpy', 'lea rax, [r14 + r15 - 1]', 'cmp byte [rax], 0x2f', 'je 0x21eb0', 'cmp byte [rbx], 0x2d', 'je 0x21df0', 'mov eax, dword [obj.linkput]', 'mov rbx, rsp', 'mov rdx, rsp', 'mov rsi, r14', 'mov edi, 1', 'test eax, eax', 'je 0x21e88', 'call sym.imp.__lxstat64', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x21e9a', 'mov rdi, r14', 'call sym.imp.free', 'test r13, r13', 'je 0x21d7b', 'test r12, r12', 'je 0x21d9f', 'test rbp, rbp', 'je 0x21dba', 'lea rdi, [rbx + 0x58]', 'call fcn.0001aa30', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, qword [rdi]', 'mov rdi, rsp', 'add rax, 1', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime', 'test rax, rax', 'je 0x1aae0', 'xor edi, edi', 'call sym.imp.time', 'add rax, 1', 'mov rdi, rsp', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
294,zip,259,"['call sym.imp.asctime', 'mov rdi, qword [obj.logfile]', 'lea rdx, str.Zip_log_opened__s', 'mov rcx, rax', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.command_line_arguments:_n_', 'mov edx, 0x19', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rax, qword [var_a8h]', 'mov rbp, qword [rax + 8]', 'test rbp, rbp', 'je 0x8d96', 'mov rcx, qword [obj.logfile]', 'lea rdi, [0x00024fdd]', 'mov edx, 2', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rdi, qword [obj.logfile]', 'call sym.imp.fflush', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'jmp 0x8e96', 'mov rsi, qword [obj.out_path]', 'mov rdi, qword [obj.in_path]', 'call fcn.000204c0', 'movzx eax, byte [rdi]', 'movzx edx, byte [rsi]', 'mov r8d, eax', 'sub eax, edx', 'jne 0x20500', 'test dl, dl', 'je 0x20500', 'test r8b, r8b', 'jne 0x204e9', 'jmp 0x20502', 'ret', 'test eax, eax', 'jne 0xac56', 'mov qword [r14 + 0x30], 0', 'mov rax, qword [arg_98h]', 'add qword [obj.files_total], 1', 'lea rdx, [rax + 2]', 'cmp rdx, 1', 'jbe 0xac83', 'mov r14, qword [r14 + 0x40]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.mesg_line_started], 0', 'jne 0xce1f', 'mov eax, dword [obj.show_files]', 'test eax, eax', 'mov dword [arg_28h], eax', 'je 0xb2f5', 'cmp qword [arg_18h], 0', 'jne 0xd076', 'cmp qword [obj.found], 0', 'je 0xdc6f', 'cmp dword [obj.diff_mode], 0', 'jne 0xb30f', 'cmp qword [obj.zfiles], 0', 'je 0xe24c', 'cmp dword [obj.allow_empty_archive], 0', 'jne 0xb30f', 'cmp dword [0x00234648], 0', 'je 0xe270', 'mov eax, dword [0x00233010]', 'sub eax, 2', 'cmp eax, 1', 'jbe 0xe33b', 'mov edi, 0xc', 'call fcn.0000fd30', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 0x20', 'mov edx, dword [0x0023464c]', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test edx, edx', 'je 0xfe88', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xff0f', 'cmp byte [rax], 0x2d', 'jne 0xfe9d', 'mov rbx, qword [obj.zfiles]', 'xor r14d, r14d', 'mov r12, rsp', 'lea r13, [var_8h]', 'test rbx, rbx', 'jne 0xfee7', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'cmp byte [rdx + rax - 1], 0x2f', 'je 0xfedb', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'mov rdi, qword [obj.zipfile]', 'mov rsi, r14', 'call fcn.00021c40', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call fcn.0001ab30', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
295,zip,335,"['call sym.imp.asctime', 'mov rdi, qword [obj.logfile]', 'lea rdx, str.Zip_log_opened__s', 'mov rcx, rax', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.command_line_arguments:_n_', 'mov edx, 0x19', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rax, qword [var_a8h]', 'mov rbp, qword [rax + 8]', 'test rbp, rbp', 'je 0x8d96', 'mov rcx, qword [obj.logfile]', 'lea rdi, [0x00024fdd]', 'mov edx, 2', 'mov esi, 1', 'call sym.imp.fwrite', 'mov rdi, qword [obj.logfile]', 'call sym.imp.fflush', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'jmp 0x8e96', 'mov rsi, qword [obj.out_path]', 'mov rdi, qword [obj.in_path]', 'call fcn.000204c0', 'movzx eax, byte [rdi]', 'movzx edx, byte [rsi]', 'mov r8d, eax', 'sub eax, edx', 'jne 0x20500', 'test dl, dl', 'je 0x20500', 'test r8b, r8b', 'jne 0x204e9', 'jmp 0x20502', 'ret', 'test eax, eax', 'jne 0xac56', 'mov qword [r14 + 0x30], 0', 'mov rax, qword [arg_98h]', 'add qword [obj.files_total], 1', 'lea rdx, [rax + 2]', 'cmp rdx, 1', 'jbe 0xac83', 'mov r14, qword [r14 + 0x40]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.mesg_line_started], 0', 'jne 0xce1f', 'mov eax, dword [obj.show_files]', 'test eax, eax', 'mov dword [arg_28h], eax', 'je 0xb2f5', 'cmp qword [arg_18h], 0', 'jne 0xd076', 'cmp qword [obj.found], 0', 'je 0xdc6f', 'cmp dword [obj.diff_mode], 0', 'jne 0xb30f', 'cmp qword [obj.zfiles], 0', 'je 0xe24c', 'cmp dword [obj.allow_empty_archive], 0', 'jne 0xb30f', 'cmp dword [0x00234648], 0', 'je 0xe270', 'mov eax, dword [0x00233010]', 'sub eax, 2', 'cmp eax, 1', 'jbe 0xe33b', 'mov edi, 0xc', 'call fcn.0000fd30', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 0x20', 'mov edx, dword [0x0023464c]', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test edx, edx', 'je 0xfe88', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xff0f', 'cmp byte [rax], 0x2d', 'jne 0xfe9d', 'mov rbx, qword [obj.zfiles]', 'xor r14d, r14d', 'mov r12, rsp', 'lea r13, [var_8h]', 'test rbx, rbx', 'jne 0xfee7', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'cmp byte [rdx + rax - 1], 0x2f', 'je 0xfedb', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'mov rdi, qword [obj.zipfile]', 'mov rsi, r14', 'call fcn.00021c40', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call fcn.0001ab30', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime', 'lea edx, [rbx + rbx]', 'mov dword [rax + 0x20], 0xffffffff', 'mov rdi, rax', 'and edx, 0x3e', 'mov dword [rax], edx', 'mov edx, ebx', 'sar edx, 5', 'and edx, 0x3f', 'mov dword [rax + 4], edx', 'mov edx, ebx', 'sar edx, 0xb', 'and edx, 0x1f', 'mov dword [rax + 8], edx', 'mov rdx, rbx', 'shr rdx, 0x10', 'and edx, 0x1f', 'mov dword [rax + 0xc], edx', 'mov rdx, rbx', 'shr rbx, 0x19', 'shr rdx, 0x15', 'and ebx, 0x7f', 'and edx, 0xf', 'add ebx, 0x50', 'sub edx, 1', 'mov dword [rax + 0x14], ebx', 'mov dword [rax + 0x10], edx', 'call sym.imp.mktime']"
296,zip,266,"['call sym.imp.localtime', 'test rax, rax', 'je 0x1aae0', 'mov edx, dword [rax + 0x14]', 'movsxd rsi, dword [rax]', 'movsxd rdi, dword [rax + 4]', 'movsxd r8, dword [rax + 8]', 'mov r9d, dword [rax + 0xc]', 'mov ecx, dword [rax + 0x10]', 'mov eax, 0x210000', 'add edx, 0x76c', 'cmp edx, 0x7bb', 'jg 0x1aaa0', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1ab00', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0xfed4', 'cmp r14, rax', 'cmovb r14, rax', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'lea rsi, [0x0002db66]', 'lea rdi, str.zip_file_has_only_directories__cant_make_it_as_old_as_latest_entry', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov rdi, rbp', 'xor ebx, ebx', 'jmp 0x8c2f', 'mov esi, 0x2f', 'call sym.imp.strrchr', 'test rax, rax', 'jne 0x8c28', 'test rbx, rbx', 'mov esi, 0x2e', 'cmove rbx, rbp', 'mov rdi, rbx', 'call sym.imp.strrchr', 'test rax, rax', 'je 0xd004', 'cmp dword [obj.logfile_append], 1', 'lea rsi, [var_f0h]', 'mov rdi, rbp', 'sbb eax, eax', 'and eax, 0x16', 'add eax, 0x61', 'mov word [var_f0h], ax', 'call sym.imp.fopen64', 'test rax, rax', 'mov qword [obj.logfile], rax', 'je 0xe40d', 'lea rbx, [timer]', 'mov r12d, 0x10', 'lea r13, [0x0002da3a]', 'mov rdi, rbx', 'call sym.imp.time', 'mov rdi, rbx', 'call sym.imp.localtime']"
297,zip,344,"['call sym.imp.localtime', 'test rax, rax', 'je 0x1aae0', 'mov edx, dword [rax + 0x14]', 'movsxd rsi, dword [rax]', 'movsxd rdi, dword [rax + 4]', 'movsxd r8, dword [rax + 8]', 'mov r9d, dword [rax + 0xc]', 'mov ecx, dword [rax + 0x10]', 'mov eax, 0x210000', 'add edx, 0x76c', 'cmp edx, 0x7bb', 'jg 0x1aaa0', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1ab00', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0xfed4', 'cmp r14, rax', 'cmovb r14, rax', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'lea rsi, [0x0002db66]', 'lea rdi, str.zip_file_has_only_directories__cant_make_it_as_old_as_latest_entry', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov rdi, rbp', 'xor ebx, ebx', 'jmp 0x8c2f', 'mov esi, 0x2f', 'call sym.imp.strrchr', 'test rax, rax', 'jne 0x8c28', 'test rbx, rbx', 'mov esi, 0x2e', 'cmove rbx, rbp', 'mov rdi, rbx', 'call sym.imp.strrchr', 'test rax, rax', 'je 0xd004', 'cmp dword [obj.logfile_append], 1', 'lea rsi, [var_f0h]', 'mov rdi, rbp', 'sbb eax, eax', 'and eax, 0x16', 'add eax, 0x61', 'mov word [var_f0h], ax', 'call sym.imp.fopen64', 'test rax, rax', 'mov qword [obj.logfile], rax', 'je 0xe40d', 'lea rbx, [timer]', 'mov r12d, 0x10', 'lea r13, [0x0002da3a]', 'mov rdi, rbx', 'call sym.imp.time', 'mov rdi, rbx', 'call sym.imp.localtime', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.__________n', 'mov edx, 0xa', 'mov esi, 1', 'mov rbx, rax', 'call sym.imp.fwrite', 'mov rdi, rbx', 'call sym.imp.asctime']"
298,zip,218,"['call sym.imp.localtime', 'test rax, rax', 'je 0x1aae0', 'mov edx, dword [rax + 0x14]', 'movsxd rsi, dword [rax]', 'movsxd rdi, dword [rax + 4]', 'movsxd r8, dword [rax + 8]', 'mov r9d, dword [rax + 0xc]', 'mov ecx, dword [rax + 0x10]', 'mov eax, 0x210000', 'add edx, 0x76c', 'cmp edx, 0x7bb', 'jg 0x1aaa0', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1ab00', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0xaa8a', 'cmp rax, qword [obj.before]', 'jb 0xaaac', 'mov dword [r14 + 0xa0], 0', 'jmp 0xa1cf', 'mov eax, ebp', 'mov r14, qword [r14 + 0xb0]', 'mov ebp, eax', 'jmp 0xa0a6', 'test r14, r14', 'je 0xab50', 'cmp dword [arg_48h], 0', 'jne 0xcdee', 'mov qword [obj.scan_count], 0', 'mov dword [obj.scan_started], 0', 'lea rbx, [arg_98h]', 'mov r14, qword [obj.found]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.noisy], 0', 'je 0xabd3', 'mov eax, dword [0x00233010]', 'test eax, eax', 'je 0xab81', 'cmp eax, 3', 'je 0xab81', 'mov rdi, qword [r14]', 'xor ecx, ecx', 'mov rdx, rbx', 'xor esi, esi', 'call fcn.00021c90', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'mov r12, rdx', 'mov rbx, rdi', 'mov rbp, rcx', 'sub rsp, 0xa8', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'cmp rbx, qword [obj.label]', 'je 0x21e40', 'lea edi, [rax + 1]', 'mov r15, rax', 'movsxd rdi, edi', 'call sym.imp.malloc', 'test rax, rax', 'mov r14, rax', 'je 0x21ef0', 'mov rsi, rbx', 'mov rdi, r14', 'movsxd r15, r15d', 'call sym.imp.strcpy', 'lea rax, [r14 + r15 - 1]', 'cmp byte [rax], 0x2f', 'je 0x21eb0', 'cmp byte [rbx], 0x2d', 'je 0x21df0', 'mov eax, dword [obj.linkput]', 'mov rbx, rsp', 'mov rdx, rsp', 'mov rsi, r14', 'mov edi, 1', 'test eax, eax', 'je 0x21e88', 'call sym.imp.__lxstat64', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x21e9a', 'mov rdi, r14', 'call sym.imp.free', 'test r13, r13', 'je 0x21d7b', 'test r12, r12', 'je 0x21d9f', 'test rbp, rbp', 'je 0x21dba', 'lea rdi, [rbx + 0x58]', 'call fcn.0001aa30', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, qword [rdi]', 'mov rdi, rsp', 'add rax, 1', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
299,zip,65,"['call sym.imp.localtime', 'test rax, rax', 'je 0x1aae0', 'xor edi, edi', 'call sym.imp.time', 'add rax, 1', 'mov rdi, rsp', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
300,zip,106,"['call sym.imp.localtime', 'test rax, rax', 'je 0x1aae0', 'mov edx, dword [rax + 0x14]', 'movsxd rsi, dword [rax]', 'movsxd rdi, dword [rax + 4]', 'movsxd r8, dword [rax + 8]', 'mov r9d, dword [rax + 0xc]', 'mov ecx, dword [rax + 0x10]', 'mov eax, 0x210000', 'add edx, 0x76c', 'cmp edx, 0x7bb', 'jg 0x1aaa0', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1ab00', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0xfed4', 'cmp r14, rax', 'cmovb r14, rax', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'mov rdi, qword [obj.zipfile]', 'mov rsi, r14', 'call fcn.00021c40', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call fcn.0001ab30', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
301,zip,182,"['call sym.imp.localtime', 'test rax, rax', 'je 0x1aae0', 'mov edx, dword [rax + 0x14]', 'movsxd rsi, dword [rax]', 'movsxd rdi, dword [rax + 4]', 'movsxd r8, dword [rax + 8]', 'mov r9d, dword [rax + 0xc]', 'mov ecx, dword [rax + 0x10]', 'mov eax, 0x210000', 'add edx, 0x76c', 'cmp edx, 0x7bb', 'jg 0x1aaa0', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1ab00', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0xfed4', 'cmp r14, rax', 'cmovb r14, rax', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'mov rdi, qword [obj.zipfile]', 'mov rsi, r14', 'call fcn.00021c40', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call fcn.0001ab30', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime', 'lea edx, [rbx + rbx]', 'mov dword [rax + 0x20], 0xffffffff', 'mov rdi, rax', 'and edx, 0x3e', 'mov dword [rax], edx', 'mov edx, ebx', 'sar edx, 5', 'and edx, 0x3f', 'mov dword [rax + 4], edx', 'mov edx, ebx', 'sar edx, 0xb', 'and edx, 0x1f', 'mov dword [rax + 8], edx', 'mov rdx, rbx', 'shr rdx, 0x10', 'and edx, 0x1f', 'mov dword [rax + 0xc], edx', 'mov rdx, rbx', 'shr rbx, 0x19', 'shr rdx, 0x15', 'and ebx, 0x7f', 'and edx, 0xf', 'add ebx, 0x50', 'sub edx, 1', 'mov dword [rax + 0x14], ebx', 'mov dword [rax + 0x10], edx', 'call sym.imp.mktime']"
302,zip,265,"['call sym.imp.localtime', 'jmp 0x1aa61', 'mov edx, dword [rax + 0x14]', 'movsxd rsi, dword [rax]', 'movsxd rdi, dword [rax + 4]', 'movsxd r8, dword [rax + 8]', 'mov r9d, dword [rax + 0xc]', 'mov ecx, dword [rax + 0x10]', 'mov eax, 0x210000', 'add edx, 0x76c', 'cmp edx, 0x7bb', 'jg 0x1aaa0', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1ab00', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0xfed4', 'cmp r14, rax', 'cmovb r14, rax', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'lea rsi, [0x0002db66]', 'lea rdi, str.zip_file_has_only_directories__cant_make_it_as_old_as_latest_entry', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov rdi, rbp', 'xor ebx, ebx', 'jmp 0x8c2f', 'mov esi, 0x2f', 'call sym.imp.strrchr', 'test rax, rax', 'jne 0x8c28', 'test rbx, rbx', 'mov esi, 0x2e', 'cmove rbx, rbp', 'mov rdi, rbx', 'call sym.imp.strrchr', 'test rax, rax', 'je 0xd004', 'cmp dword [obj.logfile_append], 1', 'lea rsi, [var_f0h]', 'mov rdi, rbp', 'sbb eax, eax', 'and eax, 0x16', 'add eax, 0x61', 'mov word [var_f0h], ax', 'call sym.imp.fopen64', 'test rax, rax', 'mov qword [obj.logfile], rax', 'je 0xe40d', 'lea rbx, [timer]', 'mov r12d, 0x10', 'lea r13, [0x0002da3a]', 'mov rdi, rbx', 'call sym.imp.time', 'mov rdi, rbx', 'call sym.imp.localtime']"
303,zip,343,"['call sym.imp.localtime', 'jmp 0x1aa61', 'mov edx, dword [rax + 0x14]', 'movsxd rsi, dword [rax]', 'movsxd rdi, dword [rax + 4]', 'movsxd r8, dword [rax + 8]', 'mov r9d, dword [rax + 0xc]', 'mov ecx, dword [rax + 0x10]', 'mov eax, 0x210000', 'add edx, 0x76c', 'cmp edx, 0x7bb', 'jg 0x1aaa0', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1ab00', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0xfed4', 'cmp r14, rax', 'cmovb r14, rax', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'lea rsi, [0x0002db66]', 'lea rdi, str.zip_file_has_only_directories__cant_make_it_as_old_as_latest_entry', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov rdi, rbp', 'xor ebx, ebx', 'jmp 0x8c2f', 'mov esi, 0x2f', 'call sym.imp.strrchr', 'test rax, rax', 'jne 0x8c28', 'test rbx, rbx', 'mov esi, 0x2e', 'cmove rbx, rbp', 'mov rdi, rbx', 'call sym.imp.strrchr', 'test rax, rax', 'je 0xd004', 'cmp dword [obj.logfile_append], 1', 'lea rsi, [var_f0h]', 'mov rdi, rbp', 'sbb eax, eax', 'and eax, 0x16', 'add eax, 0x61', 'mov word [var_f0h], ax', 'call sym.imp.fopen64', 'test rax, rax', 'mov qword [obj.logfile], rax', 'je 0xe40d', 'lea rbx, [timer]', 'mov r12d, 0x10', 'lea r13, [0x0002da3a]', 'mov rdi, rbx', 'call sym.imp.time', 'mov rdi, rbx', 'call sym.imp.localtime', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.__________n', 'mov edx, 0xa', 'mov esi, 1', 'mov rbx, rax', 'call sym.imp.fwrite', 'mov rdi, rbx', 'call sym.imp.asctime']"
304,zip,217,"['call sym.imp.localtime', 'jmp 0x1aa61', 'mov edx, dword [rax + 0x14]', 'movsxd rsi, dword [rax]', 'movsxd rdi, dword [rax + 4]', 'movsxd r8, dword [rax + 8]', 'mov r9d, dword [rax + 0xc]', 'mov ecx, dword [rax + 0x10]', 'mov eax, 0x210000', 'add edx, 0x76c', 'cmp edx, 0x7bb', 'jg 0x1aaa0', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1ab00', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0xaa8a', 'cmp rax, qword [obj.before]', 'jb 0xaaac', 'mov dword [r14 + 0xa0], 0', 'jmp 0xa1cf', 'mov eax, ebp', 'mov r14, qword [r14 + 0xb0]', 'mov ebp, eax', 'jmp 0xa0a6', 'test r14, r14', 'je 0xab50', 'cmp dword [arg_48h], 0', 'jne 0xcdee', 'mov qword [obj.scan_count], 0', 'mov dword [obj.scan_started], 0', 'lea rbx, [arg_98h]', 'mov r14, qword [obj.found]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.noisy], 0', 'je 0xabd3', 'mov eax, dword [0x00233010]', 'test eax, eax', 'je 0xab81', 'cmp eax, 3', 'je 0xab81', 'mov rdi, qword [r14]', 'xor ecx, ecx', 'mov rdx, rbx', 'xor esi, esi', 'call fcn.00021c90', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'mov r12, rdx', 'mov rbx, rdi', 'mov rbp, rcx', 'sub rsp, 0xa8', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'cmp rbx, qword [obj.label]', 'je 0x21e40', 'lea edi, [rax + 1]', 'mov r15, rax', 'movsxd rdi, edi', 'call sym.imp.malloc', 'test rax, rax', 'mov r14, rax', 'je 0x21ef0', 'mov rsi, rbx', 'mov rdi, r14', 'movsxd r15, r15d', 'call sym.imp.strcpy', 'lea rax, [r14 + r15 - 1]', 'cmp byte [rax], 0x2f', 'je 0x21eb0', 'cmp byte [rbx], 0x2d', 'je 0x21df0', 'mov eax, dword [obj.linkput]', 'mov rbx, rsp', 'mov rdx, rsp', 'mov rsi, r14', 'mov edi, 1', 'test eax, eax', 'je 0x21e88', 'call sym.imp.__lxstat64', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x21e9a', 'mov rdi, r14', 'call sym.imp.free', 'test r13, r13', 'je 0x21d7b', 'test r12, r12', 'je 0x21d9f', 'test rbp, rbp', 'je 0x21dba', 'lea rdi, [rbx + 0x58]', 'call fcn.0001aa30', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, qword [rdi]', 'mov rdi, rsp', 'add rax, 1', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
305,zip,282,"['call sym.imp.localtime', 'jmp 0x1aa61', 'mov edx, dword [rax + 0x14]', 'movsxd rsi, dword [rax]', 'movsxd rdi, dword [rax + 4]', 'movsxd r8, dword [rax + 8]', 'mov r9d, dword [rax + 0xc]', 'mov ecx, dword [rax + 0x10]', 'mov eax, 0x210000', 'add edx, 0x76c', 'cmp edx, 0x7bb', 'jg 0x1aaa0', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1ab00', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0xaa8a', 'cmp rax, qword [obj.before]', 'jb 0xaaac', 'mov dword [r14 + 0xa0], 0', 'jmp 0xa1cf', 'mov eax, ebp', 'mov r14, qword [r14 + 0xb0]', 'mov ebp, eax', 'jmp 0xa0a6', 'test r14, r14', 'je 0xab50', 'cmp dword [arg_48h], 0', 'jne 0xcdee', 'mov qword [obj.scan_count], 0', 'mov dword [obj.scan_started], 0', 'lea rbx, [arg_98h]', 'mov r14, qword [obj.found]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.noisy], 0', 'je 0xabd3', 'mov eax, dword [0x00233010]', 'test eax, eax', 'je 0xab81', 'cmp eax, 3', 'je 0xab81', 'mov rdi, qword [r14]', 'xor ecx, ecx', 'mov rdx, rbx', 'xor esi, esi', 'call fcn.00021c90', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'mov r12, rdx', 'mov rbx, rdi', 'mov rbp, rcx', 'sub rsp, 0xa8', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'cmp rbx, qword [obj.label]', 'je 0x21e40', 'lea edi, [rax + 1]', 'mov r15, rax', 'movsxd rdi, edi', 'call sym.imp.malloc', 'test rax, rax', 'mov r14, rax', 'je 0x21ef0', 'mov rsi, rbx', 'mov rdi, r14', 'movsxd r15, r15d', 'call sym.imp.strcpy', 'lea rax, [r14 + r15 - 1]', 'cmp byte [rax], 0x2f', 'je 0x21eb0', 'cmp byte [rbx], 0x2d', 'je 0x21df0', 'mov eax, dword [obj.linkput]', 'mov rbx, rsp', 'mov rdx, rsp', 'mov rsi, r14', 'mov edi, 1', 'test eax, eax', 'je 0x21e88', 'call sym.imp.__lxstat64', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x21e9a', 'mov rdi, r14', 'call sym.imp.free', 'test r13, r13', 'je 0x21d7b', 'test r12, r12', 'je 0x21d9f', 'test rbp, rbp', 'je 0x21dba', 'lea rdi, [rbx + 0x58]', 'call fcn.0001aa30', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, qword [rdi]', 'mov rdi, rsp', 'add rax, 1', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime', 'test rax, rax', 'je 0x1aae0', 'xor edi, edi', 'call sym.imp.time', 'add rax, 1', 'mov rdi, rsp', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
306,zip,105,"['call sym.imp.localtime', 'jmp 0x1aa61', 'mov edx, dword [rax + 0x14]', 'movsxd rsi, dword [rax]', 'movsxd rdi, dword [rax + 4]', 'movsxd r8, dword [rax + 8]', 'mov r9d, dword [rax + 0xc]', 'mov ecx, dword [rax + 0x10]', 'mov eax, 0x210000', 'add edx, 0x76c', 'cmp edx, 0x7bb', 'jg 0x1aaa0', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1ab00', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0xfed4', 'cmp r14, rax', 'cmovb r14, rax', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'mov rdi, qword [obj.zipfile]', 'mov rsi, r14', 'call fcn.00021c40', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call fcn.0001ab30', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
307,zip,181,"['call sym.imp.localtime', 'jmp 0x1aa61', 'mov edx, dword [rax + 0x14]', 'movsxd rsi, dword [rax]', 'movsxd rdi, dword [rax + 4]', 'movsxd r8, dword [rax + 8]', 'mov r9d, dword [rax + 0xc]', 'mov ecx, dword [rax + 0x10]', 'mov eax, 0x210000', 'add edx, 0x76c', 'cmp edx, 0x7bb', 'jg 0x1aaa0', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1ab00', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0xfed4', 'cmp r14, rax', 'cmovb r14, rax', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'mov rdi, qword [obj.zipfile]', 'mov rsi, r14', 'call fcn.00021c40', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call fcn.0001ab30', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime', 'lea edx, [rbx + rbx]', 'mov dword [rax + 0x20], 0xffffffff', 'mov rdi, rax', 'and edx, 0x3e', 'mov dword [rax], edx', 'mov edx, ebx', 'sar edx, 5', 'and edx, 0x3f', 'mov dword [rax + 4], edx', 'mov edx, ebx', 'sar edx, 0xb', 'and edx, 0x1f', 'mov dword [rax + 8], edx', 'mov rdx, rbx', 'shr rdx, 0x10', 'and edx, 0x1f', 'mov dword [rax + 0xc], edx', 'mov rdx, rbx', 'shr rbx, 0x19', 'shr rdx, 0x15', 'and ebx, 0x7f', 'and edx, 0xf', 'add ebx, 0x50', 'sub edx, 1', 'mov dword [rax + 0x14], ebx', 'mov dword [rax + 0x10], edx', 'call sym.imp.mktime']"
308,zip,559,"['call sym.imp.localtime', 'lea edx, [rbx + rbx]', 'mov dword [rax + 0x20], 0xffffffff', 'mov rdi, rax', 'and edx, 0x3e', 'mov dword [rax], edx', 'mov edx, ebx', 'sar edx, 5', 'and edx, 0x3f', 'mov dword [rax + 4], edx', 'mov edx, ebx', 'sar edx, 0xb', 'and edx, 0x1f', 'mov dword [rax + 8], edx', 'mov rdx, rbx', 'shr rdx, 0x10', 'and edx, 0x1f', 'mov dword [rax + 0xc], edx', 'mov rdx, rbx', 'shr rbx, 0x19', 'shr rdx, 0x15', 'and ebx, 0x7f', 'and edx, 0xf', 'add ebx, 0x50', 'sub edx, 1', 'mov dword [rax + 0x14], ebx', 'mov dword [rax + 0x10], edx', 'call sym.imp.mktime', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1abc8', 'add rsp, 0x10', 'pop rbx', 'ret', 'mov rsi, rsp', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'mov qword [rsp], rax', 'call sym.imp.utime', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x21c8a', 'add rsp, 0x20', 'pop rbx', 'ret', 'nop dword [rax]', 'mov rdi, qword [obj.tempath]', 'test rdi, rdi', 'jne 0xfd8b', 'jmp 0xfd9b', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xfdba', 'mov rdi, qword [obj.in_file]', 'test rdi, rdi', 'je 0xfdd6', 'mov rdi, qword [obj.in_path]', 'test rdi, rdi', 'je 0xfdf2', 'mov rdi, qword [obj.out_path]', 'test rdi, rdi', 'je 0xfe0e', 'mov rdi, qword [obj.zcomment]', 'test rdi, rdi', 'je 0xfe2a', 'mov eax, dword [obj.dispose]', 'test eax, eax', 'je 0xfe41', 'call fcn.00017bc0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [obj.zfiles]', 'test rbx, rbx', 'je 0x17ce5', 'xor ebp, ebp', 'lea r12, str.error_deleting_', 'jmp 0x17c9c', 'cmp dword [rbx + 0xa0], 1', 'je 0x17caf', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'mov dword [rbx + 0xa0], 1', 'cmp byte [rdx + rax - 1], 0x2f', 'jne 0x17bf0', 'mov esi, dword [obj.verbose]', 'test esi, esi', 'jne 0x17d08', 'mov rdi, qword [rbx + 0x50]', 'call fcn.0001abd0', 'jmp sym.imp.unlink', 'test eax, eax', 'jne 0x17cf0', 'mov rsi, qword [rbx + 0x50]', 'mov rdi, r12', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov rdi, rbp', 'xor ebx, ebx', 'jmp 0x8c2f', 'mov esi, 0x2f', 'call sym.imp.strrchr', 'test rax, rax', 'jne 0x8c28', 'test rbx, rbx', 'mov esi, 0x2e', 'cmove rbx, rbp', 'mov rdi, rbx', 'call sym.imp.strrchr', 'test rax, rax', 'je 0xd004', 'cmp dword [obj.logfile_append], 1', 'lea rsi, [var_f0h]', 'mov rdi, rbp', 'sbb eax, eax', 'and eax, 0x16', 'add eax, 0x61', 'mov word [var_f0h], ax', 'call sym.imp.fopen64', 'test rax, rax', 'mov qword [obj.logfile], rax', 'je 0xe40d', 'lea rbx, [timer]', 'mov r12d, 0x10', 'lea r13, [0x0002da3a]', 'mov rdi, rbx', 'call sym.imp.time', 'mov rdi, rbx', 'call sym.imp.localtime']"
309,zip,637,"['call sym.imp.localtime', 'lea edx, [rbx + rbx]', 'mov dword [rax + 0x20], 0xffffffff', 'mov rdi, rax', 'and edx, 0x3e', 'mov dword [rax], edx', 'mov edx, ebx', 'sar edx, 5', 'and edx, 0x3f', 'mov dword [rax + 4], edx', 'mov edx, ebx', 'sar edx, 0xb', 'and edx, 0x1f', 'mov dword [rax + 8], edx', 'mov rdx, rbx', 'shr rdx, 0x10', 'and edx, 0x1f', 'mov dword [rax + 0xc], edx', 'mov rdx, rbx', 'shr rbx, 0x19', 'shr rdx, 0x15', 'and ebx, 0x7f', 'and edx, 0xf', 'add ebx, 0x50', 'sub edx, 1', 'mov dword [rax + 0x14], ebx', 'mov dword [rax + 0x10], edx', 'call sym.imp.mktime', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1abc8', 'add rsp, 0x10', 'pop rbx', 'ret', 'mov rsi, rsp', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'mov qword [rsp], rax', 'call sym.imp.utime', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x21c8a', 'add rsp, 0x20', 'pop rbx', 'ret', 'nop dword [rax]', 'mov rdi, qword [obj.tempath]', 'test rdi, rdi', 'jne 0xfd8b', 'jmp 0xfd9b', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xfdba', 'mov rdi, qword [obj.in_file]', 'test rdi, rdi', 'je 0xfdd6', 'mov rdi, qword [obj.in_path]', 'test rdi, rdi', 'je 0xfdf2', 'mov rdi, qword [obj.out_path]', 'test rdi, rdi', 'je 0xfe0e', 'mov rdi, qword [obj.zcomment]', 'test rdi, rdi', 'je 0xfe2a', 'mov eax, dword [obj.dispose]', 'test eax, eax', 'je 0xfe41', 'call fcn.00017bc0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [obj.zfiles]', 'test rbx, rbx', 'je 0x17ce5', 'xor ebp, ebp', 'lea r12, str.error_deleting_', 'jmp 0x17c9c', 'cmp dword [rbx + 0xa0], 1', 'je 0x17caf', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'mov dword [rbx + 0xa0], 1', 'cmp byte [rdx + rax - 1], 0x2f', 'jne 0x17bf0', 'mov esi, dword [obj.verbose]', 'test esi, esi', 'jne 0x17d08', 'mov rdi, qword [rbx + 0x50]', 'call fcn.0001abd0', 'jmp sym.imp.unlink', 'test eax, eax', 'jne 0x17cf0', 'mov rsi, qword [rbx + 0x50]', 'mov rdi, r12', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov rdi, rbp', 'xor ebx, ebx', 'jmp 0x8c2f', 'mov esi, 0x2f', 'call sym.imp.strrchr', 'test rax, rax', 'jne 0x8c28', 'test rbx, rbx', 'mov esi, 0x2e', 'cmove rbx, rbp', 'mov rdi, rbx', 'call sym.imp.strrchr', 'test rax, rax', 'je 0xd004', 'cmp dword [obj.logfile_append], 1', 'lea rsi, [var_f0h]', 'mov rdi, rbp', 'sbb eax, eax', 'and eax, 0x16', 'add eax, 0x61', 'mov word [var_f0h], ax', 'call sym.imp.fopen64', 'test rax, rax', 'mov qword [obj.logfile], rax', 'je 0xe40d', 'lea rbx, [timer]', 'mov r12d, 0x10', 'lea r13, [0x0002da3a]', 'mov rdi, rbx', 'call sym.imp.time', 'mov rdi, rbx', 'call sym.imp.localtime', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.__________n', 'mov edx, 0xa', 'mov esi, 1', 'mov rbx, rax', 'call sym.imp.fwrite', 'mov rdi, rbx', 'call sym.imp.asctime']"
310,zip,631,"['call sym.imp.localtime', 'lea edx, [rbx + rbx]', 'mov dword [rax + 0x20], 0xffffffff', 'mov rdi, rax', 'and edx, 0x3e', 'mov dword [rax], edx', 'mov edx, ebx', 'sar edx, 5', 'and edx, 0x3f', 'mov dword [rax + 4], edx', 'mov edx, ebx', 'sar edx, 0xb', 'and edx, 0x1f', 'mov dword [rax + 8], edx', 'mov rdx, rbx', 'shr rdx, 0x10', 'and edx, 0x1f', 'mov dword [rax + 0xc], edx', 'mov rdx, rbx', 'shr rbx, 0x19', 'shr rdx, 0x15', 'and ebx, 0x7f', 'and edx, 0xf', 'add ebx, 0x50', 'sub edx, 1', 'mov dword [rax + 0x14], ebx', 'mov dword [rax + 0x10], edx', 'call sym.imp.mktime', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1abc8', 'add rsp, 0x10', 'pop rbx', 'ret', 'mov rsi, rsp', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'mov qword [rsp], rax', 'call sym.imp.utime', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x21c8a', 'add rsp, 0x20', 'pop rbx', 'ret', 'nop dword [rax]', 'mov rdi, qword [obj.tempath]', 'test rdi, rdi', 'jne 0xfd8b', 'jmp 0xfd9b', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xfdba', 'mov rdi, qword [obj.in_file]', 'test rdi, rdi', 'je 0xfdd6', 'mov rdi, qword [obj.in_path]', 'test rdi, rdi', 'je 0xfdf2', 'mov rdi, qword [obj.out_path]', 'test rdi, rdi', 'je 0xfe0e', 'mov rdi, qword [obj.zcomment]', 'test rdi, rdi', 'je 0xfe2a', 'mov eax, dword [obj.dispose]', 'test eax, eax', 'je 0xfe41', 'call fcn.00017bc0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [obj.zfiles]', 'test rbx, rbx', 'je 0x17ce5', 'xor ebp, ebp', 'lea r12, str.error_deleting_', 'jmp 0x17c9c', 'cmp dword [rbx + 0xa0], 1', 'je 0x17caf', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'mov dword [rbx + 0xa0], 1', 'cmp byte [rdx + rax - 1], 0x2f', 'jne 0x17bf0', 'mov esi, dword [obj.verbose]', 'test esi, esi', 'jne 0x17d08', 'mov rdi, qword [rbx + 0x50]', 'call fcn.0001abd0', 'jmp sym.imp.unlink', 'test eax, eax', 'jne 0x17cf0', 'mov rsi, qword [rbx + 0x50]', 'mov rdi, r12', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov dword [obj.logall], 0', 'jmp 0x8dbf', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'jmp 0x8e96', 'mov rsi, qword [obj.out_path]', 'mov rdi, qword [obj.in_path]', 'call fcn.000204c0', 'movzx eax, byte [rdi]', 'movzx edx, byte [rsi]', 'mov r8d, eax', 'sub eax, edx', 'jne 0x20500', 'test dl, dl', 'je 0x20500', 'test r8b, r8b', 'jne 0x204e9', 'jmp 0x20502', 'ret', 'test eax, eax', 'jne 0xac56', 'mov qword [r14 + 0x30], 0', 'mov rax, qword [arg_98h]', 'add qword [obj.files_total], 1', 'lea rdx, [rax + 2]', 'cmp rdx, 1', 'jbe 0xac83', 'mov r14, qword [r14 + 0x40]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.noisy], 0', 'je 0xabd3', 'mov eax, dword [0x00233010]', 'test eax, eax', 'je 0xab81', 'cmp eax, 3', 'je 0xab81', 'mov rdi, qword [r14]', 'xor ecx, ecx', 'mov rdx, rbx', 'xor esi, esi', 'call fcn.00021c90', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'mov r12, rdx', 'mov rbx, rdi', 'mov rbp, rcx', 'sub rsp, 0xa8', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'cmp rbx, qword [obj.label]', 'je 0x21e40', 'lea edi, [rax + 1]', 'mov r15, rax', 'movsxd rdi, edi', 'call sym.imp.malloc', 'test rax, rax', 'mov r14, rax', 'je 0x21ef0', 'mov rsi, rbx', 'mov rdi, r14', 'movsxd r15, r15d', 'call sym.imp.strcpy', 'lea rax, [r14 + r15 - 1]', 'cmp byte [rax], 0x2f', 'je 0x21eb0', 'cmp byte [rbx], 0x2d', 'je 0x21df0', 'mov eax, dword [obj.linkput]', 'mov rbx, rsp', 'mov rdx, rsp', 'mov rsi, r14', 'mov edi, 1', 'test eax, eax', 'je 0x21e88', 'call sym.imp.__lxstat64', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x21e9a', 'mov rdi, r14', 'call sym.imp.free', 'test r13, r13', 'je 0x21d7b', 'test r12, r12', 'je 0x21d9f', 'test rbp, rbp', 'je 0x21dba', 'lea rdi, [rbx + 0x58]', 'call fcn.0001aa30', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, qword [rdi]', 'mov rdi, rsp', 'add rax, 1', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
311,zip,696,"['call sym.imp.localtime', 'lea edx, [rbx + rbx]', 'mov dword [rax + 0x20], 0xffffffff', 'mov rdi, rax', 'and edx, 0x3e', 'mov dword [rax], edx', 'mov edx, ebx', 'sar edx, 5', 'and edx, 0x3f', 'mov dword [rax + 4], edx', 'mov edx, ebx', 'sar edx, 0xb', 'and edx, 0x1f', 'mov dword [rax + 8], edx', 'mov rdx, rbx', 'shr rdx, 0x10', 'and edx, 0x1f', 'mov dword [rax + 0xc], edx', 'mov rdx, rbx', 'shr rbx, 0x19', 'shr rdx, 0x15', 'and ebx, 0x7f', 'and edx, 0xf', 'add ebx, 0x50', 'sub edx, 1', 'mov dword [rax + 0x14], ebx', 'mov dword [rax + 0x10], edx', 'call sym.imp.mktime', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1abc8', 'add rsp, 0x10', 'pop rbx', 'ret', 'mov rsi, rsp', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'mov qword [rsp], rax', 'call sym.imp.utime', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x21c8a', 'add rsp, 0x20', 'pop rbx', 'ret', 'nop dword [rax]', 'mov rdi, qword [obj.tempath]', 'test rdi, rdi', 'jne 0xfd8b', 'jmp 0xfd9b', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xfdba', 'mov rdi, qword [obj.in_file]', 'test rdi, rdi', 'je 0xfdd6', 'mov rdi, qword [obj.in_path]', 'test rdi, rdi', 'je 0xfdf2', 'mov rdi, qword [obj.out_path]', 'test rdi, rdi', 'je 0xfe0e', 'mov rdi, qword [obj.zcomment]', 'test rdi, rdi', 'je 0xfe2a', 'mov eax, dword [obj.dispose]', 'test eax, eax', 'je 0xfe41', 'call fcn.00017bc0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [obj.zfiles]', 'test rbx, rbx', 'je 0x17ce5', 'xor ebp, ebp', 'lea r12, str.error_deleting_', 'jmp 0x17c9c', 'cmp dword [rbx + 0xa0], 1', 'je 0x17caf', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'mov dword [rbx + 0xa0], 1', 'cmp byte [rdx + rax - 1], 0x2f', 'jne 0x17bf0', 'mov esi, dword [obj.verbose]', 'test esi, esi', 'jne 0x17d08', 'mov rdi, qword [rbx + 0x50]', 'call fcn.0001abd0', 'jmp sym.imp.unlink', 'test eax, eax', 'jne 0x17cf0', 'mov rsi, qword [rbx + 0x50]', 'mov rdi, r12', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov dword [obj.logall], 0', 'jmp 0x8dbf', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'jmp 0x8e96', 'mov rsi, qword [obj.out_path]', 'mov rdi, qword [obj.in_path]', 'call fcn.000204c0', 'movzx eax, byte [rdi]', 'movzx edx, byte [rsi]', 'mov r8d, eax', 'sub eax, edx', 'jne 0x20500', 'test dl, dl', 'je 0x20500', 'test r8b, r8b', 'jne 0x204e9', 'jmp 0x20502', 'ret', 'test eax, eax', 'jne 0xac56', 'mov qword [r14 + 0x30], 0', 'mov rax, qword [arg_98h]', 'add qword [obj.files_total], 1', 'lea rdx, [rax + 2]', 'cmp rdx, 1', 'jbe 0xac83', 'mov r14, qword [r14 + 0x40]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.noisy], 0', 'je 0xabd3', 'mov eax, dword [0x00233010]', 'test eax, eax', 'je 0xab81', 'cmp eax, 3', 'je 0xab81', 'mov rdi, qword [r14]', 'xor ecx, ecx', 'mov rdx, rbx', 'xor esi, esi', 'call fcn.00021c90', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'mov r12, rdx', 'mov rbx, rdi', 'mov rbp, rcx', 'sub rsp, 0xa8', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'cmp rbx, qword [obj.label]', 'je 0x21e40', 'lea edi, [rax + 1]', 'mov r15, rax', 'movsxd rdi, edi', 'call sym.imp.malloc', 'test rax, rax', 'mov r14, rax', 'je 0x21ef0', 'mov rsi, rbx', 'mov rdi, r14', 'movsxd r15, r15d', 'call sym.imp.strcpy', 'lea rax, [r14 + r15 - 1]', 'cmp byte [rax], 0x2f', 'je 0x21eb0', 'cmp byte [rbx], 0x2d', 'je 0x21df0', 'mov eax, dword [obj.linkput]', 'mov rbx, rsp', 'mov rdx, rsp', 'mov rsi, r14', 'mov edi, 1', 'test eax, eax', 'je 0x21e88', 'call sym.imp.__lxstat64', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x21e9a', 'mov rdi, r14', 'call sym.imp.free', 'test r13, r13', 'je 0x21d7b', 'test r12, r12', 'je 0x21d9f', 'test rbp, rbp', 'je 0x21dba', 'lea rdi, [rbx + 0x58]', 'call fcn.0001aa30', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, qword [rdi]', 'mov rdi, rsp', 'add rax, 1', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime', 'test rax, rax', 'je 0x1aae0', 'xor edi, edi', 'call sym.imp.time', 'add rax, 1', 'mov rdi, rsp', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
312,zip,556,"['call sym.imp.localtime', 'lea edx, [rbx + rbx]', 'mov dword [rax + 0x20], 0xffffffff', 'mov rdi, rax', 'and edx, 0x3e', 'mov dword [rax], edx', 'mov edx, ebx', 'sar edx, 5', 'and edx, 0x3f', 'mov dword [rax + 4], edx', 'mov edx, ebx', 'sar edx, 0xb', 'and edx, 0x1f', 'mov dword [rax + 8], edx', 'mov rdx, rbx', 'shr rdx, 0x10', 'and edx, 0x1f', 'mov dword [rax + 0xc], edx', 'mov rdx, rbx', 'shr rbx, 0x19', 'shr rdx, 0x15', 'and ebx, 0x7f', 'and edx, 0xf', 'add ebx, 0x50', 'sub edx, 1', 'mov dword [rax + 0x14], ebx', 'mov dword [rax + 0x10], edx', 'call sym.imp.mktime', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1abc8', 'add rsp, 0x10', 'pop rbx', 'ret', 'mov rsi, rsp', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'mov qword [rsp], rax', 'call sym.imp.utime', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x21c8a', 'add rsp, 0x20', 'pop rbx', 'ret', 'nop dword [rax]', 'mov rdi, qword [obj.tempath]', 'test rdi, rdi', 'jne 0xfd8b', 'jmp 0xfd9b', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xfdba', 'mov rdi, qword [obj.in_file]', 'test rdi, rdi', 'je 0xfdd6', 'mov rdi, qword [obj.in_path]', 'test rdi, rdi', 'je 0xfdf2', 'mov rdi, qword [obj.out_path]', 'test rdi, rdi', 'je 0xfe0e', 'mov rdi, qword [obj.zcomment]', 'test rdi, rdi', 'je 0xfe2a', 'mov eax, dword [obj.dispose]', 'test eax, eax', 'je 0xfe41', 'call fcn.00017bc0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [obj.zfiles]', 'test rbx, rbx', 'je 0x17ce5', 'xor ebp, ebp', 'lea r12, str.error_deleting_', 'jmp 0x17c9c', 'cmp dword [rbx + 0xa0], 1', 'je 0x17caf', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'mov dword [rbx + 0xa0], 1', 'cmp byte [rdx + rax - 1], 0x2f', 'jne 0x17bf0', 'mov esi, dword [obj.verbose]', 'test esi, esi', 'jne 0x17d08', 'mov rdi, qword [rbx + 0x50]', 'call fcn.0001abd0', 'jmp sym.imp.unlink', 'test eax, eax', 'jne 0x17cf0', 'mov rsi, qword [rbx + 0x50]', 'mov rdi, r12', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov eax, dword [obj.noisy]', 'jmp 0x14e82', 'test eax, eax', 'je 0x1481f', 'lea rsi, [0x0002db66]', 'lea rdi, str.Scanning_for_entries...', 'call fcn.0000fb50', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfbaa', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfc30', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfbf8', 'lea rdx, [0x00024cac]', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'jmp 0x955d', 'xor edi, edi', 'call fcn.0000fd30', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 0x20', 'mov edx, dword [0x0023464c]', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test edx, edx', 'je 0xfe88', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xff0f', 'cmp byte [rax], 0x2d', 'jne 0xfe9d', 'mov rbx, qword [obj.zfiles]', 'xor r14d, r14d', 'mov r12, rsp', 'lea r13, [var_8h]', 'test rbx, rbx', 'jne 0xfee7', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'cmp byte [rdx + rax - 1], 0x2f', 'je 0xfedb', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'mov rdi, qword [obj.zipfile]', 'mov rsi, r14', 'call fcn.00021c40', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call fcn.0001ab30', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
313,zip,76,"['call sym.imp.localtime', 'lea edx, [rbx + rbx]', 'mov dword [rax + 0x20], 0xffffffff', 'mov rdi, rax', 'and edx, 0x3e', 'mov dword [rax], edx', 'mov edx, ebx', 'sar edx, 5', 'and edx, 0x3f', 'mov dword [rax + 4], edx', 'mov edx, ebx', 'sar edx, 0xb', 'and edx, 0x1f', 'mov dword [rax + 8], edx', 'mov rdx, rbx', 'shr rdx, 0x10', 'and edx, 0x1f', 'mov dword [rax + 0xc], edx', 'mov rdx, rbx', 'shr rbx, 0x19', 'shr rdx, 0x15', 'and ebx, 0x7f', 'and edx, 0xf', 'add ebx, 0x50', 'sub edx, 1', 'mov dword [rax + 0x14], ebx', 'mov dword [rax + 0x10], edx', 'call sym.imp.mktime']"
314,zip,483,"['call sym.imp.mktime', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1abc8', 'add rsp, 0x10', 'pop rbx', 'ret', 'mov rsi, rsp', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'mov qword [rsp], rax', 'call sym.imp.utime', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x21c8a', 'add rsp, 0x20', 'pop rbx', 'ret', 'nop dword [rax]', 'mov rdi, qword [obj.tempath]', 'test rdi, rdi', 'jne 0xfd8b', 'jmp 0xfd9b', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xfdba', 'mov rdi, qword [obj.in_file]', 'test rdi, rdi', 'je 0xfdd6', 'mov rdi, qword [obj.in_path]', 'test rdi, rdi', 'je 0xfdf2', 'mov rdi, qword [obj.out_path]', 'test rdi, rdi', 'je 0xfe0e', 'mov rdi, qword [obj.zcomment]', 'test rdi, rdi', 'je 0xfe2a', 'mov eax, dword [obj.dispose]', 'test eax, eax', 'je 0xfe41', 'call fcn.00017bc0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [obj.zfiles]', 'test rbx, rbx', 'je 0x17ce5', 'xor ebp, ebp', 'lea r12, str.error_deleting_', 'jmp 0x17c9c', 'cmp dword [rbx + 0xa0], 1', 'je 0x17caf', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'mov dword [rbx + 0xa0], 1', 'cmp byte [rdx + rax - 1], 0x2f', 'jne 0x17bf0', 'mov esi, dword [obj.verbose]', 'test esi, esi', 'jne 0x17d08', 'mov rdi, qword [rbx + 0x50]', 'call fcn.0001abd0', 'jmp sym.imp.unlink', 'test eax, eax', 'jne 0x17cf0', 'mov rsi, qword [rbx + 0x50]', 'mov rdi, r12', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov rdi, rbp', 'xor ebx, ebx', 'jmp 0x8c2f', 'mov esi, 0x2f', 'call sym.imp.strrchr', 'test rax, rax', 'jne 0x8c28', 'test rbx, rbx', 'mov esi, 0x2e', 'cmove rbx, rbp', 'mov rdi, rbx', 'call sym.imp.strrchr', 'test rax, rax', 'je 0xd004', 'cmp dword [obj.logfile_append], 1', 'lea rsi, [var_f0h]', 'mov rdi, rbp', 'sbb eax, eax', 'and eax, 0x16', 'add eax, 0x61', 'mov word [var_f0h], ax', 'call sym.imp.fopen64', 'test rax, rax', 'mov qword [obj.logfile], rax', 'je 0xe40d', 'lea rbx, [timer]', 'mov r12d, 0x10', 'lea r13, [0x0002da3a]', 'mov rdi, rbx', 'call sym.imp.time', 'mov rdi, rbx', 'call sym.imp.localtime']"
315,zip,561,"['call sym.imp.mktime', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1abc8', 'add rsp, 0x10', 'pop rbx', 'ret', 'mov rsi, rsp', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'mov qword [rsp], rax', 'call sym.imp.utime', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x21c8a', 'add rsp, 0x20', 'pop rbx', 'ret', 'nop dword [rax]', 'mov rdi, qword [obj.tempath]', 'test rdi, rdi', 'jne 0xfd8b', 'jmp 0xfd9b', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xfdba', 'mov rdi, qword [obj.in_file]', 'test rdi, rdi', 'je 0xfdd6', 'mov rdi, qword [obj.in_path]', 'test rdi, rdi', 'je 0xfdf2', 'mov rdi, qword [obj.out_path]', 'test rdi, rdi', 'je 0xfe0e', 'mov rdi, qword [obj.zcomment]', 'test rdi, rdi', 'je 0xfe2a', 'mov eax, dword [obj.dispose]', 'test eax, eax', 'je 0xfe41', 'call fcn.00017bc0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [obj.zfiles]', 'test rbx, rbx', 'je 0x17ce5', 'xor ebp, ebp', 'lea r12, str.error_deleting_', 'jmp 0x17c9c', 'cmp dword [rbx + 0xa0], 1', 'je 0x17caf', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'mov dword [rbx + 0xa0], 1', 'cmp byte [rdx + rax - 1], 0x2f', 'jne 0x17bf0', 'mov esi, dword [obj.verbose]', 'test esi, esi', 'jne 0x17d08', 'mov rdi, qword [rbx + 0x50]', 'call fcn.0001abd0', 'jmp sym.imp.unlink', 'test eax, eax', 'jne 0x17cf0', 'mov rsi, qword [rbx + 0x50]', 'mov rdi, r12', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov rdi, rbp', 'xor ebx, ebx', 'jmp 0x8c2f', 'mov esi, 0x2f', 'call sym.imp.strrchr', 'test rax, rax', 'jne 0x8c28', 'test rbx, rbx', 'mov esi, 0x2e', 'cmove rbx, rbp', 'mov rdi, rbx', 'call sym.imp.strrchr', 'test rax, rax', 'je 0xd004', 'cmp dword [obj.logfile_append], 1', 'lea rsi, [var_f0h]', 'mov rdi, rbp', 'sbb eax, eax', 'and eax, 0x16', 'add eax, 0x61', 'mov word [var_f0h], ax', 'call sym.imp.fopen64', 'test rax, rax', 'mov qword [obj.logfile], rax', 'je 0xe40d', 'lea rbx, [timer]', 'mov r12d, 0x10', 'lea r13, [0x0002da3a]', 'mov rdi, rbx', 'call sym.imp.time', 'mov rdi, rbx', 'call sym.imp.localtime', 'mov rcx, qword [obj.logfile]', 'lea rdi, str.__________n', 'mov edx, 0xa', 'mov esi, 1', 'mov rbx, rax', 'call sym.imp.fwrite', 'mov rdi, rbx', 'call sym.imp.asctime']"
316,zip,555,"['call sym.imp.mktime', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1abc8', 'add rsp, 0x10', 'pop rbx', 'ret', 'mov rsi, rsp', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'mov qword [rsp], rax', 'call sym.imp.utime', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x21c8a', 'add rsp, 0x20', 'pop rbx', 'ret', 'nop dword [rax]', 'mov rdi, qword [obj.tempath]', 'test rdi, rdi', 'jne 0xfd8b', 'jmp 0xfd9b', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xfdba', 'mov rdi, qword [obj.in_file]', 'test rdi, rdi', 'je 0xfdd6', 'mov rdi, qword [obj.in_path]', 'test rdi, rdi', 'je 0xfdf2', 'mov rdi, qword [obj.out_path]', 'test rdi, rdi', 'je 0xfe0e', 'mov rdi, qword [obj.zcomment]', 'test rdi, rdi', 'je 0xfe2a', 'mov eax, dword [obj.dispose]', 'test eax, eax', 'je 0xfe41', 'call fcn.00017bc0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [obj.zfiles]', 'test rbx, rbx', 'je 0x17ce5', 'xor ebp, ebp', 'lea r12, str.error_deleting_', 'jmp 0x17c9c', 'cmp dword [rbx + 0xa0], 1', 'je 0x17caf', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'mov dword [rbx + 0xa0], 1', 'cmp byte [rdx + rax - 1], 0x2f', 'jne 0x17bf0', 'mov esi, dword [obj.verbose]', 'test esi, esi', 'jne 0x17d08', 'mov rdi, qword [rbx + 0x50]', 'call fcn.0001abd0', 'jmp sym.imp.unlink', 'test eax, eax', 'jne 0x17cf0', 'mov rsi, qword [rbx + 0x50]', 'mov rdi, r12', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov dword [obj.logall], 0', 'jmp 0x8dbf', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'jmp 0x8e96', 'mov rsi, qword [obj.out_path]', 'mov rdi, qword [obj.in_path]', 'call fcn.000204c0', 'movzx eax, byte [rdi]', 'movzx edx, byte [rsi]', 'mov r8d, eax', 'sub eax, edx', 'jne 0x20500', 'test dl, dl', 'je 0x20500', 'test r8b, r8b', 'jne 0x204e9', 'jmp 0x20502', 'ret', 'test eax, eax', 'jne 0xac56', 'mov qword [r14 + 0x30], 0', 'mov rax, qword [arg_98h]', 'add qword [obj.files_total], 1', 'lea rdx, [rax + 2]', 'cmp rdx, 1', 'jbe 0xac83', 'mov r14, qword [r14 + 0x40]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.noisy], 0', 'je 0xabd3', 'mov eax, dword [0x00233010]', 'test eax, eax', 'je 0xab81', 'cmp eax, 3', 'je 0xab81', 'mov rdi, qword [r14]', 'xor ecx, ecx', 'mov rdx, rbx', 'xor esi, esi', 'call fcn.00021c90', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'mov r12, rdx', 'mov rbx, rdi', 'mov rbp, rcx', 'sub rsp, 0xa8', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'cmp rbx, qword [obj.label]', 'je 0x21e40', 'lea edi, [rax + 1]', 'mov r15, rax', 'movsxd rdi, edi', 'call sym.imp.malloc', 'test rax, rax', 'mov r14, rax', 'je 0x21ef0', 'mov rsi, rbx', 'mov rdi, r14', 'movsxd r15, r15d', 'call sym.imp.strcpy', 'lea rax, [r14 + r15 - 1]', 'cmp byte [rax], 0x2f', 'je 0x21eb0', 'cmp byte [rbx], 0x2d', 'je 0x21df0', 'mov eax, dword [obj.linkput]', 'mov rbx, rsp', 'mov rdx, rsp', 'mov rsi, r14', 'mov edi, 1', 'test eax, eax', 'je 0x21e88', 'call sym.imp.__lxstat64', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x21e9a', 'mov rdi, r14', 'call sym.imp.free', 'test r13, r13', 'je 0x21d7b', 'test r12, r12', 'je 0x21d9f', 'test rbp, rbp', 'je 0x21dba', 'lea rdi, [rbx + 0x58]', 'call fcn.0001aa30', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, qword [rdi]', 'mov rdi, rsp', 'add rax, 1', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
317,zip,620,"['call sym.imp.mktime', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1abc8', 'add rsp, 0x10', 'pop rbx', 'ret', 'mov rsi, rsp', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'mov qword [rsp], rax', 'call sym.imp.utime', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x21c8a', 'add rsp, 0x20', 'pop rbx', 'ret', 'nop dword [rax]', 'mov rdi, qword [obj.tempath]', 'test rdi, rdi', 'jne 0xfd8b', 'jmp 0xfd9b', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xfdba', 'mov rdi, qword [obj.in_file]', 'test rdi, rdi', 'je 0xfdd6', 'mov rdi, qword [obj.in_path]', 'test rdi, rdi', 'je 0xfdf2', 'mov rdi, qword [obj.out_path]', 'test rdi, rdi', 'je 0xfe0e', 'mov rdi, qword [obj.zcomment]', 'test rdi, rdi', 'je 0xfe2a', 'mov eax, dword [obj.dispose]', 'test eax, eax', 'je 0xfe41', 'call fcn.00017bc0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [obj.zfiles]', 'test rbx, rbx', 'je 0x17ce5', 'xor ebp, ebp', 'lea r12, str.error_deleting_', 'jmp 0x17c9c', 'cmp dword [rbx + 0xa0], 1', 'je 0x17caf', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'mov dword [rbx + 0xa0], 1', 'cmp byte [rdx + rax - 1], 0x2f', 'jne 0x17bf0', 'mov esi, dword [obj.verbose]', 'test esi, esi', 'jne 0x17d08', 'mov rdi, qword [rbx + 0x50]', 'call fcn.0001abd0', 'jmp sym.imp.unlink', 'test eax, eax', 'jne 0x17cf0', 'mov rsi, qword [rbx + 0x50]', 'mov rdi, r12', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov qword [src], 0xfffe', 'jmp 0x1ebb7', 'mov rdi, qword [var_78h]', 'xor rdi, qword fs:[0x28]', 'mov rax, qword [src]', 'jne 0x1fdf7', 'add rsp, 0x88', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x20', 'test rax, rax', 'je 0x8bc7', 'cmp dword [var_28h], 0', 'mov r8, rax', 'jne 0x9333', 'mov rax, qword [obj.key]', 'test rax, rax', 'je 0x8bea', 'cmp dword [var_48h], 0', 'jne 0x92fb', 'cmp dword [var_54h], 0', 'jne 0xe4f2', 'cmp dword [var_50h], 0', 'jne 0x9407', 'mov rbp, qword [obj.logfile_path]', 'test rbp, rbp', 'je 0xb0c2', 'mov dword [obj.logall], 0', 'jmp 0x8dbf', 'cmp dword [obj.split_method], 0', 'je 0x8e38', 'cmp dword [obj.verbose], 0', 'je 0x8e4f', 'cmp dword [obj.pcount], 0', 'je 0x8e66', 'movzx ebp, byte [var_20h]', 'and ebp, 1', 'cmp dword [var_18h], 3', 'jne 0xa5be', 'cmp dword [var_20h], 0', 'je 0x8eb1', 'jmp 0x8e96', 'mov rsi, qword [obj.out_path]', 'mov rdi, qword [obj.in_path]', 'call fcn.000204c0', 'movzx eax, byte [rdi]', 'movzx edx, byte [rsi]', 'mov r8d, eax', 'sub eax, edx', 'jne 0x20500', 'test dl, dl', 'je 0x20500', 'test r8b, r8b', 'jne 0x204e9', 'jmp 0x20502', 'ret', 'test eax, eax', 'jne 0xac56', 'mov qword [r14 + 0x30], 0', 'mov rax, qword [arg_98h]', 'add qword [obj.files_total], 1', 'lea rdx, [rax + 2]', 'cmp rdx, 1', 'jbe 0xac83', 'mov r14, qword [r14 + 0x40]', 'jmp 0xab8c', 'test r14, r14', 'je 0xad8a', 'cmp dword [obj.noisy], 0', 'je 0xabd3', 'mov eax, dword [0x00233010]', 'test eax, eax', 'je 0xab81', 'cmp eax, 3', 'je 0xab81', 'mov rdi, qword [r14]', 'xor ecx, ecx', 'mov rdx, rbx', 'xor esi, esi', 'call fcn.00021c90', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'mov r12, rdx', 'mov rbx, rdi', 'mov rbp, rcx', 'sub rsp, 0xa8', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'cmp rbx, qword [obj.label]', 'je 0x21e40', 'lea edi, [rax + 1]', 'mov r15, rax', 'movsxd rdi, edi', 'call sym.imp.malloc', 'test rax, rax', 'mov r14, rax', 'je 0x21ef0', 'mov rsi, rbx', 'mov rdi, r14', 'movsxd r15, r15d', 'call sym.imp.strcpy', 'lea rax, [r14 + r15 - 1]', 'cmp byte [rax], 0x2f', 'je 0x21eb0', 'cmp byte [rbx], 0x2d', 'je 0x21df0', 'mov eax, dword [obj.linkput]', 'mov rbx, rsp', 'mov rdx, rsp', 'mov rsi, r14', 'mov edi, 1', 'test eax, eax', 'je 0x21e88', 'call sym.imp.__lxstat64', 'test eax, eax', 'setne al', 'test al, al', 'jne 0x21e9a', 'mov rdi, r14', 'call sym.imp.free', 'test r13, r13', 'je 0x21d7b', 'test r12, r12', 'je 0x21d9f', 'test rbp, rbp', 'je 0x21dba', 'lea rdi, [rbx + 0x58]', 'call fcn.0001aa30', 'push rbx', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, qword [rdi]', 'mov rdi, rsp', 'add rax, 1', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime', 'test rax, rax', 'je 0x1aae0', 'xor edi, edi', 'call sym.imp.time', 'add rax, 1', 'mov rdi, rsp', 'and rax, 0xfffffffffffffffe', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
318,zip,480,"['call sym.imp.mktime', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1abc8', 'add rsp, 0x10', 'pop rbx', 'ret', 'mov rsi, rsp', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'mov qword [rsp], rax', 'call sym.imp.utime', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x21c8a', 'add rsp, 0x20', 'pop rbx', 'ret', 'nop dword [rax]', 'mov rdi, qword [obj.tempath]', 'test rdi, rdi', 'jne 0xfd8b', 'jmp 0xfd9b', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xfdba', 'mov rdi, qword [obj.in_file]', 'test rdi, rdi', 'je 0xfdd6', 'mov rdi, qword [obj.in_path]', 'test rdi, rdi', 'je 0xfdf2', 'mov rdi, qword [obj.out_path]', 'test rdi, rdi', 'je 0xfe0e', 'mov rdi, qword [obj.zcomment]', 'test rdi, rdi', 'je 0xfe2a', 'mov eax, dword [obj.dispose]', 'test eax, eax', 'je 0xfe41', 'call fcn.00017bc0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [obj.zfiles]', 'test rbx, rbx', 'je 0x17ce5', 'xor ebp, ebp', 'lea r12, str.error_deleting_', 'jmp 0x17c9c', 'cmp dword [rbx + 0xa0], 1', 'je 0x17caf', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'mov dword [rbx + 0xa0], 1', 'cmp byte [rdx + rax - 1], 0x2f', 'jne 0x17bf0', 'mov esi, dword [obj.verbose]', 'test esi, esi', 'jne 0x17d08', 'mov rdi, qword [rbx + 0x50]', 'call fcn.0001abd0', 'jmp sym.imp.unlink', 'test eax, eax', 'jne 0x17cf0', 'mov rsi, qword [rbx + 0x50]', 'mov rdi, r12', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov eax, dword [obj.noisy]', 'jmp 0x14e82', 'test eax, eax', 'je 0x1481f', 'lea rsi, [0x0002db66]', 'lea rdi, str.Scanning_for_entries...', 'call fcn.0000fb50', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfbaa', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfc30', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfbf8', 'lea rdx, [0x00024cac]', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'jmp 0x955d', 'xor edi, edi', 'call fcn.0000fd30', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 0x20', 'mov edx, dword [0x0023464c]', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test edx, edx', 'je 0xfe88', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xff0f', 'cmp byte [rax], 0x2d', 'jne 0xfe9d', 'mov rbx, qword [obj.zfiles]', 'xor r14d, r14d', 'mov r12, rsp', 'lea r13, [var_8h]', 'test rbx, rbx', 'jne 0xfee7', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'cmp byte [rdx + rax - 1], 0x2f', 'je 0xfedb', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'mov rdi, qword [obj.zipfile]', 'mov rsi, r14', 'call fcn.00021c40', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call fcn.0001ab30', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
319,zip,556,"['call sym.imp.mktime', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x1abc8', 'add rsp, 0x10', 'pop rbx', 'ret', 'mov rsi, rsp', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'mov qword [rsp], rax', 'call sym.imp.utime', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x21c8a', 'add rsp, 0x20', 'pop rbx', 'ret', 'nop dword [rax]', 'mov rdi, qword [obj.tempath]', 'test rdi, rdi', 'jne 0xfd8b', 'jmp 0xfd9b', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xfdba', 'mov rdi, qword [obj.in_file]', 'test rdi, rdi', 'je 0xfdd6', 'mov rdi, qword [obj.in_path]', 'test rdi, rdi', 'je 0xfdf2', 'mov rdi, qword [obj.out_path]', 'test rdi, rdi', 'je 0xfe0e', 'mov rdi, qword [obj.zcomment]', 'test rdi, rdi', 'je 0xfe2a', 'mov eax, dword [obj.dispose]', 'test eax, eax', 'je 0xfe41', 'call fcn.00017bc0', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [obj.zfiles]', 'test rbx, rbx', 'je 0x17ce5', 'xor ebp, ebp', 'lea r12, str.error_deleting_', 'jmp 0x17c9c', 'cmp dword [rbx + 0xa0], 1', 'je 0x17caf', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'mov dword [rbx + 0xa0], 1', 'cmp byte [rdx + rax - 1], 0x2f', 'jne 0x17bf0', 'mov esi, dword [obj.verbose]', 'test esi, esi', 'jne 0x17d08', 'mov rdi, qword [rbx + 0x50]', 'call fcn.0001abd0', 'jmp sym.imp.unlink', 'test eax, eax', 'jne 0x17cf0', 'mov rsi, qword [rbx + 0x50]', 'mov rdi, r12', 'call fcn.0000fc40', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfc9a', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfd20', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfce8', 'lea rdx, str._tzip_warning:__s_s_n', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'mov eax, dword [obj.noisy]', 'jmp 0x14e82', 'test eax, eax', 'je 0x1481f', 'lea rsi, [0x0002db66]', 'lea rdi, str.Scanning_for_entries...', 'call fcn.0000fb50', 'push rbp', 'push rbx', 'mov rbp, rsi', 'mov rbx, rdi', 'sub rsp, 8', 'mov ecx, dword [obj.noisy]', 'test ecx, ecx', 'je 0xfbaa', 'mov rdi, qword [obj.logfile]', 'test rdi, rdi', 'je 0xfc30', 'mov eax, dword [obj.logfile_line_started]', 'test eax, eax', 'jne 0xfbf8', 'lea rdx, [0x00024cac]', 'mov r8, rbp', 'mov rcx, rbx', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov dword [obj.logfile_line_started], 0', 'mov rdi, qword [obj.logfile]', 'add rsp, 8', 'pop rbx', 'pop rbp', 'jmp sym.imp.fflush', 'jmp 0x955d', 'xor edi, edi', 'call fcn.0000fd30', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 0x20', 'mov edx, dword [0x0023464c]', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test edx, edx', 'je 0xfe88', 'mov rax, qword [obj.zipfile]', 'test rax, rax', 'je 0xff0f', 'cmp byte [rax], 0x2d', 'jne 0xfe9d', 'mov rbx, qword [obj.zfiles]', 'xor r14d, r14d', 'mov r12, rsp', 'lea r13, [var_8h]', 'test rbx, rbx', 'jne 0xfee7', 'movzx eax, word [rbx + 0x28]', 'mov rdx, qword [rbx + 0x70]', 'cmp byte [rdx + rax - 1], 0x2f', 'je 0xfedb', 'mov rbx, qword [rbx + 0xb0]', 'test rbx, rbx', 'je 0xfe69', 'test r14, r14', 'je 0xff24', 'mov rdi, qword [obj.zipfile]', 'mov rsi, r14', 'call fcn.00021c40', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call fcn.0001ab30', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime', 'lea edx, [rbx + rbx]', 'mov dword [rax + 0x20], 0xffffffff', 'mov rdi, rax', 'and edx, 0x3e', 'mov dword [rax], edx', 'mov edx, ebx', 'sar edx, 5', 'and edx, 0x3f', 'mov dword [rax + 4], edx', 'mov edx, ebx', 'sar edx, 0xb', 'and edx, 0x1f', 'mov dword [rax + 8], edx', 'mov rdx, rbx', 'shr rdx, 0x10', 'and edx, 0x1f', 'mov dword [rax + 0xc], edx', 'mov rdx, rbx', 'shr rbx, 0x19', 'shr rdx, 0x15', 'and ebx, 0x7f', 'and edx, 0xf', 'add ebx, 0x50', 'sub edx, 1', 'mov dword [rax + 0x14], ebx', 'mov dword [rax + 0x10], edx', 'call sym.imp.mktime']"
320,zipinfo,231,"['call sym.imp.localtime', 'cmp dword [0x0002e11c], 9', 'jle 0x17afa', 'test rax, rax', 'je 0x17c00', 'mov eax, dword [0x000272d0]', 'movdqa xmm0, xmmword [str.______________:__:__]', 'mov dword [r12 + 0x10], eax', 'movzx eax, byte [0x000272d4]', 'movaps xmmword [r12], xmm0', 'mov byte [r12 + 0x14], al', 'jmp 0x17abb', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17c29', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r8, rbx', 'mov edx, 0x10000', 'lea rcx, [0x0002909a]', 'mov r9, rax', 'mov esi, 1', 'lea rdi, [0x0010e1e0]', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'xor ecx, ecx', 'movsxd rdx, eax', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'call fcn.00012820', 'movzx eax, word [0x0011e2d2]', 'test ax, ax', 'je 0x18ba4', 'movzx edi, ax', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x18a10', 'cmp r15d, eax', 'cmovl r15d, eax', 'cmp eax, 1', 'jg 0x19672', 'mov r14d, r15d', 'mov r12d, r14d', 'cmp r12d, 1', 'jg 0x19bac', 'mov eax, dword [0x0002e130]', 'test eax, eax', 'jne 0x1c33a', 'mov rsi, qword [var_10h]', 'mov rdi, qword [var_20h]', 'lea r14, [0x00026f2b]', 'call fcn.00012780', 'endbr64', 'xor eax, eax', 'test rdi, rdi', 'je 0x127ef', 'cmp rdi, 0x1e8480', 'jbe 0x127d0', 'mov rax, rdi', 'shr rax, 1', 'cmp rdi, rsi', 'jae 0x12800', 'mov rdx, rdi', 'sub rdx, rsi', 'imul rdx, rdx, 0x3e8', 'add rax, rdx', 'xor edx, edx', 'div rdi', 'ret', 'mov edx, 0x10000', 'lea rcx, str._3d__', 'mov esi, 1', 'add eax, 5', 'lea rdi, [0x0010e1e0]', 'movsxd r8, eax', 'sar eax, 0x1f', 'imul r8, r8, 0x66666667', 'sar r8, 0x22', 'sub r8d, eax', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'movsxd rdx, eax', 'xor ecx, ecx', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'jmp 0x1b5cf', 'mov rdi, qword [0x0011e250]', 'test rdi, rdi', 'je 0x1bbb8', 'xor edi, edi', 'jmp 0x1b60c', 'mov rsi, rbp', 'mov r12, qword [0x0011f578]', 'mov byte [var_c0h], 0', 'call fcn.000179f0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x17b03', 'cmp byte [rsi], 1', 'je 0x17ae8', 'call sym.imp.localtime']"
321,zipinfo,220,"['call sym.imp.localtime', 'cmp dword [0x0002e11c], 9', 'jle 0x17afa', 'test rax, rax', 'je 0x17c00', 'mov eax, dword [0x000272d0]', 'movdqa xmm0, xmmword [str.______________:__:__]', 'mov dword [r12 + 0x10], eax', 'movzx eax, byte [0x000272d4]', 'movaps xmmword [r12], xmm0', 'mov byte [r12 + 0x14], al', 'jmp 0x17abb', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17c29', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r8, rbx', 'mov edx, 0x10000', 'lea rcx, [0x0002909a]', 'mov r9, rax', 'mov esi, 1', 'lea rdi, [0x0010e1e0]', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'xor ecx, ecx', 'movsxd rdx, eax', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'call fcn.00012820', 'movzx eax, word [0x0011e2d2]', 'test ax, ax', 'je 0x18ba4', 'movzx edi, ax', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x12446', 'mov ecx, dword [0x0002e180]', 'test ecx, ecx', 'jne 0x12520', 'lea rdx, [0x0011e450]', 'mov ecx, dword [rdx]', 'add rdx, 4', 'lea eax, [rcx - 0x1010101]', 'not ecx', 'and eax, ecx', 'and eax, 0x80808080', 'je 0x12527', 'mov ecx, eax', 'shr ecx, 0x10', 'test eax, 0x8080', 'cmove eax, ecx', 'lea rcx, [rdx + 2]', 'cmove rdx, rcx', 'mov esi, eax', 'add sil, al', 'sbb rdx, 3', 'sub rdx, rbx', 'je 0x125a0', 'mov rdi, qword [0x0011e250]', 'mov rcx, qword [0x0011e2a8]', 'test rdi, rdi', 'je 0x12620', 'mov rdi, rcx', 'call fcn.0000f6c0', 'endbr64', 'push rbp', 'mov r8d, edi', 'mov rdx, rdi', 'push rbx', 'shr r8d, 0x19', 'shr rdx, 0x15', 'mov rbx, rdi', 'lea r9d, [r8 + 0xa]', 'and edx, 0xf', 'lea esi, [r8 + 0x7bb]', 'mov ecx, ebx', 'imul r10d, r9d, 0x16d', 'sar esi, 2', 'sub edx, 1', 'mov r11d, ebx', 'sub rsp, 0x18', 'movsxd rbp, edx', 'shr ecx, 0xb', 'and r11d, 0x1f', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, rdi', 'and ecx, 0x1f', 'add r11d, r11d', 'shr rax, 0x10', 'lea r10d, [rsi + r10 - 0x1ec]', 'lea rsi, obj.ydays', 'and eax, 0x1f', 'movzx esi, word [rsi + rbp*2]', 'lea edi, [rax - 1]', 'mov eax, ebx', 'shr eax, 5', 'add esi, r10d', 'and eax, 0x3f', 'cmp edx, 1', 'jle 0xf761', 'imul eax, eax, 0x3c', 'movsxd rdx, ecx', 'imul rdx, rdx, 0xe10', 'add eax, r11d', 'cdqe', 'add rax, rdx', 'lea edx, [rdi + rsi]', 'imul rdx, rdx, 0x15180', 'add rax, rdx', 'add rax, qword [obj.__timezone]', 'cmp rbx, 0x7431ffff', 'jbe 0xf7b0', 'test rax, rax', 'mov edx, 0x7fffffff', 'cmovs rax, rdx', 'mov qword [rsp], rax', 'mov rdi, rsp', 'call sym.imp.localtime']"
322,zipinfo,175,"['call sym.imp.localtime', 'cmp dword [0x0002e11c], 9', 'jle 0x17afa', 'test rax, rax', 'je 0x17c00', 'mov eax, dword [0x000272d0]', 'movdqa xmm0, xmmword [str.______________:__:__]', 'mov dword [r12 + 0x10], eax', 'movzx eax, byte [0x000272d4]', 'movaps xmmword [r12], xmm0', 'mov byte [r12 + 0x14], al', 'jmp 0x17abb', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17c29', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r8, rbx', 'mov edx, 0x10000', 'lea rcx, [0x0002909a]', 'mov r9, rax', 'mov esi, 1', 'lea rdi, [0x0010e1e0]', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'xor ecx, ecx', 'movsxd rdx, eax', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'call fcn.00012820', 'movzx eax, word [0x0011e2d2]', 'test ax, ax', 'je 0x18ba4', 'movzx edi, ax', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x129b3', 'mov r10d, dword [0x0002e180]', 'test r10d, r10d', 'jne 0x12a90', 'mov rdi, qword [0x0011e250]', 'mov rcx, qword [0x0011e2a8]', 'test rdi, rdi', 'je 0x12acb', 'movzx esi, word [0x0011e2d0]', 'xor r9d, r9d', 'lea r8, [var_50h]', 'mov edx, 1', 'call fcn.00016820', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x38', 'mov dword [var_14h], edx', 'mov qword [var_18h], rcx', 'mov qword [var_8h], r8', 'test rdi, rdi', 'je 0x16968', 'xor r12d, r12d', 'add rsp, 0x38', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, 1', 'jne 0x12f20', 'lea rdi, [timer]', 'call sym.imp.localtime']"
323,zipinfo,193,"['call sym.imp.localtime', 'mov rdx, rax', 'mov rax, qword [rsp]', 'test rdx, rdx', 'je 0xf7db', 'cmp rbx, 0x7431ffff', 'jbe 0xf810', 'cmp rax, 0x6fffffff', 'mov edx, 0xffffffff', 'cmovle rax, rdx', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf828', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, qword [rsp]', 'cmp qword [rdi], rax', 'jge 0x125f0', 'movzx edi, word [0x0011e2d2]', 'add qword [r14], 1', 'test di, di', 'je 0x12512', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x18a10', 'cmp r15d, eax', 'cmovl r15d, eax', 'cmp eax, 1', 'jg 0x19672', 'mov r14d, r15d', 'mov r12d, r14d', 'cmp r12d, 1', 'jg 0x19bac', 'mov eax, dword [0x0002e130]', 'test eax, eax', 'jne 0x1c33a', 'mov rsi, qword [var_10h]', 'mov rdi, qword [var_20h]', 'lea r14, [0x00026f2b]', 'call fcn.00012780', 'endbr64', 'xor eax, eax', 'test rdi, rdi', 'je 0x127ef', 'cmp rdi, 0x1e8480', 'jbe 0x127d0', 'mov rax, rdi', 'shr rax, 1', 'cmp rdi, rsi', 'jae 0x12800', 'mov rdx, rdi', 'sub rdx, rsi', 'imul rdx, rdx, 0x3e8', 'add rax, rdx', 'xor edx, edx', 'div rdi', 'ret', 'mov edx, 0x10000', 'lea rcx, str._3d__', 'mov esi, 1', 'add eax, 5', 'lea rdi, [0x0010e1e0]', 'movsxd r8, eax', 'sar eax, 0x1f', 'imul r8, r8, 0x66666667', 'sar r8, 0x22', 'sub r8d, eax', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'movsxd rdx, eax', 'xor ecx, ecx', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'jmp 0x1b5cf', 'mov rdi, qword [0x0011e250]', 'test rdi, rdi', 'je 0x1bbb8', 'xor edi, edi', 'jmp 0x1b60c', 'mov rsi, rbp', 'mov r12, qword [0x0011f578]', 'mov byte [var_c0h], 0', 'call fcn.000179f0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x17b03', 'cmp byte [rsi], 1', 'je 0x17ae8', 'call sym.imp.localtime']"
324,zipinfo,182,"['call sym.imp.localtime', 'mov rdx, rax', 'mov rax, qword [rsp]', 'test rdx, rdx', 'je 0xf7db', 'cmp rbx, 0x7431ffff', 'jbe 0xf810', 'cmp rax, 0x6fffffff', 'mov edx, 0xffffffff', 'cmovle rax, rdx', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf828', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, qword [rsp]', 'cmp qword [rdi], rax', 'jge 0x125f0', 'movzx edi, word [0x0011e2d2]', 'add qword [r14], 1', 'test di, di', 'je 0x12512', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x12446', 'mov ecx, dword [0x0002e180]', 'test ecx, ecx', 'jne 0x12520', 'lea rdx, [0x0011e450]', 'mov ecx, dword [rdx]', 'add rdx, 4', 'lea eax, [rcx - 0x1010101]', 'not ecx', 'and eax, ecx', 'and eax, 0x80808080', 'je 0x12527', 'mov ecx, eax', 'shr ecx, 0x10', 'test eax, 0x8080', 'cmove eax, ecx', 'lea rcx, [rdx + 2]', 'cmove rdx, rcx', 'mov esi, eax', 'add sil, al', 'sbb rdx, 3', 'sub rdx, rbx', 'je 0x125a0', 'mov rdi, qword [0x0011e250]', 'mov rcx, qword [0x0011e2a8]', 'test rdi, rdi', 'je 0x12620', 'mov rdi, rcx', 'call fcn.0000f6c0', 'endbr64', 'push rbp', 'mov r8d, edi', 'mov rdx, rdi', 'push rbx', 'shr r8d, 0x19', 'shr rdx, 0x15', 'mov rbx, rdi', 'lea r9d, [r8 + 0xa]', 'and edx, 0xf', 'lea esi, [r8 + 0x7bb]', 'mov ecx, ebx', 'imul r10d, r9d, 0x16d', 'sar esi, 2', 'sub edx, 1', 'mov r11d, ebx', 'sub rsp, 0x18', 'movsxd rbp, edx', 'shr ecx, 0xb', 'and r11d, 0x1f', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, rdi', 'and ecx, 0x1f', 'add r11d, r11d', 'shr rax, 0x10', 'lea r10d, [rsi + r10 - 0x1ec]', 'lea rsi, obj.ydays', 'and eax, 0x1f', 'movzx esi, word [rsi + rbp*2]', 'lea edi, [rax - 1]', 'mov eax, ebx', 'shr eax, 5', 'add esi, r10d', 'and eax, 0x3f', 'cmp edx, 1', 'jle 0xf761', 'imul eax, eax, 0x3c', 'movsxd rdx, ecx', 'imul rdx, rdx, 0xe10', 'add eax, r11d', 'cdqe', 'add rax, rdx', 'lea edx, [rdi + rsi]', 'imul rdx, rdx, 0x15180', 'add rax, rdx', 'add rax, qword [obj.__timezone]', 'cmp rbx, 0x7431ffff', 'jbe 0xf7b0', 'test rax, rax', 'mov edx, 0x7fffffff', 'cmovs rax, rdx', 'mov qword [rsp], rax', 'mov rdi, rsp', 'call sym.imp.localtime']"
325,zipinfo,137,"['call sym.imp.localtime', 'mov rdx, rax', 'mov rax, qword [rsp]', 'test rdx, rdx', 'je 0xf7db', 'cmp rbx, 0x7431ffff', 'jbe 0xf810', 'cmp rax, 0x6fffffff', 'mov edx, 0xffffffff', 'cmovle rax, rdx', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf828', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'mov rdi, qword [rsp]', 'cmp qword [rdi], rax', 'jge 0x125f0', 'movzx edi, word [0x0011e2d2]', 'add qword [r14], 1', 'test di, di', 'je 0x12512', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x129b3', 'mov r10d, dword [0x0002e180]', 'test r10d, r10d', 'jne 0x12a90', 'mov rdi, qword [0x0011e250]', 'mov rcx, qword [0x0011e2a8]', 'test rdi, rdi', 'je 0x12acb', 'movzx esi, word [0x0011e2d0]', 'xor r9d, r9d', 'lea r8, [var_50h]', 'mov edx, 1', 'call fcn.00016820', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x38', 'mov dword [var_14h], edx', 'mov qword [var_18h], rcx', 'mov qword [var_8h], r8', 'test rdi, rdi', 'je 0x16968', 'xor r12d, r12d', 'add rsp, 0x38', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, 1', 'jne 0x12f20', 'lea rdi, [timer]', 'call sym.imp.localtime']"
326,zipinfo,151,"['call sym.imp.localtime', 'test rax, rax', 'je 0x12ac4', 'mov ebx, dword [rax + 0x10]', 'add ebx, 1', 'mov dword [var_8h], ebx', 'mov ebx, dword [rax + 0xc]', 'mov dword [var_ch], ebx', 'mov ebx, dword [rax + 0x14]', 'lea r13d, [rbx + 0x76c]', 'mov ebx, dword [rax + 8]', 'mov eax, dword [rax + 4]', 'mov dword [var_10h], ebx', 'mov dword [var_14h], eax', 'jmp 0x12b0b', 'mov rbp, qword [0x0011e290]', 'test byte [0x0011e2ca], 1', 'mov rdi, qword [0x0011e298]', 'lea rax, [rbp - 0xc]', 'cmovne rbp, rax', 'mov rsi, rbp', 'call fcn.00012780', 'endbr64', 'xor eax, eax', 'test rdi, rdi', 'je 0x127ef', 'cmp rdi, 0x1e8480', 'jbe 0x127d0', 'mov rax, rdi', 'shr rax, 1', 'cmp rdi, rsi', 'jae 0x12800', 'mov rdx, rdi', 'sub rdx, rsi', 'imul rdx, rdx, 0x3e8', 'add rax, rdx', 'xor edx, edx', 'div rdi', 'ret', 'mov edx, 0x10000', 'lea rcx, str._3d__', 'mov esi, 1', 'add eax, 5', 'lea rdi, [0x0010e1e0]', 'movsxd r8, eax', 'sar eax, 0x1f', 'imul r8, r8, 0x66666667', 'sar r8, 0x22', 'sub r8d, eax', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'movsxd rdx, eax', 'xor ecx, ecx', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'jmp 0x1b5cf', 'mov rdi, qword [0x0011e250]', 'test rdi, rdi', 'je 0x1bbb8', 'xor edi, edi', 'jmp 0x1b60c', 'mov rsi, rbp', 'mov r12, qword [0x0011f578]', 'mov byte [var_c0h], 0', 'call fcn.000179f0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x17b03', 'cmp byte [rsi], 1', 'je 0x17ae8', 'call sym.imp.localtime']"
327,zipinfo,369,"['call sym.imp.localtime', 'test rax, rax', 'je 0x12ac4', 'mov ebx, dword [rax + 0x10]', 'add ebx, 1', 'mov dword [var_8h], ebx', 'mov ebx, dword [rax + 0xc]', 'mov dword [var_ch], ebx', 'mov ebx, dword [rax + 0x14]', 'lea r13d, [rbx + 0x76c]', 'mov ebx, dword [rax + 8]', 'mov eax, dword [rax + 4]', 'mov dword [var_10h], ebx', 'mov dword [var_14h], eax', 'jmp 0x12b0b', 'mov rbp, qword [0x0011e290]', 'test byte [0x0011e2ca], 1', 'mov rdi, qword [0x0011e298]', 'lea rax, [rbp - 0xc]', 'cmovne rbp, rax', 'mov rsi, rbp', 'call fcn.00012780', 'endbr64', 'xor eax, eax', 'test rdi, rdi', 'je 0x127ef', 'cmp rdi, 0x1e8480', 'jbe 0x127d0', 'mov rax, rdi', 'shr rax, 1', 'cmp rdi, rsi', 'jae 0x12800', 'mov rdx, rdi', 'sub rdx, rsi', 'imul rdx, rdx, 0x3e8', 'add rax, rdx', 'xor edx, edx', 'div rdi', 'ret', 'mov edx, 0x10000', 'lea rcx, str._3d__', 'mov esi, 1', 'add eax, 5', 'lea rdi, [0x0010e1e0]', 'movsxd r8, eax', 'sar eax, 0x1f', 'imul r8, r8, 0x66666667', 'sar r8, 0x22', 'sub r8d, eax', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'movsxd rdx, eax', 'xor ecx, ecx', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'jmp 0x1b5cf', 'mov rdi, qword [0x0011e250]', 'test rdi, rdi', 'je 0x1bbb8', 'xor edi, edi', 'jmp 0x1b60c', 'mov rsi, rbp', 'mov r12, qword [0x0011f578]', 'mov byte [var_c0h], 0', 'call fcn.000179f0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x17b03', 'mov rax, qword [0x0011e2a8]', 'mov ebp, eax', 'mov r8, rax', 'mov r13, rax', 'mov r14d, eax', 'shr ebp, 0x19', 'mov r15d, eax', 'shr r8, 0x15', 'lea ebx, [rax + rax]', 'shr r13, 0x10', 'shr r14d, 0xb', 'add ebp, 0x50', 'and r8d, 0xf', 'shr r15d, 5', 'and r13d, 0x1f', 'and r14d, 0x1f', 'and ebx, 0x3e', 'and r15d, 0x3f', 'jmp 0x17a56', 'lea eax, [r8 - 1]', 'lea rdx, [0x00027180]', 'lea r9, [rdx + rax*4]', 'cmp eax, 0xb', 'ja 0x17ba0', 'cmp dword [0x0002e11c], 9', 'jg 0x17bdf', 'push rbx', 'lea r8d, [arg_76ch]', 'lea rcx, str._u__s__u__02u:_02u:_02u', 'push r15', 'push r14', 'push r13', 'jmp 0x17b77', 'mov rdx, 0xffffffffffffffff', 'mov esi, 1', 'mov rdi, r12', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'add rsp, 0x20', 'jmp 0x17abb', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17c29', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r8, rbx', 'mov edx, 0x10000', 'lea rcx, [0x0002909a]', 'mov r9, rax', 'mov esi, 1', 'lea rdi, [0x0010e1e0]', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'xor ecx, ecx', 'movsxd rdx, eax', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'call fcn.00012820', 'movzx eax, word [0x0011e2d2]', 'test ax, ax', 'je 0x18ba4', 'movzx edi, ax', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x12446', 'mov ecx, dword [0x0002e180]', 'test ecx, ecx', 'jne 0x12520', 'lea rdx, [0x0011e450]', 'mov ecx, dword [rdx]', 'add rdx, 4', 'lea eax, [rcx - 0x1010101]', 'not ecx', 'and eax, ecx', 'and eax, 0x80808080', 'je 0x12527', 'mov ecx, eax', 'shr ecx, 0x10', 'test eax, 0x8080', 'cmove eax, ecx', 'lea rcx, [rdx + 2]', 'cmove rdx, rcx', 'mov esi, eax', 'add sil, al', 'sbb rdx, 3', 'sub rdx, rbx', 'je 0x125a0', 'mov rdi, qword [0x0011e250]', 'mov rcx, qword [0x0011e2a8]', 'test rdi, rdi', 'je 0x12620', 'mov rdi, rcx', 'call fcn.0000f6c0', 'endbr64', 'push rbp', 'mov r8d, edi', 'mov rdx, rdi', 'push rbx', 'shr r8d, 0x19', 'shr rdx, 0x15', 'mov rbx, rdi', 'lea r9d, [r8 + 0xa]', 'and edx, 0xf', 'lea esi, [r8 + 0x7bb]', 'mov ecx, ebx', 'imul r10d, r9d, 0x16d', 'sar esi, 2', 'sub edx, 1', 'mov r11d, ebx', 'sub rsp, 0x18', 'movsxd rbp, edx', 'shr ecx, 0xb', 'and r11d, 0x1f', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rax, rdi', 'and ecx, 0x1f', 'add r11d, r11d', 'shr rax, 0x10', 'lea r10d, [rsi + r10 - 0x1ec]', 'lea rsi, obj.ydays', 'and eax, 0x1f', 'movzx esi, word [rsi + rbp*2]', 'lea edi, [rax - 1]', 'mov eax, ebx', 'shr eax, 5', 'add esi, r10d', 'and eax, 0x3f', 'cmp edx, 1', 'jle 0xf761', 'imul eax, eax, 0x3c', 'movsxd rdx, ecx', 'imul rdx, rdx, 0xe10', 'add eax, r11d', 'cdqe', 'add rax, rdx', 'lea edx, [rdi + rsi]', 'imul rdx, rdx, 0x15180', 'add rax, rdx', 'add rax, qword [obj.__timezone]', 'cmp rbx, 0x7431ffff', 'jbe 0xf7b0', 'test rax, rax', 'mov edx, 0x7fffffff', 'cmovs rax, rdx', 'mov qword [rsp], rax', 'mov rdi, rsp', 'call sym.imp.localtime']"
328,zipinfo,323,"['call sym.imp.localtime', 'test rax, rax', 'je 0x12ac4', 'mov ebx, dword [rax + 0x10]', 'add ebx, 1', 'mov dword [var_8h], ebx', 'mov ebx, dword [rax + 0xc]', 'mov dword [var_ch], ebx', 'mov ebx, dword [rax + 0x14]', 'lea r13d, [rbx + 0x76c]', 'mov ebx, dword [rax + 8]', 'mov eax, dword [rax + 4]', 'mov dword [var_10h], ebx', 'mov dword [var_14h], eax', 'jmp 0x12b0b', 'mov rbp, qword [0x0011e290]', 'test byte [0x0011e2ca], 1', 'mov rdi, qword [0x0011e298]', 'lea rax, [rbp - 0xc]', 'cmovne rbp, rax', 'mov rsi, rbp', 'call fcn.00012780', 'endbr64', 'xor eax, eax', 'test rdi, rdi', 'je 0x127ef', 'cmp rdi, 0x1e8480', 'jbe 0x127d0', 'mov rax, rdi', 'shr rax, 1', 'cmp rdi, rsi', 'jae 0x12800', 'mov rdx, rdi', 'sub rdx, rsi', 'imul rdx, rdx, 0x3e8', 'add rax, rdx', 'xor edx, edx', 'div rdi', 'ret', 'mov edx, 0x10000', 'lea rcx, str._3d__', 'mov esi, 1', 'add eax, 5', 'lea rdi, [0x0010e1e0]', 'movsxd r8, eax', 'sar eax, 0x1f', 'imul r8, r8, 0x66666667', 'sar r8, 0x22', 'sub r8d, eax', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'movsxd rdx, eax', 'xor ecx, ecx', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'jmp 0x1b5cf', 'mov rdi, qword [0x0011e250]', 'test rdi, rdi', 'je 0x1bbb8', 'xor edi, edi', 'jmp 0x1b60c', 'mov rsi, rbp', 'mov r12, qword [0x0011f578]', 'mov byte [var_c0h], 0', 'call fcn.000179f0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x17b03', 'mov rax, qword [0x0011e2a8]', 'mov ebp, eax', 'mov r8, rax', 'mov r13, rax', 'mov r14d, eax', 'shr ebp, 0x19', 'mov r15d, eax', 'shr r8, 0x15', 'lea ebx, [rax + rax]', 'shr r13, 0x10', 'shr r14d, 0xb', 'add ebp, 0x50', 'and r8d, 0xf', 'shr r15d, 5', 'and r13d, 0x1f', 'and r14d, 0x1f', 'and ebx, 0x3e', 'and r15d, 0x3f', 'jmp 0x17a56', 'lea eax, [r8 - 1]', 'lea rdx, [0x00027180]', 'lea r9, [rdx + rax*4]', 'cmp eax, 0xb', 'ja 0x17ba0', 'cmp dword [0x0002e11c], 9', 'jg 0x17bdf', 'push rbx', 'lea r8d, [arg_76ch]', 'lea rcx, str._u__s__u__02u:_02u:_02u', 'push r15', 'push r14', 'push r13', 'jmp 0x17b77', 'mov rdx, 0xffffffffffffffff', 'mov esi, 1', 'mov rdi, r12', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'add rsp, 0x20', 'jmp 0x17abb', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17c29', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov r8, rbx', 'mov edx, 0x10000', 'lea rcx, [0x0002909a]', 'mov r9, rax', 'mov esi, 1', 'lea rdi, [0x0010e1e0]', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'lea rsi, [0x0010e1e0]', 'xor ecx, ecx', 'movsxd rdx, eax', 'lea rdi, [rsi - 0xe0100]', 'call r12', 'call fcn.00012820', 'movzx eax, word [0x0011e2d2]', 'test ax, ax', 'je 0x18ba4', 'movzx edi, ax', 'xor esi, esi', 'call fcn.0000fa20', 'endbr64', 'push r15', 'push r14', 'push r13', 'xor r13d, r13d', 'push r12', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'test ebp, ebp', 'je 0xface', 'mov r12d, esi', 'cmp esi, 6', 'ja case.0xfa5b.4', 'lea rcx, [0x000257f4]', 'mov edx, esi', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'test eax, eax', 'je 0x129b3', 'mov r10d, dword [0x0002e180]', 'test r10d, r10d', 'jne 0x12a90', 'mov rdi, qword [0x0011e250]', 'mov rcx, qword [0x0011e2a8]', 'test rdi, rdi', 'je 0x12acb', 'movzx esi, word [0x0011e2d0]', 'xor r9d, r9d', 'lea r8, [var_50h]', 'mov edx, 1', 'call fcn.00016820', 'test al, 1', 'jne 0x12f20', 'lea rdi, [timer]', 'call sym.imp.localtime']"
329,sftp,508,"['call sym.imp.localtime', 'mov edi, dword [rbx + 0x18]', 'mov rsi, r14', 'mov r13, rax', 'call sym.strmode', 'endbr64', 'mov eax, edi', 'and eax, 0xf000', 'cmp eax, 0x6000', 'je 0x1d7c0', 'mov byte [rsi], 0x62', 'jmp 0x1d528', 'mov eax, edi', 'lea r10, [rsi + 3]', 'lea r9, [rsi + 4]', 'and eax, 0x100', 'lea r8, [rsi + 5]', 'lea rcx, [rsi + 6]', 'cmp eax, 1', 'lea rdx, [rsi + 7]', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 1], al', 'mov eax, edi', 'and eax, 0x80', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 2], al', 'mov eax, edi', 'and eax, 0x840', 'cmp eax, 0x800', 'je 0x1d778', 'mov byte [rsi + 3], 0x53', 'add rsi, 8', 'jmp 0x1d5a0', 'mov eax, edi', 'and eax, 0x20', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [r9], al', 'mov eax, edi', 'and eax, 0x10', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [r8], al', 'mov eax, edi', 'and eax, 0x408', 'cmp eax, 0x400', 'je 0x1d738', 'mov byte [rcx], 0x53', 'lea r8, [rsi + 1]', 'jmp 0x1d600', 'mov eax, edi', 'and eax, 4', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rdx], al', 'mov eax, edi', 'and eax, 2', 'cmp eax, 1', 'sbb eax, eax', 'and edi, 0x201', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi], al', 'cmp edi, 0x200', 'je 0x1d710', 'lea rax, [r8 + 1]', 'mov edx, 0x20', 'mov byte [r8], 0x54', 'mov word [rax], dx', 'ret', 'test ebp, ebp', 'je 0xfb50', 'mov edi, dword [rbx + 0x1c]', 'xor esi, esi', 'lea r15, [var_27h]', 'call fcn.0001d030', 'endbr64', 'push r12', 'lea rax, [0x0002e180]', 'mov r12d, edi', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov ebx, edi', 'and ebx, 0x3f', 'shl rbx, 4', 'add rbx, rax', 'sub rsp, 0x10', 'cmp dword [rbx], edi', 'je 0x1d108', 'mov rax, qword [rbx + 8]', 'test rax, rax', 'je 0x1d05c', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov edi, dword [rbx + 0x20]', 'xor esi, esi', 'mov rbp, rax', 'call fcn.0001d120', 'endbr64', 'push r12', 'lea rax, [0x0002dd60]', 'mov r12d, edi', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov ebx, edi', 'and ebx, 0x3f', 'shl rbx, 4', 'add rbx, rax', 'sub rsp, 0x10', 'cmp dword [rbx], edi', 'je 0x1d1f8', 'mov rax, qword [rbx + 8]', 'test rax, rax', 'je 0x1d14c', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r9d, dword [rbx + 0x10]', 'mov ecx, 8', 'mov rdi, r15', 'mov r12, rax', 'lea r8, [0x00020991]', 'xor eax, eax', 'mov edx, 1', 'mov esi, 8', 'call sym.imp.__snprintf_chk', 'test r13, r13', 'jne 0xfa1d', 'lea rax, [var_53h]', 'mov qword [canary], rax', 'jmp 0xfa7e', 'mov byte [var_53h], 0', 'mov rdi, rbp', 'call sym.imp.strlen', 'mov edx, 8', 'mov rdi, r12', 'cmp rax, 8', 'cmovb rax, rdx', 'mov r13, rax', 'call sym.imp.strlen', 'mov edx, 8', 'mov rdi, qword [rbx + 0x30]', 'cmp rax, 8', 'cmovae rdx, rax', 'mov eax, dword [var_8h]', 'test eax, eax', 'je 0xfbb0', 'lea rbx, [var_60h]', 'mov r9, r14', 'push qword [rsp]', 'lea r8, str._s__3s___s___s__8llu__s__s', 'push qword [var_8h]', 'push rdi', 'push r12', 'push rdx', 'push rbp', 'push r13', 'push r15', 'jmp 0xfb00', 'mov esi, 0x400', 'mov ecx, 0x400', 'mov rdi, rbx', 'xor eax, eax', 'mov edx, 1', 'call sym.imp.__snprintf_chk', 'add rsp, 0x40', 'mov rdi, rbx', 'call fcn.00013de0', 'endbr64', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'call sym.imp.strlen', 'lea r13, [rax + 1]', 'mov rdi, r13', 'call fcn.00013cc0', 'endbr64', 'push rbp', 'test rdi, rdi', 'je 0x13cd9', 'lea rdi, str.xmalloc:_zero_size', 'xor eax, eax', 'call fcn.00012e50', 'endbr64', 'push rax', 'pop rax', 'sub rsp, 0xd8', 'mov r10, rdi', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x12eb4', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov rdx, rsp', 'mov rsi, r10', 'mov qword [var_8h], rax', 'mov edi, 1', 'lea rax, [var_20h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call fcn.00013330', 'endbr64', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x828', 'mov dword [var_844h], edi', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'cmp dword [0x0002a028], edi', 'jl 0x13432', 'mov r14d, edi', 'mov rbx, rsi', 'mov r13, rdx', 'call sym.imp.__errno_location', 'mov r12, rax', 'mov eax, dword [rax]', 'mov dword [var_848h], eax', 'cmp r14d, 7', 'ja case.0x1339d.0', 'lea rcx, [0x000224a8]', 'mov edx, r14d', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x13bf0', 'add rsp, 0xd8', 'ret', 'mov eax, dword [0x0002a180]', 'mov dword [var_38h], 1', 'test eax, eax', 'je 0xd73e', 'nop dword [rax + rax]', 'mov r15d, dword [var_20h]', 'test r15d, r15d', 'je 0xd923', 'mov r11d, dword [0x0002a010]', 'test r11d, r11d', 'je 0xd93a', 'cmp byte [var_57h], 0', 'jne 0xdfb8', 'call fcn.000107b0', 'endbr64', 'push rbx', 'xor edi, edi', 'call sym.imp.alarm', 'call sym.imp.getpgrp', 'mov edi, 1', 'mov ebx, eax', 'call sym.imp.tcgetpgrp', 'cmp ebx, eax', 'jne 0x10810', 'mov rax, qword [0x0002d748]', 'cmp qword [0x0002d740], rax', 'jne 0x10800', 'mov edi, 1', 'call fcn.000106b0', 'endbr64', 'test edi, edi', 'jne 0x106cc', 'push rbx', 'call sym.imp.getpgrp', 'mov edi, 1', 'mov ebx, eax', 'call sym.imp.tcgetpgrp', 'cmp ebx, eax', 'je 0x106e8', 'pop rbx', 'jmp 0xfec0', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x258', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov dword [0x0002d720], 0', 'mov eax, dword [0x0002d724]', 'test eax, eax', 'jne 0x10630', 'mov rax, qword [0x0002d738]', 'mov r12, qword [0x0002d740]', 'mov r14, qword [rax]', 'mov rax, qword [rax]', 'test r12, r12', 'cmove r12, qword [0x0002d750]', 'mov qword [0x0002d740], rax', 'call fcn.00016430', 'endbr64', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
330,sftp,531,"['call sym.imp.localtime', 'mov edi, dword [rbx + 0x18]', 'mov rsi, r14', 'mov r13, rax', 'call sym.strmode', 'endbr64', 'mov eax, edi', 'and eax, 0xf000', 'cmp eax, 0x6000', 'je 0x1d7c0', 'mov byte [rsi], 0x62', 'jmp 0x1d528', 'mov eax, edi', 'lea r10, [rsi + 3]', 'lea r9, [rsi + 4]', 'and eax, 0x100', 'lea r8, [rsi + 5]', 'lea rcx, [rsi + 6]', 'cmp eax, 1', 'lea rdx, [rsi + 7]', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 1], al', 'mov eax, edi', 'and eax, 0x80', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 2], al', 'mov eax, edi', 'and eax, 0x840', 'cmp eax, 0x800', 'je 0x1d778', 'mov byte [rsi + 3], 0x53', 'add rsi, 8', 'jmp 0x1d5a0', 'mov eax, edi', 'and eax, 0x20', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [r9], al', 'mov eax, edi', 'and eax, 0x10', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [r8], al', 'mov eax, edi', 'and eax, 0x408', 'cmp eax, 0x400', 'je 0x1d738', 'mov byte [rcx], 0x53', 'lea r8, [rsi + 1]', 'jmp 0x1d600', 'mov eax, edi', 'and eax, 4', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rdx], al', 'mov eax, edi', 'and eax, 2', 'cmp eax, 1', 'sbb eax, eax', 'and edi, 0x201', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi], al', 'cmp edi, 0x200', 'je 0x1d710', 'lea rax, [r8 + 1]', 'mov edx, 0x20', 'mov byte [r8], 0x54', 'mov word [rax], dx', 'ret', 'test ebp, ebp', 'je 0xfb50', 'mov edi, dword [rbx + 0x1c]', 'xor esi, esi', 'lea r15, [var_27h]', 'call fcn.0001d030', 'endbr64', 'push r12', 'lea rax, [0x0002e180]', 'mov r12d, edi', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov ebx, edi', 'and ebx, 0x3f', 'shl rbx, 4', 'add rbx, rax', 'sub rsp, 0x10', 'cmp dword [rbx], edi', 'je 0x1d108', 'mov rax, qword [rbx + 8]', 'test rax, rax', 'je 0x1d05c', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov edi, dword [rbx + 0x20]', 'xor esi, esi', 'mov rbp, rax', 'call fcn.0001d120', 'endbr64', 'push r12', 'lea rax, [0x0002dd60]', 'mov r12d, edi', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov ebx, edi', 'and ebx, 0x3f', 'shl rbx, 4', 'add rbx, rax', 'sub rsp, 0x10', 'cmp dword [rbx], edi', 'je 0x1d1f8', 'mov rax, qword [rbx + 8]', 'test rax, rax', 'je 0x1d14c', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r9d, dword [rbx + 0x10]', 'mov ecx, 8', 'mov rdi, r15', 'mov r12, rax', 'lea r8, [0x00020991]', 'xor eax, eax', 'mov edx, 1', 'mov esi, 8', 'call sym.imp.__snprintf_chk', 'test r13, r13', 'jne 0xfa1d', 'lea rax, [var_53h]', 'mov qword [canary], rax', 'jmp 0xfa7e', 'mov byte [var_53h], 0', 'mov rdi, rbp', 'call sym.imp.strlen', 'mov edx, 8', 'mov rdi, r12', 'cmp rax, 8', 'cmovb rax, rdx', 'mov r13, rax', 'call sym.imp.strlen', 'mov edx, 8', 'mov rdi, qword [rbx + 0x30]', 'cmp rax, 8', 'cmovae rdx, rax', 'mov eax, dword [var_8h]', 'test eax, eax', 'je 0xfbb0', 'lea rbx, [var_60h]', 'mov r9, r14', 'push qword [rsp]', 'lea r8, str._s__3s___s___s__8llu__s__s', 'push qword [var_8h]', 'push rdi', 'push r12', 'push rdx', 'push rbp', 'push r13', 'push r15', 'jmp 0xfb00', 'mov esi, 0x400', 'mov ecx, 0x400', 'mov rdi, rbx', 'xor eax, eax', 'mov edx, 1', 'call sym.imp.__snprintf_chk', 'add rsp, 0x40', 'mov rdi, rbx', 'call fcn.00013de0', 'endbr64', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'call sym.imp.strlen', 'lea r13, [rax + 1]', 'mov rdi, r13', 'call fcn.00013cc0', 'endbr64', 'push rbp', 'test rdi, rdi', 'je 0x13cd9', 'lea rdi, str.xmalloc:_zero_size', 'xor eax, eax', 'call fcn.00012e50', 'endbr64', 'push rax', 'pop rax', 'sub rsp, 0xd8', 'mov r10, rdi', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x12eb4', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov rdx, rsp', 'mov rsi, r10', 'mov qword [var_8h], rax', 'mov edi, 1', 'lea rax, [var_20h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call fcn.00013330', 'endbr64', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x828', 'mov dword [var_844h], edi', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'cmp dword [0x0002a028], edi', 'jl 0x13432', 'mov r14d, edi', 'mov rbx, rsi', 'mov r13, rdx', 'call sym.imp.__errno_location', 'mov r12, rax', 'mov eax, dword [rax]', 'mov dword [var_848h], eax', 'cmp r14d, 7', 'ja case.0x1339d.0', 'lea rcx, [0x000224a8]', 'mov edx, r14d', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x13bf0', 'add rsp, 0xd8', 'ret', 'mov eax, dword [0x0002a180]', 'mov dword [var_38h], 1', 'test eax, eax', 'je 0xd73e', 'nop dword [rax + rax]', 'mov r15d, dword [var_20h]', 'test r15d, r15d', 'je 0xd923', 'mov r11d, dword [0x0002a010]', 'test r11d, r11d', 'je 0xd93a', 'cmp byte [var_57h], 0', 'jne 0xdfb8', 'call fcn.000107b0', 'endbr64', 'push rbx', 'xor edi, edi', 'call sym.imp.alarm', 'call sym.imp.getpgrp', 'mov edi, 1', 'mov ebx, eax', 'call sym.imp.tcgetpgrp', 'cmp ebx, eax', 'jne 0x10810', 'mov rax, qword [0x0002d748]', 'cmp qword [0x0002d740], rax', 'jne 0x10800', 'mov edi, 1', 'call fcn.000106b0', 'endbr64', 'test edi, edi', 'jne 0x106cc', 'push rbx', 'call sym.imp.getpgrp', 'mov edi, 1', 'mov ebx, eax', 'call sym.imp.tcgetpgrp', 'cmp ebx, eax', 'je 0x106e8', 'pop rbx', 'jmp 0xfec0', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x258', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov dword [0x0002d720], 0', 'mov eax, dword [0x0002d724]', 'test eax, eax', 'jne 0x10630', 'mov rax, qword [0x0002d738]', 'mov r12, qword [0x0002d740]', 'mov r14, qword [rax]', 'mov rax, qword [rax]', 'test r12, r12', 'cmove r12, qword [0x0002d750]', 'mov qword [0x0002d740], rax', 'call fcn.00016430', 'endbr64', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x15ff8', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
331,sftp,554,"['call sym.imp.localtime', 'mov edi, dword [rbx + 0x18]', 'mov rsi, r14', 'mov r13, rax', 'call sym.strmode', 'endbr64', 'mov eax, edi', 'and eax, 0xf000', 'cmp eax, 0x6000', 'je 0x1d7c0', 'mov byte [rsi], 0x62', 'jmp 0x1d528', 'mov eax, edi', 'lea r10, [rsi + 3]', 'lea r9, [rsi + 4]', 'and eax, 0x100', 'lea r8, [rsi + 5]', 'lea rcx, [rsi + 6]', 'cmp eax, 1', 'lea rdx, [rsi + 7]', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 1], al', 'mov eax, edi', 'and eax, 0x80', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 2], al', 'mov eax, edi', 'and eax, 0x840', 'cmp eax, 0x800', 'je 0x1d778', 'mov byte [rsi + 3], 0x53', 'add rsi, 8', 'jmp 0x1d5a0', 'mov eax, edi', 'and eax, 0x20', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [r9], al', 'mov eax, edi', 'and eax, 0x10', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [r8], al', 'mov eax, edi', 'and eax, 0x408', 'cmp eax, 0x400', 'je 0x1d738', 'mov byte [rcx], 0x53', 'lea r8, [rsi + 1]', 'jmp 0x1d600', 'mov eax, edi', 'and eax, 4', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rdx], al', 'mov eax, edi', 'and eax, 2', 'cmp eax, 1', 'sbb eax, eax', 'and edi, 0x201', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi], al', 'cmp edi, 0x200', 'je 0x1d710', 'lea rax, [r8 + 1]', 'mov edx, 0x20', 'mov byte [r8], 0x54', 'mov word [rax], dx', 'ret', 'test ebp, ebp', 'je 0xfb50', 'mov edi, dword [rbx + 0x1c]', 'xor esi, esi', 'lea r15, [var_27h]', 'call fcn.0001d030', 'endbr64', 'push r12', 'lea rax, [0x0002e180]', 'mov r12d, edi', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov ebx, edi', 'and ebx, 0x3f', 'shl rbx, 4', 'add rbx, rax', 'sub rsp, 0x10', 'cmp dword [rbx], edi', 'je 0x1d108', 'mov rax, qword [rbx + 8]', 'test rax, rax', 'je 0x1d05c', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov edi, dword [rbx + 0x20]', 'xor esi, esi', 'mov rbp, rax', 'call fcn.0001d120', 'endbr64', 'push r12', 'lea rax, [0x0002dd60]', 'mov r12d, edi', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov ebx, edi', 'and ebx, 0x3f', 'shl rbx, 4', 'add rbx, rax', 'sub rsp, 0x10', 'cmp dword [rbx], edi', 'je 0x1d1f8', 'mov rax, qword [rbx + 8]', 'test rax, rax', 'je 0x1d14c', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r9d, dword [rbx + 0x10]', 'mov ecx, 8', 'mov rdi, r15', 'mov r12, rax', 'lea r8, [0x00020991]', 'xor eax, eax', 'mov edx, 1', 'mov esi, 8', 'call sym.imp.__snprintf_chk', 'test r13, r13', 'jne 0xfa1d', 'lea rax, [var_53h]', 'mov qword [canary], rax', 'jmp 0xfa7e', 'mov byte [var_53h], 0', 'mov rdi, rbp', 'call sym.imp.strlen', 'mov edx, 8', 'mov rdi, r12', 'cmp rax, 8', 'cmovb rax, rdx', 'mov r13, rax', 'call sym.imp.strlen', 'mov edx, 8', 'mov rdi, qword [rbx + 0x30]', 'cmp rax, 8', 'cmovae rdx, rax', 'mov eax, dword [var_8h]', 'test eax, eax', 'je 0xfbb0', 'lea rbx, [var_60h]', 'mov r9, r14', 'push qword [rsp]', 'lea r8, str._s__3s___s___s__8llu__s__s', 'push qword [var_8h]', 'push rdi', 'push r12', 'push rdx', 'push rbp', 'push r13', 'push r15', 'jmp 0xfb00', 'mov esi, 0x400', 'mov ecx, 0x400', 'mov rdi, rbx', 'xor eax, eax', 'mov edx, 1', 'call sym.imp.__snprintf_chk', 'add rsp, 0x40', 'mov rdi, rbx', 'call fcn.00013de0', 'endbr64', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'call sym.imp.strlen', 'lea r13, [rax + 1]', 'mov rdi, r13', 'call fcn.00013cc0', 'endbr64', 'push rbp', 'test rdi, rdi', 'je 0x13cd9', 'lea rdi, str.xmalloc:_zero_size', 'xor eax, eax', 'call fcn.00012e50', 'endbr64', 'push rax', 'pop rax', 'sub rsp, 0xd8', 'mov r10, rdi', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x12eb4', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov rdx, rsp', 'mov rsi, r10', 'mov qword [var_8h], rax', 'mov edi, 1', 'lea rax, [var_20h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call fcn.00013330', 'endbr64', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x828', 'mov dword [var_844h], edi', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'cmp dword [0x0002a028], edi', 'jl 0x13432', 'mov r14d, edi', 'mov rbx, rsi', 'mov r13, rdx', 'call sym.imp.__errno_location', 'mov r12, rax', 'mov eax, dword [rax]', 'mov dword [var_848h], eax', 'cmp r14d, 7', 'ja case.0x1339d.0', 'lea rcx, [0x000224a8]', 'mov edx, r14d', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x13bf0', 'add rsp, 0xd8', 'ret', 'mov eax, dword [0x0002a180]', 'mov dword [var_38h], 1', 'test eax, eax', 'je 0xd73e', 'nop dword [rax + rax]', 'mov r15d, dword [var_20h]', 'test r15d, r15d', 'je 0xd923', 'mov r11d, dword [0x0002a010]', 'test r11d, r11d', 'je 0xd93a', 'cmp byte [var_57h], 0', 'jne 0xdfb8', 'call fcn.000107b0', 'endbr64', 'push rbx', 'xor edi, edi', 'call sym.imp.alarm', 'call sym.imp.getpgrp', 'mov edi, 1', 'mov ebx, eax', 'call sym.imp.tcgetpgrp', 'cmp ebx, eax', 'jne 0x10810', 'mov rax, qword [0x0002d748]', 'cmp qword [0x0002d740], rax', 'jne 0x10800', 'mov edi, 1', 'call fcn.000106b0', 'endbr64', 'test edi, edi', 'jne 0x106cc', 'push rbx', 'call sym.imp.getpgrp', 'mov edi, 1', 'mov ebx, eax', 'call sym.imp.tcgetpgrp', 'cmp ebx, eax', 'je 0x106e8', 'pop rbx', 'jmp 0xfec0', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x258', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov dword [0x0002d720], 0', 'mov eax, dword [0x0002d724]', 'test eax, eax', 'jne 0x10630', 'mov rax, qword [0x0002d738]', 'mov r12, qword [0x0002d740]', 'mov r14, qword [rax]', 'mov rax, qword [rax]', 'test r12, r12', 'cmove r12, qword [0x0002d750]', 'mov qword [0x0002d740], rax', 'call fcn.00016430', 'endbr64', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x15ff8', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'xor edi, edi', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
332,sftp,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x15ff8', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x16069', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x16205', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x161d0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.00016070', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
333,sftp,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x16069', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x16205', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x161d0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.00016070', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
334,sftp,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x16069', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x16205', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x161d0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.00016070', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x15ff8', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
335,sftp,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x16069', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x16205', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x161d0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.00016070', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
336,sftp,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x16069', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x16205', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x161d0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.00016070', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x15ff8', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
337,sftp,139,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x16069', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x16205', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x161d0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.00016070', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x15ff8', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'xor edi, edi', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
338,last,293,"['call sym.imp.localtime_r', 'mov ecx, 4', 'mov rsi, r14', 'lea rdi, [0x00008b39]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'mov dword [var_70h], 0xffffffff', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7040', 'mov ecx, 6', 'lea rdi, str.today', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7065', 'mov ecx, 0xa', 'lea rdi, str.yesterday', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x70d8', 'mov ecx, 9', 'lea rdi, str.tomorrow', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7060', 'movzx eax, byte [r14]', 'cmp al, 0x2b', 'je 0x70e0', 'cmp al, 0x2d', 'je 0x7600', 'mov rdi, r14', 'call sym.imp.strlen', 'cmp rax, 3', 'jbe 0x7100', 'cmp dword [r14 + rax - 4], 0x6f676120', 'lea rsi, [rax - 4]', 'jne 0x7100', 'mov rdi, r14', 'call sym.imp.strndup', 'mov rbp, rax', 'test rax, rax', 'je 0x767f', 'mov eax, 0xfffffff4', 'jmp 0x70ac', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x767a', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x3c9e', 'mov rax, qword [var_68h]', 'mov ecx, 0xf4240', 'xor edx, edx', 'div rcx', 'mov qword [var_b8h], rax', 'jmp 0x2b20', 'xor r8d, r8d', 'lea rcx, section..data.rel.ro', 'mov rsi, rbp', 'mov edi, ebx', 'lea rdx, str.hVf:n:RxadFit:p:s:0123456789w', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x2ec9', 'movsxd rax, dword [obj.optind]', 'cmp eax, ebx', 'jge 0x2ee1', 'cmp qword [ptr], 0', 'je 0x3bbb', 'cmp qword [var_28h], 0', 'je 0x3573', 'lea rax, [var_98h]', 'mov qword [var_10h], 0', 'mov qword [var_50h], rax', 'lea rax, [var_70h]', 'mov qword [timer], rax', 'nop dword [rax]', 'mov rdi, qword [var_50h]', 'call fcn.00004e00', 'endbr64', 'push rbx', 'xor esi, esi', 'mov rbx, rdi', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'lea rdi, [var_10h]', 'call sym.imp.gettimeofday', 'test eax, eax', 'je 0x4e60', 'mov rsi, rsp', 'mov edi, 7', 'call sym.imp.clock_gettime']"
339,last,60,"['call sym.imp.localtime_r', 'mov ecx, 4', 'mov rsi, r14', 'lea rdi, [0x00008b39]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'mov dword [var_70h], 0xffffffff', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7040', 'mov rdi, r13', 'call sym.imp.mktime']"
340,last,70,"['call sym.imp.localtime_r', 'mov ecx, 4', 'mov rsi, r14', 'lea rdi, [0x00008b39]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'mov dword [var_70h], 0xffffffff', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7040', 'mov ecx, 6', 'lea rdi, str.today', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7065', 'mov rdi, r13', 'mov dword [var_58h], 0', 'mov qword [var_50h], 0', 'call sym.imp.mktime']"
341,last,205,"['call sym.imp.localtime_r', 'mov ecx, 4', 'mov rsi, r14', 'lea rdi, [0x00008b39]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'mov dword [var_70h], 0xffffffff', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7040', 'mov ecx, 6', 'lea rdi, str.today', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7065', 'mov ecx, 0xa', 'lea rdi, str.yesterday', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x70d8', 'mov ecx, 9', 'lea rdi, str.tomorrow', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7060', 'movzx eax, byte [r14]', 'cmp al, 0x2b', 'je 0x70e0', 'cmp al, 0x2d', 'je 0x7600', 'mov rdi, r14', 'call sym.imp.strlen', 'cmp rax, 3', 'jbe 0x7100', 'xor r12d, r12d', 'lea r15, str.Sunday', 'mov rax, r12', 'mov r12, r15', 'mov r15, rax', 'mov dword [var_8h], r15d', 'test r12, r12', 'je 0x75d8', 'add r15, 1', 'cmp r15, 0xe', 'je 0x761b', 'mov r12d, 0xffffffff', 'jmp 0x7170', 'mov eax, dword [var_54h]', 'mov rdx, r13', 'mov rdi, r14', 'mov r15d, dword [var_50h]', 'lea rsi, str._y__m__d__H:_M:_S', 'mov ebp, dword [var_60h]', 'mov dword [var_8h], eax', 'mov eax, dword [var_58h]', 'mov dword [var_ch], eax', 'mov eax, dword [var_5ch]', 'mov dword [var_10h], eax', 'mov eax, dword [var_64h]', 'mov dword [var_14h], eax', 'mov eax, dword [var_68h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_6ch]', 'mov dword [var_1ch], eax', 'mov rax, qword [var_78h]', 'mov qword [var_20h], rax', 'mov rax, qword [var_80h]', 'mov qword [var_28h], rax', 'call sym.imp.strptime', 'test rax, rax', 'je 0x71e0', 'cmp byte [rax], 0', 'je 0x75a8', 'mov rdi, r13', 'call sym.imp.mktime']"
342,last,389,"['call sym.imp.mktime', 'cmp rax, 0xffffffffffffffff', 'jne 0x7084', 'nop', 'mov eax, 0xffffffea', 'jmp 0x70ac', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x767a', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x3c9e', 'mov rax, qword [var_68h]', 'mov ecx, 0xf4240', 'xor edx, edx', 'div rcx', 'mov qword [var_b0h], rax', 'jmp 0x2b20', 'xor r8d, r8d', 'lea rcx, section..data.rel.ro', 'mov rsi, rbp', 'mov edi, ebx', 'lea rdx, str.hVf:n:RxadFit:p:s:0123456789w', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x2ec9', 'movsxd rax, dword [obj.optind]', 'cmp eax, ebx', 'jge 0x2ee1', 'cmp qword [ptr], 0', 'je 0x3bbb', 'cmp qword [var_28h], 0', 'je 0x3573', 'lea rax, [var_98h]', 'mov qword [var_10h], 0', 'mov qword [var_50h], rax', 'lea rax, [var_70h]', 'mov qword [timer], rax', 'nop dword [rax]', 'mov rdi, qword [var_50h]', 'call fcn.00004e00', 'endbr64', 'push rbx', 'xor esi, esi', 'mov rbx, rdi', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'lea rdi, [var_10h]', 'call sym.imp.gettimeofday', 'test eax, eax', 'je 0x4e60', 'mov rsi, rsp', 'mov edi, 7', 'call sym.imp.clock_gettime']"
343,last,388,"['call sym.imp.mktime', 'cmp rax, 0xffffffffffffffff', 'je 0x7050', 'mov eax, 0xffffffea', 'jmp 0x70ac', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x767a', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x3c9e', 'mov rax, qword [var_68h]', 'mov ecx, 0xf4240', 'xor edx, edx', 'div rcx', 'mov qword [var_a8h], rax', 'jmp 0x2b20', 'xor r8d, r8d', 'lea rcx, section..data.rel.ro', 'mov rsi, rbp', 'mov edi, ebx', 'lea rdx, str.hVf:n:RxadFit:p:s:0123456789w', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x2ec9', 'movsxd rax, dword [obj.optind]', 'cmp eax, ebx', 'jge 0x2ee1', 'cmp qword [ptr], 0', 'je 0x3bbb', 'cmp qword [var_28h], 0', 'je 0x3573', 'lea rax, [var_98h]', 'mov qword [var_10h], 0', 'mov qword [var_50h], rax', 'lea rax, [var_70h]', 'mov qword [timer], rax', 'nop dword [rax]', 'mov rdi, qword [var_50h]', 'call fcn.00004e00', 'endbr64', 'push rbx', 'xor esi, esi', 'mov rbx, rdi', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'lea rdi, [var_10h]', 'call sym.imp.gettimeofday', 'test eax, eax', 'je 0x4e60', 'mov rsi, rsp', 'mov edi, 7', 'call sym.imp.clock_gettime']"
344,last,388,"['call sym.imp.mktime', 'cmp rax, 0xffffffffffffffff', 'je 0x7050', 'mov eax, 0xffffffea', 'jmp 0x70ac', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x767a', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x3c9e', 'mov rax, qword [var_68h]', 'mov ecx, 0xf4240', 'xor edx, edx', 'div rcx', 'mov qword [var_b0h], rax', 'jmp 0x2b20', 'xor r8d, r8d', 'lea rcx, section..data.rel.ro', 'mov rsi, rbp', 'mov edi, ebx', 'lea rdx, str.hVf:n:RxadFit:p:s:0123456789w', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x2ec9', 'movsxd rax, dword [obj.optind]', 'cmp eax, ebx', 'jge 0x2ee1', 'cmp qword [ptr], 0', 'je 0x3bbb', 'cmp qword [var_28h], 0', 'je 0x3573', 'lea rax, [var_98h]', 'mov qword [var_10h], 0', 'mov qword [var_50h], rax', 'lea rax, [var_70h]', 'mov qword [timer], rax', 'nop dword [rax]', 'mov rdi, qword [var_50h]', 'call fcn.00004e00', 'endbr64', 'push rbx', 'xor esi, esi', 'mov rbx, rdi', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'lea rdi, [var_10h]', 'call sym.imp.gettimeofday', 'test eax, eax', 'je 0x4e60', 'mov rsi, rsp', 'mov edi, 7', 'call sym.imp.clock_gettime']"
345,pinky,262,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'je 0x36f0', 'mov rdx, qword [0x0000b138]', 'mov esi, 0x21', 'lea rdi, [0x0000b0e0]', 'call sym.imp.strftime', 'lea rdx, [0x0000b0e0]', 'xor eax, eax', 'lea rsi, [0x000076f8]', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp byte [0x0000b010], 0', 'je 0x3525', 'mov rdi, qword [obj.stdout]', 'mov rax, qword [rdi + 0x28]', 'cmp rax, qword [rdi + 0x30]', 'jae 0x3780', 'lea rdx, [rax + 1]', 'mov qword [rdi + 0x28], rdx', 'mov byte [rax], 0xa', 'mov rax, qword [var_1d8h]', 'xor rax, qword fs:[0x28]', 'jne 0x3808', 'add rsp, 0x1e8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'jmp 0x2aaa', 'add rbx, 0x180', 'sub r13, 1', 'cmp r13, 0xffffffffffffffff', 'je 0x2a11', 'cmp byte [rbx + 0x2c], 0', 'je 0x2aaa', 'cmp word [rbx], 7', 'jne 0x2aaa', 'test r12d, r12d', 'jne 0x2b22', 'mov rdi, rbx', 'call fcn.00003310', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x1e8', 'movzx edx, byte [rdi + 8]', 'mov rax, qword fs:[0x28]', 'mov qword [var_1d8h], rax', 'xor eax, eax', 'cmp dl, 0x2f', 'jne 0x36c0', 'lea r8, [var_a0h]', 'mov rcx, r8', 'lea r12, [rbp + 8]', 'lea rsi, [rbp + 0x28]', 'mov rax, r12', 'jmp 0x3373', 'test dl, dl', 'jne 0x3360', 'mov byte [rcx], 0', 'lea rdx, [var_10h]', 'mov rsi, r8', 'mov edi, 1', 'call sym.imp.__xstat', 'test eax, eax', 'jne 0x3570', 'mov r13d, 0x3f', 'xor r14d, r14d', 'jmp 0x33ae', 'lea rbx, [rbp + 0x2c]', 'xor eax, eax', 'mov edx, 0x20', 'mov edi, 1', 'mov rcx, rbx', 'lea rsi, [0x0000707b]', 'call sym.imp.__printf_chk', 'cmp byte [0x0000b015], 0', 'je 0x3467', 'xor eax, eax', 'mov r8, r12', 'mov ecx, 0x20', 'mov edx, r13d', 'lea rsi, str.__c__8.s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp byte [0x0000b017], 0', 'je 0x34c0', 'movsxd rax, dword [rbp + 0x154]', 'lea rdi, [timer]', 'mov qword [timer], rax', 'call sym.imp.localtime']"
346,nvidia-cuda-mps-control,623,"['call sym.imp.clock_gettime', 'test eax, eax', 'sete al', 'movzx eax, al', 'mov dword [0x0060a740], eax', 'jmp 0x402613', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_sys_vm_mmap_min_addr', 'mov qword [var_70h], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbp, rax', 'je 0x402bff', 'mov edi, 0x1e', 'call sym.imp.sysconf', 'mov eax, eax', 'cmp qword [var_70h], rax', 'ja 0x40266e', 'mov rax, qword [var_70h]', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_cpuinfo', 'mov qword [0x0060b530], rax', 'call sym.imp.fopen', 'mov rbp, rax', 'mov rax, 0xffffffffffffffff', 'test rbp, rbp', 'je 0x40273b', 'lea rdi, [0x0060b500]', 'mov qword [0x0060b528], rax', 'call sym.imp.pthread_mutex_lock', 'movdqa xmm0, xmmword [str._proc_self_maps]', 'lea rsi, [0x00408553]', 'movabs rax, 0x787a252d787a25', 'mov rdi, rbx', 'mov r13, qword [0x0060b528]', 'mov rbp, qword [0x0060b530]', 'mov qword [format], rax', 'movaps xmmword [var_70h], xmm0', 'mov qword [var_38h], 0', 'mov qword [s], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbx, rax', 'je 0x4028b7', 'lea rdi, [0x0060b500]', 'call sym.imp.pthread_mutex_unlock', 'mov eax, dword [0x0060bea0]', 'test eax, eax', 'je 0x402c2d', 'cmp dword [var_24h], 2', 'je 0x402cd5', 'call fcn.00404390', 'push r15', 'push r14', 'lea rdi, [0x0060b620]', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x13e8', 'lea r14, [var_30h]', 'mov rsi, r14', 'call fcn.00404060', 'push r13', 'push r12', 'mov r8, rdi', 'push rbp', 'push rbx', 'xor eax, eax', 'sub rsp, 0x98', 'mov dword [rsi], 0xffffffff', 'lea rbp, [var_20h]', 'mov qword [var_22h], 0', 'mov qword [var_86h], 0', 'lea r9, [var_22h]', 'lea rdi, [var_8h]', 'mov rcx, r9', 'sub rcx, rdi', 'add ecx, 0x6c', 'shr ecx, 3', 'rep stosq qword [rdi], rax', 'mov eax, 1', 'mov word [var_20h], ax', 'cmp byte [r8], 0', 'je 0x4040fc', 'mov eax, 0xffffffff', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046a3', 'lea r12, [var_3e0h]', 'xor eax, eax', 'mov ecx, 0x56', 'mov rdi, r12', 'rep stosq qword [rdi], rax', 'mov byte [var_680h], 1', 'call sym.imp.getpid', 'mov dword [var_684h], eax', 'call sym.imp.geteuid', 'mov dword [var_688h], eax', 'call sym.imp.getegid', 'mov dword [var_68ch], eax', 'mov rax, qword [var_3f0h]', 'cmp rax, 0x1f', 'ja 0x4046e2', 'add rax, 1', 'lea rbx, str.OUTBCRED', 'mov rsi, r12', 'mov rdx, rax', 'mov rdi, r14', 'shl rdx, 4', 'mov qword [rsp + rdx + 0x3e8], rbx', 'mov qword [rsp + rdx + 0x3f0], 9', 'mov qword [var_3f0h], rax', 'call fcn.00402fa0', 'push r15', 'push r14', 'lea rax, [rsi + 0x18]', 'push r13', 'push r12', 'xor r15d, r15d', 'push rbp', 'push rbx', 'mov ecx, 0x16', 'mov rbx, rdi', 'pxor xmm0, xmm0', 'sub rsp, 0xf8', 'movzx r13d, byte [rsi + 0x2a0]', 'mov r12, rsi', 'mov qword [var_10h], rax', 'mov rax, qword [rsi + 0x10]', 'lea rbp, [var_40h]', 'movaps xmmword [rsp], xmm0', 'mov rdi, rbp', 'mov qword [var_30h], 0', 'mov qword [var_20h], rbp', 'and r13d, 1', 'mov qword [var_18h], rax', 'mov rax, r15', 'mov qword [var_28h], 0xb0', 'rep stosq qword [rdi], rax', 'mov rax, qword [rsi + 0x218]', 'test rax, rax', 'jne 0x403080', 'test r13b, r13b', 'jne 0x403160', 'xor ebp, ebp', 'mov qword [var_28h], rbp', 'mov rbp, rsp', 'mov edi, dword [rbx]', 'xor edx, edx', 'mov rsi, rbp', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403060', 'mov qword [r12], rax', 'xor eax, eax', 'add rsp, 0xf8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046e2', 'lea rsi, [var_24h]', 'mov edx, 4', 'mov rdi, r14', 'mov dword [var_24h], 4', 'lea r13, [var_130h]', 'lea rbx, [var_40h]', 'call fcn.004033b0', 'push rbp', 'push rbx', 'mov rbp, rdi', 'xor eax, eax', 'mov ecx, 0x56', 'sub rsp, 0x3a8', 'pxor xmm0, xmm0', 'lea rdi, [var_f0h]', 'mov qword [var_30h], 0', 'mov qword [var_18h], 1', 'mov rbx, rsp', 'rep stosq qword [rdi], rax', 'mov qword [var_110h], rdx', 'lea rdx, [var_108h]', 'mov ecx, 0x16', 'movaps xmmword [rsp], xmm0', 'mov qword [var_10h], rdx', 'lea rdx, [var_40h]', 'mov qword [var_108h], rsi', 'movaps xmmword [var_20h], xmm0', 'mov rdi, rdx', 'rep stosq qword [rdi], rax', 'mov qword [var_100h], 1', 'mov qword [var_20h], rdx', 'mov edi, dword [rbp]', 'xor edx, edx', 'mov rsi, rbx', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403450', 'call sym.imp.__errno_location', 'cmp dword [rax], 4', 'je 0x40342e', 'add rsp, 0x3a8', 'mov eax, 0xffffffff', 'pop rbx', 'pop rbp', 'ret', 'jmp 0x406101', 'mov rax, qword [ptr]', 'mov rbx, qword [rax + 0x58]', 'test rbx, rbx', 'jne 0x40612d', 'jmp 0x4064c0', 'mov rax, qword [ptr]', 'mov r12, qword [rax + 0x90]', 'test r12, r12', 'je 0x406be0', 'cmp dword [r12], 2', 'jne 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'xor edx, edx', 'xchg dword [rax + 0xc], edx', 'sub edx, 1', 'jne 0x405b5d', 'xor ebx, ebx', 'mov rax, qword [rbp - 0x14e8]', 'test byte [rax + 0x70], 8', 'jne 0x407713', 'lea rdi, str.Accepting_connection...', 'xor eax, eax', 'call fcn.00403c70', 'push rbp', 'push rbx', 'sub rsp, 0x10d8', 'test al, al', 'mov qword [var_1028h], rsi', 'mov qword [var_1030h], rdx', 'mov qword [var_1038h], rcx', 'mov qword [var_1040h], r8', 'mov qword [var_1048h], r9', 'je 0x403ce5', 'lea rax, [arg_10f0h]', 'lea rbx, [s]', 'mov rcx, rsp', 'mov rdx, rdi', 'mov esi, 0x1000', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'lea rax, [var_1020h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.vsnprintf', 'mov edi, dword [0x0060aba4]', 'mov rsi, rbx', 'mov ebp, eax', 'call fcn.00403850', 'push r15', 'push r14', 'mov r14d, edi', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x1028', 'mov edx, dword [0x0060aba0]', 'test edx, edx', 'je 0x4039a0', 'test r13, r13', 'je 0x403aa0', 'mov ebx, 0x30', 'xor r12d, r12d', 'jmp 0x40389b', 'call sym.imp.getpid', 'lea rdx, [var_10h]', 'xor esi, esi', 'mov r15d, eax', 'lea rbp, [var_20h]', 'mov rdi, rdx', 'mov qword [var_8h], rdx', 'call sym.imp.gettimeofday', 'mov rdx, qword [var_8h]', 'mov rsi, rbp', 'mov rdi, rdx', 'call sym.imp.localtime_r']"
347,nvidia-cuda-mps-control,545,"['call sym.imp.clock_gettime', 'test eax, eax', 'sete al', 'movzx eax, al', 'mov dword [0x0060a740], eax', 'jmp 0x402613', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_sys_vm_mmap_min_addr', 'mov qword [var_70h], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbp, rax', 'je 0x402bff', 'mov edi, 0x1e', 'call sym.imp.sysconf', 'mov eax, eax', 'cmp qword [var_70h], rax', 'ja 0x40266e', 'mov rax, qword [var_70h]', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_cpuinfo', 'mov qword [0x0060b530], rax', 'call sym.imp.fopen', 'mov rbp, rax', 'mov rax, 0xffffffffffffffff', 'test rbp, rbp', 'je 0x40273b', 'lea rdi, [0x0060b500]', 'mov qword [0x0060b528], rax', 'call sym.imp.pthread_mutex_lock', 'movdqa xmm0, xmmword [str._proc_self_maps]', 'lea rsi, [0x00408553]', 'movabs rax, 0x787a252d787a25', 'mov rdi, rbx', 'mov r13, qword [0x0060b528]', 'mov rbp, qword [0x0060b530]', 'mov qword [format], rax', 'movaps xmmword [var_70h], xmm0', 'mov qword [var_38h], 0', 'mov qword [s], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbx, rax', 'je 0x4028b7', 'lea rdi, [0x0060b500]', 'call sym.imp.pthread_mutex_unlock', 'mov eax, dword [0x0060bea0]', 'test eax, eax', 'je 0x402c2d', 'cmp dword [var_24h], 2', 'je 0x402cd5', 'call fcn.00404390', 'push r15', 'push r14', 'lea rdi, [0x0060b620]', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x13e8', 'lea r14, [var_30h]', 'mov rsi, r14', 'call fcn.00404060', 'push r13', 'push r12', 'mov r8, rdi', 'push rbp', 'push rbx', 'xor eax, eax', 'sub rsp, 0x98', 'mov dword [rsi], 0xffffffff', 'lea rbp, [var_20h]', 'mov qword [var_22h], 0', 'mov qword [var_86h], 0', 'lea r9, [var_22h]', 'lea rdi, [var_8h]', 'mov rcx, r9', 'sub rcx, rdi', 'add ecx, 0x6c', 'shr ecx, 3', 'rep stosq qword [rdi], rax', 'mov eax, 1', 'mov word [var_20h], ax', 'cmp byte [r8], 0', 'je 0x4040fc', 'mov eax, 0xffffffff', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046a3', 'lea r12, [var_3e0h]', 'xor eax, eax', 'mov ecx, 0x56', 'mov rdi, r12', 'rep stosq qword [rdi], rax', 'mov byte [var_680h], 1', 'call sym.imp.getpid', 'mov dword [var_684h], eax', 'call sym.imp.geteuid', 'mov dword [var_688h], eax', 'call sym.imp.getegid', 'mov dword [var_68ch], eax', 'mov rax, qword [var_3f0h]', 'cmp rax, 0x1f', 'ja 0x4046e2', 'add rax, 1', 'lea rbx, str.OUTBCRED', 'mov rsi, r12', 'mov rdx, rax', 'mov rdi, r14', 'shl rdx, 4', 'mov qword [rsp + rdx + 0x3e8], rbx', 'mov qword [rsp + rdx + 0x3f0], 9', 'mov qword [var_3f0h], rax', 'call fcn.00402fa0', 'push r15', 'push r14', 'lea rax, [rsi + 0x18]', 'push r13', 'push r12', 'xor r15d, r15d', 'push rbp', 'push rbx', 'mov ecx, 0x16', 'mov rbx, rdi', 'pxor xmm0, xmm0', 'sub rsp, 0xf8', 'movzx r13d, byte [rsi + 0x2a0]', 'mov r12, rsi', 'mov qword [var_10h], rax', 'mov rax, qword [rsi + 0x10]', 'lea rbp, [var_40h]', 'movaps xmmword [rsp], xmm0', 'mov rdi, rbp', 'mov qword [var_30h], 0', 'mov qword [var_20h], rbp', 'and r13d, 1', 'mov qword [var_18h], rax', 'mov rax, r15', 'mov qword [var_28h], 0xb0', 'rep stosq qword [rdi], rax', 'mov rax, qword [rsi + 0x218]', 'test rax, rax', 'jne 0x403080', 'test r13b, r13b', 'jne 0x403160', 'xor ebp, ebp', 'mov qword [var_28h], rbp', 'mov rbp, rsp', 'mov edi, dword [rbx]', 'xor edx, edx', 'mov rsi, rbp', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403060', 'mov qword [r12], rax', 'xor eax, eax', 'add rsp, 0xf8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046e2', 'lea rsi, [var_24h]', 'mov edx, 4', 'mov rdi, r14', 'mov dword [var_24h], 4', 'lea r13, [var_130h]', 'lea rbx, [var_40h]', 'call fcn.004033b0', 'push rbp', 'push rbx', 'mov rbp, rdi', 'xor eax, eax', 'mov ecx, 0x56', 'sub rsp, 0x3a8', 'pxor xmm0, xmm0', 'lea rdi, [var_f0h]', 'mov qword [var_30h], 0', 'mov qword [var_18h], 1', 'mov rbx, rsp', 'rep stosq qword [rdi], rax', 'mov qword [var_110h], rdx', 'lea rdx, [var_108h]', 'mov ecx, 0x16', 'movaps xmmword [rsp], xmm0', 'mov qword [var_10h], rdx', 'lea rdx, [var_40h]', 'mov qword [var_108h], rsi', 'movaps xmmword [var_20h], xmm0', 'mov rdi, rdx', 'rep stosq qword [rdi], rax', 'mov qword [var_100h], 1', 'mov qword [var_20h], rdx', 'mov edi, dword [rbp]', 'xor edx, edx', 'mov rsi, rbx', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403450', 'call sym.imp.__errno_location', 'cmp dword [rax], 4', 'je 0x40342e', 'add rsp, 0x3a8', 'mov eax, 0xffffffff', 'pop rbx', 'pop rbp', 'ret', 'jmp 0x406101', 'mov rax, qword [ptr]', 'mov rbx, qword [rax + 0x58]', 'test rbx, rbx', 'jne 0x40612d', 'jmp 0x4064c0', 'mov rax, qword [ptr]', 'mov r12, qword [rax + 0x90]', 'test r12, r12', 'je 0x406be0', 'cmp dword [r12], 2', 'jne 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'lea r14, [rbp - 0x14a0]', 'mov rsi, r14', 'call sym.imp.clock_gettime']"
348,nvidia-cuda-mps-control,568,"['call sym.imp.clock_gettime', 'test eax, eax', 'sete al', 'movzx eax, al', 'mov dword [0x0060a740], eax', 'jmp 0x402613', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_sys_vm_mmap_min_addr', 'mov qword [var_70h], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbp, rax', 'je 0x402bff', 'mov edi, 0x1e', 'call sym.imp.sysconf', 'mov eax, eax', 'cmp qword [var_70h], rax', 'ja 0x40266e', 'mov rax, qword [var_70h]', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_cpuinfo', 'mov qword [0x0060b530], rax', 'call sym.imp.fopen', 'mov rbp, rax', 'mov rax, 0xffffffffffffffff', 'test rbp, rbp', 'je 0x40273b', 'lea rdi, [0x0060b500]', 'mov qword [0x0060b528], rax', 'call sym.imp.pthread_mutex_lock', 'movdqa xmm0, xmmword [str._proc_self_maps]', 'lea rsi, [0x00408553]', 'movabs rax, 0x787a252d787a25', 'mov rdi, rbx', 'mov r13, qword [0x0060b528]', 'mov rbp, qword [0x0060b530]', 'mov qword [format], rax', 'movaps xmmword [var_70h], xmm0', 'mov qword [var_38h], 0', 'mov qword [s], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbx, rax', 'je 0x4028b7', 'lea rdi, [0x0060b500]', 'call sym.imp.pthread_mutex_unlock', 'mov eax, dword [0x0060bea0]', 'test eax, eax', 'je 0x402c2d', 'cmp dword [var_24h], 2', 'je 0x402cd5', 'call fcn.00404390', 'push r15', 'push r14', 'lea rdi, [0x0060b620]', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x13e8', 'lea r14, [var_30h]', 'mov rsi, r14', 'call fcn.00404060', 'push r13', 'push r12', 'mov r8, rdi', 'push rbp', 'push rbx', 'xor eax, eax', 'sub rsp, 0x98', 'mov dword [rsi], 0xffffffff', 'lea rbp, [var_20h]', 'mov qword [var_22h], 0', 'mov qword [var_86h], 0', 'lea r9, [var_22h]', 'lea rdi, [var_8h]', 'mov rcx, r9', 'sub rcx, rdi', 'add ecx, 0x6c', 'shr ecx, 3', 'rep stosq qword [rdi], rax', 'mov eax, 1', 'mov word [var_20h], ax', 'cmp byte [r8], 0', 'je 0x4040fc', 'mov eax, 0xffffffff', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046a3', 'lea r12, [var_3e0h]', 'xor eax, eax', 'mov ecx, 0x56', 'mov rdi, r12', 'rep stosq qword [rdi], rax', 'mov byte [var_680h], 1', 'call sym.imp.getpid', 'mov dword [var_684h], eax', 'call sym.imp.geteuid', 'mov dword [var_688h], eax', 'call sym.imp.getegid', 'mov dword [var_68ch], eax', 'mov rax, qword [var_3f0h]', 'cmp rax, 0x1f', 'ja 0x4046e2', 'add rax, 1', 'lea rbx, str.OUTBCRED', 'mov rsi, r12', 'mov rdx, rax', 'mov rdi, r14', 'shl rdx, 4', 'mov qword [rsp + rdx + 0x3e8], rbx', 'mov qword [rsp + rdx + 0x3f0], 9', 'mov qword [var_3f0h], rax', 'call fcn.00402fa0', 'push r15', 'push r14', 'lea rax, [rsi + 0x18]', 'push r13', 'push r12', 'xor r15d, r15d', 'push rbp', 'push rbx', 'mov ecx, 0x16', 'mov rbx, rdi', 'pxor xmm0, xmm0', 'sub rsp, 0xf8', 'movzx r13d, byte [rsi + 0x2a0]', 'mov r12, rsi', 'mov qword [var_10h], rax', 'mov rax, qword [rsi + 0x10]', 'lea rbp, [var_40h]', 'movaps xmmword [rsp], xmm0', 'mov rdi, rbp', 'mov qword [var_30h], 0', 'mov qword [var_20h], rbp', 'and r13d, 1', 'mov qword [var_18h], rax', 'mov rax, r15', 'mov qword [var_28h], 0xb0', 'rep stosq qword [rdi], rax', 'mov rax, qword [rsi + 0x218]', 'test rax, rax', 'jne 0x403080', 'test r13b, r13b', 'jne 0x403160', 'xor ebp, ebp', 'mov qword [var_28h], rbp', 'mov rbp, rsp', 'mov edi, dword [rbx]', 'xor edx, edx', 'mov rsi, rbp', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403060', 'mov qword [r12], rax', 'xor eax, eax', 'add rsp, 0xf8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046e2', 'lea rsi, [var_24h]', 'mov edx, 4', 'mov rdi, r14', 'mov dword [var_24h], 4', 'lea r13, [var_130h]', 'lea rbx, [var_40h]', 'call fcn.004033b0', 'push rbp', 'push rbx', 'mov rbp, rdi', 'xor eax, eax', 'mov ecx, 0x56', 'sub rsp, 0x3a8', 'pxor xmm0, xmm0', 'lea rdi, [var_f0h]', 'mov qword [var_30h], 0', 'mov qword [var_18h], 1', 'mov rbx, rsp', 'rep stosq qword [rdi], rax', 'mov qword [var_110h], rdx', 'lea rdx, [var_108h]', 'mov ecx, 0x16', 'movaps xmmword [rsp], xmm0', 'mov qword [var_10h], rdx', 'lea rdx, [var_40h]', 'mov qword [var_108h], rsi', 'movaps xmmword [var_20h], xmm0', 'mov rdi, rdx', 'rep stosq qword [rdi], rax', 'mov qword [var_100h], 1', 'mov qword [var_20h], rdx', 'mov edi, dword [rbp]', 'xor edx, edx', 'mov rsi, rbx', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403450', 'call sym.imp.__errno_location', 'cmp dword [rax], 4', 'je 0x40342e', 'add rsp, 0x3a8', 'mov eax, 0xffffffff', 'pop rbx', 'pop rbp', 'ret', 'jmp 0x406101', 'mov rax, qword [ptr]', 'mov rbx, qword [rax + 0x58]', 'test rbx, rbx', 'jne 0x40612d', 'jmp 0x4064c0', 'mov rax, qword [ptr]', 'mov r12, qword [rax + 0x90]', 'test r12, r12', 'je 0x406be0', 'cmp dword [r12], 2', 'jne 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'cmp eax, 0xffffffff', 'je 0x406080', 'test eax, eax', 'jle 0x405dce', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x406a0b', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
349,nvidia-cuda-mps-control,513,"['call sym.imp.clock_gettime', 'test eax, eax', 'sete al', 'movzx eax, al', 'mov dword [0x0060a740], eax', 'jmp 0x402613', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_sys_vm_mmap_min_addr', 'mov qword [var_70h], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbp, rax', 'je 0x402bff', 'mov edi, 0x1e', 'call sym.imp.sysconf', 'mov eax, eax', 'cmp qword [var_70h], rax', 'ja 0x40266e', 'mov rax, qword [var_70h]', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_cpuinfo', 'mov qword [0x0060b530], rax', 'call sym.imp.fopen', 'mov rbp, rax', 'mov rax, 0xffffffffffffffff', 'test rbp, rbp', 'je 0x40273b', 'lea rdi, [0x0060b500]', 'mov qword [0x0060b528], rax', 'call sym.imp.pthread_mutex_lock', 'movdqa xmm0, xmmword [str._proc_self_maps]', 'lea rsi, [0x00408553]', 'movabs rax, 0x787a252d787a25', 'mov rdi, rbx', 'mov r13, qword [0x0060b528]', 'mov rbp, qword [0x0060b530]', 'mov qword [format], rax', 'movaps xmmword [var_70h], xmm0', 'mov qword [var_38h], 0', 'mov qword [s], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbx, rax', 'je 0x4028b7', 'lea rdi, [0x0060b500]', 'call sym.imp.pthread_mutex_unlock', 'mov eax, dword [0x0060bea0]', 'test eax, eax', 'je 0x402c2d', 'cmp dword [var_24h], 2', 'je 0x402cd5', 'call fcn.00404390', 'push r15', 'push r14', 'lea rdi, [0x0060b620]', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x13e8', 'lea r14, [var_30h]', 'mov rsi, r14', 'call fcn.00404060', 'push r13', 'push r12', 'mov r8, rdi', 'push rbp', 'push rbx', 'xor eax, eax', 'sub rsp, 0x98', 'mov dword [rsi], 0xffffffff', 'lea rbp, [var_20h]', 'mov qword [var_22h], 0', 'mov qword [var_86h], 0', 'lea r9, [var_22h]', 'lea rdi, [var_8h]', 'mov rcx, r9', 'sub rcx, rdi', 'add ecx, 0x6c', 'shr ecx, 3', 'rep stosq qword [rdi], rax', 'mov eax, 1', 'mov word [var_20h], ax', 'cmp byte [r8], 0', 'je 0x4040fc', 'mov eax, 0xffffffff', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046a3', 'lea r12, [var_3e0h]', 'xor eax, eax', 'mov ecx, 0x56', 'mov rdi, r12', 'rep stosq qword [rdi], rax', 'mov byte [var_680h], 1', 'call sym.imp.getpid', 'mov dword [var_684h], eax', 'call sym.imp.geteuid', 'mov dword [var_688h], eax', 'call sym.imp.getegid', 'mov dword [var_68ch], eax', 'mov rax, qword [var_3f0h]', 'cmp rax, 0x1f', 'ja 0x4046e2', 'add rax, 1', 'lea rbx, str.OUTBCRED', 'mov rsi, r12', 'mov rdx, rax', 'mov rdi, r14', 'shl rdx, 4', 'mov qword [rsp + rdx + 0x3e8], rbx', 'mov qword [rsp + rdx + 0x3f0], 9', 'mov qword [var_3f0h], rax', 'call fcn.00402fa0', 'push r15', 'push r14', 'lea rax, [rsi + 0x18]', 'push r13', 'push r12', 'xor r15d, r15d', 'push rbp', 'push rbx', 'mov ecx, 0x16', 'mov rbx, rdi', 'pxor xmm0, xmm0', 'sub rsp, 0xf8', 'movzx r13d, byte [rsi + 0x2a0]', 'mov r12, rsi', 'mov qword [var_10h], rax', 'mov rax, qword [rsi + 0x10]', 'lea rbp, [var_40h]', 'movaps xmmword [rsp], xmm0', 'mov rdi, rbp', 'mov qword [var_30h], 0', 'mov qword [var_20h], rbp', 'and r13d, 1', 'mov qword [var_18h], rax', 'mov rax, r15', 'mov qword [var_28h], 0xb0', 'rep stosq qword [rdi], rax', 'mov rax, qword [rsi + 0x218]', 'test rax, rax', 'jne 0x403080', 'test r13b, r13b', 'jne 0x403160', 'xor ebp, ebp', 'mov qword [var_28h], rbp', 'mov rbp, rsp', 'mov edi, dword [rbx]', 'xor edx, edx', 'mov rsi, rbp', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403060', 'mov qword [r12], rax', 'xor eax, eax', 'add rsp, 0xf8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046e2', 'lea rsi, [var_24h]', 'mov edx, 4', 'mov rdi, r14', 'mov dword [var_24h], 4', 'lea r13, [var_130h]', 'lea rbx, [var_40h]', 'call fcn.004033b0', 'push rbp', 'push rbx', 'mov rbp, rdi', 'xor eax, eax', 'mov ecx, 0x56', 'sub rsp, 0x3a8', 'pxor xmm0, xmm0', 'lea rdi, [var_f0h]', 'mov qword [var_30h], 0', 'mov qword [var_18h], 1', 'mov rbx, rsp', 'rep stosq qword [rdi], rax', 'mov qword [var_110h], rdx', 'lea rdx, [var_108h]', 'mov ecx, 0x16', 'movaps xmmword [rsp], xmm0', 'mov qword [var_10h], rdx', 'lea rdx, [var_40h]', 'mov qword [var_108h], rsi', 'movaps xmmword [var_20h], xmm0', 'mov rdi, rdx', 'rep stosq qword [rdi], rax', 'mov qword [var_100h], 1', 'mov qword [var_20h], rdx', 'mov edi, dword [rbp]', 'xor edx, edx', 'mov rsi, rbx', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403450', 'call sym.imp.__errno_location', 'cmp dword [rax], 4', 'je 0x40342e', 'add rsp, 0x3a8', 'mov eax, 0xffffffff', 'pop rbx', 'pop rbp', 'ret', 'jmp 0x406101', 'mov rax, qword [ptr]', 'mov rbx, qword [rax + 0x58]', 'test rbx, rbx', 'jne 0x40612d', 'jmp 0x4064c0', 'mov rax, qword [ptr]', 'mov r12, qword [rax + 0x90]', 'test r12, r12', 'je 0x406be0', 'cmp dword [r12], 2', 'jne 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'xor edx, edx', 'xchg dword [rax + 0xc], edx', 'sub edx, 1', 'jne 0x405b5d', 'xor ebx, ebx', 'mov rax, qword [rbp - 0x14e8]', 'test byte [rax + 0x70], 8', 'jne 0x407713', 'mov r13d, 1', 'jmp 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
350,nvidia-cuda-mps-control,157,"['call sym.imp.localtime_r', 'mov eax, dword [var_34h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov r11d, dword [var_2ch]', 'mov r10d, dword [var_28h]', 'mov r9d, dword [var_24h]', 'mov r8d, dword [var_20h]', 'lea edi, [rax + 0x76c]', 'mov eax, dword [var_30h]', 'mov dword [var_20h], r14d', 'mov dword [var_24h], r15d', 'mov dword [var_30h], r11d', 'mov dword [var_28h], edi', 'mov dword [var_3ch], r9d', 'lea esi, [rax + 1]', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov eax, dword [var_38h]', 'mov dword [var_40h], r8d', 'mov dword [var_2ch], esi', 'mov dword [var_38h], r10d', 'mov qword [var_48h], r12', 'mov dword [var_34h], eax', 'sar rdx, 7', 'sub rdx, rcx', 'test r12, r12', 'mov dword [var_44h], edx', 'jne 0x403a60', 'nop dword [rax + rax]', 'nop word cs:[rax + rax]', 'mov edi, dword [0x0060abac]', 'mov rdx, rbx', 'mov rsi, rbp', 'call sym.imp.write', 'test rax, rax', 'js 0x403990', 'add rbp, rax', 'sub rbx, rax', 'jne 0x403960', 'add rsp, 0x1028', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x10d8', 'mov eax, ebp', 'pop rbx', 'pop rbp', 'ret', 'mov r12, qword [r15 + 0x50]', 'test r12, r12', 'je 0x40606d', 'xor esi, esi', 'mov edi, 0xedcba000', 'call fcn.00403850', 'push r15', 'push r14', 'mov r14d, edi', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x1028', 'mov edx, dword [0x0060aba0]', 'test edx, edx', 'je 0x4039a0', 'test r13, r13', 'je 0x403aa0', 'mov ebx, 0x30', 'xor r12d, r12d', 'jmp 0x40389b', 'call sym.imp.getpid', 'lea rdx, [var_10h]', 'xor esi, esi', 'mov r15d, eax', 'lea rbp, [var_20h]', 'mov rdi, rdx', 'mov qword [var_8h], rdx', 'call sym.imp.gettimeofday', 'mov rdx, qword [var_8h]', 'mov rsi, rbp', 'mov rdi, rdx', 'call sym.imp.localtime_r']"
351,nvidia-cuda-mps-control,178,"['call sym.imp.localtime_r', 'mov eax, dword [var_34h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov r11d, dword [var_2ch]', 'mov r10d, dword [var_28h]', 'mov r9d, dword [var_24h]', 'mov r8d, dword [var_20h]', 'lea edi, [rax + 0x76c]', 'mov eax, dword [var_30h]', 'mov dword [var_20h], r14d', 'mov dword [var_24h], r15d', 'mov dword [var_30h], r11d', 'mov dword [var_28h], edi', 'mov dword [var_3ch], r9d', 'lea esi, [rax + 1]', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov eax, dword [var_38h]', 'mov dword [var_40h], r8d', 'mov dword [var_2ch], esi', 'mov dword [var_38h], r10d', 'mov qword [var_48h], r12', 'mov dword [var_34h], eax', 'sar rdx, 7', 'sub rdx, rcx', 'test r12, r12', 'mov dword [var_44h], edx', 'jne 0x403a60', 'nop dword [rax + rax]', 'nop word cs:[rax + rax]', 'mov edi, dword [0x0060abac]', 'mov rdx, rbx', 'mov rsi, rbp', 'call sym.imp.write', 'test rax, rax', 'js 0x403990', 'add rbp, rax', 'sub rbx, rax', 'jne 0x403960', 'add rsp, 0x1028', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x10d8', 'mov eax, ebp', 'pop rbx', 'pop rbp', 'ret', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'lea r14, [rbp - 0x14a0]', 'mov rsi, r14', 'call sym.imp.clock_gettime']"
352,nvidia-cuda-mps-control,201,"['call sym.imp.localtime_r', 'mov eax, dword [var_34h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov r11d, dword [var_2ch]', 'mov r10d, dword [var_28h]', 'mov r9d, dword [var_24h]', 'mov r8d, dword [var_20h]', 'lea edi, [rax + 0x76c]', 'mov eax, dword [var_30h]', 'mov dword [var_20h], r14d', 'mov dword [var_24h], r15d', 'mov dword [var_30h], r11d', 'mov dword [var_28h], edi', 'mov dword [var_3ch], r9d', 'lea esi, [rax + 1]', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov eax, dword [var_38h]', 'mov dword [var_40h], r8d', 'mov dword [var_2ch], esi', 'mov dword [var_38h], r10d', 'mov qword [var_48h], r12', 'mov dword [var_34h], eax', 'sar rdx, 7', 'sub rdx, rcx', 'test r12, r12', 'mov dword [var_44h], edx', 'jne 0x403a60', 'nop dword [rax + rax]', 'nop word cs:[rax + rax]', 'mov edi, dword [0x0060abac]', 'mov rdx, rbx', 'mov rsi, rbp', 'call sym.imp.write', 'test rax, rax', 'js 0x403990', 'add rbp, rax', 'sub rbx, rax', 'jne 0x403960', 'add rsp, 0x1028', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x10d8', 'mov eax, ebp', 'pop rbx', 'pop rbp', 'ret', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'cmp eax, 0xffffffff', 'je 0x406080', 'test eax, eax', 'jle 0x405dce', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x406a0b', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
353,nvidia-cuda-mps-control,146,"['call sym.imp.localtime_r', 'mov eax, dword [var_34h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov r11d, dword [var_2ch]', 'mov r10d, dword [var_28h]', 'mov r9d, dword [var_24h]', 'mov r8d, dword [var_20h]', 'lea edi, [rax + 0x76c]', 'mov eax, dword [var_30h]', 'mov dword [var_20h], r14d', 'mov dword [var_24h], r15d', 'mov dword [var_30h], r11d', 'mov dword [var_28h], edi', 'mov dword [var_3ch], r9d', 'lea esi, [rax + 1]', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov eax, dword [var_38h]', 'mov dword [var_40h], r8d', 'mov dword [var_2ch], esi', 'mov dword [var_38h], r10d', 'mov qword [var_48h], r12', 'mov dword [var_34h], eax', 'sar rdx, 7', 'sub rdx, rcx', 'test r12, r12', 'mov dword [var_44h], edx', 'jne 0x403a60', 'nop dword [rax + rax]', 'nop word cs:[rax + rax]', 'mov edi, dword [0x0060abac]', 'mov rdx, rbx', 'mov rsi, rbp', 'call sym.imp.write', 'test rax, rax', 'js 0x403990', 'add rbp, rax', 'sub rbx, rax', 'jne 0x403960', 'add rsp, 0x1028', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x10d8', 'mov eax, ebp', 'pop rbx', 'pop rbp', 'ret', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'xor edx, edx', 'xchg dword [rax + 0xc], edx', 'sub edx, 1', 'jne 0x405b5d', 'xor ebx, ebx', 'mov rax, qword [rbp - 0x14e8]', 'test byte [rax + 0x70], 8', 'jne 0x407713', 'mov r13d, 1', 'jmp 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
354,nvidia-cuda-mps-control,183,"['call sym.imp.clock_gettime', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'mov rdi, r12', 'mov ebx, dword [rbp - 0x14f4]', 'xor r13d, r13d', 'call sym.imp.free', 'mov rax, qword [rbp - 0x14e8]', 'movzx eax, byte [rax + 0x70]', 'test al, 8', 'jne 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rcx, qword [ptr]', 'cmp qword [rcx + 0x78], rax', 'jbe 0x406a93', 'test r13d, r13d', 'je 0x4064b0', 'add r13d, 1', 'jne 0x4060e6', 'cmp ebx, 1', 'jle 0x4062be', 'lea rdi, str.Accepting_connection...', 'xor eax, eax', 'call fcn.00403c70', 'push rbp', 'push rbx', 'sub rsp, 0x10d8', 'test al, al', 'mov qword [var_1028h], rsi', 'mov qword [var_1030h], rdx', 'mov qword [var_1038h], rcx', 'mov qword [var_1040h], r8', 'mov qword [var_1048h], r9', 'je 0x403ce5', 'lea rax, [arg_10f0h]', 'lea rbx, [s]', 'mov rcx, rsp', 'mov rdx, rdi', 'mov esi, 0x1000', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'lea rax, [var_1020h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.vsnprintf', 'mov edi, dword [0x0060aba4]', 'mov rsi, rbx', 'mov ebp, eax', 'call fcn.00403850', 'push r15', 'push r14', 'mov r14d, edi', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x1028', 'mov edx, dword [0x0060aba0]', 'test edx, edx', 'je 0x4039a0', 'test r13, r13', 'je 0x403aa0', 'mov ebx, 0x30', 'xor r12d, r12d', 'jmp 0x40389b', 'call sym.imp.getpid', 'lea rdx, [var_10h]', 'xor esi, esi', 'mov r15d, eax', 'lea rbp, [var_20h]', 'mov rdi, rdx', 'mov qword [var_8h], rdx', 'call sym.imp.gettimeofday', 'mov rdx, qword [var_8h]', 'mov rsi, rbp', 'mov rdi, rdx', 'call sym.imp.localtime_r']"
355,nvidia-cuda-mps-control,117,"['call sym.imp.clock_gettime', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'mov rdi, r12', 'mov ebx, dword [rbp - 0x14f4]', 'xor r13d, r13d', 'call sym.imp.free', 'mov rax, qword [rbp - 0x14e8]', 'movzx eax, byte [rax + 0x70]', 'test al, 8', 'jne 0x406a43', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'lea r14, [rbp - 0x14a0]', 'mov rsi, r14', 'call sym.imp.clock_gettime']"
356,nvidia-cuda-mps-control,44,"['call sym.imp.clock_gettime', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'cmp eax, 0xffffffff', 'je 0x406080', 'test eax, eax', 'jle 0x405dce', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x406a0b', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
357,nvidia-cuda-mps-control,58,"['call sym.imp.clock_gettime', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'mov rdi, r12', 'mov ebx, dword [rbp - 0x14f4]', 'xor r13d, r13d', 'call sym.imp.free', 'mov rax, qword [rbp - 0x14e8]', 'movzx eax, byte [rax + 0x70]', 'test al, 8', 'jne 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
358,nvidia-cuda-mps-control,183,"['call sym.imp.clock_gettime', 'mov rax, qword [rbp - 0x1030]', 'sub eax, dword [rbp - 0x14a0]', 'pxor xmm0, xmm0', 'movss xmm1, dword [0x00408c50]', 'cvtsi2ss xmm0, eax', 'mov rax, qword [rbp - 0x1028]', 'sub eax, dword [rbp - 0x1498]', 'mulss xmm1, xmm0', 'pxor xmm0, xmm0', 'cvtsi2ss xmm0, eax', 'divss xmm0, dword [0x00408c54]', 'addss xmm0, xmm1', 'ucomiss xmm0, dword [0x00408c58]', 'jae 0x406ce7', 'cvttss2si rax, xmm0', 'cmp rax, 0x3e7', 'ja 0x407068', 'mov rdi, r12', 'mov ebx, dword [rbp - 0x14f4]', 'xor r13d, r13d', 'call sym.imp.free', 'mov rax, qword [rbp - 0x14e8]', 'movzx eax, byte [rax + 0x70]', 'test al, 8', 'jne 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rcx, qword [ptr]', 'cmp qword [rcx + 0x78], rax', 'jbe 0x406a93', 'test r13d, r13d', 'je 0x4064b0', 'add r13d, 1', 'jne 0x4060e6', 'cmp ebx, 1', 'jle 0x4062be', 'lea rdi, str.Accepting_connection...', 'xor eax, eax', 'call fcn.00403c70', 'push rbp', 'push rbx', 'sub rsp, 0x10d8', 'test al, al', 'mov qword [var_1028h], rsi', 'mov qword [var_1030h], rdx', 'mov qword [var_1038h], rcx', 'mov qword [var_1040h], r8', 'mov qword [var_1048h], r9', 'je 0x403ce5', 'lea rax, [arg_10f0h]', 'lea rbx, [s]', 'mov rcx, rsp', 'mov rdx, rdi', 'mov esi, 0x1000', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'lea rax, [var_1020h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.vsnprintf', 'mov edi, dword [0x0060aba4]', 'mov rsi, rbx', 'mov ebp, eax', 'call fcn.00403850', 'push r15', 'push r14', 'mov r14d, edi', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x1028', 'mov edx, dword [0x0060aba0]', 'test edx, edx', 'je 0x4039a0', 'test r13, r13', 'je 0x403aa0', 'mov ebx, 0x30', 'xor r12d, r12d', 'jmp 0x40389b', 'call sym.imp.getpid', 'lea rdx, [var_10h]', 'xor esi, esi', 'mov r15d, eax', 'lea rbp, [var_20h]', 'mov rdi, rdx', 'mov qword [var_8h], rdx', 'call sym.imp.gettimeofday', 'mov rdx, qword [var_8h]', 'mov rsi, rbp', 'mov rdi, rdx', 'call sym.imp.localtime_r']"
359,nvidia-cuda-mps-control,117,"['call sym.imp.clock_gettime', 'mov rax, qword [rbp - 0x1030]', 'sub eax, dword [rbp - 0x14a0]', 'pxor xmm0, xmm0', 'movss xmm1, dword [0x00408c50]', 'cvtsi2ss xmm0, eax', 'mov rax, qword [rbp - 0x1028]', 'sub eax, dword [rbp - 0x1498]', 'mulss xmm1, xmm0', 'pxor xmm0, xmm0', 'cvtsi2ss xmm0, eax', 'divss xmm0, dword [0x00408c54]', 'addss xmm0, xmm1', 'ucomiss xmm0, dword [0x00408c58]', 'jae 0x406ce7', 'cvttss2si rax, xmm0', 'cmp rax, 0x3e7', 'ja 0x407068', 'mov rdi, r12', 'mov ebx, dword [rbp - 0x14f4]', 'xor r13d, r13d', 'call sym.imp.free', 'mov rax, qword [rbp - 0x14e8]', 'movzx eax, byte [rax + 0x70]', 'test al, 8', 'jne 0x406a43', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'lea r14, [rbp - 0x14a0]', 'mov rsi, r14', 'call sym.imp.clock_gettime']"
360,nvidia-cuda-mps-control,62,"['call sym.imp.clock_gettime', 'mov rax, qword [rbp - 0x1030]', 'sub eax, dword [rbp - 0x14a0]', 'pxor xmm0, xmm0', 'movss xmm1, dword [0x00408c50]', 'cvtsi2ss xmm0, eax', 'mov rax, qword [rbp - 0x1028]', 'sub eax, dword [rbp - 0x1498]', 'mulss xmm1, xmm0', 'pxor xmm0, xmm0', 'cvtsi2ss xmm0, eax', 'divss xmm0, dword [0x00408c54]', 'addss xmm0, xmm1', 'ucomiss xmm0, dword [0x00408c58]', 'jae 0x406ce7', 'cvttss2si rax, xmm0', 'cmp rax, 0x3e7', 'ja 0x407068', 'mov edx, 0x3e8', 'sub edx, eax', 'jmp 0x405c3d', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'cmp eax, 0xffffffff', 'je 0x406080', 'test eax, eax', 'jle 0x405dce', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x406a0b', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
361,nvidia-cuda-mps-control,58,"['call sym.imp.clock_gettime', 'mov rax, qword [rbp - 0x1030]', 'sub eax, dword [rbp - 0x14a0]', 'pxor xmm0, xmm0', 'movss xmm1, dword [0x00408c50]', 'cvtsi2ss xmm0, eax', 'mov rax, qword [rbp - 0x1028]', 'sub eax, dword [rbp - 0x1498]', 'mulss xmm1, xmm0', 'pxor xmm0, xmm0', 'cvtsi2ss xmm0, eax', 'divss xmm0, dword [0x00408c54]', 'addss xmm0, xmm1', 'ucomiss xmm0, dword [0x00408c58]', 'jae 0x406ce7', 'cvttss2si rax, xmm0', 'cmp rax, 0x3e7', 'ja 0x407068', 'mov rdi, r12', 'mov ebx, dword [rbp - 0x14f4]', 'xor r13d, r13d', 'call sym.imp.free', 'mov rax, qword [rbp - 0x14e8]', 'movzx eax, byte [rax + 0x70]', 'test al, 8', 'jne 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
362,nvidia-cuda-mps-control,147,"['call sym.imp.clock_gettime', 'imul rax, qword [rbp - 0x1030], 0x3b9aca00', 'add rax, qword [rbp - 0x1028]', 'mov rcx, qword [ptr]', 'cmp qword [rcx + 0x78], rax', 'jbe 0x406a93', 'test r13d, r13d', 'je 0x4064b0', 'add r13d, 1', 'jne 0x4060e6', 'cmp ebx, 1', 'jle 0x4062be', 'lea rdi, str.Accepting_connection...', 'xor eax, eax', 'call fcn.00403c70', 'push rbp', 'push rbx', 'sub rsp, 0x10d8', 'test al, al', 'mov qword [var_1028h], rsi', 'mov qword [var_1030h], rdx', 'mov qword [var_1038h], rcx', 'mov qword [var_1040h], r8', 'mov qword [var_1048h], r9', 'je 0x403ce5', 'lea rax, [arg_10f0h]', 'lea rbx, [s]', 'mov rcx, rsp', 'mov rdx, rdi', 'mov esi, 0x1000', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'lea rax, [var_1020h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.vsnprintf', 'mov edi, dword [0x0060aba4]', 'mov rsi, rbx', 'mov ebp, eax', 'call fcn.00403850', 'push r15', 'push r14', 'mov r14d, edi', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x1028', 'mov edx, dword [0x0060aba0]', 'test edx, edx', 'je 0x4039a0', 'test r13, r13', 'je 0x403aa0', 'mov ebx, 0x30', 'xor r12d, r12d', 'jmp 0x40389b', 'call sym.imp.getpid', 'lea rdx, [var_10h]', 'xor esi, esi', 'mov r15d, eax', 'lea rbp, [var_20h]', 'mov rdi, rdx', 'mov qword [var_8h], rdx', 'call sym.imp.gettimeofday', 'mov rdx, qword [var_8h]', 'mov rsi, rbp', 'mov rdi, rdx', 'call sym.imp.localtime_r']"
363,nvidia-cuda-mps-control,92,"['call sym.imp.clock_gettime', 'imul rax, qword [rbp - 0x1030], 0x3b9aca00', 'add rax, qword [rbp - 0x1028]', 'mov rcx, qword [ptr]', 'cmp qword [rcx + 0x78], rax', 'jbe 0x406a93', 'test r13d, r13d', 'je 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'lea r14, [rbp - 0x14a0]', 'mov rsi, r14', 'call sym.imp.clock_gettime']"
364,nvidia-cuda-mps-control,115,"['call sym.imp.clock_gettime', 'imul rax, qword [rbp - 0x1030], 0x3b9aca00', 'add rax, qword [rbp - 0x1028]', 'mov rcx, qword [ptr]', 'cmp qword [rcx + 0x78], rax', 'jbe 0x406a93', 'test r13d, r13d', 'je 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'cmp eax, 0xffffffff', 'je 0x406080', 'test eax, eax', 'jle 0x405dce', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x406a0b', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
365,nvidia-cuda-mps-control,60,"['call sym.imp.clock_gettime', 'imul rax, qword [rbp - 0x1030], 0x3b9aca00', 'add rax, qword [rbp - 0x1028]', 'mov rcx, qword [ptr]', 'cmp qword [rcx + 0x78], rax', 'jbe 0x406a93', 'test r13d, r13d', 'je 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'xor edx, edx', 'xchg dword [rax + 0xc], edx', 'sub edx, 1', 'jne 0x405b5d', 'xor ebx, ebx', 'mov rax, qword [rbp - 0x14e8]', 'test byte [rax + 0x70], 8', 'jne 0x407713', 'mov r13d, 1', 'jmp 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
366,brltty-trtxt,82,"['call sym.imp.clock_gettime', 'cmp eax, 0xffffffff', 'je 0x168c0', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x168d6', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov eax, 1', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'lea rdi, [0x0002e260]', 'pop rbp', 'jmp sym.imp.pthread_mutex_unlock', 'jmp 0xeddb', 'mov rax, qword [var_8h]', 'mov ecx, dword [var_14h]', 'mov dword [rax], ecx', 'mov rax, qword [var_1078h]', 'xor rax, qword fs:[0x28]', 'jne 0xf026', 'add rsp, 0x1088', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xf085', 'add rsp, 0x28', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xf140', 'add rsp, 0xd8', 'ret', 'mov rax, qword [0x0002e0a0]', 'mov edi, dword [rax + 4]', 'lea rbx, [rax + 4]', 'mov qword [0x0002e0a0], rbx', 'test edi, edi', 'je 0x16de0', 'mov rdi, r13', 'call sym.getCurrentTime', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov qword [rdi], 0', 'mov rsi, rsp', 'xor edi, edi', 'call sym.imp.clock_gettime']"
367,brltty-trtxt,50,"['call sym.imp.clock_gettime', 'cmp eax, 0xffffffff', 'je 0x168c0', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x168d6', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov ecx, dword [var_28h]', 'mov esi, 0x20', 'mov rdi, r12', 'lea rdx, str._Y__m__d__H:_M:_S', 'call sym.formatSeconds', 'endbr64', 'push r14', 'movsxd rcx, ecx', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rdi', 'sub rsp, 0x58', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea r14, [var_10h]', 'lea rdi, [var_8h]', 'mov qword [var_8h], rcx', 'mov rsi, r14', 'call sym.imp.localtime_r']"
368,brltty-trtxt,70,"['call sym.imp.clock_gettime', 'cmp eax, 0xffffffff', 'je 0x168c0', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x168d6', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov eax, 1', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'lea rdi, [0x0002e260]', 'pop rbp', 'jmp sym.imp.pthread_mutex_unlock', 'jmp 0xeddb', 'mov rax, qword [var_8h]', 'mov ecx, dword [var_14h]', 'mov dword [rax], ecx', 'mov rax, qword [var_1078h]', 'xor rax, qword fs:[0x28]', 'jne 0xf026', 'add rsp, 0x1088', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xf085', 'add rsp, 0x28', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xf140', 'add rsp, 0xd8', 'ret', 'mov rax, qword [0x0002e0a0]', 'mov edi, dword [rax + 4]', 'lea rbx, [rax + 4]', 'mov qword [0x0002e0a0], rbx', 'test edi, edi', 'je 0x16de0', 'mov rsi, rbp', 'call sym.imp.clock_gettime']"
369,brltty-trtxt,320,"['call sym.imp.localtime_r', 'mov rdx, r13', 'mov rcx, r14', 'mov rsi, r12', 'mov rdi, rbp', 'call sym.imp.strftime', 'mov rdx, qword [var_48h]', 'xor rdx, qword fs:[0x28]', 'jne 0x16aef', 'add rsp, 0x58', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'movsxd r9, dword [var_2ch]', 'mov esi, 1', 'mov r8, r12', 'mov rdi, qword [0x0002e220]', 'mov rcx, rax', 'xor eax, eax', 'mov rdx, r9', 'imul r9, r9, 0x431bde83', 'sar edx, 0x1f', 'sar r9, 0x32', 'sub r9d, edx', 'lea rdx, str._.s._03u_', 'call sym.imp.__fprintf_chk', 'mov esi, 0x40', 'mov rdi, r12', 'call sym.formatThreadName', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rdi', 'sub rsp, 8', 'call sym.imp.pthread_self', 'mov rdx, r12', 'mov rsi, rbp', 'mov rdi, rax', 'call sym.imp.pthread_getname_np', 'test eax, eax', 'jne 0x1a1a0', 'add rsp, 8', 'mov rdi, rbp', 'pop rbp', 'pop r12', 'jmp sym.imp.strlen', 'test rax, rax', 'jne 0xefd8', 'mov rsi, qword [0x0002e220]', 'mov rdi, r14', 'call sym.imp.fputs', 'mov rsi, qword [0x0002e220]', 'mov edi, 0xa', 'call sym.imp.fputc', 'mov rdi, qword [0x0002e220]', 'call sym.imp.fflush', 'mov rdi, qword [0x0002e220]', 'call sym.imp.funlockfile', 'mov eax, dword [0x0002e230]', 'test eax, eax', 'je 0xedca', 'cmp ebp, ebx', 'jge 0xef80', 'test r15d, r15d', 'jne 0xef70', 'mov rax, qword [var_8h]', 'mov ecx, dword [var_14h]', 'mov dword [rax], ecx', 'mov rax, qword [var_1078h]', 'xor rax, qword fs:[0x28]', 'jne 0xf026', 'add rsp, 0x1088', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xf085', 'add rsp, 0x28', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xf140', 'add rsp, 0xd8', 'ret', 'mov rax, qword [0x0002e0a0]', 'mov edi, dword [rax + 4]', 'lea rbx, [rax + 4]', 'mov qword [0x0002e0a0], rbx', 'test edi, edi', 'je 0x16de0', 'mov rdi, r13', 'call sym.getCurrentTime', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov qword [rdi], 0', 'mov rsi, rsp', 'xor edi, edi', 'call sym.imp.clock_gettime']"
370,brltty-trtxt,308,"['call sym.imp.localtime_r', 'mov rdx, r13', 'mov rcx, r14', 'mov rsi, r12', 'mov rdi, rbp', 'call sym.imp.strftime', 'mov rdx, qword [var_48h]', 'xor rdx, qword fs:[0x28]', 'jne 0x16aef', 'add rsp, 0x58', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'movsxd r9, dword [var_2ch]', 'mov esi, 1', 'mov r8, r12', 'mov rdi, qword [0x0002e220]', 'mov rcx, rax', 'xor eax, eax', 'mov rdx, r9', 'imul r9, r9, 0x431bde83', 'sar edx, 0x1f', 'sar r9, 0x32', 'sub r9d, edx', 'lea rdx, str._.s._03u_', 'call sym.imp.__fprintf_chk', 'mov esi, 0x40', 'mov rdi, r12', 'call sym.formatThreadName', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'mov rbp, rdi', 'sub rsp, 8', 'call sym.imp.pthread_self', 'mov rdx, r12', 'mov rsi, rbp', 'mov rdi, rax', 'call sym.imp.pthread_getname_np', 'test eax, eax', 'jne 0x1a1a0', 'add rsp, 8', 'mov rdi, rbp', 'pop rbp', 'pop r12', 'jmp sym.imp.strlen', 'test rax, rax', 'jne 0xefd8', 'mov rsi, qword [0x0002e220]', 'mov rdi, r14', 'call sym.imp.fputs', 'mov rsi, qword [0x0002e220]', 'mov edi, 0xa', 'call sym.imp.fputc', 'mov rdi, qword [0x0002e220]', 'call sym.imp.fflush', 'mov rdi, qword [0x0002e220]', 'call sym.imp.funlockfile', 'mov eax, dword [0x0002e230]', 'test eax, eax', 'je 0xedca', 'cmp ebp, ebx', 'jge 0xef80', 'test r15d, r15d', 'jne 0xef70', 'mov rax, qword [var_8h]', 'mov ecx, dword [var_14h]', 'mov dword [rax], ecx', 'mov rax, qword [var_1078h]', 'xor rax, qword fs:[0x28]', 'jne 0xf026', 'add rsp, 0x1088', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xf085', 'add rsp, 0x28', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xf140', 'add rsp, 0xd8', 'ret', 'mov rax, qword [0x0002e0a0]', 'mov edi, dword [rax + 4]', 'lea rbx, [rax + 4]', 'mov qword [0x0002e0a0], rbx', 'test edi, edi', 'je 0x16de0', 'mov rsi, rbp', 'call sym.imp.clock_gettime']"
371,brltty-trtxt,120,"['call sym.imp.clock_gettime', 'cmp eax, 0xffffffff', 'je 0x16d90', 'mov edx, dword [rbx]', 'mov edi, 4', 'xor eax, eax', 'mov rsi, r12', 'call sym.logMessage', 'endbr64', 'sub rsp, 0xd8', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0xf0ea', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov rdx, rsp', 'mov dword [rsp], 0x10', 'mov qword [var_8h], rax', 'lea rax, [var_20h]', 'mov qword [var_10h], rax', 'mov dword [var_4h], 0x30', 'call sym.vlogMessage', 'endbr64', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov qword [rsp], rsi', 'lea rsi, [0x0000e730]', 'mov qword [var_8h], rdx', 'mov rdx, rsp', 'call sym.logData', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'sub rsp, 0x88', 'mov rax, qword fs:[0x28]', 'mov qword [var_1078h], rax', 'xor eax, eax', 'mov ebx, edi', 'and edi, 0x80', 'mov r12, rdx', 'je 0xee10', 'lea rdx, [obj.logCategoryFlags]', 'mov eax, ebx', 'and eax, 0x7f', 'cmp byte [rdx + rax], 0', 'je 0xede6', 'mov rax, qword [var_1078h]', 'xor rax, qword fs:[0x28]', 'jne 0xf026', 'add rsp, 0x1088', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xf085', 'add rsp, 0x28', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xf140', 'add rsp, 0xd8', 'ret', 'mov rax, qword [0x0002e0a0]', 'mov edi, dword [rax + 4]', 'lea rbx, [rax + 4]', 'mov qword [0x0002e0a0], rbx', 'test edi, edi', 'je 0x16de0', 'mov rdi, r13', 'call sym.getCurrentTime', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov qword [rdi], 0', 'mov rsi, rsp', 'xor edi, edi', 'call sym.imp.clock_gettime']"
372,brltty-trtxt,108,"['call sym.imp.clock_gettime', 'cmp eax, 0xffffffff', 'je 0x16d90', 'mov edx, dword [rbx]', 'mov edi, 4', 'xor eax, eax', 'mov rsi, r12', 'call sym.logMessage', 'endbr64', 'sub rsp, 0xd8', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0xf0ea', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov rdx, rsp', 'mov dword [rsp], 0x10', 'mov qword [var_8h], rax', 'lea rax, [var_20h]', 'mov qword [var_10h], rax', 'mov dword [var_4h], 0x30', 'call sym.vlogMessage', 'endbr64', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov qword [rsp], rsi', 'lea rsi, [0x0000e730]', 'mov qword [var_8h], rdx', 'mov rdx, rsp', 'call sym.logData', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x1000', 'or qword [rsp], 0', 'sub rsp, 0x88', 'mov rax, qword fs:[0x28]', 'mov qword [var_1078h], rax', 'xor eax, eax', 'mov ebx, edi', 'and edi, 0x80', 'mov r12, rdx', 'je 0xee10', 'lea rdx, [obj.logCategoryFlags]', 'mov eax, ebx', 'and eax, 0x7f', 'cmp byte [rdx + rax], 0', 'je 0xede6', 'mov rax, qword [var_1078h]', 'xor rax, qword fs:[0x28]', 'jne 0xf026', 'add rsp, 0x1088', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xf085', 'add rsp, 0x28', 'ret', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xf140', 'add rsp, 0xd8', 'ret', 'mov rax, qword [0x0002e0a0]', 'mov edi, dword [rax + 4]', 'lea rbx, [rax + 4]', 'mov qword [0x0002e0a0], rbx', 'test edi, edi', 'je 0x16de0', 'mov rsi, rbp', 'call sym.imp.clock_gettime']"
373,mlabel,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
374,lastlog,185,"['call sym.imp.localtime', 'lea rdx, str._a__b__e__H:_M:_S__z__Y', 'mov esi, 0x50', 'mov rdi, rbp', 'mov rcx, rax', 'call sym.imp.strftime', 'mov eax, dword [ptr]', 'mov r9, rbp', 'test eax, eax', 'je 0x3230', 'mov rdx, qword [rbx]', 'lea rcx, [var_14h]', 'lea r8, [var_34h]', 'xor eax, eax', 'lea rsi, str.__16s___8.8s___16.16s__s_n', 'mov edi, 1', 'call sym.imp.__printf_chk', 'mov rax, qword [var_198h]', 'xor rax, qword fs:[0x28]', 'jne 0x324b', 'add rsp, 0x1a0', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'call sym.imp.getpwent', 'mov rdi, rax', 'test rax, rax', 'jne 0x2bb2', 'cmp byte [0x00008585], 0', 'je 0x2c68', 'cmp dword [rdi + 0x10], ebx', 'jbe 0x2bf0', 'call fcn.00003010', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x1a0', 'mov rax, qword fs:[0x28]', 'mov qword [var_198h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x30fe', 'mov eax, dword [rdi + 0x10]', 'mov rbx, rdi', 'lea rdx, [rax + rax*8]', 'lea rsi, [rax + rdx*8]', 'shl rsi, 2', 'lea rax, [rsi + 0x124]', 'cmp rax, qword [0x000085d0]', 'jbe 0x3128', 'lea rdx, [ptr]', 'mov ecx, 0x24', 'xor eax, eax', 'mov rdi, rdx', 'rep stosq qword [rdi], rax', 'mov dword [rdi], 0', 'cmp byte [0x00008584], 0', 'jne 0x31b0', 'cmp byte [0x00008583], 0', 'jne 0x31d9', 'cmp byte [0x00008580], 0', 'je 0x3202', 'movsxd rax, dword [ptr]', 'lea rdi, [timer]', 'lea rbp, [var_140h]', 'mov qword [timer], rax', 'call sym.imp.localtime']"
375,chage,190,"['call sym.imp.localtime', 'mov dword [0x00017198], 2', 'mov dword [0x00017184], 0', 'mov ebx, dword [rax + 0x14]', 'mov dword [0x0001718c], 0', 'mov dword [0x00017190], 0', 'lea edx, [rbx + 0x76c]', 'mov ebx, dword [rax + 0x10]', 'mov dword [0x0001719c], edx', 'mov dword [0x00017194], 0', 'lea edx, [rbx + 1]', 'mov dword [0x000171a4], edx', 'mov edx, dword [rax + 0xc]', 'mov dword [0x00017188], 0', 'mov dword [0x000171b0], edx', 'mov edx, dword [rax + 8]', 'mov dword [0x00017180], 0', 'mov dword [0x000171ac], edx', 'mov edx, dword [rax + 4]', 'mov dword [0x000171c8], 0', 'mov eax, dword [rax]', 'mov dword [0x000171a8], edx', 'mov dword [0x000171a0], eax', 'mov dword [0x000171c4], 0', 'mov dword [0x000171c0], 0', 'mov dword [0x000171bc], 0', 'mov dword [0x000171b8], 0', 'call fcn.00007620', 'endbr64', 'push r15', 'lea r10, [0x0000f0e0]', 'push r14', 'xor r14d, r14d', 'push r13', 'push r12', 'push rbp', 'push rbx', 'xor ebx, ebx', 'sub rsp, 0x528', 'mov rax, qword fs:[0x28]', 'mov qword [var_518h], rax', 'xor eax, eax', 'lea r13, [var_50h]', 'lea r12, [var_1e0h]', 'mov dword [0x00017664], 0', 'lea rax, [var_513h]', 'mov word [var_50h], bx', 'mov rbp, r13', 'mov dword [0x0001765c], 0xfffffffe', 'mov dword [var_14h], 0', 'mov qword [rsp], 0xc8', 'mov qword [s2], r12', 'mov qword [var_18h], r13', 'mov qword [var_20h], rax', 'movsx ebx, byte [r10 + r14]', 'mov r15d, ebx', 'cmp ebx, 0xffffffec', 'je 0x7840', 'lea rax, [0x0000f0a0]', 'movzx edx, byte [rax + r14]', 'mov eax, edx', 'test edx, edx', 'jne 0x78f0', 'movsxd rcx, edx', 'lea rdx, [0x0000ef80]', 'sub eax, 4', 'movzx edi, byte [rdx + rcx]', 'mov edx, 1', 'sub edx, edi', 'mov rsi, rdi', 'movsxd rdx, edx', 'mov edi, dword [r12 + rdx*4]', 'cmp al, 0x2f', 'ja case.0x792b.9', 'lea rdx, [0x0000eec0]', 'movzx eax, al', 'movsxd rax, dword [rdx + rax*4]', 'add rax, rdx', 'jmp rax', 'test eax, eax', 'jne 0x8e58', 'mov edx, dword [0x000171bc]', 'cmp edx, 1', 'jg 0x8e58', 'mov r14d, dword [0x000171b8]', 'cmp r14d, 1', 'jg 0x8e58', 'mov r15d, dword [0x000171c8]', 'cmp r15d, 1', 'jg 0x8e58', 'mov r12d, dword [0x000171c4]', 'cmp r12d, 1', 'jg 0x8e58', 'mov ecx, dword [0x0001719c]', 'mov eax, dword [0x0001719c]', 'sar ecx, 0x1f', 'xor eax, ecx', 'sub eax, ecx', 'cmp eax, 0x44', 'jle 0x8d70', 'add eax, 0x64', 'jmp 0x8c47', 'add eax, dword [0x00017180]', 'mov ecx, dword [0x000171a4]', 'mov dword [var_54h], eax', 'mov ebx, eax', 'mov eax, dword [0x00017188]', 'lea r10d, [rcx + rax - 1]', 'mov ecx, dword [0x00017194]', 'add ecx, dword [0x000171b0]', 'mov dword [var_50h], r10d', 'mov dword [canary], ecx', 'test edx, edx', 'jne 0x8d80', 'mov eax, dword [0x000171c0]', 'test eax, eax', 'je 0x8c97', 'xor r11d, r11d', 'xor eax, eax', 'add eax, dword [0x0001718c]', 'lea r13, [timeptr]', 'mov dword [var_14h], ecx', 'mov dword [var_44h], eax', 'mov esi, dword [0x00017190]', 'mov rdi, r13', 'mov dword [var_8h], eax', 'mov rax, qword [var_58h]', 'add esi, edx', 'add r11d, dword [0x00017184]', 'mov dword [var_10h], r10d', 'mov qword [var_18h], rax', 'mov rax, qword [var_68h]', 'mov dword [var_48h], esi', 'mov qword [var_20h], rax', 'mov rax, qword [var_70h]', 'mov dword [var_ch], esi', 'mov dword [timeptr], r11d', 'mov dword [var_4h], r11d', 'mov dword [var_60h], 0xffffffff', 'mov qword [var_28h], rax', 'call sym.imp.mktime']"
376,chage,439,"['call sym.imp.localtime', 'mov dword [0x00017198], 2', 'mov dword [0x00017184], 0', 'mov ebx, dword [rax + 0x14]', 'mov dword [0x0001718c], 0', 'mov dword [0x00017190], 0', 'lea edx, [rbx + 0x76c]', 'mov ebx, dword [rax + 0x10]', 'mov dword [0x0001719c], edx', 'mov dword [0x00017194], 0', 'lea edx, [rbx + 1]', 'mov dword [0x000171a4], edx', 'mov edx, dword [rax + 0xc]', 'mov dword [0x00017188], 0', 'mov dword [0x000171b0], edx', 'mov edx, dword [rax + 8]', 'mov dword [0x00017180], 0', 'mov dword [0x000171ac], edx', 'mov edx, dword [rax + 4]', 'mov dword [0x000171c8], 0', 'mov eax, dword [rax]', 'mov dword [0x000171a8], edx', 'mov dword [0x000171a0], eax', 'mov dword [0x000171c4], 0', 'mov dword [0x000171c0], 0', 'mov dword [0x000171bc], 0', 'mov dword [0x000171b8], 0', 'call fcn.00007620', 'endbr64', 'push r15', 'lea r10, [0x0000f0e0]', 'push r14', 'xor r14d, r14d', 'push r13', 'push r12', 'push rbp', 'push rbx', 'xor ebx, ebx', 'sub rsp, 0x528', 'mov rax, qword fs:[0x28]', 'mov qword [var_518h], rax', 'xor eax, eax', 'lea r13, [var_50h]', 'lea r12, [var_1e0h]', 'mov dword [0x00017664], 0', 'lea rax, [var_513h]', 'mov word [var_50h], bx', 'mov rbp, r13', 'mov dword [0x0001765c], 0xfffffffe', 'mov dword [var_14h], 0', 'mov qword [rsp], 0xc8', 'mov qword [s2], r12', 'mov qword [var_18h], r13', 'mov qword [var_20h], rax', 'movsx ebx, byte [r10 + r14]', 'mov r15d, ebx', 'cmp ebx, 0xffffffec', 'je 0x7840', 'lea rax, [0x0000f0a0]', 'movzx edx, byte [rax + r14]', 'mov eax, edx', 'test edx, edx', 'jne 0x78f0', 'movsxd rcx, edx', 'lea rdx, [0x0000ef80]', 'sub eax, 4', 'movzx edi, byte [rdx + rcx]', 'mov edx, 1', 'sub edx, edi', 'mov rsi, rdi', 'movsxd rdx, edx', 'mov edi, dword [r12 + rdx*4]', 'cmp al, 0x2f', 'ja case.0x792b.9', 'lea rdx, [0x0000eec0]', 'movzx eax, al', 'movsxd rax, dword [rdx + rax*4]', 'add rax, rdx', 'jmp rax', 'test eax, eax', 'jne 0x8e58', 'mov edx, dword [0x000171bc]', 'cmp edx, 1', 'jg 0x8e58', 'mov r14d, dword [0x000171b8]', 'cmp r14d, 1', 'jg 0x8e58', 'mov r15d, dword [0x000171c8]', 'cmp r15d, 1', 'jg 0x8e58', 'mov r12d, dword [0x000171c4]', 'cmp r12d, 1', 'jg 0x8e58', 'mov ecx, dword [0x0001719c]', 'mov eax, dword [0x0001719c]', 'sar ecx, 0x1f', 'xor eax, ecx', 'sub eax, ecx', 'cmp eax, 0x44', 'jle 0x8d70', 'add eax, 0x64', 'jmp 0x8c47', 'add eax, dword [0x00017180]', 'mov ecx, dword [0x000171a4]', 'mov dword [var_54h], eax', 'mov ebx, eax', 'mov eax, dword [0x00017188]', 'lea r10d, [rcx + rax - 1]', 'mov ecx, dword [0x00017194]', 'add ecx, dword [0x000171b0]', 'mov dword [var_50h], r10d', 'mov dword [canary], ecx', 'test edx, edx', 'jne 0x8d80', 'mov eax, dword [0x000171c0]', 'test eax, eax', 'je 0x8c97', 'xor r11d, r11d', 'xor eax, eax', 'add eax, dword [0x0001718c]', 'lea r13, [timeptr]', 'mov dword [var_14h], ecx', 'mov dword [var_44h], eax', 'mov esi, dword [0x00017190]', 'mov rdi, r13', 'mov dword [var_8h], eax', 'mov rax, qword [var_58h]', 'add esi, edx', 'add r11d, dword [0x00017184]', 'mov dword [var_10h], r10d', 'mov qword [var_18h], rax', 'mov rax, qword [var_68h]', 'mov dword [var_48h], esi', 'mov qword [var_20h], rax', 'mov rax, qword [var_70h]', 'mov dword [var_ch], esi', 'mov dword [timeptr], r11d', 'mov dword [var_4h], r11d', 'mov dword [var_60h], 0xffffffff', 'mov qword [var_28h], rax', 'call sym.imp.mktime', 'mov r11d, dword [var_4h]', 'mov edx, dword [var_8h]', 'cmp rax, 0xffffffffffffffff', 'mov qword [timer], rax', 'mov esi, dword [var_ch]', 'mov r10d, dword [var_10h]', 'mov ecx, dword [var_14h]', 'je 0x8dd8', 'test r14d, r14d', 'je 0x8e58', 'mov rax, qword [var_18h]', 'mov dword [timeptr], r11d', 'mov dword [var_44h], edx', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov dword [var_48h], esi', 'mov qword [var_68h], rax', 'mov rax, qword [var_28h]', 'mov dword [var_50h], r10d', 'mov qword [var_70h], rax', 'mov eax, dword [0x000171b4]', 'mov dword [var_54h], ebx', 'mov dword [var_60h], 0xffffffff', 'cmp ebx, 0x46', 'jg 0x9008', 'add ecx, 1', 'sub eax, 0x5a0', 'mov dword [canary], ecx', 'mov dword [0x000171b4], eax', 'mov rdi, r13', 'call sym.imp.mktime']"
377,chage,444,"['call sym.imp.localtime', 'mov dword [0x00017198], 2', 'mov dword [0x00017184], 0', 'mov ebx, dword [rax + 0x14]', 'mov dword [0x0001718c], 0', 'mov dword [0x00017190], 0', 'lea edx, [rbx + 0x76c]', 'mov ebx, dword [rax + 0x10]', 'mov dword [0x0001719c], edx', 'mov dword [0x00017194], 0', 'lea edx, [rbx + 1]', 'mov dword [0x000171a4], edx', 'mov edx, dword [rax + 0xc]', 'mov dword [0x00017188], 0', 'mov dword [0x000171b0], edx', 'mov edx, dword [rax + 8]', 'mov dword [0x00017180], 0', 'mov dword [0x000171ac], edx', 'mov edx, dword [rax + 4]', 'mov dword [0x000171c8], 0', 'mov eax, dword [rax]', 'mov dword [0x000171a8], edx', 'mov dword [0x000171a0], eax', 'mov dword [0x000171c4], 0', 'mov dword [0x000171c0], 0', 'mov dword [0x000171bc], 0', 'mov dword [0x000171b8], 0', 'call fcn.00007620', 'endbr64', 'push r15', 'lea r10, [0x0000f0e0]', 'push r14', 'xor r14d, r14d', 'push r13', 'push r12', 'push rbp', 'push rbx', 'xor ebx, ebx', 'sub rsp, 0x528', 'mov rax, qword fs:[0x28]', 'mov qword [var_518h], rax', 'xor eax, eax', 'lea r13, [var_50h]', 'lea r12, [var_1e0h]', 'mov dword [0x00017664], 0', 'lea rax, [var_513h]', 'mov word [var_50h], bx', 'mov rbp, r13', 'mov dword [0x0001765c], 0xfffffffe', 'mov dword [var_14h], 0', 'mov qword [rsp], 0xc8', 'mov qword [s2], r12', 'mov qword [var_18h], r13', 'mov qword [var_20h], rax', 'movsx ebx, byte [r10 + r14]', 'mov r15d, ebx', 'cmp ebx, 0xffffffec', 'je 0x7840', 'lea rax, [0x0000f0a0]', 'movzx edx, byte [rax + r14]', 'mov eax, edx', 'test edx, edx', 'jne 0x78f0', 'movsxd rcx, edx', 'lea rdx, [0x0000ef80]', 'sub eax, 4', 'movzx edi, byte [rdx + rcx]', 'mov edx, 1', 'sub edx, edi', 'mov rsi, rdi', 'movsxd rdx, edx', 'mov edi, dword [r12 + rdx*4]', 'cmp al, 0x2f', 'ja case.0x792b.9', 'lea rdx, [0x0000eec0]', 'movzx eax, al', 'movsxd rax, dword [rdx + rax*4]', 'add rax, rdx', 'jmp rax', 'test eax, eax', 'jne 0x8e58', 'mov edx, dword [0x000171bc]', 'cmp edx, 1', 'jg 0x8e58', 'mov r14d, dword [0x000171b8]', 'cmp r14d, 1', 'jg 0x8e58', 'mov r15d, dword [0x000171c8]', 'cmp r15d, 1', 'jg 0x8e58', 'mov r12d, dword [0x000171c4]', 'cmp r12d, 1', 'jg 0x8e58', 'mov ecx, dword [0x0001719c]', 'mov eax, dword [0x0001719c]', 'sar ecx, 0x1f', 'xor eax, ecx', 'sub eax, ecx', 'cmp eax, 0x44', 'jle 0x8d70', 'add eax, 0x64', 'jmp 0x8c47', 'add eax, dword [0x00017180]', 'mov ecx, dword [0x000171a4]', 'mov dword [var_54h], eax', 'mov ebx, eax', 'mov eax, dword [0x00017188]', 'lea r10d, [rcx + rax - 1]', 'mov ecx, dword [0x00017194]', 'add ecx, dword [0x000171b0]', 'mov dword [var_50h], r10d', 'mov dword [canary], ecx', 'test edx, edx', 'jne 0x8d80', 'mov eax, dword [0x000171c0]', 'test eax, eax', 'je 0x8c97', 'xor r11d, r11d', 'xor eax, eax', 'add eax, dword [0x0001718c]', 'lea r13, [timeptr]', 'mov dword [var_14h], ecx', 'mov dword [var_44h], eax', 'mov esi, dword [0x00017190]', 'mov rdi, r13', 'mov dword [var_8h], eax', 'mov rax, qword [var_58h]', 'add esi, edx', 'add r11d, dword [0x00017184]', 'mov dword [var_10h], r10d', 'mov qword [var_18h], rax', 'mov rax, qword [var_68h]', 'mov dword [var_48h], esi', 'mov qword [var_20h], rax', 'mov rax, qword [var_70h]', 'mov dword [var_ch], esi', 'mov dword [timeptr], r11d', 'mov dword [var_4h], r11d', 'mov dword [var_60h], 0xffffffff', 'mov qword [var_28h], rax', 'call sym.imp.mktime', 'mov r11d, dword [var_4h]', 'mov edx, dword [var_8h]', 'cmp rax, 0xffffffffffffffff', 'mov qword [timer], rax', 'mov esi, dword [var_ch]', 'mov r10d, dword [var_10h]', 'mov ecx, dword [var_14h]', 'je 0x8dd8', 'test r12d, r12d', 'je 0x8d3a', 'test r15d, r15d', 'je 0x8f78', 'mov edx, dword [0x000171cc]', 'sub edx, dword [var_58h]', 'mov rdi, r13', 'add edx, 7', 'mov ecx, dword [0x000171d0]', 'movsxd rax, edx', 'mov r8d, edx', 'imul rax, rax, 0xffffffff92492493', 'sar r8d, 0x1f', 'shr rax, 0x20', 'add eax, edx', 'sar eax, 2', 'sub eax, r8d', 'lea r8d, [rax*8]', 'sub r8d, eax', 'xor eax, eax', 'sub edx, r8d', 'test ecx, ecx', 'setg al', 'sub ecx, eax', 'lea edx, [rdx + rcx*8]', 'sub edx, ecx', 'add dword [canary], edx', 'call sym.imp.mktime']"
378,chage,249,"['call sym.imp.mktime', 'mov r11d, dword [var_4h]', 'mov edx, dword [var_8h]', 'cmp rax, 0xffffffffffffffff', 'mov qword [timer], rax', 'mov esi, dword [var_ch]', 'mov r10d, dword [var_10h]', 'mov ecx, dword [var_14h]', 'je 0x8dd8', 'test r14d, r14d', 'je 0x8e58', 'mov rax, qword [var_18h]', 'mov dword [timeptr], r11d', 'mov dword [var_44h], edx', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov dword [var_48h], esi', 'mov qword [var_68h], rax', 'mov rax, qword [var_28h]', 'mov dword [var_50h], r10d', 'mov qword [var_70h], rax', 'mov eax, dword [0x000171b4]', 'mov dword [var_54h], ebx', 'mov dword [var_60h], 0xffffffff', 'cmp ebx, 0x46', 'jg 0x9008', 'add ecx, 1', 'sub eax, 0x5a0', 'mov dword [canary], ecx', 'mov dword [0x000171b4], eax', 'mov rdi, r13', 'call sym.imp.mktime']"
379,chage,254,"['call sym.imp.mktime', 'mov r11d, dword [var_4h]', 'mov edx, dword [var_8h]', 'cmp rax, 0xffffffffffffffff', 'mov qword [timer], rax', 'mov esi, dword [var_ch]', 'mov r10d, dword [var_10h]', 'mov ecx, dword [var_14h]', 'je 0x8dd8', 'test r12d, r12d', 'je 0x8d3a', 'test r15d, r15d', 'je 0x8f78', 'mov edx, dword [0x000171cc]', 'sub edx, dword [var_58h]', 'mov rdi, r13', 'add edx, 7', 'mov ecx, dword [0x000171d0]', 'movsxd rax, edx', 'mov r8d, edx', 'imul rax, rax, 0xffffffff92492493', 'sar r8d, 0x1f', 'shr rax, 0x20', 'add eax, edx', 'sar eax, 2', 'sub eax, r8d', 'lea r8d, [rax*8]', 'sub r8d, eax', 'xor eax, eax', 'sub edx, r8d', 'test ecx, ecx', 'setg al', 'sub ecx, eax', 'lea edx, [rdx + rcx*8]', 'sub edx, ecx', 'add dword [canary], edx', 'call sym.imp.mktime']"
380,chage,249,"['call sym.imp.mktime', 'mov qword [timer], rax', 'cmp rax, 0xffffffffffffffff', 'jne 0x8d2c', 'test r12d, r12d', 'je 0x8d3a', 'test r15d, r15d', 'je 0x8f78', 'mov edx, dword [0x000171cc]', 'sub edx, dword [var_58h]', 'mov rdi, r13', 'add edx, 7', 'mov ecx, dword [0x000171d0]', 'movsxd rax, edx', 'mov r8d, edx', 'imul rax, rax, 0xffffffff92492493', 'sar r8d, 0x1f', 'shr rax, 0x20', 'add eax, edx', 'sar eax, 2', 'sub eax, r8d', 'lea r8d, [rax*8]', 'sub r8d, eax', 'xor eax, eax', 'sub edx, r8d', 'test ecx, ecx', 'setg al', 'sub ecx, eax', 'lea edx, [rdx + rcx*8]', 'sub edx, ecx', 'add dword [canary], edx', 'call sym.imp.mktime']"
381,cvtsudoers,445,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'test bpl, bpl', 'jne 0x190f0', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'mov dword [var_30h], 0xffffffff', 'call sym.imp.mktime']"
382,cvtsudoers,450,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'cmp bpl, 0x5a', 'jne 0x19210', 'mov dword [var_30h], 0', 'add rbx, 1', 'xor ebp, ebp', 'jmp 0x19158', 'cmp byte [rbx], 0', 'jne 0x19358', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'call sym.imp.mktime']"
383,cvtsudoers,744,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'cmp bpl, 0x5a', 'jne 0x19210', 'mov dword [var_30h], 0', 'add rbx, 1', 'xor ebp, ebp', 'jmp 0x19158', 'cmp byte [rbx], 0', 'jne 0x19358', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x190a2', 'lea rdi, [var_8h]', 'movsxd rbp, ebp', 'call fcn.00019400', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.gmtime', 'test rax, rax', 'je 0x194a0', 'mov rdi, r15', 'mov r13d, dword [rax]', 'mov r14d, dword [rax + 4]', 'mov r12d, dword [rax + 8]', 'mov ebx, dword [rax + 0x14]', 'mov ebp, dword [rax + 0x1c]', 'call sym.imp.localtime']"
384,cvtsudoers,447,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x190a2', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'test bpl, bpl', 'jne 0x190f0', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'mov dword [var_30h], 0xffffffff', 'call sym.imp.mktime']"
385,cvtsudoers,452,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x190a2', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'cmp bpl, 0x5a', 'jne 0x19210', 'mov dword [var_30h], 0', 'add rbx, 1', 'xor ebp, ebp', 'jmp 0x19158', 'cmp byte [rbx], 0', 'jne 0x19358', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'call sym.imp.mktime']"
386,cvtsudoers,294,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x190a2', 'lea rdi, [var_8h]', 'movsxd rbp, ebp', 'call fcn.00019400', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.gmtime', 'test rax, rax', 'je 0x194a0', 'mov rdi, r15', 'mov r13d, dword [rax]', 'mov r14d, dword [rax + 4]', 'mov r12d, dword [rax + 8]', 'mov ebx, dword [rax + 0x14]', 'mov ebp, dword [rax + 0x1c]', 'call sym.imp.localtime']"
387,cvtsudoers,291,"['call sym.imp.localtime', 'mov rdx, rax', 'test rax, rax', 'je 0x194a0', 'add rsp, 8', 'xor eax, eax', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rax, qword [var_8h]', 'mov r12, rax', 'sub r12, rbp', 'mov qword [var_8h], r12', 'jmp 0x190a2', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'test bpl, bpl', 'jne 0x190f0', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'mov dword [var_30h], 0xffffffff', 'call sym.imp.mktime']"
388,cvtsudoers,296,"['call sym.imp.localtime', 'mov rdx, rax', 'test rax, rax', 'je 0x194a0', 'add rsp, 8', 'xor eax, eax', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rax, qword [var_8h]', 'mov r12, rax', 'sub r12, rbp', 'mov qword [var_8h], r12', 'jmp 0x190a2', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'cmp bpl, 0x5a', 'jne 0x19210', 'mov dword [var_30h], 0', 'add rbx, 1', 'xor ebp, ebp', 'jmp 0x19158', 'cmp byte [rbx], 0', 'jne 0x19358', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'call sym.imp.mktime']"
389,cvtsudoers,590,"['call sym.imp.localtime', 'mov rdx, rax', 'test rax, rax', 'je 0x194a0', 'add rsp, 8', 'xor eax, eax', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rax, qword [var_8h]', 'mov r12, rax', 'sub r12, rbp', 'mov qword [var_8h], r12', 'jmp 0x190a2', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'cmp bpl, 0x5a', 'jne 0x19210', 'mov dword [var_30h], 0', 'add rbx, 1', 'xor ebp, ebp', 'jmp 0x19158', 'cmp byte [rbx], 0', 'jne 0x19358', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x190a2', 'lea rdi, [var_8h]', 'movsxd rbp, ebp', 'call fcn.00019400', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.gmtime', 'test rax, rax', 'je 0x194a0', 'mov rdi, r15', 'mov r13d, dword [rax]', 'mov r14d, dword [rax + 4]', 'mov r12d, dword [rax + 8]', 'mov ebx, dword [rax + 0x14]', 'mov ebp, dword [rax + 0x1c]', 'call sym.imp.localtime']"
390,minfo,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
391,w,457,"['call sym.imp.localtime', 'test rax, rax', 'je 0x38a2', 'mov rcx, r12', 'mov edx, 8', 'mov esi, 1', 'lea rdi, str.________', 'call sym.imp.fwrite', 'cmp byte [r14 + 8], 0x3a', 'je 0x3a50', 'mov r12, qword [obj.stdout]', 'lea rdi, [var_60h]', 'call fcn.00002f50', 'sub rsp, 0xa8', 'mov rsi, rdi', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'mov rdx, rsp', 'call sym.imp.__xstat', 'mov r8d, eax', 'xor eax, eax', 'test r8d, r8d', 'jne 0x2f90', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0x2fab', 'add rsp, 0xa8', 'ret', 'xor esi, esi', 'mov rdi, rax', 'mov rdx, r12', 'call fcn.00002ad0', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'test rdi, rdi', 'js 0x2d10', 'mov eax, dword [0x00006078]', 'mov r12, rdi', 'test eax, eax', 'je 0x2b80', 'cmp rdi, 0x2a2ff', 'jg 0x2be8', 'cmp rdi, 0xe0f', 'jg 0x2cb0', 'cmp rdi, 0x3c', 'jle 0x2d30', 'pop rbx', 'mov rcx, rdx', 'pop rbp', 'mov edx, 7', 'mov esi, 1', 'lea rdi, str._______', 'pop r12', 'jmp sym.imp.fwrite', 'mov rsi, qword [obj.stdout]', 'mov edi, 0x20', 'call sym.imp.fputc', 'test r15, r15', 'je 0x3a8c', 'mov edi, 0x2d', 'call sym.imp.putchar', 'jmp 0x3666', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.fputc', 'mov rax, qword [var_298h]', 'xor rax, qword fs:[0x28]', 'jne 0x3b19', 'add rsp, 0x2a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rcx', 'pop rsi', 'call sym.imp.getutent', 'test rax, rax', 'je 0x2878', 'cmp word [rax], 7', 'jne 0x2860', 'cmp byte [rax + 0x2c], 0', 'je 0x2860', 'jmp 0x2842', 'push rdx', 'mov ecx, r14d', 'mov esi, ebx', 'mov r8d, r12d', 'push r15', 'mov r9d, dword [var_8h]', 'mov rdi, rax', 'mov edx, dword [var_ch]', 'call fcn.000034b0', 'push r15', 'pxor xmm0, xmm0', 'push r14', 'mov r14, rdi', 'xor edi, edi', 'push r13', 'push r12', 'mov r12d, r8d', 'push rbp', 'push rbx', 'sub rsp, 0x2a8', 'mov dword [var_8h], esi', 'lea r15, [var_65h]', 'mov dword [var_1ch], edx', 'xor edx, edx', 'mov dword [var_ch], ecx', 'mov dword [var_18h], r9d', 'mov rax, qword fs:[0x28]', 'mov qword [var_298h], rax', 'xor eax, eax', 'mov byte [var_50h], 0', 'movabs rax, 0x2f7665642f', 'mov qword [var_60h], rax', 'mov qword [var_68h], rdx', 'mov dword [var_80h], 0', 'mov word [var_84h], di', 'movaps xmmword [var_30h], xmm0', 'movaps xmmword [var_40h], xmm0', 'movaps xmmword [var_70h], xmm0', 'call sym.imp.__ctype_b_loc', 'mov rsi, qword [rax]', 'xor eax, eax', 'jmp 0x3554', 'movsx rcx, byte [r14 + rax + 8]', 'mov rdx, rcx', 'test byte [rsi + rcx*2], 8', 'je 0x3540', 'mov byte [r15 + rax], dl', 'add rax, 1', 'cmp rax, 0x20', 'jne 0x3554', 'mov esi, dword [0x0000607c]', 'mov rbp, qword [0x00006070]', 'test esi, esi', 'jne 0x36a0', 'mov ebx, 0xffffffff', 'mov rdi, r15', 'call sym.imp.tty_to_dev', 'mov rdx, qword [rbp]', 'test rdx, rdx', 'je 0x3677', 'mov edi, dword [r14 + 4]', 'mov r9d, dword [0x0000607c]', 'xor r11d, r11d', 'xor esi, esi', 'xor r13d, r13d', 'xor r15d, r15d', 'nop dword [rax]', 'cmp dword [rdx + 0x364], edi', 'je 0x3890', 'cmp eax, dword [rdx + 0x368]', 'jne 0x3730', 'mov rdx, qword [rbp + 8]', 'add rbp, 8', 'test rdx, rdx', 'jne 0x36d0', 'test r15, r15', 'cmove r15, rsi', 'test r11d, r11d', 'je 0x3677', 'lea rcx, [r14 + 0x2c]', 'lea r8, [var_30h]', 'mov edx, 0x20', 'mov rsi, rcx', 'mov rdi, r8', 'mov qword [var_10h], rcx', 'call sym.imp.strncpy', 'mov ecx, dword [var_8h]', 'lea r9, [r14 + 8]', 'lea edx, [r12 + 1]', 'mov r8, rax', 'test ecx, ecx', 'mov rcx, qword [var_10h]', 'je 0x35bd', 'mov ecx, r12d', 'lea rsi, str.__.s__9.8s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, dword [var_ch]', 'test edx, edx', 'jne 0x39da', 'movsxd rax, dword [r14 + 0x154]', 'xor edi, edi', 'mov r12, qword [obj.stdout]', 'mov qword [var_20h], rax', 'call sym.imp.time', 'mov qword [timer], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x38a2', 'lea rdi, [timer]', 'call sym.imp.localtime']"
392,w,54,"['call sym.imp.localtime', 'test rax, rax', 'je 0x38a2', 'lea rdi, [var_20h]', 'mov ebp, dword [rax + 0x1c]', 'call sym.imp.localtime']"
393,w,458,"['call sym.imp.localtime', 'mov rbx, rax', 'test rax, rax', 'je 0x38a2', 'mov rcx, r12', 'mov edx, 8', 'mov esi, 1', 'lea rdi, str.________', 'call sym.imp.fwrite', 'cmp byte [r14 + 8], 0x3a', 'je 0x3a50', 'mov r12, qword [obj.stdout]', 'lea rdi, [var_60h]', 'call fcn.00002f50', 'sub rsp, 0xa8', 'mov rsi, rdi', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'mov rdx, rsp', 'call sym.imp.__xstat', 'mov r8d, eax', 'xor eax, eax', 'test r8d, r8d', 'jne 0x2f90', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0x2fab', 'add rsp, 0xa8', 'ret', 'xor esi, esi', 'mov rdi, rax', 'mov rdx, r12', 'call fcn.00002ad0', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'test rdi, rdi', 'js 0x2d10', 'mov eax, dword [0x00006078]', 'mov r12, rdi', 'test eax, eax', 'je 0x2b80', 'cmp rdi, 0x2a2ff', 'jg 0x2be8', 'cmp rdi, 0xe0f', 'jg 0x2cb0', 'cmp rdi, 0x3c', 'jle 0x2d30', 'pop rbx', 'mov rcx, rdx', 'pop rbp', 'mov edx, 7', 'mov esi, 1', 'lea rdi, str._______', 'pop r12', 'jmp sym.imp.fwrite', 'mov rsi, qword [obj.stdout]', 'mov edi, 0x20', 'call sym.imp.fputc', 'test r15, r15', 'je 0x3a8c', 'mov edi, 0x2d', 'call sym.imp.putchar', 'jmp 0x3666', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.fputc', 'mov rax, qword [var_298h]', 'xor rax, qword fs:[0x28]', 'jne 0x3b19', 'add rsp, 0x2a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rcx', 'pop rsi', 'call sym.imp.getutent', 'test rax, rax', 'je 0x2878', 'cmp word [rax], 7', 'jne 0x2860', 'cmp byte [rax + 0x2c], 0', 'je 0x2860', 'jmp 0x2842', 'push rdx', 'mov ecx, r14d', 'mov esi, ebx', 'mov r8d, r12d', 'push r15', 'mov r9d, dword [var_8h]', 'mov rdi, rax', 'mov edx, dword [var_ch]', 'call fcn.000034b0', 'push r15', 'pxor xmm0, xmm0', 'push r14', 'mov r14, rdi', 'xor edi, edi', 'push r13', 'push r12', 'mov r12d, r8d', 'push rbp', 'push rbx', 'sub rsp, 0x2a8', 'mov dword [var_8h], esi', 'lea r15, [var_65h]', 'mov dword [var_1ch], edx', 'xor edx, edx', 'mov dword [var_ch], ecx', 'mov dword [var_18h], r9d', 'mov rax, qword fs:[0x28]', 'mov qword [var_298h], rax', 'xor eax, eax', 'mov byte [var_50h], 0', 'movabs rax, 0x2f7665642f', 'mov qword [var_60h], rax', 'mov qword [var_68h], rdx', 'mov dword [var_80h], 0', 'mov word [var_84h], di', 'movaps xmmword [var_30h], xmm0', 'movaps xmmword [var_40h], xmm0', 'movaps xmmword [var_70h], xmm0', 'call sym.imp.__ctype_b_loc', 'mov rsi, qword [rax]', 'xor eax, eax', 'jmp 0x3554', 'movsx rcx, byte [r14 + rax + 8]', 'mov rdx, rcx', 'test byte [rsi + rcx*2], 8', 'je 0x3540', 'mov byte [r15 + rax], dl', 'add rax, 1', 'cmp rax, 0x20', 'jne 0x3554', 'mov esi, dword [0x0000607c]', 'mov rbp, qword [0x00006070]', 'test esi, esi', 'jne 0x36a0', 'mov ebx, 0xffffffff', 'mov rdi, r15', 'call sym.imp.tty_to_dev', 'mov rdx, qword [rbp]', 'test rdx, rdx', 'je 0x3677', 'mov edi, dword [r14 + 4]', 'mov r9d, dword [0x0000607c]', 'xor r11d, r11d', 'xor esi, esi', 'xor r13d, r13d', 'xor r15d, r15d', 'nop dword [rax]', 'cmp dword [rdx + 0x364], edi', 'je 0x3890', 'cmp eax, dword [rdx + 0x368]', 'jne 0x3730', 'mov rdx, qword [rbp + 8]', 'add rbp, 8', 'test rdx, rdx', 'jne 0x36d0', 'test r15, r15', 'cmove r15, rsi', 'test r11d, r11d', 'je 0x3677', 'lea rcx, [r14 + 0x2c]', 'lea r8, [var_30h]', 'mov edx, 0x20', 'mov rsi, rcx', 'mov rdi, r8', 'mov qword [var_10h], rcx', 'call sym.imp.strncpy', 'mov ecx, dword [var_8h]', 'lea r9, [r14 + 8]', 'lea edx, [r12 + 1]', 'mov r8, rax', 'test ecx, ecx', 'mov rcx, qword [var_10h]', 'je 0x35bd', 'mov ecx, r12d', 'lea rsi, str.__.s__9.8s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, dword [var_ch]', 'test edx, edx', 'jne 0x39da', 'movsxd rax, dword [r14 + 0x154]', 'xor edi, edi', 'mov r12, qword [obj.stdout]', 'mov qword [var_20h], rax', 'call sym.imp.time', 'mov qword [timer], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x38a2', 'lea rdi, [timer]', 'call sym.imp.localtime']"
394,w,512,"['call sym.imp.localtime', 'mov rbx, rax', 'test rax, rax', 'je 0x38a2', 'mov rcx, r12', 'mov edx, 8', 'mov esi, 1', 'lea rdi, str.________', 'call sym.imp.fwrite', 'cmp byte [r14 + 8], 0x3a', 'je 0x3a50', 'mov r12, qword [obj.stdout]', 'lea rdi, [var_60h]', 'call fcn.00002f50', 'sub rsp, 0xa8', 'mov rsi, rdi', 'mov edi, 1', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'mov rdx, rsp', 'call sym.imp.__xstat', 'mov r8d, eax', 'xor eax, eax', 'test r8d, r8d', 'jne 0x2f90', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0x2fab', 'add rsp, 0xa8', 'ret', 'xor esi, esi', 'mov rdi, rax', 'mov rdx, r12', 'call fcn.00002ad0', 'push r12', 'push rbp', 'mov rbp, rdx', 'push rbx', 'test rdi, rdi', 'js 0x2d10', 'mov eax, dword [0x00006078]', 'mov r12, rdi', 'test eax, eax', 'je 0x2b80', 'cmp rdi, 0x2a2ff', 'jg 0x2be8', 'cmp rdi, 0xe0f', 'jg 0x2cb0', 'cmp rdi, 0x3c', 'jle 0x2d30', 'pop rbx', 'mov rcx, rdx', 'pop rbp', 'mov edx, 7', 'mov esi, 1', 'lea rdi, str._______', 'pop r12', 'jmp sym.imp.fwrite', 'mov rsi, qword [obj.stdout]', 'mov edi, 0x20', 'call sym.imp.fputc', 'test r15, r15', 'je 0x3a8c', 'mov edi, 0x2d', 'call sym.imp.putchar', 'jmp 0x3666', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.fputc', 'mov rax, qword [var_298h]', 'xor rax, qword fs:[0x28]', 'jne 0x3b19', 'add rsp, 0x2a8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rcx', 'pop rsi', 'call sym.imp.getutent', 'test rax, rax', 'je 0x2878', 'cmp word [rax], 7', 'jne 0x2860', 'cmp byte [rax + 0x2c], 0', 'je 0x2860', 'jmp 0x2842', 'push rdx', 'mov ecx, r14d', 'mov esi, ebx', 'mov r8d, r12d', 'push r15', 'mov r9d, dword [var_8h]', 'mov rdi, rax', 'mov edx, dword [var_ch]', 'call fcn.000034b0', 'push r15', 'pxor xmm0, xmm0', 'push r14', 'mov r14, rdi', 'xor edi, edi', 'push r13', 'push r12', 'mov r12d, r8d', 'push rbp', 'push rbx', 'sub rsp, 0x2a8', 'mov dword [var_8h], esi', 'lea r15, [var_65h]', 'mov dword [var_1ch], edx', 'xor edx, edx', 'mov dword [var_ch], ecx', 'mov dword [var_18h], r9d', 'mov rax, qword fs:[0x28]', 'mov qword [var_298h], rax', 'xor eax, eax', 'mov byte [var_50h], 0', 'movabs rax, 0x2f7665642f', 'mov qword [var_60h], rax', 'mov qword [var_68h], rdx', 'mov dword [var_80h], 0', 'mov word [var_84h], di', 'movaps xmmword [var_30h], xmm0', 'movaps xmmword [var_40h], xmm0', 'movaps xmmword [var_70h], xmm0', 'call sym.imp.__ctype_b_loc', 'mov rsi, qword [rax]', 'xor eax, eax', 'jmp 0x3554', 'movsx rcx, byte [r14 + rax + 8]', 'mov rdx, rcx', 'test byte [rsi + rcx*2], 8', 'je 0x3540', 'mov byte [r15 + rax], dl', 'add rax, 1', 'cmp rax, 0x20', 'jne 0x3554', 'mov esi, dword [0x0000607c]', 'mov rbp, qword [0x00006070]', 'test esi, esi', 'jne 0x36a0', 'mov ebx, 0xffffffff', 'mov rdi, r15', 'call sym.imp.tty_to_dev', 'mov rdx, qword [rbp]', 'test rdx, rdx', 'je 0x3677', 'mov edi, dword [r14 + 4]', 'mov r9d, dword [0x0000607c]', 'xor r11d, r11d', 'xor esi, esi', 'xor r13d, r13d', 'xor r15d, r15d', 'nop dword [rax]', 'cmp dword [rdx + 0x364], edi', 'je 0x3890', 'cmp eax, dword [rdx + 0x368]', 'jne 0x3730', 'mov rdx, qword [rbp + 8]', 'add rbp, 8', 'test rdx, rdx', 'jne 0x36d0', 'test r15, r15', 'cmove r15, rsi', 'test r11d, r11d', 'je 0x3677', 'lea rcx, [r14 + 0x2c]', 'lea r8, [var_30h]', 'mov edx, 0x20', 'mov rsi, rcx', 'mov rdi, r8', 'mov qword [var_10h], rcx', 'call sym.imp.strncpy', 'mov ecx, dword [var_8h]', 'lea r9, [r14 + 8]', 'lea edx, [r12 + 1]', 'mov r8, rax', 'test ecx, ecx', 'mov rcx, qword [var_10h]', 'je 0x35bd', 'mov ecx, r12d', 'lea rsi, str.__.s__9.8s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, dword [var_ch]', 'test edx, edx', 'jne 0x39da', 'movsxd rax, dword [r14 + 0x154]', 'xor edi, edi', 'mov r12, qword [obj.stdout]', 'mov qword [var_20h], rax', 'call sym.imp.time', 'mov qword [timer], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x38a2', 'lea rdi, [timer]', 'call sym.imp.localtime', 'test rax, rax', 'je 0x38a2', 'lea rdi, [var_20h]', 'mov ebp, dword [rax + 0x1c]', 'call sym.imp.localtime']"
395,lastb,293,"['call sym.imp.localtime_r', 'mov ecx, 4', 'mov rsi, r14', 'lea rdi, [0x00008b39]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'mov dword [var_70h], 0xffffffff', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7040', 'mov ecx, 6', 'lea rdi, str.today', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7065', 'mov ecx, 0xa', 'lea rdi, str.yesterday', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x70d8', 'mov ecx, 9', 'lea rdi, str.tomorrow', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7060', 'movzx eax, byte [r14]', 'cmp al, 0x2b', 'je 0x70e0', 'cmp al, 0x2d', 'je 0x7600', 'mov rdi, r14', 'call sym.imp.strlen', 'cmp rax, 3', 'jbe 0x7100', 'cmp dword [r14 + rax - 4], 0x6f676120', 'lea rsi, [rax - 4]', 'jne 0x7100', 'mov rdi, r14', 'call sym.imp.strndup', 'mov rbp, rax', 'test rax, rax', 'je 0x767f', 'mov eax, 0xfffffff4', 'jmp 0x70ac', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x767a', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x3c9e', 'mov rax, qword [var_68h]', 'mov ecx, 0xf4240', 'xor edx, edx', 'div rcx', 'mov qword [var_b8h], rax', 'jmp 0x2b20', 'xor r8d, r8d', 'lea rcx, section..data.rel.ro', 'mov rsi, rbp', 'mov edi, ebx', 'lea rdx, str.hVf:n:RxadFit:p:s:0123456789w', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x2ec9', 'movsxd rax, dword [obj.optind]', 'cmp eax, ebx', 'jge 0x2ee1', 'cmp qword [ptr], 0', 'je 0x3bbb', 'cmp qword [var_28h], 0', 'je 0x3573', 'lea rax, [var_98h]', 'mov qword [var_10h], 0', 'mov qword [var_50h], rax', 'lea rax, [var_70h]', 'mov qword [timer], rax', 'nop dword [rax]', 'mov rdi, qword [var_50h]', 'call fcn.00004e00', 'endbr64', 'push rbx', 'xor esi, esi', 'mov rbx, rdi', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'lea rdi, [var_10h]', 'call sym.imp.gettimeofday', 'test eax, eax', 'je 0x4e60', 'mov rsi, rsp', 'mov edi, 7', 'call sym.imp.clock_gettime']"
396,lastb,60,"['call sym.imp.localtime_r', 'mov ecx, 4', 'mov rsi, r14', 'lea rdi, [0x00008b39]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'mov dword [var_70h], 0xffffffff', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7040', 'mov rdi, r13', 'call sym.imp.mktime']"
397,lastb,70,"['call sym.imp.localtime_r', 'mov ecx, 4', 'mov rsi, r14', 'lea rdi, [0x00008b39]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'mov dword [var_70h], 0xffffffff', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7040', 'mov ecx, 6', 'lea rdi, str.today', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7065', 'mov rdi, r13', 'mov dword [var_58h], 0', 'mov qword [var_50h], 0', 'call sym.imp.mktime']"
398,lastb,205,"['call sym.imp.localtime_r', 'mov ecx, 4', 'mov rsi, r14', 'lea rdi, [0x00008b39]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'mov dword [var_70h], 0xffffffff', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7040', 'mov ecx, 6', 'lea rdi, str.today', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7065', 'mov ecx, 0xa', 'lea rdi, str.yesterday', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x70d8', 'mov ecx, 9', 'lea rdi, str.tomorrow', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7060', 'movzx eax, byte [r14]', 'cmp al, 0x2b', 'je 0x70e0', 'cmp al, 0x2d', 'je 0x7600', 'mov rdi, r14', 'call sym.imp.strlen', 'cmp rax, 3', 'jbe 0x7100', 'xor r12d, r12d', 'lea r15, str.Sunday', 'mov rax, r12', 'mov r12, r15', 'mov r15, rax', 'mov dword [var_8h], r15d', 'test r12, r12', 'je 0x75d8', 'add r15, 1', 'cmp r15, 0xe', 'je 0x761b', 'mov r12d, 0xffffffff', 'jmp 0x7170', 'mov eax, dword [var_54h]', 'mov rdx, r13', 'mov rdi, r14', 'mov r15d, dword [var_50h]', 'lea rsi, str._y__m__d__H:_M:_S', 'mov ebp, dword [var_60h]', 'mov dword [var_8h], eax', 'mov eax, dword [var_58h]', 'mov dword [var_ch], eax', 'mov eax, dword [var_5ch]', 'mov dword [var_10h], eax', 'mov eax, dword [var_64h]', 'mov dword [var_14h], eax', 'mov eax, dword [var_68h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_6ch]', 'mov dword [var_1ch], eax', 'mov rax, qword [var_78h]', 'mov qword [var_20h], rax', 'mov rax, qword [var_80h]', 'mov qword [var_28h], rax', 'call sym.imp.strptime', 'test rax, rax', 'je 0x71e0', 'cmp byte [rax], 0', 'je 0x75a8', 'mov rdi, r13', 'call sym.imp.mktime']"
399,lastb,389,"['call sym.imp.mktime', 'cmp rax, 0xffffffffffffffff', 'jne 0x7084', 'nop', 'mov eax, 0xffffffea', 'jmp 0x70ac', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x767a', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x3c9e', 'mov rax, qword [var_68h]', 'mov ecx, 0xf4240', 'xor edx, edx', 'div rcx', 'mov qword [var_b0h], rax', 'jmp 0x2b20', 'xor r8d, r8d', 'lea rcx, section..data.rel.ro', 'mov rsi, rbp', 'mov edi, ebx', 'lea rdx, str.hVf:n:RxadFit:p:s:0123456789w', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x2ec9', 'movsxd rax, dword [obj.optind]', 'cmp eax, ebx', 'jge 0x2ee1', 'cmp qword [ptr], 0', 'je 0x3bbb', 'cmp qword [var_28h], 0', 'je 0x3573', 'lea rax, [var_98h]', 'mov qword [var_10h], 0', 'mov qword [var_50h], rax', 'lea rax, [var_70h]', 'mov qword [timer], rax', 'nop dword [rax]', 'mov rdi, qword [var_50h]', 'call fcn.00004e00', 'endbr64', 'push rbx', 'xor esi, esi', 'mov rbx, rdi', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'lea rdi, [var_10h]', 'call sym.imp.gettimeofday', 'test eax, eax', 'je 0x4e60', 'mov rsi, rsp', 'mov edi, 7', 'call sym.imp.clock_gettime']"
400,lastb,388,"['call sym.imp.mktime', 'cmp rax, 0xffffffffffffffff', 'je 0x7050', 'mov eax, 0xffffffea', 'jmp 0x70ac', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x767a', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x3c9e', 'mov rax, qword [var_68h]', 'mov ecx, 0xf4240', 'xor edx, edx', 'div rcx', 'mov qword [var_a8h], rax', 'jmp 0x2b20', 'xor r8d, r8d', 'lea rcx, section..data.rel.ro', 'mov rsi, rbp', 'mov edi, ebx', 'lea rdx, str.hVf:n:RxadFit:p:s:0123456789w', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x2ec9', 'movsxd rax, dword [obj.optind]', 'cmp eax, ebx', 'jge 0x2ee1', 'cmp qword [ptr], 0', 'je 0x3bbb', 'cmp qword [var_28h], 0', 'je 0x3573', 'lea rax, [var_98h]', 'mov qword [var_10h], 0', 'mov qword [var_50h], rax', 'lea rax, [var_70h]', 'mov qword [timer], rax', 'nop dword [rax]', 'mov rdi, qword [var_50h]', 'call fcn.00004e00', 'endbr64', 'push rbx', 'xor esi, esi', 'mov rbx, rdi', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'lea rdi, [var_10h]', 'call sym.imp.gettimeofday', 'test eax, eax', 'je 0x4e60', 'mov rsi, rsp', 'mov edi, 7', 'call sym.imp.clock_gettime']"
401,lastb,388,"['call sym.imp.mktime', 'cmp rax, 0xffffffffffffffff', 'je 0x7050', 'mov eax, 0xffffffea', 'jmp 0x70ac', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x767a', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x3c9e', 'mov rax, qword [var_68h]', 'mov ecx, 0xf4240', 'xor edx, edx', 'div rcx', 'mov qword [var_b0h], rax', 'jmp 0x2b20', 'xor r8d, r8d', 'lea rcx, section..data.rel.ro', 'mov rsi, rbp', 'mov edi, ebx', 'lea rdx, str.hVf:n:RxadFit:p:s:0123456789w', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x2ec9', 'movsxd rax, dword [obj.optind]', 'cmp eax, ebx', 'jge 0x2ee1', 'cmp qword [ptr], 0', 'je 0x3bbb', 'cmp qword [var_28h], 0', 'je 0x3573', 'lea rax, [var_98h]', 'mov qword [var_10h], 0', 'mov qword [var_50h], rax', 'lea rax, [var_70h]', 'mov qword [timer], rax', 'nop dword [rax]', 'mov rdi, qword [var_50h]', 'call fcn.00004e00', 'endbr64', 'push rbx', 'xor esi, esi', 'mov rbx, rdi', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'lea rdi, [var_10h]', 'call sym.imp.gettimeofday', 'test eax, eax', 'je 0x4e60', 'mov rsi, rsp', 'mov edi, 7', 'call sym.imp.clock_gettime']"
402,date,130,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6a68', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6a7e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x9e05', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0xa628', 'cmp al, 8', 'jg 0xa630', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x9e98', 'movzx r15d, byte [r14 + 4]', 'lea rsi, [r14 + 4]', 'test r15b, r15b', 'je 0x9e98', 'mov rdx, rsi', 'mov eax, r15d', 'mov edi, 1', 'jmp 0x9e7b', 'cmp al, 0x5c', 'jne 0x9e60', 'cmp al, 0x22', 'je 0xa690', 'lea rax, [var_370h]', 'mov qword [rsp], 0', 'mov qword [var_8h], rax', 'cmp rdi, 0x64', 'jg 0xa81a', 'mov rdx, qword [var_8h]', 'cmp r15b, 0x22', 'je 0xa6e5', 'mov byte [rdx], 0', 'mov rdi, qword [var_8h]', 'mov qword [var_30h], rsi', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'lea rdi, [var_40h]', 'mov byte [filename], r8b', 'call fcn.00006a20', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
403,date,213,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6a68', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6a7e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x9e05', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0xa628', 'cmp al, 8', 'jg 0xa630', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x9e98', 'movzx r15d, byte [r14 + 4]', 'lea rsi, [r14 + 4]', 'test r15b, r15b', 'je 0x9e98', 'mov rdx, rsi', 'mov eax, r15d', 'mov edi, 1', 'jmp 0x9e7b', 'cmp al, 0x5c', 'jne 0x9e60', 'cmp al, 0x22', 'je 0xa690', 'lea rax, [var_370h]', 'mov qword [rsp], 0', 'mov qword [var_8h], rax', 'cmp rdi, 0x64', 'jg 0xa81a', 'mov rdx, qword [var_8h]', 'cmp r15b, 0x22', 'je 0xa6e5', 'mov byte [rdx], 0', 'mov rdi, qword [var_8h]', 'mov qword [var_30h], rsi', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000be20', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xbe80', 'cmp rdx, 2', 'je 0xbea0', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
404,date,240,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6a68', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6a7e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x9e05', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0xa628', 'cmp al, 8', 'jg 0xa630', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x9e98', 'movzx r15d, byte [r14 + 4]', 'lea rsi, [r14 + 4]', 'test r15b, r15b', 'je 0x9e98', 'mov rdx, rsi', 'mov eax, r15d', 'mov edi, 1', 'jmp 0x9e7b', 'cmp al, 0x5c', 'jne 0x9e60', 'cmp al, 0x22', 'je 0xa690', 'lea rax, [var_370h]', 'mov qword [rsp], 0', 'mov qword [var_8h], rax', 'cmp rdi, 0x64', 'jg 0xa81a', 'mov rdx, qword [var_8h]', 'cmp r15b, 0x22', 'je 0xa6e5', 'mov byte [rdx], 0', 'mov rdi, qword [var_8h]', 'mov qword [var_30h], rsi', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000be20', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xbe80', 'mov edx, dword [rsi]', 'mov eax, 1', 'mov dword [rdi], edx', 'cmp dword [rsi], 0x44', 'jg 0xbe67', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xbec4', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xbf40', 'lea rax, [r15 + rbx*4 - 0x10]', 'mov esi, dword [rax]', 'lea edx, [rsi - 1]', 'mov dword [var_20h], edx', 'mov edx, dword [rax + 4]', 'mov dword [var_1ch], edx', 'mov edx, dword [rax + 8]', 'mov eax, dword [rax + 0xc]', 'mov dword [var_18h], edx', 'mov dword [var_14h], eax', 'jmp 0xc02c', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
405,date,464,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6a68', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6a7e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x9e05', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0xa628', 'cmp al, 8', 'jg 0xa630', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x9e98', 'movzx r15d, byte [r14 + 4]', 'lea rsi, [r14 + 4]', 'test r15b, r15b', 'je 0x9e98', 'mov rdx, rsi', 'mov eax, r15d', 'mov edi, 1', 'jmp 0x9e7b', 'cmp al, 0x5c', 'jne 0x9e60', 'cmp al, 0x22', 'je 0xa690', 'lea rax, [var_370h]', 'mov qword [rsp], 0', 'mov qword [var_8h], rax', 'cmp rdi, 0x64', 'jg 0xa81a', 'mov rdx, qword [var_8h]', 'cmp r15b, 0x22', 'je 0xa6e5', 'mov byte [rdx], 0', 'mov rdi, qword [var_8h]', 'mov qword [var_30h], rsi', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000be20', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xbe80', 'mov edx, dword [rsi]', 'mov eax, 1', 'mov dword [rdi], edx', 'cmp dword [rsi], 0x44', 'jg 0xbe67', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xbec4', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xbf40', 'lea rax, [r15 + rbx*4 - 0x10]', 'mov esi, dword [rax]', 'lea edx, [rsi - 1]', 'mov dword [var_20h], edx', 'mov edx, dword [rax + 4]', 'mov dword [var_1ch], edx', 'mov edx, dword [rax + 8]', 'mov eax, dword [rax + 0xc]', 'mov dword [var_18h], edx', 'mov dword [var_14h], eax', 'jmp 0xc02c', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov rdi, rsp', 'call sym.imp.localtime']"
406,date,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6a68', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6a7e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x9e05', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0xa628', 'cmp al, 8', 'jg 0xa630', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x9e98', 'movzx r15d, byte [r14 + 4]', 'lea rsi, [r14 + 4]', 'test r15b, r15b', 'je 0x9e98', 'mov rdx, rsi', 'mov eax, r15d', 'mov edi, 1', 'jmp 0x9e7b', 'cmp al, 0x5c', 'jne 0x9e60', 'cmp al, 0x22', 'je 0xa690', 'lea rax, [var_370h]', 'mov qword [rsp], 0', 'mov qword [var_8h], rax', 'cmp rdi, 0x64', 'jg 0xa81a', 'mov rdx, qword [var_8h]', 'cmp r15b, 0x22', 'je 0xa6e5', 'mov byte [rdx], 0', 'mov rdi, qword [var_8h]', 'mov qword [var_30h], rsi', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r12, rax', 'test rax, rax', 'je 0xee33', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xef1e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
407,date,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6a68', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6a7e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x9e05', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0xa628', 'cmp al, 8', 'jg 0xa630', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x9e98', 'lea rdx, [var_f0h]', 'mov rsi, r13', 'mov rdi, r12', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0xedf1', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime']"
408,date,340,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6a68', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x6a7e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x9e05', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_18h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0xa628', 'cmp al, 8', 'jg 0xa630', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x9e98', 'lea rdx, [var_f0h]', 'mov rsi, r13', 'mov rdi, r12', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0xedf1', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
409,date,254,"['call sym.imp.localtime', 'test rax, rax', 'je 0xbe67', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xbec4', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'mov rdi, rbp', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'lea rdi, [var_40h]', 'mov byte [filename], r8b', 'call fcn.00006a20', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
410,date,337,"['call sym.imp.localtime', 'test rax, rax', 'je 0xbe67', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xbec4', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'mov rdi, rbp', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000be20', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xbe80', 'cmp rdx, 2', 'je 0xbea0', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
411,date,76,"['call sym.imp.localtime', 'test rax, rax', 'je 0xbe67', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xbec4', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xbf40', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
412,date,300,"['call sym.imp.localtime', 'test rax, rax', 'je 0xbe67', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xbec4', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xbf40', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov rdi, rsp', 'call sym.imp.localtime']"
413,date,202,"['call sym.imp.localtime', 'test rax, rax', 'je 0xbe67', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xbec4', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0xedf1', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xef1e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
414,date,215,"['call sym.imp.localtime', 'test rax, rax', 'je 0xbe67', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xbec4', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0xedf1', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime']"
415,date,439,"['call sym.imp.localtime', 'test rax, rax', 'je 0xbe67', 'mov rbx, qword [var_8h]', 'xor rbx, qword fs:[0x28]', 'jne 0xbec4', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'test al, al', 'je 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0xedf1', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
416,date,437,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xc128', 'cmp esi, 0x3c', 'jne 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'mov rdi, rbp', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'lea rdi, [var_40h]', 'mov byte [filename], r8b', 'call fcn.00006a20', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
417,date,370,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xc128', 'cmp esi, 0x3c', 'jne 0xbf40', 'lea r14, [var_b0h]', 'mov edx, 0x10', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.__stpcpy_chk', 'mov edx, 0x3935', 'lea rdi, [var_8h]', 'mov rsi, r14', 'mov word [rax - 2], dx', 'mov edx, r12d', 'mov byte [rax], 0', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000be20', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xbe80', 'cmp rdx, 2', 'je 0xbea0', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
418,date,394,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xc128', 'cmp esi, 0x3c', 'jne 0xbf40', 'lea r14, [var_b0h]', 'mov edx, 0x10', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.__stpcpy_chk', 'mov edx, 0x3935', 'lea rdi, [var_8h]', 'mov rsi, r14', 'mov word [rax - 2], dx', 'mov edx, r12d', 'mov byte [rax], 0', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000be20', 'test al, al', 'je 0xbf40', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
419,date,224,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov rdi, rsp', 'call sym.imp.localtime']"
420,date,385,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xc128', 'cmp esi, 0x3c', 'jne 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0xedf1', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xef1e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
421,date,398,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xc128', 'cmp esi, 0x3c', 'jne 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0xedf1', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime']"
422,date,622,"['call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xc128', 'cmp esi, 0x3c', 'jne 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0xedf1', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
423,date,247,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xc0a8', 'jmp 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'mov rdi, rbp', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'lea rdi, [var_40h]', 'mov byte [filename], r8b', 'call fcn.00006a20', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
424,date,200,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xc0a8', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xc128', 'cmp esi, 0x3c', 'jne 0xbf40', 'lea r14, [var_b0h]', 'mov edx, 0x10', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.__stpcpy_chk', 'mov edx, 0x3935', 'lea rdi, [var_8h]', 'mov rsi, r14', 'mov word [rax - 2], dx', 'mov edx, r12d', 'mov byte [rax], 0', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000be20', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xbe80', 'cmp rdx, 2', 'je 0xbea0', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
425,date,224,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xc0a8', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xc128', 'cmp esi, 0x3c', 'jne 0xbf40', 'lea r14, [var_b0h]', 'mov edx, 0x10', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.__stpcpy_chk', 'mov edx, 0x3935', 'lea rdi, [var_8h]', 'mov rsi, r14', 'mov word [rax - 2], dx', 'mov edx, r12d', 'mov byte [rax], 0', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000be20', 'test al, al', 'je 0xbf40', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
426,date,448,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xc0a8', 'mov edx, dword [var_24h]', 'mov eax, dword [var_20h]', 'xor edx, dword [rcx + 0x14]', 'xor eax, dword [rcx + 0x10]', 'or edx, eax', 'mov eax, dword [var_1ch]', 'xor eax, dword [rcx + 0xc]', 'or edx, eax', 'mov eax, dword [var_18h]', 'xor eax, dword [rcx + 8]', 'or edx, eax', 'mov eax, dword [var_14h]', 'xor eax, dword [rcx + 4]', 'or edx, eax', 'mov esi, dword [canary]', 'mov eax, dword [rcx]', 'xor eax, esi', 'or edx, eax', 'je 0xc128', 'cmp esi, 0x3c', 'jne 0xbf40', 'lea r14, [var_b0h]', 'mov edx, 0x10', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.__stpcpy_chk', 'mov edx, 0x3935', 'lea rdi, [var_8h]', 'mov rsi, r14', 'mov word [rax - 2], dx', 'mov edx, r12d', 'mov byte [rax], 0', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000be20', 'test al, al', 'je 0xbf40', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov rdi, rsp', 'call sym.imp.localtime']"
427,date,195,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xc0a8', 'jmp 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0xedf1', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xef1e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
428,date,208,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xc0a8', 'jmp 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0xedf1', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime']"
429,date,432,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'jne 0xc0a8', 'jmp 0xbf40', 'xor eax, eax', 'mov rdi, qword [var_c8h]', 'xor rdi, qword fs:[0x28]', 'jne 0xc1bf', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [var_48h], 0', 'test al, al', 'je 0x3fb1', 'mov rdi, r13', 'call fcn.0000df60', 'endbr64', 'push r12', 'mov rsi, rdi', 'push rbx', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_settime', 'mov r12d, eax', 'test eax, eax', 'je 0xdfd1', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xdfec', 'add rsp, 0x28', 'mov eax, r12d', 'pop rbx', 'pop r12', 'ret', 'test eax, eax', 'je 0x3d9c', 'mov r8d, 1', 'mov rsi, qword [var_40h]', 'mov rdx, qword [var_48h]', 'mov rcx, r12', 'mov rdi, rbp', 'mov byte [filename], r8b', 'call fcn.00004210', 'push r13', 'push r12', 'mov r12, rcx', 'push rbp', 'mov rbp, rdi', 'mov rdi, rcx', 'sub rsp, 0x70', 'mov qword [rsp], rsi', 'lea r13, [var_10h]', 'mov rsi, rsp', 'mov qword [var_8h], rdx', 'mov rdx, r13', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0xedf1', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
430,date,179,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xef10', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000ec70', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xed30', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xeca4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xed20', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xed08', 'cmp byte [rbx], 0', 'jne 0xecd3', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xed48', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xed88', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xeda0', 'mov rdi, r12', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'lea rdi, [var_40h]', 'mov byte [filename], r8b', 'call fcn.00006a20', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
431,date,262,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xef10', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000ec70', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xed30', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xeca4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xed20', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xed08', 'cmp byte [rbx], 0', 'jne 0xecd3', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xed48', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xed88', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xeda0', 'mov rdi, r12', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000be20', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xbe80', 'cmp rdx, 2', 'je 0xbea0', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
432,date,286,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xef10', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000ec70', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xed30', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xeca4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xed20', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xed08', 'cmp byte [rbx], 0', 'jne 0xecd3', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xed48', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xed88', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xeda0', 'mov rdi, r12', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000be20', 'test al, al', 'je 0xbf40', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
433,date,510,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xef10', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000ec70', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xed30', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xeca4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xed20', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xed08', 'cmp byte [rbx], 0', 'jne 0xecd3', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xed48', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xed88', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xeda0', 'mov rdi, r12', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000be20', 'test al, al', 'je 0xbf40', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov rdi, rsp', 'call sym.imp.localtime']"
434,date,87,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xef10', 'cmp r13, 1', 'je 0xef1e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0xa5e3', 'cmp r15, r12', 'je 0xa5f0', 'mov rdi, r15', 'call fcn.0000ee90', 'endbr64', 'cmp rdi, 1', 'je 0xeea0', 'jmp fcn.0000eb40', 'test rdi, rdi', 'je 0xeb68', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xef1e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
435,date,86,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xef10', 'cmp r13, 1', 'je 0xef1e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0xa5e3', 'cmp r15, r12', 'je 0xa5f0', 'mov rdi, r15', 'call fcn.0000ee90', 'endbr64', 'cmp rdi, 1', 'je 0xeea0', 'jmp fcn.0000eb40', 'test rdi, rdi', 'je 0xeb68', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime']"
436,date,310,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xef10', 'cmp r13, 1', 'je 0xef1e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0xa5e3', 'cmp r15, r12', 'je 0xa5f0', 'mov rdi, r15', 'call fcn.0000ee90', 'endbr64', 'cmp rdi, 1', 'je 0xeea0', 'jmp fcn.0000eb40', 'test rdi, rdi', 'je 0xeb68', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
437,date,349,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000ec70', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xed30', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xeca4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xed20', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xed08', 'cmp byte [rbx], 0', 'jne 0xecd3', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xed48', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xed88', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xeda0', 'mov rdi, r12', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'lea rdi, [var_40h]', 'mov byte [filename], r8b', 'call fcn.00006a20', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
438,date,432,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000ec70', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xed30', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xeca4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xed20', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xed08', 'cmp byte [rbx], 0', 'jne 0xecd3', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xed48', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xed88', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xeda0', 'mov rdi, r12', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000be20', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xbe80', 'cmp rdx, 2', 'je 0xbea0', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
439,date,456,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000ec70', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xed30', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xeca4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xed20', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xed08', 'cmp byte [rbx], 0', 'jne 0xecd3', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xed48', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xed88', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xeda0', 'mov rdi, r12', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000be20', 'test al, al', 'je 0xbf40', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
440,date,680,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000ec70', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xed30', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xeca4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xed20', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xed08', 'cmp byte [rbx], 0', 'jne 0xecd3', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xed48', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xed88', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xeda0', 'mov rdi, r12', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000be20', 'test al, al', 'je 0xbf40', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov rdi, rsp', 'call sym.imp.localtime']"
441,date,288,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000ec70', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xed30', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0xefc8', 'cmp r13, 1', 'je 0xefde', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf09c', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0xb4ed', 'cmp byte [var_289h], 0', 'je 0xa5e0', 'xor r13d, r13d', 'cmp r15, r12', 'je 0xa5f0', 'mov rdi, r15', 'call fcn.0000ee90', 'endbr64', 'cmp rdi, 1', 'je 0xeea0', 'jmp fcn.0000eb40', 'test rdi, rdi', 'je 0xeb68', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xef1e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
442,date,287,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000ec70', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xed30', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0xefc8', 'cmp r13, 1', 'je 0xefde', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf09c', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0xb4ed', 'cmp byte [var_289h], 0', 'je 0xa5e0', 'xor r13d, r13d', 'cmp r15, r12', 'je 0xa5f0', 'mov rdi, r15', 'call fcn.0000ee90', 'endbr64', 'cmp rdi, 1', 'je 0xeea0', 'jmp fcn.0000eb40', 'test rdi, rdi', 'je 0xeb68', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime']"
443,date,224,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
444,date,202,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xefc8', 'cmp r13, 1', 'je 0xefde', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf09c', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdx, qword [var_10h]', 'mov rsi, r13', 'mov rdi, r15', 'mov rcx, rax', 'mov rbp, rax', 'call fcn.00006f10', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x50', 'mov qword [var_8h], rcx', 'mov rsi, qword fs:[0x28]', 'mov qword [var_48h], rsi', 'xor esi, esi', 'cmp rcx, 0xffffffffffffffff', 'je 0x6f80', 'lea rdx, [var_10h]', 'lea rsi, [var_8h]', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'mov rdi, rbp', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'lea rdi, [var_40h]', 'mov byte [filename], r8b', 'call fcn.00006a20', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
445,date,285,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xefc8', 'cmp r13, 1', 'je 0xefde', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf09c', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdx, qword [var_10h]', 'mov rsi, r13', 'mov rdi, r15', 'mov rcx, rax', 'mov rbp, rax', 'call fcn.00006f10', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x50', 'mov qword [var_8h], rcx', 'mov rsi, qword fs:[0x28]', 'mov qword [var_48h], rsi', 'xor esi, esi', 'cmp rcx, 0xffffffffffffffff', 'je 0x6f80', 'lea rdx, [var_10h]', 'lea rsi, [var_8h]', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'mov rdi, rbp', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'mov rsi, r15', 'call fcn.0000be20', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'cmp rdx, 1', 'je 0xbe80', 'cmp rdx, 2', 'je 0xbea0', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.imp.time', 'mov rdi, rbp', 'call sym.imp.localtime']"
446,date,309,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xefc8', 'cmp r13, 1', 'je 0xefde', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf09c', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdx, qword [var_10h]', 'mov rsi, r13', 'mov rdi, r15', 'mov rcx, rax', 'mov rbp, rax', 'call fcn.00006f10', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x50', 'mov qword [var_8h], rcx', 'mov rsi, qword fs:[0x28]', 'mov qword [var_48h], rsi', 'xor esi, esi', 'cmp rcx, 0xffffffffffffffff', 'je 0x6f80', 'lea rdx, [var_10h]', 'lea rsi, [var_8h]', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'mov rdi, rbp', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000be20', 'test al, al', 'je 0xbf40', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime']"
447,date,533,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xefc8', 'cmp r13, 1', 'je 0xefde', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf09c', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdx, qword [var_10h]', 'mov rsi, r13', 'mov rdi, r15', 'mov rcx, rax', 'mov rbp, rax', 'call fcn.00006f10', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x50', 'mov qword [var_8h], rcx', 'mov rsi, qword fs:[0x28]', 'mov qword [var_48h], rsi', 'xor esi, esi', 'cmp rcx, 0xffffffffffffffff', 'je 0x6f80', 'lea rdx, [var_10h]', 'lea rsi, [var_8h]', 'call fcn.0000eeb0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xef40', 'mov r12, rdi', 'call fcn.0000edd0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0001310d]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xee60', 'cmp byte [rbx + 8], 0', 'jne 0xee40', 'mov rdi, rbp', 'call fcn.0000ebd0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xec40', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xec33', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, qword [filename]', 'mov edx, dword [var_2ch]', 'mov r12, rax', 'test rdi, rdi', 'je 0x3d3b', 'mov eax, r15d', 'xor edx, 1', 'xor eax, 1', 'and al, dl', 'mov r8d, eax', 'jne 0x3e5d', 'movsxd rax, dword [obj.optind]', 'cmp eax, r14d', 'jge 0x3f5e', 'mov rax, qword [r13 + rax*8]', 'lea r13, [var_40h]', 'mov edx, 7', 'mov rdi, r13', 'mov rsi, rax', 'mov qword [var_10h], rax', 'call fcn.0000bed0', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13, rdi', 'mov rdi, rsi', 'push r12', 'mov r12d, edx', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_c8h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov rbx, rax', 'test r12b, 4', 'je 0xc140', 'xor r14d, r14d', 'jmp 0xbf73', 'lea rax, [rbx - 8]', 'cmp rax, 4', 'ja 0xbf40', 'mov rcx, rbx', 'and ecx, 1', 'jne 0xbf40', 'mov rax, rbp', 'lea rsi, [rbx + rbp]', 'nop dword [rax]', 'movsx edx, byte [rax]', 'sub edx, 0x30', 'cmp edx, 9', 'ja 0xbf40', 'add rax, 1', 'cmp rsi, rax', 'jne 0xbf90', 'shr rbx, 1', 'lea r15, [var_90h]', 'nop', 'movsx eax, byte [rbp + rcx*2]', 'lea edx, [rax + rax*4 - 0xf0]', 'movsx eax, byte [rbp + rcx*2 + 1]', 'lea eax, [rax + rdx*2 - 0x30]', 'mov dword [r15 + rcx*4], eax', 'add rcx, 1', 'cmp rbx, rcx', 'jne 0xbfb0', 'lea rdx, [rbx - 4]', 'test r12b, 1', 'je 0xc150', 'mov eax, dword [var_90h]', 'lea rsi, [var_a0h]', 'lea rdi, [var_24h]', 'mov ecx, r12d', 'sub eax, 1', 'mov dword [var_20h], eax', 'mov eax, dword [var_94h]', 'mov dword [var_1ch], eax', 'mov eax, dword [var_98h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_9ch]', 'mov dword [var_14h], eax', 'call fcn.0000be20', 'test al, al', 'je 0xbf40', 'test r14, r14', 'je 0xc1b0', 'mov dword [canary], 0', 'xor eax, eax', 'jmp 0xc062', 'mov dword [timeptr], eax', 'mov eax, dword [var_14h]', 'lea rbx, [timeptr]', 'mov rdi, rbx', 'mov dword [var_70h], 0xffffffff', 'mov dword [var_54h], eax', 'mov rax, qword [var_18h]', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov qword [var_60h], rax', 'call sym.imp.mktime', 'mov rcx, rbx', 'mov qword [rsp], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc190', 'mov rdi, rsp', 'call sym.imp.localtime']"
448,date,93,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xefc8', 'cmp r13, 1', 'je 0xefde', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf09c', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0xb4ed', 'cmp byte [var_289h], 0', 'je 0xa5e0', 'xor r13d, r13d', 'cmp r15, r12', 'je 0xa5f0', 'mov rdi, r15', 'call fcn.0000ee90', 'endbr64', 'cmp rdi, 1', 'je 0xeea0', 'jmp fcn.0000eb40', 'test rdi, rdi', 'je 0xeb68', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xef1e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
449,date,92,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xefc8', 'cmp r13, 1', 'je 0xefde', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf09c', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0xb4ed', 'cmp byte [var_289h], 0', 'je 0xa5e0', 'xor r13d, r13d', 'cmp r15, r12', 'je 0xa5f0', 'mov rdi, r15', 'call fcn.0000ee90', 'endbr64', 'cmp rdi, 1', 'je 0xeea0', 'jmp fcn.0000eb40', 'test rdi, rdi', 'je 0xeb68', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime']"
450,date,316,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xefc8', 'cmp r13, 1', 'je 0xefde', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0xf09c', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0xb4ed', 'cmp byte [var_289h], 0', 'je 0xa5e0', 'xor r13d, r13d', 'cmp r15, r12', 'je 0xa5f0', 'mov rdi, r15', 'call fcn.0000ee90', 'endbr64', 'cmp rdi, 1', 'je 0xeea0', 'jmp fcn.0000eb40', 'test rdi, rdi', 'je 0xeb68', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xf090', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xf008', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
451,sftp,508,"['call sym.imp.localtime', 'mov edi, dword [rbx + 0x18]', 'mov rsi, r14', 'mov r13, rax', 'call sym.strmode', 'endbr64', 'mov eax, edi', 'and eax, 0xf000', 'cmp eax, 0x6000', 'je 0x1d7c0', 'mov byte [rsi], 0x62', 'jmp 0x1d528', 'mov eax, edi', 'lea r10, [rsi + 3]', 'lea r9, [rsi + 4]', 'and eax, 0x100', 'lea r8, [rsi + 5]', 'lea rcx, [rsi + 6]', 'cmp eax, 1', 'lea rdx, [rsi + 7]', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 1], al', 'mov eax, edi', 'and eax, 0x80', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 2], al', 'mov eax, edi', 'and eax, 0x840', 'cmp eax, 0x800', 'je 0x1d778', 'mov byte [rsi + 3], 0x53', 'add rsi, 8', 'jmp 0x1d5a0', 'mov eax, edi', 'and eax, 0x20', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [r9], al', 'mov eax, edi', 'and eax, 0x10', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [r8], al', 'mov eax, edi', 'and eax, 0x408', 'cmp eax, 0x400', 'je 0x1d738', 'mov byte [rcx], 0x53', 'lea r8, [rsi + 1]', 'jmp 0x1d600', 'mov eax, edi', 'and eax, 4', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rdx], al', 'mov eax, edi', 'and eax, 2', 'cmp eax, 1', 'sbb eax, eax', 'and edi, 0x201', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi], al', 'cmp edi, 0x200', 'je 0x1d710', 'lea rax, [r8 + 1]', 'mov edx, 0x20', 'mov byte [r8], 0x54', 'mov word [rax], dx', 'ret', 'test ebp, ebp', 'je 0xfb50', 'mov edi, dword [rbx + 0x1c]', 'xor esi, esi', 'lea r15, [var_27h]', 'call fcn.0001d030', 'endbr64', 'push r12', 'lea rax, [0x0002e180]', 'mov r12d, edi', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov ebx, edi', 'and ebx, 0x3f', 'shl rbx, 4', 'add rbx, rax', 'sub rsp, 0x10', 'cmp dword [rbx], edi', 'je 0x1d108', 'mov rax, qword [rbx + 8]', 'test rax, rax', 'je 0x1d05c', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov edi, dword [rbx + 0x20]', 'xor esi, esi', 'mov rbp, rax', 'call fcn.0001d120', 'endbr64', 'push r12', 'lea rax, [0x0002dd60]', 'mov r12d, edi', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov ebx, edi', 'and ebx, 0x3f', 'shl rbx, 4', 'add rbx, rax', 'sub rsp, 0x10', 'cmp dword [rbx], edi', 'je 0x1d1f8', 'mov rax, qword [rbx + 8]', 'test rax, rax', 'je 0x1d14c', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r9d, dword [rbx + 0x10]', 'mov ecx, 8', 'mov rdi, r15', 'mov r12, rax', 'lea r8, [0x00020991]', 'xor eax, eax', 'mov edx, 1', 'mov esi, 8', 'call sym.imp.__snprintf_chk', 'test r13, r13', 'jne 0xfa1d', 'lea rax, [var_53h]', 'mov qword [canary], rax', 'jmp 0xfa7e', 'mov byte [var_53h], 0', 'mov rdi, rbp', 'call sym.imp.strlen', 'mov edx, 8', 'mov rdi, r12', 'cmp rax, 8', 'cmovb rax, rdx', 'mov r13, rax', 'call sym.imp.strlen', 'mov edx, 8', 'mov rdi, qword [rbx + 0x30]', 'cmp rax, 8', 'cmovae rdx, rax', 'mov eax, dword [var_8h]', 'test eax, eax', 'je 0xfbb0', 'lea rbx, [var_60h]', 'mov r9, r14', 'push qword [rsp]', 'lea r8, str._s__3s___s___s__8llu__s__s', 'push qword [var_8h]', 'push rdi', 'push r12', 'push rdx', 'push rbp', 'push r13', 'push r15', 'jmp 0xfb00', 'mov esi, 0x400', 'mov ecx, 0x400', 'mov rdi, rbx', 'xor eax, eax', 'mov edx, 1', 'call sym.imp.__snprintf_chk', 'add rsp, 0x40', 'mov rdi, rbx', 'call fcn.00013de0', 'endbr64', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'call sym.imp.strlen', 'lea r13, [rax + 1]', 'mov rdi, r13', 'call fcn.00013cc0', 'endbr64', 'push rbp', 'test rdi, rdi', 'je 0x13cd9', 'lea rdi, str.xmalloc:_zero_size', 'xor eax, eax', 'call fcn.00012e50', 'endbr64', 'push rax', 'pop rax', 'sub rsp, 0xd8', 'mov r10, rdi', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x12eb4', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov rdx, rsp', 'mov rsi, r10', 'mov qword [var_8h], rax', 'mov edi, 1', 'lea rax, [var_20h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call fcn.00013330', 'endbr64', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x828', 'mov dword [var_844h], edi', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'cmp dword [0x0002a028], edi', 'jl 0x13432', 'mov r14d, edi', 'mov rbx, rsi', 'mov r13, rdx', 'call sym.imp.__errno_location', 'mov r12, rax', 'mov eax, dword [rax]', 'mov dword [var_848h], eax', 'cmp r14d, 7', 'ja case.0x1339d.0', 'lea rcx, [0x000224a8]', 'mov edx, r14d', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x13bf0', 'add rsp, 0xd8', 'ret', 'mov eax, dword [0x0002a180]', 'mov dword [var_38h], 1', 'test eax, eax', 'je 0xd73e', 'nop dword [rax + rax]', 'mov r15d, dword [var_20h]', 'test r15d, r15d', 'je 0xd923', 'mov r11d, dword [0x0002a010]', 'test r11d, r11d', 'je 0xd93a', 'cmp byte [var_57h], 0', 'jne 0xdfb8', 'call fcn.000107b0', 'endbr64', 'push rbx', 'xor edi, edi', 'call sym.imp.alarm', 'call sym.imp.getpgrp', 'mov edi, 1', 'mov ebx, eax', 'call sym.imp.tcgetpgrp', 'cmp ebx, eax', 'jne 0x10810', 'mov rax, qword [0x0002d748]', 'cmp qword [0x0002d740], rax', 'jne 0x10800', 'mov edi, 1', 'call fcn.000106b0', 'endbr64', 'test edi, edi', 'jne 0x106cc', 'push rbx', 'call sym.imp.getpgrp', 'mov edi, 1', 'mov ebx, eax', 'call sym.imp.tcgetpgrp', 'cmp ebx, eax', 'je 0x106e8', 'pop rbx', 'jmp 0xfec0', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x258', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov dword [0x0002d720], 0', 'mov eax, dword [0x0002d724]', 'test eax, eax', 'jne 0x10630', 'mov rax, qword [0x0002d738]', 'mov r12, qword [0x0002d740]', 'mov r14, qword [rax]', 'mov rax, qword [rax]', 'test r12, r12', 'cmove r12, qword [0x0002d750]', 'mov qword [0x0002d740], rax', 'call fcn.00016430', 'endbr64', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
452,sftp,531,"['call sym.imp.localtime', 'mov edi, dword [rbx + 0x18]', 'mov rsi, r14', 'mov r13, rax', 'call sym.strmode', 'endbr64', 'mov eax, edi', 'and eax, 0xf000', 'cmp eax, 0x6000', 'je 0x1d7c0', 'mov byte [rsi], 0x62', 'jmp 0x1d528', 'mov eax, edi', 'lea r10, [rsi + 3]', 'lea r9, [rsi + 4]', 'and eax, 0x100', 'lea r8, [rsi + 5]', 'lea rcx, [rsi + 6]', 'cmp eax, 1', 'lea rdx, [rsi + 7]', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 1], al', 'mov eax, edi', 'and eax, 0x80', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 2], al', 'mov eax, edi', 'and eax, 0x840', 'cmp eax, 0x800', 'je 0x1d778', 'mov byte [rsi + 3], 0x53', 'add rsi, 8', 'jmp 0x1d5a0', 'mov eax, edi', 'and eax, 0x20', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [r9], al', 'mov eax, edi', 'and eax, 0x10', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [r8], al', 'mov eax, edi', 'and eax, 0x408', 'cmp eax, 0x400', 'je 0x1d738', 'mov byte [rcx], 0x53', 'lea r8, [rsi + 1]', 'jmp 0x1d600', 'mov eax, edi', 'and eax, 4', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rdx], al', 'mov eax, edi', 'and eax, 2', 'cmp eax, 1', 'sbb eax, eax', 'and edi, 0x201', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi], al', 'cmp edi, 0x200', 'je 0x1d710', 'lea rax, [r8 + 1]', 'mov edx, 0x20', 'mov byte [r8], 0x54', 'mov word [rax], dx', 'ret', 'test ebp, ebp', 'je 0xfb50', 'mov edi, dword [rbx + 0x1c]', 'xor esi, esi', 'lea r15, [var_27h]', 'call fcn.0001d030', 'endbr64', 'push r12', 'lea rax, [0x0002e180]', 'mov r12d, edi', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov ebx, edi', 'and ebx, 0x3f', 'shl rbx, 4', 'add rbx, rax', 'sub rsp, 0x10', 'cmp dword [rbx], edi', 'je 0x1d108', 'mov rax, qword [rbx + 8]', 'test rax, rax', 'je 0x1d05c', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov edi, dword [rbx + 0x20]', 'xor esi, esi', 'mov rbp, rax', 'call fcn.0001d120', 'endbr64', 'push r12', 'lea rax, [0x0002dd60]', 'mov r12d, edi', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov ebx, edi', 'and ebx, 0x3f', 'shl rbx, 4', 'add rbx, rax', 'sub rsp, 0x10', 'cmp dword [rbx], edi', 'je 0x1d1f8', 'mov rax, qword [rbx + 8]', 'test rax, rax', 'je 0x1d14c', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r9d, dword [rbx + 0x10]', 'mov ecx, 8', 'mov rdi, r15', 'mov r12, rax', 'lea r8, [0x00020991]', 'xor eax, eax', 'mov edx, 1', 'mov esi, 8', 'call sym.imp.__snprintf_chk', 'test r13, r13', 'jne 0xfa1d', 'lea rax, [var_53h]', 'mov qword [canary], rax', 'jmp 0xfa7e', 'mov byte [var_53h], 0', 'mov rdi, rbp', 'call sym.imp.strlen', 'mov edx, 8', 'mov rdi, r12', 'cmp rax, 8', 'cmovb rax, rdx', 'mov r13, rax', 'call sym.imp.strlen', 'mov edx, 8', 'mov rdi, qword [rbx + 0x30]', 'cmp rax, 8', 'cmovae rdx, rax', 'mov eax, dword [var_8h]', 'test eax, eax', 'je 0xfbb0', 'lea rbx, [var_60h]', 'mov r9, r14', 'push qword [rsp]', 'lea r8, str._s__3s___s___s__8llu__s__s', 'push qword [var_8h]', 'push rdi', 'push r12', 'push rdx', 'push rbp', 'push r13', 'push r15', 'jmp 0xfb00', 'mov esi, 0x400', 'mov ecx, 0x400', 'mov rdi, rbx', 'xor eax, eax', 'mov edx, 1', 'call sym.imp.__snprintf_chk', 'add rsp, 0x40', 'mov rdi, rbx', 'call fcn.00013de0', 'endbr64', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'call sym.imp.strlen', 'lea r13, [rax + 1]', 'mov rdi, r13', 'call fcn.00013cc0', 'endbr64', 'push rbp', 'test rdi, rdi', 'je 0x13cd9', 'lea rdi, str.xmalloc:_zero_size', 'xor eax, eax', 'call fcn.00012e50', 'endbr64', 'push rax', 'pop rax', 'sub rsp, 0xd8', 'mov r10, rdi', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x12eb4', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov rdx, rsp', 'mov rsi, r10', 'mov qword [var_8h], rax', 'mov edi, 1', 'lea rax, [var_20h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call fcn.00013330', 'endbr64', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x828', 'mov dword [var_844h], edi', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'cmp dword [0x0002a028], edi', 'jl 0x13432', 'mov r14d, edi', 'mov rbx, rsi', 'mov r13, rdx', 'call sym.imp.__errno_location', 'mov r12, rax', 'mov eax, dword [rax]', 'mov dword [var_848h], eax', 'cmp r14d, 7', 'ja case.0x1339d.0', 'lea rcx, [0x000224a8]', 'mov edx, r14d', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x13bf0', 'add rsp, 0xd8', 'ret', 'mov eax, dword [0x0002a180]', 'mov dword [var_38h], 1', 'test eax, eax', 'je 0xd73e', 'nop dword [rax + rax]', 'mov r15d, dword [var_20h]', 'test r15d, r15d', 'je 0xd923', 'mov r11d, dword [0x0002a010]', 'test r11d, r11d', 'je 0xd93a', 'cmp byte [var_57h], 0', 'jne 0xdfb8', 'call fcn.000107b0', 'endbr64', 'push rbx', 'xor edi, edi', 'call sym.imp.alarm', 'call sym.imp.getpgrp', 'mov edi, 1', 'mov ebx, eax', 'call sym.imp.tcgetpgrp', 'cmp ebx, eax', 'jne 0x10810', 'mov rax, qword [0x0002d748]', 'cmp qword [0x0002d740], rax', 'jne 0x10800', 'mov edi, 1', 'call fcn.000106b0', 'endbr64', 'test edi, edi', 'jne 0x106cc', 'push rbx', 'call sym.imp.getpgrp', 'mov edi, 1', 'mov ebx, eax', 'call sym.imp.tcgetpgrp', 'cmp ebx, eax', 'je 0x106e8', 'pop rbx', 'jmp 0xfec0', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x258', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov dword [0x0002d720], 0', 'mov eax, dword [0x0002d724]', 'test eax, eax', 'jne 0x10630', 'mov rax, qword [0x0002d738]', 'mov r12, qword [0x0002d740]', 'mov r14, qword [rax]', 'mov rax, qword [rax]', 'test r12, r12', 'cmove r12, qword [0x0002d750]', 'mov qword [0x0002d740], rax', 'call fcn.00016430', 'endbr64', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x15ff8', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
453,sftp,554,"['call sym.imp.localtime', 'mov edi, dword [rbx + 0x18]', 'mov rsi, r14', 'mov r13, rax', 'call sym.strmode', 'endbr64', 'mov eax, edi', 'and eax, 0xf000', 'cmp eax, 0x6000', 'je 0x1d7c0', 'mov byte [rsi], 0x62', 'jmp 0x1d528', 'mov eax, edi', 'lea r10, [rsi + 3]', 'lea r9, [rsi + 4]', 'and eax, 0x100', 'lea r8, [rsi + 5]', 'lea rcx, [rsi + 6]', 'cmp eax, 1', 'lea rdx, [rsi + 7]', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 1], al', 'mov eax, edi', 'and eax, 0x80', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 2], al', 'mov eax, edi', 'and eax, 0x840', 'cmp eax, 0x800', 'je 0x1d778', 'mov byte [rsi + 3], 0x53', 'add rsi, 8', 'jmp 0x1d5a0', 'mov eax, edi', 'and eax, 0x20', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [r9], al', 'mov eax, edi', 'and eax, 0x10', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [r8], al', 'mov eax, edi', 'and eax, 0x408', 'cmp eax, 0x400', 'je 0x1d738', 'mov byte [rcx], 0x53', 'lea r8, [rsi + 1]', 'jmp 0x1d600', 'mov eax, edi', 'and eax, 4', 'cmp eax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rdx], al', 'mov eax, edi', 'and eax, 2', 'cmp eax, 1', 'sbb eax, eax', 'and edi, 0x201', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi], al', 'cmp edi, 0x200', 'je 0x1d710', 'lea rax, [r8 + 1]', 'mov edx, 0x20', 'mov byte [r8], 0x54', 'mov word [rax], dx', 'ret', 'test ebp, ebp', 'je 0xfb50', 'mov edi, dword [rbx + 0x1c]', 'xor esi, esi', 'lea r15, [var_27h]', 'call fcn.0001d030', 'endbr64', 'push r12', 'lea rax, [0x0002e180]', 'mov r12d, edi', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov ebx, edi', 'and ebx, 0x3f', 'shl rbx, 4', 'add rbx, rax', 'sub rsp, 0x10', 'cmp dword [rbx], edi', 'je 0x1d108', 'mov rax, qword [rbx + 8]', 'test rax, rax', 'je 0x1d05c', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov edi, dword [rbx + 0x20]', 'xor esi, esi', 'mov rbp, rax', 'call fcn.0001d120', 'endbr64', 'push r12', 'lea rax, [0x0002dd60]', 'mov r12d, edi', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov ebx, edi', 'and ebx, 0x3f', 'shl rbx, 4', 'add rbx, rax', 'sub rsp, 0x10', 'cmp dword [rbx], edi', 'je 0x1d1f8', 'mov rax, qword [rbx + 8]', 'test rax, rax', 'je 0x1d14c', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r9d, dword [rbx + 0x10]', 'mov ecx, 8', 'mov rdi, r15', 'mov r12, rax', 'lea r8, [0x00020991]', 'xor eax, eax', 'mov edx, 1', 'mov esi, 8', 'call sym.imp.__snprintf_chk', 'test r13, r13', 'jne 0xfa1d', 'lea rax, [var_53h]', 'mov qword [canary], rax', 'jmp 0xfa7e', 'mov byte [var_53h], 0', 'mov rdi, rbp', 'call sym.imp.strlen', 'mov edx, 8', 'mov rdi, r12', 'cmp rax, 8', 'cmovb rax, rdx', 'mov r13, rax', 'call sym.imp.strlen', 'mov edx, 8', 'mov rdi, qword [rbx + 0x30]', 'cmp rax, 8', 'cmovae rdx, rax', 'mov eax, dword [var_8h]', 'test eax, eax', 'je 0xfbb0', 'lea rbx, [var_60h]', 'mov r9, r14', 'push qword [rsp]', 'lea r8, str._s__3s___s___s__8llu__s__s', 'push qword [var_8h]', 'push rdi', 'push r12', 'push rdx', 'push rbp', 'push r13', 'push r15', 'jmp 0xfb00', 'mov esi, 0x400', 'mov ecx, 0x400', 'mov rdi, rbx', 'xor eax, eax', 'mov edx, 1', 'call sym.imp.__snprintf_chk', 'add rsp, 0x40', 'mov rdi, rbx', 'call fcn.00013de0', 'endbr64', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'call sym.imp.strlen', 'lea r13, [rax + 1]', 'mov rdi, r13', 'call fcn.00013cc0', 'endbr64', 'push rbp', 'test rdi, rdi', 'je 0x13cd9', 'lea rdi, str.xmalloc:_zero_size', 'xor eax, eax', 'call fcn.00012e50', 'endbr64', 'push rax', 'pop rax', 'sub rsp, 0xd8', 'mov r10, rdi', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x12eb4', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov rdx, rsp', 'mov rsi, r10', 'mov qword [var_8h], rax', 'mov edi, 1', 'lea rax, [var_20h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call fcn.00013330', 'endbr64', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x828', 'mov dword [var_844h], edi', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'cmp dword [0x0002a028], edi', 'jl 0x13432', 'mov r14d, edi', 'mov rbx, rsi', 'mov r13, rdx', 'call sym.imp.__errno_location', 'mov r12, rax', 'mov eax, dword [rax]', 'mov dword [var_848h], eax', 'cmp r14d, 7', 'ja case.0x1339d.0', 'lea rcx, [0x000224a8]', 'mov edx, r14d', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x13bf0', 'add rsp, 0xd8', 'ret', 'mov eax, dword [0x0002a180]', 'mov dword [var_38h], 1', 'test eax, eax', 'je 0xd73e', 'nop dword [rax + rax]', 'mov r15d, dword [var_20h]', 'test r15d, r15d', 'je 0xd923', 'mov r11d, dword [0x0002a010]', 'test r11d, r11d', 'je 0xd93a', 'cmp byte [var_57h], 0', 'jne 0xdfb8', 'call fcn.000107b0', 'endbr64', 'push rbx', 'xor edi, edi', 'call sym.imp.alarm', 'call sym.imp.getpgrp', 'mov edi, 1', 'mov ebx, eax', 'call sym.imp.tcgetpgrp', 'cmp ebx, eax', 'jne 0x10810', 'mov rax, qword [0x0002d748]', 'cmp qword [0x0002d740], rax', 'jne 0x10800', 'mov edi, 1', 'call fcn.000106b0', 'endbr64', 'test edi, edi', 'jne 0x106cc', 'push rbx', 'call sym.imp.getpgrp', 'mov edi, 1', 'mov ebx, eax', 'call sym.imp.tcgetpgrp', 'cmp ebx, eax', 'je 0x106e8', 'pop rbx', 'jmp 0xfec0', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x258', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov dword [0x0002d720], 0', 'mov eax, dword [0x0002d724]', 'test eax, eax', 'jne 0x10630', 'mov rax, qword [0x0002d738]', 'mov r12, qword [0x0002d740]', 'mov r14, qword [rax]', 'mov rax, qword [rax]', 'test r12, r12', 'cmove r12, qword [0x0002d750]', 'mov qword [0x0002d740], rax', 'call fcn.00016430', 'endbr64', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x15ff8', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'xor edi, edi', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
454,sftp,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x15ff8', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x16069', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x16205', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x161d0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.00016070', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
455,sftp,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x16069', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x16205', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x161d0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.00016070', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
456,sftp,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x16069', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x16205', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x161d0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.00016070', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x15ff8', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
457,sftp,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x16069', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x16205', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x161d0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.00016070', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
458,sftp,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x16069', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x16205', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x161d0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.00016070', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x15ff8', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
459,sftp,139,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x16069', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x16205', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x161d0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.00016070', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.00015fa0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0002d8a8]', 'test eax, eax', 'jne 0x16040', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x15ff8', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime', 'test eax, eax', 'je 0x15fd7', 'xor edi, edi', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
460,last,293,"['call sym.imp.localtime_r', 'mov ecx, 4', 'mov rsi, r14', 'lea rdi, [0x00008b39]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'mov dword [var_70h], 0xffffffff', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7040', 'mov ecx, 6', 'lea rdi, str.today', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7065', 'mov ecx, 0xa', 'lea rdi, str.yesterday', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x70d8', 'mov ecx, 9', 'lea rdi, str.tomorrow', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7060', 'movzx eax, byte [r14]', 'cmp al, 0x2b', 'je 0x70e0', 'cmp al, 0x2d', 'je 0x7600', 'mov rdi, r14', 'call sym.imp.strlen', 'cmp rax, 3', 'jbe 0x7100', 'cmp dword [r14 + rax - 4], 0x6f676120', 'lea rsi, [rax - 4]', 'jne 0x7100', 'mov rdi, r14', 'call sym.imp.strndup', 'mov rbp, rax', 'test rax, rax', 'je 0x767f', 'mov eax, 0xfffffff4', 'jmp 0x70ac', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x767a', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x3c9e', 'mov rax, qword [var_68h]', 'mov ecx, 0xf4240', 'xor edx, edx', 'div rcx', 'mov qword [var_b8h], rax', 'jmp 0x2b20', 'xor r8d, r8d', 'lea rcx, section..data.rel.ro', 'mov rsi, rbp', 'mov edi, ebx', 'lea rdx, str.hVf:n:RxadFit:p:s:0123456789w', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x2ec9', 'movsxd rax, dword [obj.optind]', 'cmp eax, ebx', 'jge 0x2ee1', 'cmp qword [ptr], 0', 'je 0x3bbb', 'cmp qword [var_28h], 0', 'je 0x3573', 'lea rax, [var_98h]', 'mov qword [var_10h], 0', 'mov qword [var_50h], rax', 'lea rax, [var_70h]', 'mov qword [timer], rax', 'nop dword [rax]', 'mov rdi, qword [var_50h]', 'call fcn.00004e00', 'endbr64', 'push rbx', 'xor esi, esi', 'mov rbx, rdi', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'lea rdi, [var_10h]', 'call sym.imp.gettimeofday', 'test eax, eax', 'je 0x4e60', 'mov rsi, rsp', 'mov edi, 7', 'call sym.imp.clock_gettime']"
461,last,60,"['call sym.imp.localtime_r', 'mov ecx, 4', 'mov rsi, r14', 'lea rdi, [0x00008b39]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'mov dword [var_70h], 0xffffffff', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7040', 'mov rdi, r13', 'call sym.imp.mktime']"
462,last,70,"['call sym.imp.localtime_r', 'mov ecx, 4', 'mov rsi, r14', 'lea rdi, [0x00008b39]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'mov dword [var_70h], 0xffffffff', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7040', 'mov ecx, 6', 'lea rdi, str.today', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7065', 'mov rdi, r13', 'mov dword [var_58h], 0', 'mov qword [var_50h], 0', 'call sym.imp.mktime']"
463,last,205,"['call sym.imp.localtime_r', 'mov ecx, 4', 'mov rsi, r14', 'lea rdi, [0x00008b39]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'mov dword [var_70h], 0xffffffff', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7040', 'mov ecx, 6', 'lea rdi, str.today', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7065', 'mov ecx, 0xa', 'lea rdi, str.yesterday', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x70d8', 'mov ecx, 9', 'lea rdi, str.tomorrow', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x7060', 'movzx eax, byte [r14]', 'cmp al, 0x2b', 'je 0x70e0', 'cmp al, 0x2d', 'je 0x7600', 'mov rdi, r14', 'call sym.imp.strlen', 'cmp rax, 3', 'jbe 0x7100', 'xor r12d, r12d', 'lea r15, str.Sunday', 'mov rax, r12', 'mov r12, r15', 'mov r15, rax', 'mov dword [var_8h], r15d', 'test r12, r12', 'je 0x75d8', 'add r15, 1', 'cmp r15, 0xe', 'je 0x761b', 'mov r12d, 0xffffffff', 'jmp 0x7170', 'mov eax, dword [var_54h]', 'mov rdx, r13', 'mov rdi, r14', 'mov r15d, dword [var_50h]', 'lea rsi, str._y__m__d__H:_M:_S', 'mov ebp, dword [var_60h]', 'mov dword [var_8h], eax', 'mov eax, dword [var_58h]', 'mov dword [var_ch], eax', 'mov eax, dword [var_5ch]', 'mov dword [var_10h], eax', 'mov eax, dword [var_64h]', 'mov dword [var_14h], eax', 'mov eax, dword [var_68h]', 'mov dword [var_18h], eax', 'mov eax, dword [var_6ch]', 'mov dword [var_1ch], eax', 'mov rax, qword [var_78h]', 'mov qword [var_20h], rax', 'mov rax, qword [var_80h]', 'mov qword [var_28h], rax', 'call sym.imp.strptime', 'test rax, rax', 'je 0x71e0', 'cmp byte [rax], 0', 'je 0x75a8', 'mov rdi, r13', 'call sym.imp.mktime']"
464,last,389,"['call sym.imp.mktime', 'cmp rax, 0xffffffffffffffff', 'jne 0x7084', 'nop', 'mov eax, 0xffffffea', 'jmp 0x70ac', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x767a', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x3c9e', 'mov rax, qword [var_68h]', 'mov ecx, 0xf4240', 'xor edx, edx', 'div rcx', 'mov qword [var_b0h], rax', 'jmp 0x2b20', 'xor r8d, r8d', 'lea rcx, section..data.rel.ro', 'mov rsi, rbp', 'mov edi, ebx', 'lea rdx, str.hVf:n:RxadFit:p:s:0123456789w', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x2ec9', 'movsxd rax, dword [obj.optind]', 'cmp eax, ebx', 'jge 0x2ee1', 'cmp qword [ptr], 0', 'je 0x3bbb', 'cmp qword [var_28h], 0', 'je 0x3573', 'lea rax, [var_98h]', 'mov qword [var_10h], 0', 'mov qword [var_50h], rax', 'lea rax, [var_70h]', 'mov qword [timer], rax', 'nop dword [rax]', 'mov rdi, qword [var_50h]', 'call fcn.00004e00', 'endbr64', 'push rbx', 'xor esi, esi', 'mov rbx, rdi', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'lea rdi, [var_10h]', 'call sym.imp.gettimeofday', 'test eax, eax', 'je 0x4e60', 'mov rsi, rsp', 'mov edi, 7', 'call sym.imp.clock_gettime']"
465,last,388,"['call sym.imp.mktime', 'cmp rax, 0xffffffffffffffff', 'je 0x7050', 'mov eax, 0xffffffea', 'jmp 0x70ac', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x767a', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x3c9e', 'mov rax, qword [var_68h]', 'mov ecx, 0xf4240', 'xor edx, edx', 'div rcx', 'mov qword [var_a8h], rax', 'jmp 0x2b20', 'xor r8d, r8d', 'lea rcx, section..data.rel.ro', 'mov rsi, rbp', 'mov edi, ebx', 'lea rdx, str.hVf:n:RxadFit:p:s:0123456789w', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x2ec9', 'movsxd rax, dword [obj.optind]', 'cmp eax, ebx', 'jge 0x2ee1', 'cmp qword [ptr], 0', 'je 0x3bbb', 'cmp qword [var_28h], 0', 'je 0x3573', 'lea rax, [var_98h]', 'mov qword [var_10h], 0', 'mov qword [var_50h], rax', 'lea rax, [var_70h]', 'mov qword [timer], rax', 'nop dword [rax]', 'mov rdi, qword [var_50h]', 'call fcn.00004e00', 'endbr64', 'push rbx', 'xor esi, esi', 'mov rbx, rdi', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'lea rdi, [var_10h]', 'call sym.imp.gettimeofday', 'test eax, eax', 'je 0x4e60', 'mov rsi, rsp', 'mov edi, 7', 'call sym.imp.clock_gettime']"
466,last,388,"['call sym.imp.mktime', 'cmp rax, 0xffffffffffffffff', 'je 0x7050', 'mov eax, 0xffffffea', 'jmp 0x70ac', 'mov rbx, qword [var_88h]', 'xor rbx, qword fs:[0x28]', 'jne 0x767a', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'js 0x3c9e', 'mov rax, qword [var_68h]', 'mov ecx, 0xf4240', 'xor edx, edx', 'div rcx', 'mov qword [var_b0h], rax', 'jmp 0x2b20', 'xor r8d, r8d', 'lea rcx, section..data.rel.ro', 'mov rsi, rbp', 'mov edi, ebx', 'lea rdx, str.hVf:n:RxadFit:p:s:0123456789w', 'call sym.imp.getopt_long', 'cmp eax, 0xffffffff', 'je 0x2ec9', 'movsxd rax, dword [obj.optind]', 'cmp eax, ebx', 'jge 0x2ee1', 'cmp qword [ptr], 0', 'je 0x3bbb', 'cmp qword [var_28h], 0', 'je 0x3573', 'lea rax, [var_98h]', 'mov qword [var_10h], 0', 'mov qword [var_50h], rax', 'lea rax, [var_70h]', 'mov qword [timer], rax', 'nop dword [rax]', 'mov rdi, qword [var_50h]', 'call fcn.00004e00', 'endbr64', 'push rbx', 'xor esi, esi', 'mov rbx, rdi', 'sub rsp, 0xa0', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'lea rdi, [var_10h]', 'call sym.imp.gettimeofday', 'test eax, eax', 'je 0x4e60', 'mov rsi, rsp', 'mov edi, 7', 'call sym.imp.clock_gettime']"
467,pinky,262,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'je 0x36f0', 'mov rdx, qword [0x0000b138]', 'mov esi, 0x21', 'lea rdi, [0x0000b0e0]', 'call sym.imp.strftime', 'lea rdx, [0x0000b0e0]', 'xor eax, eax', 'lea rsi, [0x000076f8]', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp byte [0x0000b010], 0', 'je 0x3525', 'mov rdi, qword [obj.stdout]', 'mov rax, qword [rdi + 0x28]', 'cmp rax, qword [rdi + 0x30]', 'jae 0x3780', 'lea rdx, [rax + 1]', 'mov qword [rdi + 0x28], rdx', 'mov byte [rax], 0xa', 'mov rax, qword [var_1d8h]', 'xor rax, qword fs:[0x28]', 'jne 0x3808', 'add rsp, 0x1e8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'jmp 0x2aaa', 'add rbx, 0x180', 'sub r13, 1', 'cmp r13, 0xffffffffffffffff', 'je 0x2a11', 'cmp byte [rbx + 0x2c], 0', 'je 0x2aaa', 'cmp word [rbx], 7', 'jne 0x2aaa', 'test r12d, r12d', 'jne 0x2b22', 'mov rdi, rbx', 'call fcn.00003310', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x1e8', 'movzx edx, byte [rdi + 8]', 'mov rax, qword fs:[0x28]', 'mov qword [var_1d8h], rax', 'xor eax, eax', 'cmp dl, 0x2f', 'jne 0x36c0', 'lea r8, [var_a0h]', 'mov rcx, r8', 'lea r12, [rbp + 8]', 'lea rsi, [rbp + 0x28]', 'mov rax, r12', 'jmp 0x3373', 'test dl, dl', 'jne 0x3360', 'mov byte [rcx], 0', 'lea rdx, [var_10h]', 'mov rsi, r8', 'mov edi, 1', 'call sym.imp.__xstat', 'test eax, eax', 'jne 0x3570', 'mov r13d, 0x3f', 'xor r14d, r14d', 'jmp 0x33ae', 'lea rbx, [rbp + 0x2c]', 'xor eax, eax', 'mov edx, 0x20', 'mov edi, 1', 'mov rcx, rbx', 'lea rsi, [0x0000707b]', 'call sym.imp.__printf_chk', 'cmp byte [0x0000b015], 0', 'je 0x3467', 'xor eax, eax', 'mov r8, r12', 'mov ecx, 0x20', 'mov edx, r13d', 'lea rsi, str.__c__8.s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp byte [0x0000b017], 0', 'je 0x34c0', 'movsxd rax, dword [rbp + 0x154]', 'lea rdi, [timer]', 'mov qword [timer], rax', 'call sym.imp.localtime']"
468,mformat,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
469,nvidia-cuda-mps-control,623,"['call sym.imp.clock_gettime', 'test eax, eax', 'sete al', 'movzx eax, al', 'mov dword [0x0060a740], eax', 'jmp 0x402613', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_sys_vm_mmap_min_addr', 'mov qword [var_70h], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbp, rax', 'je 0x402bff', 'mov edi, 0x1e', 'call sym.imp.sysconf', 'mov eax, eax', 'cmp qword [var_70h], rax', 'ja 0x40266e', 'mov rax, qword [var_70h]', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_cpuinfo', 'mov qword [0x0060b530], rax', 'call sym.imp.fopen', 'mov rbp, rax', 'mov rax, 0xffffffffffffffff', 'test rbp, rbp', 'je 0x40273b', 'lea rdi, [0x0060b500]', 'mov qword [0x0060b528], rax', 'call sym.imp.pthread_mutex_lock', 'movdqa xmm0, xmmword [str._proc_self_maps]', 'lea rsi, [0x00408553]', 'movabs rax, 0x787a252d787a25', 'mov rdi, rbx', 'mov r13, qword [0x0060b528]', 'mov rbp, qword [0x0060b530]', 'mov qword [format], rax', 'movaps xmmword [var_70h], xmm0', 'mov qword [var_38h], 0', 'mov qword [s], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbx, rax', 'je 0x4028b7', 'lea rdi, [0x0060b500]', 'call sym.imp.pthread_mutex_unlock', 'mov eax, dword [0x0060bea0]', 'test eax, eax', 'je 0x402c2d', 'cmp dword [var_24h], 2', 'je 0x402cd5', 'call fcn.00404390', 'push r15', 'push r14', 'lea rdi, [0x0060b620]', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x13e8', 'lea r14, [var_30h]', 'mov rsi, r14', 'call fcn.00404060', 'push r13', 'push r12', 'mov r8, rdi', 'push rbp', 'push rbx', 'xor eax, eax', 'sub rsp, 0x98', 'mov dword [rsi], 0xffffffff', 'lea rbp, [var_20h]', 'mov qword [var_22h], 0', 'mov qword [var_86h], 0', 'lea r9, [var_22h]', 'lea rdi, [var_8h]', 'mov rcx, r9', 'sub rcx, rdi', 'add ecx, 0x6c', 'shr ecx, 3', 'rep stosq qword [rdi], rax', 'mov eax, 1', 'mov word [var_20h], ax', 'cmp byte [r8], 0', 'je 0x4040fc', 'mov eax, 0xffffffff', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046a3', 'lea r12, [var_3e0h]', 'xor eax, eax', 'mov ecx, 0x56', 'mov rdi, r12', 'rep stosq qword [rdi], rax', 'mov byte [var_680h], 1', 'call sym.imp.getpid', 'mov dword [var_684h], eax', 'call sym.imp.geteuid', 'mov dword [var_688h], eax', 'call sym.imp.getegid', 'mov dword [var_68ch], eax', 'mov rax, qword [var_3f0h]', 'cmp rax, 0x1f', 'ja 0x4046e2', 'add rax, 1', 'lea rbx, str.OUTBCRED', 'mov rsi, r12', 'mov rdx, rax', 'mov rdi, r14', 'shl rdx, 4', 'mov qword [rsp + rdx + 0x3e8], rbx', 'mov qword [rsp + rdx + 0x3f0], 9', 'mov qword [var_3f0h], rax', 'call fcn.00402fa0', 'push r15', 'push r14', 'lea rax, [rsi + 0x18]', 'push r13', 'push r12', 'xor r15d, r15d', 'push rbp', 'push rbx', 'mov ecx, 0x16', 'mov rbx, rdi', 'pxor xmm0, xmm0', 'sub rsp, 0xf8', 'movzx r13d, byte [rsi + 0x2a0]', 'mov r12, rsi', 'mov qword [var_10h], rax', 'mov rax, qword [rsi + 0x10]', 'lea rbp, [var_40h]', 'movaps xmmword [rsp], xmm0', 'mov rdi, rbp', 'mov qword [var_30h], 0', 'mov qword [var_20h], rbp', 'and r13d, 1', 'mov qword [var_18h], rax', 'mov rax, r15', 'mov qword [var_28h], 0xb0', 'rep stosq qword [rdi], rax', 'mov rax, qword [rsi + 0x218]', 'test rax, rax', 'jne 0x403080', 'test r13b, r13b', 'jne 0x403160', 'xor ebp, ebp', 'mov qword [var_28h], rbp', 'mov rbp, rsp', 'mov edi, dword [rbx]', 'xor edx, edx', 'mov rsi, rbp', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403060', 'mov qword [r12], rax', 'xor eax, eax', 'add rsp, 0xf8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046e2', 'lea rsi, [var_24h]', 'mov edx, 4', 'mov rdi, r14', 'mov dword [var_24h], 4', 'lea r13, [var_130h]', 'lea rbx, [var_40h]', 'call fcn.004033b0', 'push rbp', 'push rbx', 'mov rbp, rdi', 'xor eax, eax', 'mov ecx, 0x56', 'sub rsp, 0x3a8', 'pxor xmm0, xmm0', 'lea rdi, [var_f0h]', 'mov qword [var_30h], 0', 'mov qword [var_18h], 1', 'mov rbx, rsp', 'rep stosq qword [rdi], rax', 'mov qword [var_110h], rdx', 'lea rdx, [var_108h]', 'mov ecx, 0x16', 'movaps xmmword [rsp], xmm0', 'mov qword [var_10h], rdx', 'lea rdx, [var_40h]', 'mov qword [var_108h], rsi', 'movaps xmmword [var_20h], xmm0', 'mov rdi, rdx', 'rep stosq qword [rdi], rax', 'mov qword [var_100h], 1', 'mov qword [var_20h], rdx', 'mov edi, dword [rbp]', 'xor edx, edx', 'mov rsi, rbx', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403450', 'call sym.imp.__errno_location', 'cmp dword [rax], 4', 'je 0x40342e', 'add rsp, 0x3a8', 'mov eax, 0xffffffff', 'pop rbx', 'pop rbp', 'ret', 'jmp 0x406101', 'mov rax, qword [ptr]', 'mov rbx, qword [rax + 0x58]', 'test rbx, rbx', 'jne 0x40612d', 'jmp 0x4064c0', 'mov rax, qword [ptr]', 'mov r12, qword [rax + 0x90]', 'test r12, r12', 'je 0x406be0', 'cmp dword [r12], 2', 'jne 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'xor edx, edx', 'xchg dword [rax + 0xc], edx', 'sub edx, 1', 'jne 0x405b5d', 'xor ebx, ebx', 'mov rax, qword [rbp - 0x14e8]', 'test byte [rax + 0x70], 8', 'jne 0x407713', 'lea rdi, str.Accepting_connection...', 'xor eax, eax', 'call fcn.00403c70', 'push rbp', 'push rbx', 'sub rsp, 0x10d8', 'test al, al', 'mov qword [var_1028h], rsi', 'mov qword [var_1030h], rdx', 'mov qword [var_1038h], rcx', 'mov qword [var_1040h], r8', 'mov qword [var_1048h], r9', 'je 0x403ce5', 'lea rax, [arg_10f0h]', 'lea rbx, [s]', 'mov rcx, rsp', 'mov rdx, rdi', 'mov esi, 0x1000', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'lea rax, [var_1020h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.vsnprintf', 'mov edi, dword [0x0060aba4]', 'mov rsi, rbx', 'mov ebp, eax', 'call fcn.00403850', 'push r15', 'push r14', 'mov r14d, edi', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x1028', 'mov edx, dword [0x0060aba0]', 'test edx, edx', 'je 0x4039a0', 'test r13, r13', 'je 0x403aa0', 'mov ebx, 0x30', 'xor r12d, r12d', 'jmp 0x40389b', 'call sym.imp.getpid', 'lea rdx, [var_10h]', 'xor esi, esi', 'mov r15d, eax', 'lea rbp, [var_20h]', 'mov rdi, rdx', 'mov qword [var_8h], rdx', 'call sym.imp.gettimeofday', 'mov rdx, qword [var_8h]', 'mov rsi, rbp', 'mov rdi, rdx', 'call sym.imp.localtime_r']"
470,nvidia-cuda-mps-control,545,"['call sym.imp.clock_gettime', 'test eax, eax', 'sete al', 'movzx eax, al', 'mov dword [0x0060a740], eax', 'jmp 0x402613', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_sys_vm_mmap_min_addr', 'mov qword [var_70h], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbp, rax', 'je 0x402bff', 'mov edi, 0x1e', 'call sym.imp.sysconf', 'mov eax, eax', 'cmp qword [var_70h], rax', 'ja 0x40266e', 'mov rax, qword [var_70h]', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_cpuinfo', 'mov qword [0x0060b530], rax', 'call sym.imp.fopen', 'mov rbp, rax', 'mov rax, 0xffffffffffffffff', 'test rbp, rbp', 'je 0x40273b', 'lea rdi, [0x0060b500]', 'mov qword [0x0060b528], rax', 'call sym.imp.pthread_mutex_lock', 'movdqa xmm0, xmmword [str._proc_self_maps]', 'lea rsi, [0x00408553]', 'movabs rax, 0x787a252d787a25', 'mov rdi, rbx', 'mov r13, qword [0x0060b528]', 'mov rbp, qword [0x0060b530]', 'mov qword [format], rax', 'movaps xmmword [var_70h], xmm0', 'mov qword [var_38h], 0', 'mov qword [s], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbx, rax', 'je 0x4028b7', 'lea rdi, [0x0060b500]', 'call sym.imp.pthread_mutex_unlock', 'mov eax, dword [0x0060bea0]', 'test eax, eax', 'je 0x402c2d', 'cmp dword [var_24h], 2', 'je 0x402cd5', 'call fcn.00404390', 'push r15', 'push r14', 'lea rdi, [0x0060b620]', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x13e8', 'lea r14, [var_30h]', 'mov rsi, r14', 'call fcn.00404060', 'push r13', 'push r12', 'mov r8, rdi', 'push rbp', 'push rbx', 'xor eax, eax', 'sub rsp, 0x98', 'mov dword [rsi], 0xffffffff', 'lea rbp, [var_20h]', 'mov qword [var_22h], 0', 'mov qword [var_86h], 0', 'lea r9, [var_22h]', 'lea rdi, [var_8h]', 'mov rcx, r9', 'sub rcx, rdi', 'add ecx, 0x6c', 'shr ecx, 3', 'rep stosq qword [rdi], rax', 'mov eax, 1', 'mov word [var_20h], ax', 'cmp byte [r8], 0', 'je 0x4040fc', 'mov eax, 0xffffffff', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046a3', 'lea r12, [var_3e0h]', 'xor eax, eax', 'mov ecx, 0x56', 'mov rdi, r12', 'rep stosq qword [rdi], rax', 'mov byte [var_680h], 1', 'call sym.imp.getpid', 'mov dword [var_684h], eax', 'call sym.imp.geteuid', 'mov dword [var_688h], eax', 'call sym.imp.getegid', 'mov dword [var_68ch], eax', 'mov rax, qword [var_3f0h]', 'cmp rax, 0x1f', 'ja 0x4046e2', 'add rax, 1', 'lea rbx, str.OUTBCRED', 'mov rsi, r12', 'mov rdx, rax', 'mov rdi, r14', 'shl rdx, 4', 'mov qword [rsp + rdx + 0x3e8], rbx', 'mov qword [rsp + rdx + 0x3f0], 9', 'mov qword [var_3f0h], rax', 'call fcn.00402fa0', 'push r15', 'push r14', 'lea rax, [rsi + 0x18]', 'push r13', 'push r12', 'xor r15d, r15d', 'push rbp', 'push rbx', 'mov ecx, 0x16', 'mov rbx, rdi', 'pxor xmm0, xmm0', 'sub rsp, 0xf8', 'movzx r13d, byte [rsi + 0x2a0]', 'mov r12, rsi', 'mov qword [var_10h], rax', 'mov rax, qword [rsi + 0x10]', 'lea rbp, [var_40h]', 'movaps xmmword [rsp], xmm0', 'mov rdi, rbp', 'mov qword [var_30h], 0', 'mov qword [var_20h], rbp', 'and r13d, 1', 'mov qword [var_18h], rax', 'mov rax, r15', 'mov qword [var_28h], 0xb0', 'rep stosq qword [rdi], rax', 'mov rax, qword [rsi + 0x218]', 'test rax, rax', 'jne 0x403080', 'test r13b, r13b', 'jne 0x403160', 'xor ebp, ebp', 'mov qword [var_28h], rbp', 'mov rbp, rsp', 'mov edi, dword [rbx]', 'xor edx, edx', 'mov rsi, rbp', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403060', 'mov qword [r12], rax', 'xor eax, eax', 'add rsp, 0xf8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046e2', 'lea rsi, [var_24h]', 'mov edx, 4', 'mov rdi, r14', 'mov dword [var_24h], 4', 'lea r13, [var_130h]', 'lea rbx, [var_40h]', 'call fcn.004033b0', 'push rbp', 'push rbx', 'mov rbp, rdi', 'xor eax, eax', 'mov ecx, 0x56', 'sub rsp, 0x3a8', 'pxor xmm0, xmm0', 'lea rdi, [var_f0h]', 'mov qword [var_30h], 0', 'mov qword [var_18h], 1', 'mov rbx, rsp', 'rep stosq qword [rdi], rax', 'mov qword [var_110h], rdx', 'lea rdx, [var_108h]', 'mov ecx, 0x16', 'movaps xmmword [rsp], xmm0', 'mov qword [var_10h], rdx', 'lea rdx, [var_40h]', 'mov qword [var_108h], rsi', 'movaps xmmword [var_20h], xmm0', 'mov rdi, rdx', 'rep stosq qword [rdi], rax', 'mov qword [var_100h], 1', 'mov qword [var_20h], rdx', 'mov edi, dword [rbp]', 'xor edx, edx', 'mov rsi, rbx', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403450', 'call sym.imp.__errno_location', 'cmp dword [rax], 4', 'je 0x40342e', 'add rsp, 0x3a8', 'mov eax, 0xffffffff', 'pop rbx', 'pop rbp', 'ret', 'jmp 0x406101', 'mov rax, qword [ptr]', 'mov rbx, qword [rax + 0x58]', 'test rbx, rbx', 'jne 0x40612d', 'jmp 0x4064c0', 'mov rax, qword [ptr]', 'mov r12, qword [rax + 0x90]', 'test r12, r12', 'je 0x406be0', 'cmp dword [r12], 2', 'jne 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'lea r14, [rbp - 0x14a0]', 'mov rsi, r14', 'call sym.imp.clock_gettime']"
471,nvidia-cuda-mps-control,568,"['call sym.imp.clock_gettime', 'test eax, eax', 'sete al', 'movzx eax, al', 'mov dword [0x0060a740], eax', 'jmp 0x402613', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_sys_vm_mmap_min_addr', 'mov qword [var_70h], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbp, rax', 'je 0x402bff', 'mov edi, 0x1e', 'call sym.imp.sysconf', 'mov eax, eax', 'cmp qword [var_70h], rax', 'ja 0x40266e', 'mov rax, qword [var_70h]', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_cpuinfo', 'mov qword [0x0060b530], rax', 'call sym.imp.fopen', 'mov rbp, rax', 'mov rax, 0xffffffffffffffff', 'test rbp, rbp', 'je 0x40273b', 'lea rdi, [0x0060b500]', 'mov qword [0x0060b528], rax', 'call sym.imp.pthread_mutex_lock', 'movdqa xmm0, xmmword [str._proc_self_maps]', 'lea rsi, [0x00408553]', 'movabs rax, 0x787a252d787a25', 'mov rdi, rbx', 'mov r13, qword [0x0060b528]', 'mov rbp, qword [0x0060b530]', 'mov qword [format], rax', 'movaps xmmword [var_70h], xmm0', 'mov qword [var_38h], 0', 'mov qword [s], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbx, rax', 'je 0x4028b7', 'lea rdi, [0x0060b500]', 'call sym.imp.pthread_mutex_unlock', 'mov eax, dword [0x0060bea0]', 'test eax, eax', 'je 0x402c2d', 'cmp dword [var_24h], 2', 'je 0x402cd5', 'call fcn.00404390', 'push r15', 'push r14', 'lea rdi, [0x0060b620]', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x13e8', 'lea r14, [var_30h]', 'mov rsi, r14', 'call fcn.00404060', 'push r13', 'push r12', 'mov r8, rdi', 'push rbp', 'push rbx', 'xor eax, eax', 'sub rsp, 0x98', 'mov dword [rsi], 0xffffffff', 'lea rbp, [var_20h]', 'mov qword [var_22h], 0', 'mov qword [var_86h], 0', 'lea r9, [var_22h]', 'lea rdi, [var_8h]', 'mov rcx, r9', 'sub rcx, rdi', 'add ecx, 0x6c', 'shr ecx, 3', 'rep stosq qword [rdi], rax', 'mov eax, 1', 'mov word [var_20h], ax', 'cmp byte [r8], 0', 'je 0x4040fc', 'mov eax, 0xffffffff', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046a3', 'lea r12, [var_3e0h]', 'xor eax, eax', 'mov ecx, 0x56', 'mov rdi, r12', 'rep stosq qword [rdi], rax', 'mov byte [var_680h], 1', 'call sym.imp.getpid', 'mov dword [var_684h], eax', 'call sym.imp.geteuid', 'mov dword [var_688h], eax', 'call sym.imp.getegid', 'mov dword [var_68ch], eax', 'mov rax, qword [var_3f0h]', 'cmp rax, 0x1f', 'ja 0x4046e2', 'add rax, 1', 'lea rbx, str.OUTBCRED', 'mov rsi, r12', 'mov rdx, rax', 'mov rdi, r14', 'shl rdx, 4', 'mov qword [rsp + rdx + 0x3e8], rbx', 'mov qword [rsp + rdx + 0x3f0], 9', 'mov qword [var_3f0h], rax', 'call fcn.00402fa0', 'push r15', 'push r14', 'lea rax, [rsi + 0x18]', 'push r13', 'push r12', 'xor r15d, r15d', 'push rbp', 'push rbx', 'mov ecx, 0x16', 'mov rbx, rdi', 'pxor xmm0, xmm0', 'sub rsp, 0xf8', 'movzx r13d, byte [rsi + 0x2a0]', 'mov r12, rsi', 'mov qword [var_10h], rax', 'mov rax, qword [rsi + 0x10]', 'lea rbp, [var_40h]', 'movaps xmmword [rsp], xmm0', 'mov rdi, rbp', 'mov qword [var_30h], 0', 'mov qword [var_20h], rbp', 'and r13d, 1', 'mov qword [var_18h], rax', 'mov rax, r15', 'mov qword [var_28h], 0xb0', 'rep stosq qword [rdi], rax', 'mov rax, qword [rsi + 0x218]', 'test rax, rax', 'jne 0x403080', 'test r13b, r13b', 'jne 0x403160', 'xor ebp, ebp', 'mov qword [var_28h], rbp', 'mov rbp, rsp', 'mov edi, dword [rbx]', 'xor edx, edx', 'mov rsi, rbp', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403060', 'mov qword [r12], rax', 'xor eax, eax', 'add rsp, 0xf8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046e2', 'lea rsi, [var_24h]', 'mov edx, 4', 'mov rdi, r14', 'mov dword [var_24h], 4', 'lea r13, [var_130h]', 'lea rbx, [var_40h]', 'call fcn.004033b0', 'push rbp', 'push rbx', 'mov rbp, rdi', 'xor eax, eax', 'mov ecx, 0x56', 'sub rsp, 0x3a8', 'pxor xmm0, xmm0', 'lea rdi, [var_f0h]', 'mov qword [var_30h], 0', 'mov qword [var_18h], 1', 'mov rbx, rsp', 'rep stosq qword [rdi], rax', 'mov qword [var_110h], rdx', 'lea rdx, [var_108h]', 'mov ecx, 0x16', 'movaps xmmword [rsp], xmm0', 'mov qword [var_10h], rdx', 'lea rdx, [var_40h]', 'mov qword [var_108h], rsi', 'movaps xmmword [var_20h], xmm0', 'mov rdi, rdx', 'rep stosq qword [rdi], rax', 'mov qword [var_100h], 1', 'mov qword [var_20h], rdx', 'mov edi, dword [rbp]', 'xor edx, edx', 'mov rsi, rbx', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403450', 'call sym.imp.__errno_location', 'cmp dword [rax], 4', 'je 0x40342e', 'add rsp, 0x3a8', 'mov eax, 0xffffffff', 'pop rbx', 'pop rbp', 'ret', 'jmp 0x406101', 'mov rax, qword [ptr]', 'mov rbx, qword [rax + 0x58]', 'test rbx, rbx', 'jne 0x40612d', 'jmp 0x4064c0', 'mov rax, qword [ptr]', 'mov r12, qword [rax + 0x90]', 'test r12, r12', 'je 0x406be0', 'cmp dword [r12], 2', 'jne 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'cmp eax, 0xffffffff', 'je 0x406080', 'test eax, eax', 'jle 0x405dce', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x406a0b', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
472,nvidia-cuda-mps-control,513,"['call sym.imp.clock_gettime', 'test eax, eax', 'sete al', 'movzx eax, al', 'mov dword [0x0060a740], eax', 'jmp 0x402613', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_sys_vm_mmap_min_addr', 'mov qword [var_70h], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbp, rax', 'je 0x402bff', 'mov edi, 0x1e', 'call sym.imp.sysconf', 'mov eax, eax', 'cmp qword [var_70h], rax', 'ja 0x40266e', 'mov rax, qword [var_70h]', 'lea rsi, [0x00408553]', 'lea rdi, str._proc_cpuinfo', 'mov qword [0x0060b530], rax', 'call sym.imp.fopen', 'mov rbp, rax', 'mov rax, 0xffffffffffffffff', 'test rbp, rbp', 'je 0x40273b', 'lea rdi, [0x0060b500]', 'mov qword [0x0060b528], rax', 'call sym.imp.pthread_mutex_lock', 'movdqa xmm0, xmmword [str._proc_self_maps]', 'lea rsi, [0x00408553]', 'movabs rax, 0x787a252d787a25', 'mov rdi, rbx', 'mov r13, qword [0x0060b528]', 'mov rbp, qword [0x0060b530]', 'mov qword [format], rax', 'movaps xmmword [var_70h], xmm0', 'mov qword [var_38h], 0', 'mov qword [s], 0', 'call sym.imp.fopen', 'test rax, rax', 'mov rbx, rax', 'je 0x4028b7', 'lea rdi, [0x0060b500]', 'call sym.imp.pthread_mutex_unlock', 'mov eax, dword [0x0060bea0]', 'test eax, eax', 'je 0x402c2d', 'cmp dword [var_24h], 2', 'je 0x402cd5', 'call fcn.00404390', 'push r15', 'push r14', 'lea rdi, [0x0060b620]', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x13e8', 'lea r14, [var_30h]', 'mov rsi, r14', 'call fcn.00404060', 'push r13', 'push r12', 'mov r8, rdi', 'push rbp', 'push rbx', 'xor eax, eax', 'sub rsp, 0x98', 'mov dword [rsi], 0xffffffff', 'lea rbp, [var_20h]', 'mov qword [var_22h], 0', 'mov qword [var_86h], 0', 'lea r9, [var_22h]', 'lea rdi, [var_8h]', 'mov rcx, r9', 'sub rcx, rdi', 'add ecx, 0x6c', 'shr ecx, 3', 'rep stosq qword [rdi], rax', 'mov eax, 1', 'mov word [var_20h], ax', 'cmp byte [r8], 0', 'je 0x4040fc', 'mov eax, 0xffffffff', 'add rsp, 0x98', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046a3', 'lea r12, [var_3e0h]', 'xor eax, eax', 'mov ecx, 0x56', 'mov rdi, r12', 'rep stosq qword [rdi], rax', 'mov byte [var_680h], 1', 'call sym.imp.getpid', 'mov dword [var_684h], eax', 'call sym.imp.geteuid', 'mov dword [var_688h], eax', 'call sym.imp.getegid', 'mov dword [var_68ch], eax', 'mov rax, qword [var_3f0h]', 'cmp rax, 0x1f', 'ja 0x4046e2', 'add rax, 1', 'lea rbx, str.OUTBCRED', 'mov rsi, r12', 'mov rdx, rax', 'mov rdi, r14', 'shl rdx, 4', 'mov qword [rsp + rdx + 0x3e8], rbx', 'mov qword [rsp + rdx + 0x3f0], 9', 'mov qword [var_3f0h], rax', 'call fcn.00402fa0', 'push r15', 'push r14', 'lea rax, [rsi + 0x18]', 'push r13', 'push r12', 'xor r15d, r15d', 'push rbp', 'push rbx', 'mov ecx, 0x16', 'mov rbx, rdi', 'pxor xmm0, xmm0', 'sub rsp, 0xf8', 'movzx r13d, byte [rsi + 0x2a0]', 'mov r12, rsi', 'mov qword [var_10h], rax', 'mov rax, qword [rsi + 0x10]', 'lea rbp, [var_40h]', 'movaps xmmword [rsp], xmm0', 'mov rdi, rbp', 'mov qword [var_30h], 0', 'mov qword [var_20h], rbp', 'and r13d, 1', 'mov qword [var_18h], rax', 'mov rax, r15', 'mov qword [var_28h], 0xb0', 'rep stosq qword [rdi], rax', 'mov rax, qword [rsi + 0x218]', 'test rax, rax', 'jne 0x403080', 'test r13b, r13b', 'jne 0x403160', 'xor ebp, ebp', 'mov qword [var_28h], rbp', 'mov rbp, rsp', 'mov edi, dword [rbx]', 'xor edx, edx', 'mov rsi, rbp', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403060', 'mov qword [r12], rax', 'xor eax, eax', 'add rsp, 0xf8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp eax, 0xffffffff', 'je 0x4046e2', 'lea rsi, [var_24h]', 'mov edx, 4', 'mov rdi, r14', 'mov dword [var_24h], 4', 'lea r13, [var_130h]', 'lea rbx, [var_40h]', 'call fcn.004033b0', 'push rbp', 'push rbx', 'mov rbp, rdi', 'xor eax, eax', 'mov ecx, 0x56', 'sub rsp, 0x3a8', 'pxor xmm0, xmm0', 'lea rdi, [var_f0h]', 'mov qword [var_30h], 0', 'mov qword [var_18h], 1', 'mov rbx, rsp', 'rep stosq qword [rdi], rax', 'mov qword [var_110h], rdx', 'lea rdx, [var_108h]', 'mov ecx, 0x16', 'movaps xmmword [rsp], xmm0', 'mov qword [var_10h], rdx', 'lea rdx, [var_40h]', 'mov qword [var_108h], rsi', 'movaps xmmword [var_20h], xmm0', 'mov rdi, rdx', 'rep stosq qword [rdi], rax', 'mov qword [var_100h], 1', 'mov qword [var_20h], rdx', 'mov edi, dword [rbp]', 'xor edx, edx', 'mov rsi, rbx', 'call sym.imp.sendmsg', 'test rax, rax', 'js 0x403450', 'call sym.imp.__errno_location', 'cmp dword [rax], 4', 'je 0x40342e', 'add rsp, 0x3a8', 'mov eax, 0xffffffff', 'pop rbx', 'pop rbp', 'ret', 'jmp 0x406101', 'mov rax, qword [ptr]', 'mov rbx, qword [rax + 0x58]', 'test rbx, rbx', 'jne 0x40612d', 'jmp 0x4064c0', 'mov rax, qword [ptr]', 'mov r12, qword [rax + 0x90]', 'test r12, r12', 'je 0x406be0', 'cmp dword [r12], 2', 'jne 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'xor edx, edx', 'xchg dword [rax + 0xc], edx', 'sub edx, 1', 'jne 0x405b5d', 'xor ebx, ebx', 'mov rax, qword [rbp - 0x14e8]', 'test byte [rax + 0x70], 8', 'jne 0x407713', 'mov r13d, 1', 'jmp 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
473,nvidia-cuda-mps-control,157,"['call sym.imp.localtime_r', 'mov eax, dword [var_34h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov r11d, dword [var_2ch]', 'mov r10d, dword [var_28h]', 'mov r9d, dword [var_24h]', 'mov r8d, dword [var_20h]', 'lea edi, [rax + 0x76c]', 'mov eax, dword [var_30h]', 'mov dword [var_20h], r14d', 'mov dword [var_24h], r15d', 'mov dword [var_30h], r11d', 'mov dword [var_28h], edi', 'mov dword [var_3ch], r9d', 'lea esi, [rax + 1]', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov eax, dword [var_38h]', 'mov dword [var_40h], r8d', 'mov dword [var_2ch], esi', 'mov dword [var_38h], r10d', 'mov qword [var_48h], r12', 'mov dword [var_34h], eax', 'sar rdx, 7', 'sub rdx, rcx', 'test r12, r12', 'mov dword [var_44h], edx', 'jne 0x403a60', 'nop dword [rax + rax]', 'nop word cs:[rax + rax]', 'mov edi, dword [0x0060abac]', 'mov rdx, rbx', 'mov rsi, rbp', 'call sym.imp.write', 'test rax, rax', 'js 0x403990', 'add rbp, rax', 'sub rbx, rax', 'jne 0x403960', 'add rsp, 0x1028', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x10d8', 'mov eax, ebp', 'pop rbx', 'pop rbp', 'ret', 'mov r12, qword [r15 + 0x50]', 'test r12, r12', 'je 0x40606d', 'xor esi, esi', 'mov edi, 0xedcba000', 'call fcn.00403850', 'push r15', 'push r14', 'mov r14d, edi', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x1028', 'mov edx, dword [0x0060aba0]', 'test edx, edx', 'je 0x4039a0', 'test r13, r13', 'je 0x403aa0', 'mov ebx, 0x30', 'xor r12d, r12d', 'jmp 0x40389b', 'call sym.imp.getpid', 'lea rdx, [var_10h]', 'xor esi, esi', 'mov r15d, eax', 'lea rbp, [var_20h]', 'mov rdi, rdx', 'mov qword [var_8h], rdx', 'call sym.imp.gettimeofday', 'mov rdx, qword [var_8h]', 'mov rsi, rbp', 'mov rdi, rdx', 'call sym.imp.localtime_r']"
474,nvidia-cuda-mps-control,178,"['call sym.imp.localtime_r', 'mov eax, dword [var_34h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov r11d, dword [var_2ch]', 'mov r10d, dword [var_28h]', 'mov r9d, dword [var_24h]', 'mov r8d, dword [var_20h]', 'lea edi, [rax + 0x76c]', 'mov eax, dword [var_30h]', 'mov dword [var_20h], r14d', 'mov dword [var_24h], r15d', 'mov dword [var_30h], r11d', 'mov dword [var_28h], edi', 'mov dword [var_3ch], r9d', 'lea esi, [rax + 1]', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov eax, dword [var_38h]', 'mov dword [var_40h], r8d', 'mov dword [var_2ch], esi', 'mov dword [var_38h], r10d', 'mov qword [var_48h], r12', 'mov dword [var_34h], eax', 'sar rdx, 7', 'sub rdx, rcx', 'test r12, r12', 'mov dword [var_44h], edx', 'jne 0x403a60', 'nop dword [rax + rax]', 'nop word cs:[rax + rax]', 'mov edi, dword [0x0060abac]', 'mov rdx, rbx', 'mov rsi, rbp', 'call sym.imp.write', 'test rax, rax', 'js 0x403990', 'add rbp, rax', 'sub rbx, rax', 'jne 0x403960', 'add rsp, 0x1028', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x10d8', 'mov eax, ebp', 'pop rbx', 'pop rbp', 'ret', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'lea r14, [rbp - 0x14a0]', 'mov rsi, r14', 'call sym.imp.clock_gettime']"
475,nvidia-cuda-mps-control,201,"['call sym.imp.localtime_r', 'mov eax, dword [var_34h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov r11d, dword [var_2ch]', 'mov r10d, dword [var_28h]', 'mov r9d, dword [var_24h]', 'mov r8d, dword [var_20h]', 'lea edi, [rax + 0x76c]', 'mov eax, dword [var_30h]', 'mov dword [var_20h], r14d', 'mov dword [var_24h], r15d', 'mov dword [var_30h], r11d', 'mov dword [var_28h], edi', 'mov dword [var_3ch], r9d', 'lea esi, [rax + 1]', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov eax, dword [var_38h]', 'mov dword [var_40h], r8d', 'mov dword [var_2ch], esi', 'mov dword [var_38h], r10d', 'mov qword [var_48h], r12', 'mov dword [var_34h], eax', 'sar rdx, 7', 'sub rdx, rcx', 'test r12, r12', 'mov dword [var_44h], edx', 'jne 0x403a60', 'nop dword [rax + rax]', 'nop word cs:[rax + rax]', 'mov edi, dword [0x0060abac]', 'mov rdx, rbx', 'mov rsi, rbp', 'call sym.imp.write', 'test rax, rax', 'js 0x403990', 'add rbp, rax', 'sub rbx, rax', 'jne 0x403960', 'add rsp, 0x1028', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x10d8', 'mov eax, ebp', 'pop rbx', 'pop rbp', 'ret', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'cmp eax, 0xffffffff', 'je 0x406080', 'test eax, eax', 'jle 0x405dce', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x406a0b', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
476,nvidia-cuda-mps-control,146,"['call sym.imp.localtime_r', 'mov eax, dword [var_34h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov r11d, dword [var_2ch]', 'mov r10d, dword [var_28h]', 'mov r9d, dword [var_24h]', 'mov r8d, dword [var_20h]', 'lea edi, [rax + 0x76c]', 'mov eax, dword [var_30h]', 'mov dword [var_20h], r14d', 'mov dword [var_24h], r15d', 'mov dword [var_30h], r11d', 'mov dword [var_28h], edi', 'mov dword [var_3ch], r9d', 'lea esi, [rax + 1]', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov eax, dword [var_38h]', 'mov dword [var_40h], r8d', 'mov dword [var_2ch], esi', 'mov dword [var_38h], r10d', 'mov qword [var_48h], r12', 'mov dword [var_34h], eax', 'sar rdx, 7', 'sub rdx, rcx', 'test r12, r12', 'mov dword [var_44h], edx', 'jne 0x403a60', 'nop dword [rax + rax]', 'nop word cs:[rax + rax]', 'mov edi, dword [0x0060abac]', 'mov rdx, rbx', 'mov rsi, rbp', 'call sym.imp.write', 'test rax, rax', 'js 0x403990', 'add rbp, rax', 'sub rbx, rax', 'jne 0x403960', 'add rsp, 0x1028', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x10d8', 'mov eax, ebp', 'pop rbx', 'pop rbp', 'ret', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'xor edx, edx', 'xchg dword [rax + 0xc], edx', 'sub edx, 1', 'jne 0x405b5d', 'xor ebx, ebx', 'mov rax, qword [rbp - 0x14e8]', 'test byte [rax + 0x70], 8', 'jne 0x407713', 'mov r13d, 1', 'jmp 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
477,nvidia-cuda-mps-control,183,"['call sym.imp.clock_gettime', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'mov rdi, r12', 'mov ebx, dword [rbp - 0x14f4]', 'xor r13d, r13d', 'call sym.imp.free', 'mov rax, qword [rbp - 0x14e8]', 'movzx eax, byte [rax + 0x70]', 'test al, 8', 'jne 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rcx, qword [ptr]', 'cmp qword [rcx + 0x78], rax', 'jbe 0x406a93', 'test r13d, r13d', 'je 0x4064b0', 'add r13d, 1', 'jne 0x4060e6', 'cmp ebx, 1', 'jle 0x4062be', 'lea rdi, str.Accepting_connection...', 'xor eax, eax', 'call fcn.00403c70', 'push rbp', 'push rbx', 'sub rsp, 0x10d8', 'test al, al', 'mov qword [var_1028h], rsi', 'mov qword [var_1030h], rdx', 'mov qword [var_1038h], rcx', 'mov qword [var_1040h], r8', 'mov qword [var_1048h], r9', 'je 0x403ce5', 'lea rax, [arg_10f0h]', 'lea rbx, [s]', 'mov rcx, rsp', 'mov rdx, rdi', 'mov esi, 0x1000', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'lea rax, [var_1020h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.vsnprintf', 'mov edi, dword [0x0060aba4]', 'mov rsi, rbx', 'mov ebp, eax', 'call fcn.00403850', 'push r15', 'push r14', 'mov r14d, edi', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x1028', 'mov edx, dword [0x0060aba0]', 'test edx, edx', 'je 0x4039a0', 'test r13, r13', 'je 0x403aa0', 'mov ebx, 0x30', 'xor r12d, r12d', 'jmp 0x40389b', 'call sym.imp.getpid', 'lea rdx, [var_10h]', 'xor esi, esi', 'mov r15d, eax', 'lea rbp, [var_20h]', 'mov rdi, rdx', 'mov qword [var_8h], rdx', 'call sym.imp.gettimeofday', 'mov rdx, qword [var_8h]', 'mov rsi, rbp', 'mov rdi, rdx', 'call sym.imp.localtime_r']"
478,nvidia-cuda-mps-control,117,"['call sym.imp.clock_gettime', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'mov rdi, r12', 'mov ebx, dword [rbp - 0x14f4]', 'xor r13d, r13d', 'call sym.imp.free', 'mov rax, qword [rbp - 0x14e8]', 'movzx eax, byte [rax + 0x70]', 'test al, 8', 'jne 0x406a43', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'lea r14, [rbp - 0x14a0]', 'mov rsi, r14', 'call sym.imp.clock_gettime']"
479,nvidia-cuda-mps-control,44,"['call sym.imp.clock_gettime', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'cmp eax, 0xffffffff', 'je 0x406080', 'test eax, eax', 'jle 0x405dce', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x406a0b', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
480,nvidia-cuda-mps-control,58,"['call sym.imp.clock_gettime', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'mov rdi, r12', 'mov ebx, dword [rbp - 0x14f4]', 'xor r13d, r13d', 'call sym.imp.free', 'mov rax, qword [rbp - 0x14e8]', 'movzx eax, byte [rax + 0x70]', 'test al, 8', 'jne 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
481,nvidia-cuda-mps-control,183,"['call sym.imp.clock_gettime', 'mov rax, qword [rbp - 0x1030]', 'sub eax, dword [rbp - 0x14a0]', 'pxor xmm0, xmm0', 'movss xmm1, dword [0x00408c50]', 'cvtsi2ss xmm0, eax', 'mov rax, qword [rbp - 0x1028]', 'sub eax, dword [rbp - 0x1498]', 'mulss xmm1, xmm0', 'pxor xmm0, xmm0', 'cvtsi2ss xmm0, eax', 'divss xmm0, dword [0x00408c54]', 'addss xmm0, xmm1', 'ucomiss xmm0, dword [0x00408c58]', 'jae 0x406ce7', 'cvttss2si rax, xmm0', 'cmp rax, 0x3e7', 'ja 0x407068', 'mov rdi, r12', 'mov ebx, dword [rbp - 0x14f4]', 'xor r13d, r13d', 'call sym.imp.free', 'mov rax, qword [rbp - 0x14e8]', 'movzx eax, byte [rax + 0x70]', 'test al, 8', 'jne 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rcx, qword [ptr]', 'cmp qword [rcx + 0x78], rax', 'jbe 0x406a93', 'test r13d, r13d', 'je 0x4064b0', 'add r13d, 1', 'jne 0x4060e6', 'cmp ebx, 1', 'jle 0x4062be', 'lea rdi, str.Accepting_connection...', 'xor eax, eax', 'call fcn.00403c70', 'push rbp', 'push rbx', 'sub rsp, 0x10d8', 'test al, al', 'mov qword [var_1028h], rsi', 'mov qword [var_1030h], rdx', 'mov qword [var_1038h], rcx', 'mov qword [var_1040h], r8', 'mov qword [var_1048h], r9', 'je 0x403ce5', 'lea rax, [arg_10f0h]', 'lea rbx, [s]', 'mov rcx, rsp', 'mov rdx, rdi', 'mov esi, 0x1000', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'lea rax, [var_1020h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.vsnprintf', 'mov edi, dword [0x0060aba4]', 'mov rsi, rbx', 'mov ebp, eax', 'call fcn.00403850', 'push r15', 'push r14', 'mov r14d, edi', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x1028', 'mov edx, dword [0x0060aba0]', 'test edx, edx', 'je 0x4039a0', 'test r13, r13', 'je 0x403aa0', 'mov ebx, 0x30', 'xor r12d, r12d', 'jmp 0x40389b', 'call sym.imp.getpid', 'lea rdx, [var_10h]', 'xor esi, esi', 'mov r15d, eax', 'lea rbp, [var_20h]', 'mov rdi, rdx', 'mov qword [var_8h], rdx', 'call sym.imp.gettimeofday', 'mov rdx, qword [var_8h]', 'mov rsi, rbp', 'mov rdi, rdx', 'call sym.imp.localtime_r']"
482,nvidia-cuda-mps-control,117,"['call sym.imp.clock_gettime', 'mov rax, qword [rbp - 0x1030]', 'sub eax, dword [rbp - 0x14a0]', 'pxor xmm0, xmm0', 'movss xmm1, dword [0x00408c50]', 'cvtsi2ss xmm0, eax', 'mov rax, qword [rbp - 0x1028]', 'sub eax, dword [rbp - 0x1498]', 'mulss xmm1, xmm0', 'pxor xmm0, xmm0', 'cvtsi2ss xmm0, eax', 'divss xmm0, dword [0x00408c54]', 'addss xmm0, xmm1', 'ucomiss xmm0, dword [0x00408c58]', 'jae 0x406ce7', 'cvttss2si rax, xmm0', 'cmp rax, 0x3e7', 'ja 0x407068', 'mov rdi, r12', 'mov ebx, dword [rbp - 0x14f4]', 'xor r13d, r13d', 'call sym.imp.free', 'mov rax, qword [rbp - 0x14e8]', 'movzx eax, byte [rax + 0x70]', 'test al, 8', 'jne 0x406a43', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'lea r14, [rbp - 0x14a0]', 'mov rsi, r14', 'call sym.imp.clock_gettime']"
483,nvidia-cuda-mps-control,62,"['call sym.imp.clock_gettime', 'mov rax, qword [rbp - 0x1030]', 'sub eax, dword [rbp - 0x14a0]', 'pxor xmm0, xmm0', 'movss xmm1, dword [0x00408c50]', 'cvtsi2ss xmm0, eax', 'mov rax, qword [rbp - 0x1028]', 'sub eax, dword [rbp - 0x1498]', 'mulss xmm1, xmm0', 'pxor xmm0, xmm0', 'cvtsi2ss xmm0, eax', 'divss xmm0, dword [0x00408c54]', 'addss xmm0, xmm1', 'ucomiss xmm0, dword [0x00408c58]', 'jae 0x406ce7', 'cvttss2si rax, xmm0', 'cmp rax, 0x3e7', 'ja 0x407068', 'mov edx, 0x3e8', 'sub edx, eax', 'jmp 0x405c3d', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'cmp eax, 0xffffffff', 'je 0x406080', 'test eax, eax', 'jle 0x405dce', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x406a0b', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
484,nvidia-cuda-mps-control,58,"['call sym.imp.clock_gettime', 'mov rax, qword [rbp - 0x1030]', 'sub eax, dword [rbp - 0x14a0]', 'pxor xmm0, xmm0', 'movss xmm1, dword [0x00408c50]', 'cvtsi2ss xmm0, eax', 'mov rax, qword [rbp - 0x1028]', 'sub eax, dword [rbp - 0x1498]', 'mulss xmm1, xmm0', 'pxor xmm0, xmm0', 'cvtsi2ss xmm0, eax', 'divss xmm0, dword [0x00408c54]', 'addss xmm0, xmm1', 'ucomiss xmm0, dword [0x00408c58]', 'jae 0x406ce7', 'cvttss2si rax, xmm0', 'cmp rax, 0x3e7', 'ja 0x407068', 'mov rdi, r12', 'mov ebx, dword [rbp - 0x14f4]', 'xor r13d, r13d', 'call sym.imp.free', 'mov rax, qword [rbp - 0x14e8]', 'movzx eax, byte [rax + 0x70]', 'test al, 8', 'jne 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
485,nvidia-cuda-mps-control,147,"['call sym.imp.clock_gettime', 'imul rax, qword [rbp - 0x1030], 0x3b9aca00', 'add rax, qword [rbp - 0x1028]', 'mov rcx, qword [ptr]', 'cmp qword [rcx + 0x78], rax', 'jbe 0x406a93', 'test r13d, r13d', 'je 0x4064b0', 'add r13d, 1', 'jne 0x4060e6', 'cmp ebx, 1', 'jle 0x4062be', 'lea rdi, str.Accepting_connection...', 'xor eax, eax', 'call fcn.00403c70', 'push rbp', 'push rbx', 'sub rsp, 0x10d8', 'test al, al', 'mov qword [var_1028h], rsi', 'mov qword [var_1030h], rdx', 'mov qword [var_1038h], rcx', 'mov qword [var_1040h], r8', 'mov qword [var_1048h], r9', 'je 0x403ce5', 'lea rax, [arg_10f0h]', 'lea rbx, [s]', 'mov rcx, rsp', 'mov rdx, rdi', 'mov esi, 0x1000', 'mov rdi, rbx', 'mov qword [var_8h], rax', 'lea rax, [var_1020h]', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.vsnprintf', 'mov edi, dword [0x0060aba4]', 'mov rsi, rbx', 'mov ebp, eax', 'call fcn.00403850', 'push r15', 'push r14', 'mov r14d, edi', 'push r13', 'push r12', 'mov r13, rsi', 'push rbp', 'push rbx', 'sub rsp, 0x1028', 'mov edx, dword [0x0060aba0]', 'test edx, edx', 'je 0x4039a0', 'test r13, r13', 'je 0x403aa0', 'mov ebx, 0x30', 'xor r12d, r12d', 'jmp 0x40389b', 'call sym.imp.getpid', 'lea rdx, [var_10h]', 'xor esi, esi', 'mov r15d, eax', 'lea rbp, [var_20h]', 'mov rdi, rdx', 'mov qword [var_8h], rdx', 'call sym.imp.gettimeofday', 'mov rdx, qword [var_8h]', 'mov rsi, rbp', 'mov rdi, rdx', 'call sym.imp.localtime_r']"
486,nvidia-cuda-mps-control,92,"['call sym.imp.clock_gettime', 'imul rax, qword [rbp - 0x1030], 0x3b9aca00', 'add rax, qword [rbp - 0x1028]', 'mov rcx, qword [ptr]', 'cmp qword [rcx + 0x78], rax', 'jbe 0x406a93', 'test r13d, r13d', 'je 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'lea r14, [rbp - 0x14a0]', 'mov rsi, r14', 'call sym.imp.clock_gettime']"
487,nvidia-cuda-mps-control,115,"['call sym.imp.clock_gettime', 'imul rax, qword [rbp - 0x1030], 0x3b9aca00', 'add rax, qword [rbp - 0x1028]', 'mov rcx, qword [ptr]', 'cmp qword [rcx + 0x78], rax', 'jbe 0x406a93', 'test r13d, r13d', 'je 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'mov rax, qword [var_1448h]', 'test byte [rax], 4', 'jne 0x40644d', 'mov rax, qword [var_1440h]', 'test byte [rax], 4', 'jne 0x4064f2', 'cmp dword [var_14c8h], 3', 'je 0x405b96', 'call sym.imp.malloc', 'test rax, rax', 'mov r12, rax', 'je 0x407740', 'mov rax, qword [rbp - 0x1450]', 'mov edx, 1', 'cmp dword [rbp - 0x14c8], 3', 'mov ecx, 1', 'mov eax, dword [rax + 4]', 'mov dword [r12], eax', 'mov eax, 1', 'mov word [r12 + 4], ax', 'mov rax, qword [rbp - 0x1448]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0xc], dx', 'mov dword [r12 + 8], eax', 'mov rax, qword [rbp - 0x1440]', 'mov eax, dword [rax + 4]', 'mov word [r12 + 0x14], cx', 'mov dword [r12 + 0x10], eax', 'je 0x405c14', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x405c2e', 'mov dword [rbp - 0x14f4], 0', 'mov edx, 0x3e8', 'mov rsi, qword [rbp - 0x14f0]', 'mov rdi, r12', 'call sym.imp.poll', 'test eax, eax', 'mov r14d, eax', 'je 0x407068', 'cmp eax, 0xffffffff', 'je 0x406080', 'test eax, eax', 'jle 0x405dce', 'mov edi, dword [0x0060a740]', 'cmp edi, 0xffffffff', 'je 0x406a0b', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
488,nvidia-cuda-mps-control,60,"['call sym.imp.clock_gettime', 'imul rax, qword [rbp - 0x1030], 0x3b9aca00', 'add rax, qword [rbp - 0x1028]', 'mov rcx, qword [ptr]', 'cmp qword [rcx + 0x78], rax', 'jbe 0x406a93', 'test r13d, r13d', 'je 0x4064b0', 'mov rax, qword [ptr]', 'movzx eax, byte [rax + 0x70]', 'jmp 0x405b20', 'and eax, 1', 'cmp al, 1', 'sbb rdi, rdi', 'and rdi, 0xfffffffffffffff8', 'add rdi, 0x20', 'cmp al, 1', 'sbb rcx, rcx', 'add rcx, 4', 'cmp al, 1', 'sbb eax, eax', 'mov qword [var_14f0h], rcx', 'add eax, 4', 'mov dword [var_14c8h], eax', 'mov rax, qword [var_1450h]', 'test byte [rax], 4', 'jne 0x40629d', 'xor edx, edx', 'xchg dword [rax + 0xc], edx', 'sub edx, 1', 'jne 0x405b5d', 'xor ebx, ebx', 'mov rax, qword [rbp - 0x14e8]', 'test byte [rax + 0x70], 8', 'jne 0x407713', 'mov r13d, 1', 'jmp 0x406a43', 'mov edi, dword [0x0060a740]', 'xor eax, eax', 'cmp edi, 0xffffffff', 'je 0x406a6e', 'mov rsi, qword [rbp - 0x14d8]', 'call sym.imp.clock_gettime']"
489,watchgnupg,164,"['call sym.imp.localtime', 'mov edx, dword [0x00005058]', 'test edx, edx', 'je 0x2290', 'mov ecx, dword [rax + 8]', 'mov r9d, dword [rax]', 'mov edx, r12d', 'lea rsi, str._3d____02d:_02d:_02d_', 'mov r8d, dword [rax + 4]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x22cf', 'add rsp, 0x10', 'pop r12', 'ret', 'mov rdi, qword [r15 + 0x20]', 'test rdi, rdi', 'jne 0x1ca8', 'mov rcx, qword [obj.stdout]', 'jmp 0x1cb8', 'mov rsi, rbx', 'mov rdi, r14', 'mov edx, 1', 'sub rsi, r14', 'lea r14, [rbx + 1]', 'add rsi, 1', 'call sym.imp.fwrite', 'mov esi, 0xa', 'mov rdi, r14', 'call sym.imp.strchr', 'mov rbx, rax', 'test rax, rax', 'je 0x1d28', 'mov edi, dword [r15 + 8]', 'call fcn.00002220', 'push r12', 'mov r12d, edi', 'xor edi, edi', 'sub rsp, 0x10', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov rdi, rsp', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
490,lastlog,185,"['call sym.imp.localtime', 'lea rdx, str._a__b__e__H:_M:_S__z__Y', 'mov esi, 0x50', 'mov rdi, rbp', 'mov rcx, rax', 'call sym.imp.strftime', 'mov eax, dword [ptr]', 'mov r9, rbp', 'test eax, eax', 'je 0x3230', 'mov rdx, qword [rbx]', 'lea rcx, [var_14h]', 'lea r8, [var_34h]', 'xor eax, eax', 'lea rsi, str.__16s___8.8s___16.16s__s_n', 'mov edi, 1', 'call sym.imp.__printf_chk', 'mov rax, qword [var_198h]', 'xor rax, qword fs:[0x28]', 'jne 0x324b', 'add rsp, 0x1a0', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'call sym.imp.getpwent', 'mov rdi, rax', 'test rax, rax', 'jne 0x2bb2', 'cmp byte [0x00008585], 0', 'je 0x2c68', 'cmp dword [rdi + 0x10], ebx', 'jbe 0x2bf0', 'call fcn.00003010', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x1a0', 'mov rax, qword fs:[0x28]', 'mov qword [var_198h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x30fe', 'mov eax, dword [rdi + 0x10]', 'mov rbx, rdi', 'lea rdx, [rax + rax*8]', 'lea rsi, [rax + rdx*8]', 'shl rsi, 2', 'lea rax, [rsi + 0x124]', 'cmp rax, qword [0x000085d0]', 'jbe 0x3128', 'lea rdx, [ptr]', 'mov ecx, 0x24', 'xor eax, eax', 'mov rdi, rdx', 'rep stosq qword [rdi], rax', 'mov dword [rdi], 0', 'cmp byte [0x00008584], 0', 'jne 0x31b0', 'cmp byte [0x00008583], 0', 'jne 0x31d9', 'cmp byte [0x00008580], 0', 'je 0x3202', 'movsxd rax, dword [ptr]', 'lea rdi, [timer]', 'lea rbp, [var_140h]', 'mov qword [timer], rax', 'call sym.imp.localtime']"
491,chage,190,"['call sym.imp.localtime', 'mov dword [0x00017198], 2', 'mov dword [0x00017184], 0', 'mov ebx, dword [rax + 0x14]', 'mov dword [0x0001718c], 0', 'mov dword [0x00017190], 0', 'lea edx, [rbx + 0x76c]', 'mov ebx, dword [rax + 0x10]', 'mov dword [0x0001719c], edx', 'mov dword [0x00017194], 0', 'lea edx, [rbx + 1]', 'mov dword [0x000171a4], edx', 'mov edx, dword [rax + 0xc]', 'mov dword [0x00017188], 0', 'mov dword [0x000171b0], edx', 'mov edx, dword [rax + 8]', 'mov dword [0x00017180], 0', 'mov dword [0x000171ac], edx', 'mov edx, dword [rax + 4]', 'mov dword [0x000171c8], 0', 'mov eax, dword [rax]', 'mov dword [0x000171a8], edx', 'mov dword [0x000171a0], eax', 'mov dword [0x000171c4], 0', 'mov dword [0x000171c0], 0', 'mov dword [0x000171bc], 0', 'mov dword [0x000171b8], 0', 'call fcn.00007620', 'endbr64', 'push r15', 'lea r10, [0x0000f0e0]', 'push r14', 'xor r14d, r14d', 'push r13', 'push r12', 'push rbp', 'push rbx', 'xor ebx, ebx', 'sub rsp, 0x528', 'mov rax, qword fs:[0x28]', 'mov qword [var_518h], rax', 'xor eax, eax', 'lea r13, [var_50h]', 'lea r12, [var_1e0h]', 'mov dword [0x00017664], 0', 'lea rax, [var_513h]', 'mov word [var_50h], bx', 'mov rbp, r13', 'mov dword [0x0001765c], 0xfffffffe', 'mov dword [var_14h], 0', 'mov qword [rsp], 0xc8', 'mov qword [s2], r12', 'mov qword [var_18h], r13', 'mov qword [var_20h], rax', 'movsx ebx, byte [r10 + r14]', 'mov r15d, ebx', 'cmp ebx, 0xffffffec', 'je 0x7840', 'lea rax, [0x0000f0a0]', 'movzx edx, byte [rax + r14]', 'mov eax, edx', 'test edx, edx', 'jne 0x78f0', 'movsxd rcx, edx', 'lea rdx, [0x0000ef80]', 'sub eax, 4', 'movzx edi, byte [rdx + rcx]', 'mov edx, 1', 'sub edx, edi', 'mov rsi, rdi', 'movsxd rdx, edx', 'mov edi, dword [r12 + rdx*4]', 'cmp al, 0x2f', 'ja case.0x792b.9', 'lea rdx, [0x0000eec0]', 'movzx eax, al', 'movsxd rax, dword [rdx + rax*4]', 'add rax, rdx', 'jmp rax', 'test eax, eax', 'jne 0x8e58', 'mov edx, dword [0x000171bc]', 'cmp edx, 1', 'jg 0x8e58', 'mov r14d, dword [0x000171b8]', 'cmp r14d, 1', 'jg 0x8e58', 'mov r15d, dword [0x000171c8]', 'cmp r15d, 1', 'jg 0x8e58', 'mov r12d, dword [0x000171c4]', 'cmp r12d, 1', 'jg 0x8e58', 'mov ecx, dword [0x0001719c]', 'mov eax, dword [0x0001719c]', 'sar ecx, 0x1f', 'xor eax, ecx', 'sub eax, ecx', 'cmp eax, 0x44', 'jle 0x8d70', 'add eax, 0x64', 'jmp 0x8c47', 'add eax, dword [0x00017180]', 'mov ecx, dword [0x000171a4]', 'mov dword [var_54h], eax', 'mov ebx, eax', 'mov eax, dword [0x00017188]', 'lea r10d, [rcx + rax - 1]', 'mov ecx, dword [0x00017194]', 'add ecx, dword [0x000171b0]', 'mov dword [var_50h], r10d', 'mov dword [canary], ecx', 'test edx, edx', 'jne 0x8d80', 'mov eax, dword [0x000171c0]', 'test eax, eax', 'je 0x8c97', 'xor r11d, r11d', 'xor eax, eax', 'add eax, dword [0x0001718c]', 'lea r13, [timeptr]', 'mov dword [var_14h], ecx', 'mov dword [var_44h], eax', 'mov esi, dword [0x00017190]', 'mov rdi, r13', 'mov dword [var_8h], eax', 'mov rax, qword [var_58h]', 'add esi, edx', 'add r11d, dword [0x00017184]', 'mov dword [var_10h], r10d', 'mov qword [var_18h], rax', 'mov rax, qword [var_68h]', 'mov dword [var_48h], esi', 'mov qword [var_20h], rax', 'mov rax, qword [var_70h]', 'mov dword [var_ch], esi', 'mov dword [timeptr], r11d', 'mov dword [var_4h], r11d', 'mov dword [var_60h], 0xffffffff', 'mov qword [var_28h], rax', 'call sym.imp.mktime']"
492,chage,439,"['call sym.imp.localtime', 'mov dword [0x00017198], 2', 'mov dword [0x00017184], 0', 'mov ebx, dword [rax + 0x14]', 'mov dword [0x0001718c], 0', 'mov dword [0x00017190], 0', 'lea edx, [rbx + 0x76c]', 'mov ebx, dword [rax + 0x10]', 'mov dword [0x0001719c], edx', 'mov dword [0x00017194], 0', 'lea edx, [rbx + 1]', 'mov dword [0x000171a4], edx', 'mov edx, dword [rax + 0xc]', 'mov dword [0x00017188], 0', 'mov dword [0x000171b0], edx', 'mov edx, dword [rax + 8]', 'mov dword [0x00017180], 0', 'mov dword [0x000171ac], edx', 'mov edx, dword [rax + 4]', 'mov dword [0x000171c8], 0', 'mov eax, dword [rax]', 'mov dword [0x000171a8], edx', 'mov dword [0x000171a0], eax', 'mov dword [0x000171c4], 0', 'mov dword [0x000171c0], 0', 'mov dword [0x000171bc], 0', 'mov dword [0x000171b8], 0', 'call fcn.00007620', 'endbr64', 'push r15', 'lea r10, [0x0000f0e0]', 'push r14', 'xor r14d, r14d', 'push r13', 'push r12', 'push rbp', 'push rbx', 'xor ebx, ebx', 'sub rsp, 0x528', 'mov rax, qword fs:[0x28]', 'mov qword [var_518h], rax', 'xor eax, eax', 'lea r13, [var_50h]', 'lea r12, [var_1e0h]', 'mov dword [0x00017664], 0', 'lea rax, [var_513h]', 'mov word [var_50h], bx', 'mov rbp, r13', 'mov dword [0x0001765c], 0xfffffffe', 'mov dword [var_14h], 0', 'mov qword [rsp], 0xc8', 'mov qword [s2], r12', 'mov qword [var_18h], r13', 'mov qword [var_20h], rax', 'movsx ebx, byte [r10 + r14]', 'mov r15d, ebx', 'cmp ebx, 0xffffffec', 'je 0x7840', 'lea rax, [0x0000f0a0]', 'movzx edx, byte [rax + r14]', 'mov eax, edx', 'test edx, edx', 'jne 0x78f0', 'movsxd rcx, edx', 'lea rdx, [0x0000ef80]', 'sub eax, 4', 'movzx edi, byte [rdx + rcx]', 'mov edx, 1', 'sub edx, edi', 'mov rsi, rdi', 'movsxd rdx, edx', 'mov edi, dword [r12 + rdx*4]', 'cmp al, 0x2f', 'ja case.0x792b.9', 'lea rdx, [0x0000eec0]', 'movzx eax, al', 'movsxd rax, dword [rdx + rax*4]', 'add rax, rdx', 'jmp rax', 'test eax, eax', 'jne 0x8e58', 'mov edx, dword [0x000171bc]', 'cmp edx, 1', 'jg 0x8e58', 'mov r14d, dword [0x000171b8]', 'cmp r14d, 1', 'jg 0x8e58', 'mov r15d, dword [0x000171c8]', 'cmp r15d, 1', 'jg 0x8e58', 'mov r12d, dword [0x000171c4]', 'cmp r12d, 1', 'jg 0x8e58', 'mov ecx, dword [0x0001719c]', 'mov eax, dword [0x0001719c]', 'sar ecx, 0x1f', 'xor eax, ecx', 'sub eax, ecx', 'cmp eax, 0x44', 'jle 0x8d70', 'add eax, 0x64', 'jmp 0x8c47', 'add eax, dword [0x00017180]', 'mov ecx, dword [0x000171a4]', 'mov dword [var_54h], eax', 'mov ebx, eax', 'mov eax, dword [0x00017188]', 'lea r10d, [rcx + rax - 1]', 'mov ecx, dword [0x00017194]', 'add ecx, dword [0x000171b0]', 'mov dword [var_50h], r10d', 'mov dword [canary], ecx', 'test edx, edx', 'jne 0x8d80', 'mov eax, dword [0x000171c0]', 'test eax, eax', 'je 0x8c97', 'xor r11d, r11d', 'xor eax, eax', 'add eax, dword [0x0001718c]', 'lea r13, [timeptr]', 'mov dword [var_14h], ecx', 'mov dword [var_44h], eax', 'mov esi, dword [0x00017190]', 'mov rdi, r13', 'mov dword [var_8h], eax', 'mov rax, qword [var_58h]', 'add esi, edx', 'add r11d, dword [0x00017184]', 'mov dword [var_10h], r10d', 'mov qword [var_18h], rax', 'mov rax, qword [var_68h]', 'mov dword [var_48h], esi', 'mov qword [var_20h], rax', 'mov rax, qword [var_70h]', 'mov dword [var_ch], esi', 'mov dword [timeptr], r11d', 'mov dword [var_4h], r11d', 'mov dword [var_60h], 0xffffffff', 'mov qword [var_28h], rax', 'call sym.imp.mktime', 'mov r11d, dword [var_4h]', 'mov edx, dword [var_8h]', 'cmp rax, 0xffffffffffffffff', 'mov qword [timer], rax', 'mov esi, dword [var_ch]', 'mov r10d, dword [var_10h]', 'mov ecx, dword [var_14h]', 'je 0x8dd8', 'test r14d, r14d', 'je 0x8e58', 'mov rax, qword [var_18h]', 'mov dword [timeptr], r11d', 'mov dword [var_44h], edx', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov dword [var_48h], esi', 'mov qword [var_68h], rax', 'mov rax, qword [var_28h]', 'mov dword [var_50h], r10d', 'mov qword [var_70h], rax', 'mov eax, dword [0x000171b4]', 'mov dword [var_54h], ebx', 'mov dword [var_60h], 0xffffffff', 'cmp ebx, 0x46', 'jg 0x9008', 'add ecx, 1', 'sub eax, 0x5a0', 'mov dword [canary], ecx', 'mov dword [0x000171b4], eax', 'mov rdi, r13', 'call sym.imp.mktime']"
493,chage,444,"['call sym.imp.localtime', 'mov dword [0x00017198], 2', 'mov dword [0x00017184], 0', 'mov ebx, dword [rax + 0x14]', 'mov dword [0x0001718c], 0', 'mov dword [0x00017190], 0', 'lea edx, [rbx + 0x76c]', 'mov ebx, dword [rax + 0x10]', 'mov dword [0x0001719c], edx', 'mov dword [0x00017194], 0', 'lea edx, [rbx + 1]', 'mov dword [0x000171a4], edx', 'mov edx, dword [rax + 0xc]', 'mov dword [0x00017188], 0', 'mov dword [0x000171b0], edx', 'mov edx, dword [rax + 8]', 'mov dword [0x00017180], 0', 'mov dword [0x000171ac], edx', 'mov edx, dword [rax + 4]', 'mov dword [0x000171c8], 0', 'mov eax, dword [rax]', 'mov dword [0x000171a8], edx', 'mov dword [0x000171a0], eax', 'mov dword [0x000171c4], 0', 'mov dword [0x000171c0], 0', 'mov dword [0x000171bc], 0', 'mov dword [0x000171b8], 0', 'call fcn.00007620', 'endbr64', 'push r15', 'lea r10, [0x0000f0e0]', 'push r14', 'xor r14d, r14d', 'push r13', 'push r12', 'push rbp', 'push rbx', 'xor ebx, ebx', 'sub rsp, 0x528', 'mov rax, qword fs:[0x28]', 'mov qword [var_518h], rax', 'xor eax, eax', 'lea r13, [var_50h]', 'lea r12, [var_1e0h]', 'mov dword [0x00017664], 0', 'lea rax, [var_513h]', 'mov word [var_50h], bx', 'mov rbp, r13', 'mov dword [0x0001765c], 0xfffffffe', 'mov dword [var_14h], 0', 'mov qword [rsp], 0xc8', 'mov qword [s2], r12', 'mov qword [var_18h], r13', 'mov qword [var_20h], rax', 'movsx ebx, byte [r10 + r14]', 'mov r15d, ebx', 'cmp ebx, 0xffffffec', 'je 0x7840', 'lea rax, [0x0000f0a0]', 'movzx edx, byte [rax + r14]', 'mov eax, edx', 'test edx, edx', 'jne 0x78f0', 'movsxd rcx, edx', 'lea rdx, [0x0000ef80]', 'sub eax, 4', 'movzx edi, byte [rdx + rcx]', 'mov edx, 1', 'sub edx, edi', 'mov rsi, rdi', 'movsxd rdx, edx', 'mov edi, dword [r12 + rdx*4]', 'cmp al, 0x2f', 'ja case.0x792b.9', 'lea rdx, [0x0000eec0]', 'movzx eax, al', 'movsxd rax, dword [rdx + rax*4]', 'add rax, rdx', 'jmp rax', 'test eax, eax', 'jne 0x8e58', 'mov edx, dword [0x000171bc]', 'cmp edx, 1', 'jg 0x8e58', 'mov r14d, dword [0x000171b8]', 'cmp r14d, 1', 'jg 0x8e58', 'mov r15d, dword [0x000171c8]', 'cmp r15d, 1', 'jg 0x8e58', 'mov r12d, dword [0x000171c4]', 'cmp r12d, 1', 'jg 0x8e58', 'mov ecx, dword [0x0001719c]', 'mov eax, dword [0x0001719c]', 'sar ecx, 0x1f', 'xor eax, ecx', 'sub eax, ecx', 'cmp eax, 0x44', 'jle 0x8d70', 'add eax, 0x64', 'jmp 0x8c47', 'add eax, dword [0x00017180]', 'mov ecx, dword [0x000171a4]', 'mov dword [var_54h], eax', 'mov ebx, eax', 'mov eax, dword [0x00017188]', 'lea r10d, [rcx + rax - 1]', 'mov ecx, dword [0x00017194]', 'add ecx, dword [0x000171b0]', 'mov dword [var_50h], r10d', 'mov dword [canary], ecx', 'test edx, edx', 'jne 0x8d80', 'mov eax, dword [0x000171c0]', 'test eax, eax', 'je 0x8c97', 'xor r11d, r11d', 'xor eax, eax', 'add eax, dword [0x0001718c]', 'lea r13, [timeptr]', 'mov dword [var_14h], ecx', 'mov dword [var_44h], eax', 'mov esi, dword [0x00017190]', 'mov rdi, r13', 'mov dword [var_8h], eax', 'mov rax, qword [var_58h]', 'add esi, edx', 'add r11d, dword [0x00017184]', 'mov dword [var_10h], r10d', 'mov qword [var_18h], rax', 'mov rax, qword [var_68h]', 'mov dword [var_48h], esi', 'mov qword [var_20h], rax', 'mov rax, qword [var_70h]', 'mov dword [var_ch], esi', 'mov dword [timeptr], r11d', 'mov dword [var_4h], r11d', 'mov dword [var_60h], 0xffffffff', 'mov qword [var_28h], rax', 'call sym.imp.mktime', 'mov r11d, dword [var_4h]', 'mov edx, dword [var_8h]', 'cmp rax, 0xffffffffffffffff', 'mov qword [timer], rax', 'mov esi, dword [var_ch]', 'mov r10d, dword [var_10h]', 'mov ecx, dword [var_14h]', 'je 0x8dd8', 'test r12d, r12d', 'je 0x8d3a', 'test r15d, r15d', 'je 0x8f78', 'mov edx, dword [0x000171cc]', 'sub edx, dword [var_58h]', 'mov rdi, r13', 'add edx, 7', 'mov ecx, dword [0x000171d0]', 'movsxd rax, edx', 'mov r8d, edx', 'imul rax, rax, 0xffffffff92492493', 'sar r8d, 0x1f', 'shr rax, 0x20', 'add eax, edx', 'sar eax, 2', 'sub eax, r8d', 'lea r8d, [rax*8]', 'sub r8d, eax', 'xor eax, eax', 'sub edx, r8d', 'test ecx, ecx', 'setg al', 'sub ecx, eax', 'lea edx, [rdx + rcx*8]', 'sub edx, ecx', 'add dword [canary], edx', 'call sym.imp.mktime']"
494,chage,249,"['call sym.imp.mktime', 'mov r11d, dword [var_4h]', 'mov edx, dword [var_8h]', 'cmp rax, 0xffffffffffffffff', 'mov qword [timer], rax', 'mov esi, dword [var_ch]', 'mov r10d, dword [var_10h]', 'mov ecx, dword [var_14h]', 'je 0x8dd8', 'test r14d, r14d', 'je 0x8e58', 'mov rax, qword [var_18h]', 'mov dword [timeptr], r11d', 'mov dword [var_44h], edx', 'mov qword [var_58h], rax', 'mov rax, qword [var_20h]', 'mov dword [var_48h], esi', 'mov qword [var_68h], rax', 'mov rax, qword [var_28h]', 'mov dword [var_50h], r10d', 'mov qword [var_70h], rax', 'mov eax, dword [0x000171b4]', 'mov dword [var_54h], ebx', 'mov dword [var_60h], 0xffffffff', 'cmp ebx, 0x46', 'jg 0x9008', 'add ecx, 1', 'sub eax, 0x5a0', 'mov dword [canary], ecx', 'mov dword [0x000171b4], eax', 'mov rdi, r13', 'call sym.imp.mktime']"
495,chage,254,"['call sym.imp.mktime', 'mov r11d, dword [var_4h]', 'mov edx, dword [var_8h]', 'cmp rax, 0xffffffffffffffff', 'mov qword [timer], rax', 'mov esi, dword [var_ch]', 'mov r10d, dword [var_10h]', 'mov ecx, dword [var_14h]', 'je 0x8dd8', 'test r12d, r12d', 'je 0x8d3a', 'test r15d, r15d', 'je 0x8f78', 'mov edx, dword [0x000171cc]', 'sub edx, dword [var_58h]', 'mov rdi, r13', 'add edx, 7', 'mov ecx, dword [0x000171d0]', 'movsxd rax, edx', 'mov r8d, edx', 'imul rax, rax, 0xffffffff92492493', 'sar r8d, 0x1f', 'shr rax, 0x20', 'add eax, edx', 'sar eax, 2', 'sub eax, r8d', 'lea r8d, [rax*8]', 'sub r8d, eax', 'xor eax, eax', 'sub edx, r8d', 'test ecx, ecx', 'setg al', 'sub ecx, eax', 'lea edx, [rdx + rcx*8]', 'sub edx, ecx', 'add dword [canary], edx', 'call sym.imp.mktime']"
496,chage,249,"['call sym.imp.mktime', 'mov qword [timer], rax', 'cmp rax, 0xffffffffffffffff', 'jne 0x8d2c', 'test r12d, r12d', 'je 0x8d3a', 'test r15d, r15d', 'je 0x8f78', 'mov edx, dword [0x000171cc]', 'sub edx, dword [var_58h]', 'mov rdi, r13', 'add edx, 7', 'mov ecx, dword [0x000171d0]', 'movsxd rax, edx', 'mov r8d, edx', 'imul rax, rax, 0xffffffff92492493', 'sar r8d, 0x1f', 'shr rax, 0x20', 'add eax, edx', 'sar eax, 2', 'sub eax, r8d', 'lea r8d, [rax*8]', 'sub r8d, eax', 'xor eax, eax', 'sub edx, r8d', 'test ecx, ecx', 'setg al', 'sub ecx, eax', 'lea edx, [rdx + rcx*8]', 'sub edx, ecx', 'add dword [canary], edx', 'call sym.imp.mktime']"
497,cvtsudoers,445,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'test bpl, bpl', 'jne 0x190f0', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'mov dword [var_30h], 0xffffffff', 'call sym.imp.mktime']"
498,cvtsudoers,450,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'cmp bpl, 0x5a', 'jne 0x19210', 'mov dword [var_30h], 0', 'add rbx, 1', 'xor ebp, ebp', 'jmp 0x19158', 'cmp byte [rbx], 0', 'jne 0x19358', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'call sym.imp.mktime']"
499,cvtsudoers,744,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'cmp bpl, 0x5a', 'jne 0x19210', 'mov dword [var_30h], 0', 'add rbx, 1', 'xor ebp, ebp', 'jmp 0x19158', 'cmp byte [rbx], 0', 'jne 0x19358', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x190a2', 'lea rdi, [var_8h]', 'movsxd rbp, ebp', 'call fcn.00019400', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.gmtime', 'test rax, rax', 'je 0x194a0', 'mov rdi, r15', 'mov r13d, dword [rax]', 'mov r14d, dword [rax + 4]', 'mov r12d, dword [rax + 8]', 'mov ebx, dword [rax + 0x14]', 'mov ebp, dword [rax + 0x1c]', 'call sym.imp.localtime']"
500,cvtsudoers,447,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x190a2', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'test bpl, bpl', 'jne 0x190f0', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'mov dword [var_30h], 0xffffffff', 'call sym.imp.mktime']"
501,cvtsudoers,452,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x190a2', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'cmp bpl, 0x5a', 'jne 0x19210', 'mov dword [var_30h], 0', 'add rbx, 1', 'xor ebp, ebp', 'jmp 0x19158', 'cmp byte [rbx], 0', 'jne 0x19358', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'call sym.imp.mktime']"
502,cvtsudoers,294,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x190a2', 'lea rdi, [var_8h]', 'movsxd rbp, ebp', 'call fcn.00019400', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.gmtime', 'test rax, rax', 'je 0x194a0', 'mov rdi, r15', 'mov r13d, dword [rax]', 'mov r14d, dword [rax + 4]', 'mov r12d, dword [rax + 8]', 'mov ebx, dword [rax + 0x14]', 'mov ebp, dword [rax + 0x1c]', 'call sym.imp.localtime']"
503,cvtsudoers,291,"['call sym.imp.localtime', 'mov rdx, rax', 'test rax, rax', 'je 0x194a0', 'add rsp, 8', 'xor eax, eax', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rax, qword [var_8h]', 'mov r12, rax', 'sub r12, rbp', 'mov qword [var_8h], r12', 'jmp 0x190a2', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'test bpl, bpl', 'jne 0x190f0', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'mov dword [var_30h], 0xffffffff', 'call sym.imp.mktime']"
504,cvtsudoers,296,"['call sym.imp.localtime', 'mov rdx, rax', 'test rax, rax', 'je 0x194a0', 'add rsp, 8', 'xor eax, eax', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rax, qword [var_8h]', 'mov r12, rax', 'sub r12, rbp', 'mov qword [var_8h], r12', 'jmp 0x190a2', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'cmp bpl, 0x5a', 'jne 0x19210', 'mov dword [var_30h], 0', 'add rbx, 1', 'xor ebp, ebp', 'jmp 0x19158', 'cmp byte [rbx], 0', 'jne 0x19358', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'call sym.imp.mktime']"
505,cvtsudoers,590,"['call sym.imp.localtime', 'mov rdx, rax', 'test rax, rax', 'je 0x194a0', 'add rsp, 8', 'xor eax, eax', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rax, qword [var_8h]', 'mov r12, rax', 'sub r12, rbp', 'mov qword [var_8h], r12', 'jmp 0x190a2', 'mov r8, r12', 'mov ecx, r13d', 'mov edx, 0xa2', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'lea rdi, str.parse_gentime', 'call sym.imp.sudo_debug_exit_time_t_v1', 'mov rax, qword [var_68h]', 'xor rax, qword fs:[0x28]', 'jne 0x193f4', 'add rsp, 0x78', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov qword [r13 + 0x30], rax', 'mov rax, qword [var_58h]', 'test rax, rax', 'je 0x14af8', 'mov rdi, rax', 'call fcn.00018f70', 'endbr64', 'push r15', 'lea rsi, str..._.._.._plugins_sudoers_gentime.c', 'mov edx, 0x3f', 'push r14', 'push r13', 'push r12', 'mov r12, rdi', 'lea rdi, str.parse_gentime', 'push rbp', 'push rbx', 'sub rsp, 0x78', 'mov rax, qword fs:[0x28]', 'mov qword [var_68h], rax', 'xor eax, eax', 'lea rax, [0x000437c0]', 'mov r13d, dword [rax + 0x30]', 'mov ecx, r13d', 'call sym.imp.sudo_debug_enter_v1', 'lea rsi, str.0123456789._', 'mov rdi, r12', 'call sym.imp.strspn', 'cmp rax, 0x10', 'ja 0x19300', 'lea rdi, [var_50h]', 'mov ecx, 0x11', 'mov rdx, rax', 'mov rsi, r12', 'lea r14, [var_10h]', 'mov rbx, rax', 'call sym.imp.__memcpy_chk', 'pxor xmm0, xmm0', 'mov byte [rsp + rbx + 0x50], 0', 'lea rcx, [var_20h]', 'movaps xmmword [var_10h], xmm0', 'lea rdx, [var_24h]', 'mov rdi, rax', 'lea rsi, str._4d_2d_2d_2d_2d_2d', 'mov qword [var_40h], 0', 'movaps xmmword [var_20h], xmm0', 'movaps xmmword [var_30h], xmm0', 'push r14', 'lea rax, [var_1ch]', 'push rax', 'xor eax, eax', 'lea r9, [var_28h]', 'lea r8, [var_2ch]', 'call sym.imp.__isoc99_sscanf', 'pop rdi', 'pop r8', 'mov r15d, eax', 'cmp eax, 3', 'jle 0x193b0', 'lea ebx, [rax + rax + 2]', 'movsxd rbx, ebx', 'add rbx, r12', 'movzx ebp, byte [rbx]', 'mov eax, ebp', 'and eax, 0xfffffffd', 'cmp al, 0x2c', 'je 0x191d0', 'cmp bpl, 0x2d', 'je 0x190fa', 'jg 0x191b0', 'cmp bpl, 0x5a', 'jne 0x19210', 'mov dword [var_30h], 0', 'add rbx, 1', 'xor ebp, ebp', 'jmp 0x19158', 'cmp byte [rbx], 0', 'jne 0x19358', 'mov rdi, r14', 'sub dword [var_24h], 0x76c', 'sub dword [var_20h], 1', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'mov r12, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x190a2', 'lea rdi, [var_8h]', 'movsxd rbp, ebp', 'call fcn.00019400', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'call sym.imp.gmtime', 'test rax, rax', 'je 0x194a0', 'mov rdi, r15', 'mov r13d, dword [rax]', 'mov r14d, dword [rax + 4]', 'mov r12d, dword [rax + 8]', 'mov ebx, dword [rax + 0x14]', 'mov ebp, dword [rax + 0x1c]', 'call sym.imp.localtime']"
506,pr,323,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6448', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x645e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x3831', 'movdqa xmm0, xmmword [0x00013130]', 'movaps xmmword [rsp], xmm0', 'mov r14, qword [var_8h]', 'lea r15, [var_10h]', 'mov rdi, qword [0x00013168]', 'mov rsi, rsp', 'mov rdx, r15', 'call fcn.0000c500', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xc590', 'mov r12, rdi', 'call fcn.0000c420', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0000d199]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xc4b0', 'cmp byte [rbx + 8], 0', 'jne 0xc490', 'mov rdi, rbp', 'call fcn.0000c220', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xc290', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xc283', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp qword [0x000131c8], 0', 'mov qword [0x00013168], rax', 'jne 0x2f85', 'movzx edi, byte [0x000131ff]', 'test dil, dil', 'je 0x2fab', 'cmp byte [var_1dh], 0', 'je 0x2fe1', 'mov eax, dword [obj.optind]', 'cmp r12d, eax', 'jle 0x3027', 'cmp dword [var_18h], 0', 'je 0x315c', 'xor esi, esi', 'xor edi, edi', 'call fcn.00004c50', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12d, edi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x18', 'mov edx, dword [0x00013048]', 'lea eax, [rdx - 0xa]', 'mov dword [0x000131f0], eax', 'test eax, eax', 'jle 0x4fd8', 'cmp byte [0x0001304d], 0', 'je 0x4fe6', 'cmp byte [0x00013198], 0', 'je 0x4ca6', 'test r12d, r12d', 'jne 0x5040', 'mov byte [0x000131ff], 0', 'mov esi, dword [0x00013030]', 'xor r8d, r8d', 'cmp byte [0x0001304c], 0', 'je 0x4ccf', 'movzx edx, byte [0x000131ec]', 'cmp esi, 1', 'jle 0x5728', 'mov byte [0x0001304c], 0', 'mov eax, dword [0x0001318c]', 'jmp 0x4d2b', 'test dl, dl', 'je 0x4d36', 'movzx edi, byte [0x000131ac]', 'test dil, dil', 'je 0x5038', 'xor ecx, ecx', 'jmp 0x4d8a', 'lea edx, [rsi - 1]', 'imul edx, eax', 'jo 0x5b8c', 'mov eax, dword [0x00013044]', 'sub eax, ecx', 'sub eax, edx', 'jo 0x5b96', 'cdq', 'idiv esi', 'mov dword [0x000131e8], eax', 'test eax, eax', 'jle 0x5ba0', 'test dil, dil', 'jne 0x5740', 'mov rdi, qword [0x00013148]', 'call sym.imp.free', 'cmp dword [0x0001303c], 8', 'mov edi, 8', 'cmovge edi, dword [0x0001303c]', 'movsxd rdi, edi', 'call fcn.0000a550', 'mov rdi, qword [0x00013228]', 'mov dword [0x00013194], 0', 'mov qword [0x00013148], rax', 'call sym.imp.free', 'movsxd rdi, dword [0x00013030]', 'mov rax, rdi', 'shr rax, 0x3a', 'setne al', 'shl rdi, 6', 'movzx eax, al', 'js 0x5bc4', 'test rax, rax', 'jne 0x5bc4', 'call fcn.0000a550', 'cmp byte [0x000131ff], 0', 'mov qword [0x00013228], rax', 'mov rbp, rax', 'je 0x5060', 'test r12d, r12d', 'je 0x4e8c', 'mov r10d, dword [0x00013030]', 'test r10d, r10d', 'je 0x507c', 'mov esi, 0xffffffff', 'lea rdi, [0x0000d085]', 'call fcn.000037e0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12d, esi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x108', 'mov rax, qword fs:[0x28]', 'mov qword [var_f8h], rax', 'xor eax, eax', 'cmp byte [rdi], 0x2d', 'jne 0x3930', 'test r12d, r12d', 'js 0x3823', 'cmp qword [0x00013130], 0', 'je 0x39d8', 'lea rdi, [0x00013130]', 'call fcn.00006400', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
507,pr,104,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6448', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x645e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x3831', 'movdqa xmm0, xmmword [0x00013130]', 'movaps xmmword [rsp], xmm0', 'mov r14, qword [var_8h]', 'lea r15, [var_10h]', 'mov rdi, qword [0x00013168]', 'mov rsi, rsp', 'mov rdx, r15', 'call fcn.0000c500', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xc590', 'mov r12, rdi', 'call fcn.0000c420', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0000d199]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xc4b0', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0xc441', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xc56e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
508,pr,117,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6448', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x645e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x3831', 'movdqa xmm0, xmmword [0x00013130]', 'movaps xmmword [rsp], xmm0', 'mov r14, qword [var_8h]', 'lea r15, [var_10h]', 'mov rdi, qword [0x00013168]', 'mov rsi, rsp', 'mov rdx, r15', 'call fcn.0000c500', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xc590', 'mov r12, rdi', 'call fcn.0000c420', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0000d199]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xc4b0', 'cmp byte [rbx + 8], 0', 'jne 0xc490', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0xc441', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xc6e0', 'mov rdi, rbp', 'call sym.imp.mktime']"
509,pr,341,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x6448', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x645e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x3831', 'movdqa xmm0, xmmword [0x00013130]', 'movaps xmmword [rsp], xmm0', 'mov r14, qword [var_8h]', 'lea r15, [var_10h]', 'mov rdi, qword [0x00013168]', 'mov rsi, rsp', 'mov rdx, r15', 'call fcn.0000c500', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xc590', 'mov r12, rdi', 'call fcn.0000c420', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0000d199]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0xc4b0', 'cmp byte [rbx + 8], 0', 'jne 0xc490', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0xc441', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xc6e0', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc658', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
510,pr,346,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xc560', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000c2c0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xc380', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xc2f4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xc370', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xc358', 'cmp byte [rbx], 0', 'jne 0xc323', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xc398', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xc3d8', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xc3f0', 'mov rdi, r12', 'call fcn.0000c220', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xc290', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xc283', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp qword [0x000131c8], 0', 'mov qword [0x00013168], rax', 'jne 0x2f85', 'movzx edi, byte [0x000131ff]', 'test dil, dil', 'je 0x2fab', 'cmp byte [var_1dh], 0', 'je 0x2fe1', 'mov eax, dword [obj.optind]', 'cmp r12d, eax', 'jle 0x3027', 'cmp dword [var_18h], 0', 'je 0x315c', 'xor esi, esi', 'xor edi, edi', 'call fcn.00004c50', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12d, edi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x18', 'mov edx, dword [0x00013048]', 'lea eax, [rdx - 0xa]', 'mov dword [0x000131f0], eax', 'test eax, eax', 'jle 0x4fd8', 'cmp byte [0x0001304d], 0', 'je 0x4fe6', 'cmp byte [0x00013198], 0', 'je 0x4ca6', 'test r12d, r12d', 'jne 0x5040', 'mov byte [0x000131ff], 0', 'mov esi, dword [0x00013030]', 'xor r8d, r8d', 'cmp byte [0x0001304c], 0', 'je 0x4ccf', 'movzx edx, byte [0x000131ec]', 'cmp esi, 1', 'jle 0x5728', 'mov byte [0x0001304c], 0', 'mov eax, dword [0x0001318c]', 'jmp 0x4d2b', 'test dl, dl', 'je 0x4d36', 'movzx edi, byte [0x000131ac]', 'test dil, dil', 'je 0x5038', 'xor ecx, ecx', 'jmp 0x4d8a', 'lea edx, [rsi - 1]', 'imul edx, eax', 'jo 0x5b8c', 'mov eax, dword [0x00013044]', 'sub eax, ecx', 'sub eax, edx', 'jo 0x5b96', 'cdq', 'idiv esi', 'mov dword [0x000131e8], eax', 'test eax, eax', 'jle 0x5ba0', 'test dil, dil', 'jne 0x5740', 'mov rdi, qword [0x00013148]', 'call sym.imp.free', 'cmp dword [0x0001303c], 8', 'mov edi, 8', 'cmovge edi, dword [0x0001303c]', 'movsxd rdi, edi', 'call fcn.0000a550', 'mov rdi, qword [0x00013228]', 'mov dword [0x00013194], 0', 'mov qword [0x00013148], rax', 'call sym.imp.free', 'movsxd rdi, dword [0x00013030]', 'mov rax, rdi', 'shr rax, 0x3a', 'setne al', 'shl rdi, 6', 'movzx eax, al', 'js 0x5bc4', 'test rax, rax', 'jne 0x5bc4', 'call fcn.0000a550', 'cmp byte [0x000131ff], 0', 'mov qword [0x00013228], rax', 'mov rbp, rax', 'je 0x5060', 'test r12d, r12d', 'je 0x4e8c', 'mov r10d, dword [0x00013030]', 'test r10d, r10d', 'je 0x507c', 'mov esi, 0xffffffff', 'lea rdi, [0x0000d085]', 'call fcn.000037e0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12d, esi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x108', 'mov rax, qword fs:[0x28]', 'mov qword [var_f8h], rax', 'xor eax, eax', 'cmp byte [rdi], 0x2d', 'jne 0x3930', 'test r12d, r12d', 'js 0x3823', 'cmp qword [0x00013130], 0', 'je 0x39d8', 'lea rdi, [0x00013130]', 'call fcn.00006400', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
511,pr,101,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xc560', 'cmp r13, 1', 'je 0xc56e', 'mov rdi, r13', 'call fcn.0000c1c0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0xc1e4', 'call fcn.0000c160', 'mov rsi, rdi', 'test rdi, rdi', 'je 0xc180', 'lea rdi, [0x0000d199]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0xc4c8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0xc47e', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xc56e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
512,pr,100,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xc560', 'cmp r13, 1', 'je 0xc56e', 'mov rdi, r13', 'call fcn.0000c1c0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0xc1e4', 'call fcn.0000c160', 'mov rsi, rdi', 'test rdi, rdi', 'je 0xc180', 'lea rdi, [0x0000d199]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0xc4c8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0xc47e', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xc6e0', 'mov rdi, rbp', 'call sym.imp.mktime']"
513,pr,324,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xc560', 'cmp r13, 1', 'je 0xc56e', 'mov rdi, r13', 'call fcn.0000c1c0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0xc1e4', 'call fcn.0000c160', 'mov rsi, rdi', 'test rdi, rdi', 'je 0xc180', 'lea rdi, [0x0000d199]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0xc4c8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0xc47e', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xc6e0', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc658', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
514,pr,516,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc658', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000c2c0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xc380', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xc2f4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xc370', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xc358', 'cmp byte [rbx], 0', 'jne 0xc323', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xc398', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xc3d8', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xc3f0', 'mov rdi, r12', 'call fcn.0000c220', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xc290', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xc283', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp qword [0x000131c8], 0', 'mov qword [0x00013168], rax', 'jne 0x2f85', 'movzx edi, byte [0x000131ff]', 'test dil, dil', 'je 0x2fab', 'cmp byte [var_1dh], 0', 'je 0x2fe1', 'mov eax, dword [obj.optind]', 'cmp r12d, eax', 'jle 0x3027', 'cmp dword [var_18h], 0', 'je 0x315c', 'xor esi, esi', 'xor edi, edi', 'call fcn.00004c50', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12d, edi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x18', 'mov edx, dword [0x00013048]', 'lea eax, [rdx - 0xa]', 'mov dword [0x000131f0], eax', 'test eax, eax', 'jle 0x4fd8', 'cmp byte [0x0001304d], 0', 'je 0x4fe6', 'cmp byte [0x00013198], 0', 'je 0x4ca6', 'test r12d, r12d', 'jne 0x5040', 'mov byte [0x000131ff], 0', 'mov esi, dword [0x00013030]', 'xor r8d, r8d', 'cmp byte [0x0001304c], 0', 'je 0x4ccf', 'movzx edx, byte [0x000131ec]', 'cmp esi, 1', 'jle 0x5728', 'mov byte [0x0001304c], 0', 'mov eax, dword [0x0001318c]', 'jmp 0x4d2b', 'test dl, dl', 'je 0x4d36', 'movzx edi, byte [0x000131ac]', 'test dil, dil', 'je 0x5038', 'xor ecx, ecx', 'jmp 0x4d8a', 'lea edx, [rsi - 1]', 'imul edx, eax', 'jo 0x5b8c', 'mov eax, dword [0x00013044]', 'sub eax, ecx', 'sub eax, edx', 'jo 0x5b96', 'cdq', 'idiv esi', 'mov dword [0x000131e8], eax', 'test eax, eax', 'jle 0x5ba0', 'test dil, dil', 'jne 0x5740', 'mov rdi, qword [0x00013148]', 'call sym.imp.free', 'cmp dword [0x0001303c], 8', 'mov edi, 8', 'cmovge edi, dword [0x0001303c]', 'movsxd rdi, edi', 'call fcn.0000a550', 'mov rdi, qword [0x00013228]', 'mov dword [0x00013194], 0', 'mov qword [0x00013148], rax', 'call sym.imp.free', 'movsxd rdi, dword [0x00013030]', 'mov rax, rdi', 'shr rax, 0x3a', 'setne al', 'shl rdi, 6', 'movzx eax, al', 'js 0x5bc4', 'test rax, rax', 'jne 0x5bc4', 'call fcn.0000a550', 'cmp byte [0x000131ff], 0', 'mov qword [0x00013228], rax', 'mov rbp, rax', 'je 0x5060', 'test r12d, r12d', 'je 0x4e8c', 'mov r10d, dword [0x00013030]', 'test r10d, r10d', 'je 0x507c', 'mov esi, 0xffffffff', 'lea rdi, [0x0000d085]', 'call fcn.000037e0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12d, esi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x108', 'mov rax, qword fs:[0x28]', 'mov qword [var_f8h], rax', 'xor eax, eax', 'cmp byte [rdi], 0x2d', 'jne 0x3930', 'test r12d, r12d', 'js 0x3823', 'cmp qword [0x00013130], 0', 'je 0x39d8', 'lea rdi, [0x00013130]', 'call fcn.00006400', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
515,pr,296,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc658', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000c2c0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xc380', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0xc618', 'cmp r13, 1', 'je 0xc62e', 'mov rdi, r13', 'call fcn.0000c1c0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0xc1e4', 'call fcn.0000c160', 'mov rsi, rdi', 'test rdi, rdi', 'je 0xc180', 'lea rdi, [0x0000d199]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0xc4c8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0xc47e', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xc56e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
516,pr,295,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc658', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000c2c0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xc380', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0xc618', 'cmp r13, 1', 'je 0xc62e', 'mov rdi, r13', 'call fcn.0000c1c0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0xc1e4', 'call fcn.0000c160', 'mov rsi, rdi', 'test rdi, rdi', 'je 0xc180', 'lea rdi, [0x0000d199]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0xc4c8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0xc47e', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xc6e0', 'mov rdi, rbp', 'call sym.imp.mktime']"
517,pr,224,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc658', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
518,pr,372,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xc618', 'mov eax, dword [rbp + 0x20]', 'mov edx, dword [var_30h]', 'test eax, eax', 'sete sil', 'test edx, edx', 'sete cl', 'cmp sil, cl', 'je 0xc68b', 'mov eax, dword [rbp + 0x10]', 'mov edx, dword [rbp + 0x14]', 'xor eax, dword [var_20h]', 'xor edx, dword [var_24h]', 'or eax, edx', 'mov edx, dword [rbp + 0xc]', 'xor edx, dword [var_1ch]', 'or eax, edx', 'mov edx, dword [rbp + 8]', 'xor edx, dword [var_18h]', 'or eax, edx', 'mov edx, dword [rbp + 4]', 'xor edx, dword [var_14h]', 'or eax, edx', 'mov edx, dword [rbp]', 'xor edx, dword [var_10h]', 'or eax, edx', 'je 0xc600', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.0000c2c0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0xc380', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0xc2f4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0xc370', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0xc358', 'cmp byte [rbx], 0', 'jne 0xc323', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0xc398', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0xc3d8', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0xc3f0', 'mov rdi, r12', 'call fcn.0000c220', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0xc290', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0xc283', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp qword [0x000131c8], 0', 'mov qword [0x00013168], rax', 'jne 0x2f85', 'movzx edi, byte [0x000131ff]', 'test dil, dil', 'je 0x2fab', 'cmp byte [var_1dh], 0', 'je 0x2fe1', 'mov eax, dword [obj.optind]', 'cmp r12d, eax', 'jle 0x3027', 'cmp dword [var_18h], 0', 'je 0x315c', 'xor esi, esi', 'xor edi, edi', 'call fcn.00004c50', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12d, edi', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x18', 'mov edx, dword [0x00013048]', 'lea eax, [rdx - 0xa]', 'mov dword [0x000131f0], eax', 'test eax, eax', 'jle 0x4fd8', 'cmp byte [0x0001304d], 0', 'je 0x4fe6', 'cmp byte [0x00013198], 0', 'je 0x4ca6', 'test r12d, r12d', 'jne 0x5040', 'mov byte [0x000131ff], 0', 'mov esi, dword [0x00013030]', 'xor r8d, r8d', 'cmp byte [0x0001304c], 0', 'je 0x4ccf', 'movzx edx, byte [0x000131ec]', 'cmp esi, 1', 'jle 0x5728', 'mov byte [0x0001304c], 0', 'mov eax, dword [0x0001318c]', 'jmp 0x4d2b', 'test dl, dl', 'je 0x4d36', 'movzx edi, byte [0x000131ac]', 'test dil, dil', 'je 0x5038', 'xor ecx, ecx', 'jmp 0x4d8a', 'lea edx, [rsi - 1]', 'imul edx, eax', 'jo 0x5b8c', 'mov eax, dword [0x00013044]', 'sub eax, ecx', 'sub eax, edx', 'jo 0x5b96', 'cdq', 'idiv esi', 'mov dword [0x000131e8], eax', 'test eax, eax', 'jle 0x5ba0', 'test dil, dil', 'jne 0x5740', 'mov rdi, qword [0x00013148]', 'call sym.imp.free', 'cmp dword [0x0001303c], 8', 'mov edi, 8', 'cmovge edi, dword [0x0001303c]', 'movsxd rdi, edi', 'call fcn.0000a550', 'mov rdi, qword [0x00013228]', 'mov dword [0x00013194], 0', 'mov qword [0x00013148], rax', 'call sym.imp.free', 'movsxd rdi, dword [0x00013030]', 'mov rax, rdi', 'shr rax, 0x3a', 'setne al', 'shl rdi, 6', 'movzx eax, al', 'js 0x5bc4', 'test rax, rax', 'jne 0x5bc4', 'call fcn.0000a550', 'cmp byte [0x000131ff], 0', 'mov qword [0x00013228], rax', 'mov rbp, rax', 'je 0x5060', 'test r12d, r12d', 'je 0x4e8c', 'mov r10d, dword [0x00013030]', 'test r10d, r10d', 'je 0x507c', 'mov esi, 0xffffffff', 'lea rdi, [0x0000d085]', 'call fcn.000037e0', 'push r15', 'push r14', 'push r13', 'push r12', 'mov r12d, esi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x108', 'mov rax, qword fs:[0x28]', 'mov qword [var_f8h], rax', 'xor eax, eax', 'cmp byte [rdi], 0x2d', 'jne 0x3930', 'test r12d, r12d', 'js 0x3823', 'cmp qword [0x00013130], 0', 'je 0x39d8', 'lea rdi, [0x00013130]', 'call fcn.00006400', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
519,pr,101,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xc618', 'cmp r13, 1', 'je 0xc62e', 'mov rdi, r13', 'call fcn.0000c1c0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0xc1e4', 'call fcn.0000c160', 'mov rsi, rdi', 'test rdi, rdi', 'je 0xc180', 'lea rdi, [0x0000d199]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0xc4c8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0xc47e', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xc56e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
520,pr,100,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xc618', 'cmp r13, 1', 'je 0xc62e', 'mov rdi, r13', 'call fcn.0000c1c0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0xc1e4', 'call fcn.0000c160', 'mov rsi, rdi', 'test rdi, rdi', 'je 0xc180', 'lea rdi, [0x0000d199]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0xc4c8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0xc47e', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xc6e0', 'mov rdi, rbp', 'call sym.imp.mktime']"
521,pr,324,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0xc618', 'cmp r13, 1', 'je 0xc62e', 'mov rdi, r13', 'call fcn.0000c1c0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0xc1e4', 'call fcn.0000c160', 'mov rsi, rdi', 'test rdi, rdi', 'je 0xc180', 'lea rdi, [0x0000d199]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0xc4c8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0xc47e', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0xc6e0', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0xc658', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
522,x86_64-linux-gnu-ranlib,269,"['call sym.imp.ctime', 'test rax, rax', 'je 0x8d48', 'lea r9, [rax + 0x14]', 'lea r8, [rax + 4]', 'xor eax, eax', 'mov edx, 0x28', 'lea r13, [var_b0h]', 'lea rcx, str._.12s__.4s', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.__sprintf_chk', 'mov edi, dword [var_28h]', 'lea rsi, [var_a5h]', 'call fcn.000093d0', 'endbr64', 'mov rdx, rdi', 'mov eax, 0x64', 'and edx, 0xf000', 'cmp rdx, 0x4000', 'je 0x9437', 'mov byte [rsi], al', 'mov rax, rdi', 'and eax, 0x100', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 1], al', 'mov rax, rdi', 'and eax, 0x80', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 2], al', 'mov rax, rdi', 'and eax, 0x40', 'cmp rax, 1', 'mov rax, rdi', 'sbb ecx, ecx', 'and eax, 0x20', 'and ecx, 0xffffffb5', 'add ecx, 0x78', 'cmp rax, 1', 'sbb eax, eax', 'mov byte [rsi + 3], cl', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 4], al', 'mov rax, rdi', 'and eax, 0x10', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 5], al', 'mov rax, rdi', 'and eax, 8', 'cmp rax, 1', 'mov rax, rdi', 'sbb edx, edx', 'and eax, 4', 'and edx, 0xffffffb5', 'add edx, 0x78', 'cmp rax, 1', 'sbb eax, eax', 'mov byte [rsi + 6], dl', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 7], al', 'mov rax, rdi', 'and eax, 2', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 8], al', 'mov rax, rdi', 'and eax, 1', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffb5', 'add eax, 0x78', 'mov byte [rsi + 9], al', 'test edi, 0x800', 'je 0x9517', 'test edi, 0x400', 'je 0x9532', 'test edi, 0x200', 'je 0x954c', 'ret', 'mov esi, 1', 'mov rdi, rbp', 'xor eax, eax', 'mov byte [var_afh], 0', 'lea rcx, [var_a6h]', 'lea rdx, str._s__ld__ld__6lu__s_', 'push r13', 'push qword [var_48h]', 'mov r9d, dword [var_40h]', 'mov r8d, dword [var_3ch]', 'call sym.imp.__fprintf_chk', 'pop rax', 'pop rdx', 'jmp 0x8c2b', 'mov rdi, qword [rbx]', 'mov rsi, rbp', 'call sym.imp.fputs', 'test r12d, r12d', 'je 0x8c50', 'mov rsi, rbp', 'mov edi, 0xa', 'call sym.imp.fputc', 'mov rax, qword [var_d8h]', 'xor rax, qword fs:[0x28]', 'jne 0x8d7f', 'add rsp, 0xe8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [rbx + 0xd8]', 'test rbx, rbx', 'jne 0x7820', 'mov edx, dword [0x000111b8]', 'mov rdi, qword [0x00011260]', 'mov rsi, rbx', 'xor ecx, ecx', 'call fcn.00008be0', 'endbr64', 'push r13', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0xe8', 'mov rax, qword fs:[0x28]', 'mov qword [var_d8h], rax', 'xor eax, eax', 'test edx, edx', 'je 0x8c2b', 'mov rax, qword [rbx + 8]', 'lea rsi, [var_10h]', 'mov rdi, rbx', 'call qword [rax + 0x1e0]', 'test eax, eax', 'je 0x8cb0', 'mov rax, qword [var_68h]', 'lea rdi, [timer]', 'mov qword [timer], rax', 'call sym.imp.ctime']"
523,nm-online,30456,"['call sym.imp.g_get_monotonic_time', 'xor edi, edi', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov rcx, rax', 'imul rdx', 'sar rcx, 0x3f', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_58h], rdx', 'call sym.imp.g_option_context_new', 'lea rsi, str.NetworkManager', 'mov rbp, rax', 'mov rdi, rax', 'call sym.imp.g_option_context_set_translation_domain', 'xor esi, esi', 'mov rdi, rbp', 'call sym.imp.g_option_context_set_ignore_unknown_options', 'mov esi, 1', 'mov rdi, rbp', 'call sym.imp.g_option_context_set_help_enabled', 'xor edx, edx', 'lea rsi, [var_80h]', 'mov rdi, rbp', 'call sym.imp.g_option_context_add_main_entries', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.Waits_for_NetworkManager_to_finish_activating_startup_network_connections.', 'call sym.imp.dcgettext', 'mov rdi, rbp', 'mov rsi, rax', 'call sym.imp.g_option_context_set_summary', 'xor ecx, ecx', 'mov rdi, rbp', 'mov rdx, rsp', 'lea rsi, [var_ch]', 'call sym.imp.g_option_context_parse', 'mov rdi, rbp', 'mov ebx, eax', 'call sym.imp.g_option_context_free', 'test ebx, ebx', 'je 0x28ea', 'mov eax, dword [var_1ch]', 'cmp eax, 0xe10', 'ja 0x28ea', 'test eax, eax', 'jne 0x2767', 'xor esi, esi', 'xor edi, edi', 'call sym.imp.g_main_loop_new', 'imul ecx, dword [var_1ch], 0x3e8', 'movabs rdx, 0x8888888888888889', 'mov qword [var_20h], rax', 'mov rax, qword [var_58h]', 'movsxd rcx, ecx', 'add rax, rcx', 'add rcx, 7', 'mov qword [var_60h], rax', 'mov rax, rcx', 'imul rdx', 'mov eax, 1', 'add rdx, rcx', 'sar rcx, 0x3f', 'sar rdx, 3', 'sub rdx, rcx', 'test rdx, rdx', 'cmovle rdx, rax', 'mov qword [var_68h], rdx', 'call sym.imp.g_cancellable_new', 'mov rdx, r12', 'mov edi, 0x1e', 'lea rsi, [0x00002b40]', 'mov qword [var_30h], rax', 'call sym.imp.g_timeout_add_seconds', 'mov rdi, qword [var_30h]', 'mov rdx, r12', 'lea rsi, [0x00002b90]', 'mov dword [var_38h], eax', 'call sym.imp.nm_client_new_async', 'mov rdi, qword [var_20h]', 'call sym.imp.g_main_loop_run', 'mov rbp, qword [var_30h]', 'test rbp, rbp', 'jne 0x2893', 'mov edi, dword [var_38h]', 'test edi, edi', 'jne 0x291f', 'mov edi, dword [var_3ch]', 'test edi, edi', 'jne 0x2931', 'mov rsi, qword [canary]', 'test rsi, rsi', 'jne 0x2943', 'mov rdi, qword [var_28h]', 'test rdi, rdi', 'je 0x284c', 'mov rdi, qword [var_20h]', 'test rdi, rdi', 'je 0x2864', 'mov eax, dword [var_50h]', 'test eax, eax', 'je 0x28b1', 'mov r12d, dword [var_70h]', 'mov rbx, qword [var_60h]', 'call sym.imp.g_get_monotonic_time']"
524,ipcs,179,"['call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
525,ipcs,45,"['call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
526,ipcs,521,"['call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
527,ipcs,566,"['call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
528,ipcs,611,"['call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
529,ipcs,521,"['call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
530,ipcs,566,"['call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
531,ipcs,611,"['call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
532,ipcs,1173,"['call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
533,ipcs,1318,"['call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
534,ipcs,134,"['call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
535,ipcs,179,"['call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
536,ipcs,476,"['call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
537,ipcs,521,"['call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
538,ipcs,566,"['call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
539,ipcs,476,"['call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
540,ipcs,521,"['call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
541,ipcs,566,"['call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
542,ipcs,1128,"['call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
543,ipcs,1273,"['call sym.imp.ctime', 'mov rdx, rax', 'lea rsi, [0x0000c256]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov ecx, dword [rbx + 8]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x626f', 'mov rcx, qword [rax]', 'add rsp, 8', 'mov rdi, rbp', 'xor eax, eax', 'pop rbx', 'lea rdx, [0x0000c36c]', 'mov esi, 1', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
544,ipcs,566,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
545,ipcs,611,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
546,ipcs,224,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
547,ipcs,45,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
548,ipcs,90,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
549,ipcs,566,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
550,ipcs,611,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
551,ipcs,656,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
552,ipcs,878,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x2e9c', 'test r13d, r13d', 'jne 0x4635', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
553,ipcs,1023,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x2e9c', 'test r13d, r13d', 'jne 0x4635', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
554,ipcs,521,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
555,ipcs,566,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
556,ipcs,179,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
557,ipcs,224,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
558,ipcs,45,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
559,ipcs,521,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
560,ipcs,566,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
561,ipcs,611,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
562,ipcs,833,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x2e9c', 'test r13d, r13d', 'jne 0x4635', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
563,ipcs,978,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x2e9c', 'test r13d, r13d', 'jne 0x4635', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
564,ipcs,476,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
565,ipcs,521,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
566,ipcs,134,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
567,ipcs,179,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
568,ipcs,224,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
569,ipcs,476,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
570,ipcs,521,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
571,ipcs,566,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x62ba', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
572,ipcs,788,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x2e9c', 'test r13d, r13d', 'jne 0x4635', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
573,ipcs,933,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x2e9c', 'test r13d, r13d', 'jne 0x4635', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
574,ipcs,566,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
575,ipcs,611,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
576,ipcs,566,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
577,ipcs,611,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
578,ipcs,656,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
579,ipcs,224,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
580,ipcs,45,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
581,ipcs,90,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
582,ipcs,876,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
583,ipcs,1021,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
584,ipcs,521,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
585,ipcs,566,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
586,ipcs,521,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
587,ipcs,566,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
588,ipcs,611,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
589,ipcs,179,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
590,ipcs,224,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
591,ipcs,45,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
592,ipcs,831,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
593,ipcs,976,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
594,ipcs,476,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
595,ipcs,521,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x30a7', 'mov rbx, qword [rbx + 0x40]', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
596,ipcs,476,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
597,ipcs,521,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
598,ipcs,566,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
599,ipcs,134,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
600,ipcs,179,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
601,ipcs,224,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
602,ipcs,786,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
603,ipcs,931,"['call sym.imp.ctime', 'lea rdx, [rax + 4]', 'lea rsi, str.___20.16s_n', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
604,ipcs,145,"['call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
605,ipcs,1476,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.att_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x38], 0', 'je 0x4bdd', 'lea rdi, [rax + 0x38]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
606,ipcs,1521,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.att_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x38], 0', 'je 0x4bdd', 'lea rdi, [rax + 0x38]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
607,ipcs,1818,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.att_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x38], 0', 'je 0x4bdd', 'lea rdi, [rax + 0x38]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
608,ipcs,1863,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.att_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x38], 0', 'je 0x4bdd', 'lea rdi, [rax + 0x38]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
609,ipcs,1908,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.att_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x38], 0', 'je 0x4bdd', 'lea rdi, [rax + 0x38]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
610,ipcs,1818,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.att_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x38], 0', 'je 0x4bdd', 'lea rdi, [rax + 0x38]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
611,ipcs,1863,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.att_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x38], 0', 'je 0x4bdd', 'lea rdi, [rax + 0x38]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
612,ipcs,1908,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.att_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x38], 0', 'je 0x4bdd', 'lea rdi, [rax + 0x38]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
613,ipcs,1198,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.att_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x38], 0', 'je 0x4bdd', 'lea rdi, [rax + 0x38]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
614,ipcs,1343,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.att_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x38], 0', 'je 0x4bdd', 'lea rdi, [rax + 0x38]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
615,ipcs,147,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.att_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x38], 0', 'je 0x4bdd', 'lea rdi, [rax + 0x38]', 'call sym.imp.ctime']"
616,ipcs,292,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.att_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x38], 0', 'je 0x4bdd', 'lea rdi, [rax + 0x38]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime']"
617,ipcs,1329,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
618,ipcs,1374,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
619,ipcs,1671,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
620,ipcs,1716,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
621,ipcs,1761,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
622,ipcs,1671,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
623,ipcs,1716,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
624,ipcs,1761,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
625,ipcs,1051,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
626,ipcs,1196,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
627,ipcs,145,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.det_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x40]', 'call sym.imp.ctime']"
628,ipcs,1184,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
629,ipcs,1229,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
630,ipcs,1526,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
631,ipcs,1571,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
632,ipcs,1616,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
633,ipcs,1526,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
634,ipcs,1571,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
635,ipcs,1616,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x60]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x5b50', 'pop rbx', 'ret', 'jmp 0x3847', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f30', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x35b5', 'mov rbx, qword [rbx + 0x60]', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
636,ipcs,906,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
637,ipcs,1051,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00005b40', 'endbr64', 'test rdi, rdi', 'je 0x5b68', 'ret', 'jmp 0x2ea5', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
638,ipcs,1480,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.send_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4ba7', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
639,ipcs,1525,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.send_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4ba7', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
640,ipcs,1822,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.send_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4ba7', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
641,ipcs,1867,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.send_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4ba7', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
642,ipcs,1912,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.send_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4ba7', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
643,ipcs,1674,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.send_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4ba7', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp r14b, 5', 'ja case.0x2f72.0', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str._______Shared_Memory_Segments__________n', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.status', 'call sym.imp.dcgettext', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.nattch', 'mov r12, rax', 'call sym.imp.dcgettext', 'cmp dword [var_14h], 3', 'mov edx, 5', 'mov rbp, rax', 'je 0x4f76', 'lea rsi, [0x0000d030]', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rbx, rax', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov r15, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.shmid', 'xor edi, edi', 'mov qword [var_8h], rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov r9, r15', 'mov rcx, r13', 'mov edi, 1', 'push r8', 'mov rdx, rax', 'lea rsi, str.__10s___10s___10s___10s___10s___10s___12s_n', 'xor eax, eax', 'push r12', 'push rbp', 'push rbx', 'mov r8, qword [var_8h]', 'call sym.imp.__printf_chk', 'add rsp, 0x20', 'jmp 0x34e4', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.000057e0', 'test eax, eax', 'jle 0x3847', 'mov rbx, qword [var_20h]', 'mov r13d, dword [var_14h]', 'lea r12, [0x0000c3f9]', 'jmp 0x35b9', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
644,ipcs,1719,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.send_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4ba7', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp r14b, 5', 'ja case.0x2f72.0', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str._______Shared_Memory_Segments__________n', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.status', 'call sym.imp.dcgettext', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.nattch', 'mov r12, rax', 'call sym.imp.dcgettext', 'cmp dword [var_14h], 3', 'mov edx, 5', 'mov rbp, rax', 'je 0x4f76', 'lea rsi, [0x0000d030]', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rbx, rax', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov r15, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.shmid', 'xor edi, edi', 'mov qword [var_8h], rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov r9, r15', 'mov rcx, r13', 'mov edi, 1', 'push r8', 'mov rdx, rax', 'lea rsi, str.__10s___10s___10s___10s___10s___10s___12s_n', 'xor eax, eax', 'push r12', 'push rbp', 'push rbx', 'mov r8, qword [var_8h]', 'call sym.imp.__printf_chk', 'add rsp, 0x20', 'jmp 0x34e4', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.000057e0', 'test eax, eax', 'jle 0x3847', 'mov rbx, qword [var_20h]', 'mov r13d, dword [var_14h]', 'lea r12, [0x0000c3f9]', 'jmp 0x35b9', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
645,ipcs,1764,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.send_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4ba7', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp r14b, 5', 'ja case.0x2f72.0', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str._______Shared_Memory_Segments__________n', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.status', 'call sym.imp.dcgettext', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.nattch', 'mov r12, rax', 'call sym.imp.dcgettext', 'cmp dword [var_14h], 3', 'mov edx, 5', 'mov rbp, rax', 'je 0x4f76', 'lea rsi, [0x0000d030]', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rbx, rax', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov r15, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.shmid', 'xor edi, edi', 'mov qword [var_8h], rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov r9, r15', 'mov rcx, r13', 'mov edi, 1', 'push r8', 'mov rdx, rax', 'lea rsi, str.__10s___10s___10s___10s___10s___10s___12s_n', 'xor eax, eax', 'push r12', 'push rbp', 'push rbx', 'mov r8, qword [var_8h]', 'call sym.imp.__printf_chk', 'add rsp, 0x20', 'jmp 0x34e4', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.000057e0', 'test eax, eax', 'jle 0x3847', 'mov rbx, qword [var_20h]', 'mov r13d, dword [var_14h]', 'lea r12, [0x0000c3f9]', 'jmp 0x35b9', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
646,ipcs,1202,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.send_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4ba7', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'ret', 'jmp 0x2e9c', 'test r13d, r13d', 'jne 0x4635', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
647,ipcs,1347,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.send_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4ba7', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'ret', 'jmp 0x2e9c', 'test r13d, r13d', 'jne 0x4635', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
648,ipcs,147,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.send_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4ba7', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
649,ipcs,294,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.send_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4ba7', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime']"
650,ipcs,1333,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
651,ipcs,1378,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
652,ipcs,1675,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
653,ipcs,1720,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
654,ipcs,1765,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
655,ipcs,1527,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp r14b, 5', 'ja case.0x2f72.0', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str._______Shared_Memory_Segments__________n', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.status', 'call sym.imp.dcgettext', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.nattch', 'mov r12, rax', 'call sym.imp.dcgettext', 'cmp dword [var_14h], 3', 'mov edx, 5', 'mov rbp, rax', 'je 0x4f76', 'lea rsi, [0x0000d030]', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rbx, rax', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov r15, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.shmid', 'xor edi, edi', 'mov qword [var_8h], rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov r9, r15', 'mov rcx, r13', 'mov edi, 1', 'push r8', 'mov rdx, rax', 'lea rsi, str.__10s___10s___10s___10s___10s___10s___12s_n', 'xor eax, eax', 'push r12', 'push rbp', 'push rbx', 'mov r8, qword [var_8h]', 'call sym.imp.__printf_chk', 'add rsp, 0x20', 'jmp 0x34e4', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.000057e0', 'test eax, eax', 'jle 0x3847', 'mov rbx, qword [var_20h]', 'mov r13d, dword [var_14h]', 'lea r12, [0x0000c3f9]', 'jmp 0x35b9', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
656,ipcs,1572,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp r14b, 5', 'ja case.0x2f72.0', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str._______Shared_Memory_Segments__________n', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.status', 'call sym.imp.dcgettext', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.nattch', 'mov r12, rax', 'call sym.imp.dcgettext', 'cmp dword [var_14h], 3', 'mov edx, 5', 'mov rbp, rax', 'je 0x4f76', 'lea rsi, [0x0000d030]', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rbx, rax', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov r15, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.shmid', 'xor edi, edi', 'mov qword [var_8h], rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov r9, r15', 'mov rcx, r13', 'mov edi, 1', 'push r8', 'mov rdx, rax', 'lea rsi, str.__10s___10s___10s___10s___10s___10s___12s_n', 'xor eax, eax', 'push r12', 'push rbp', 'push rbx', 'mov r8, qword [var_8h]', 'call sym.imp.__printf_chk', 'add rsp, 0x20', 'jmp 0x34e4', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.000057e0', 'test eax, eax', 'jle 0x3847', 'mov rbx, qword [var_20h]', 'mov r13d, dword [var_14h]', 'lea r12, [0x0000c3f9]', 'jmp 0x35b9', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
657,ipcs,1617,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp r14b, 5', 'ja case.0x2f72.0', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str._______Shared_Memory_Segments__________n', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.status', 'call sym.imp.dcgettext', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.nattch', 'mov r12, rax', 'call sym.imp.dcgettext', 'cmp dword [var_14h], 3', 'mov edx, 5', 'mov rbp, rax', 'je 0x4f76', 'lea rsi, [0x0000d030]', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rbx, rax', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov r15, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.shmid', 'xor edi, edi', 'mov qword [var_8h], rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov r9, r15', 'mov rcx, r13', 'mov edi, 1', 'push r8', 'mov rdx, rax', 'lea rsi, str.__10s___10s___10s___10s___10s___10s___12s_n', 'xor eax, eax', 'push r12', 'push rbp', 'push rbx', 'mov r8, qword [var_8h]', 'call sym.imp.__printf_chk', 'add rsp, 0x20', 'jmp 0x34e4', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.000057e0', 'test eax, eax', 'jle 0x3847', 'mov rbx, qword [var_20h]', 'mov r13d, dword [var_14h]', 'lea r12, [0x0000c3f9]', 'jmp 0x35b9', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
658,ipcs,1055,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'ret', 'jmp 0x2e9c', 'test r13d, r13d', 'jne 0x4635', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
659,ipcs,1200,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'ret', 'jmp 0x2e9c', 'test r13d, r13d', 'jne 0x4635', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
660,ipcs,147,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.rcv_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x30], 0', 'je 0x4b71', 'lea rdi, [rax + 0x30]', 'call sym.imp.ctime']"
661,ipcs,1186,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
662,ipcs,1231,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'jne 0x3049', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cc8', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4a87', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'mov rdx, rax', 'xor eax, eax', 'mov rsi, r12', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4a6c', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
663,ipcs,1528,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime']"
664,ipcs,1573,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime']"
665,ipcs,1618,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp dword [var_10h], 0', 'je 0x2eb0', 'cmp r14b, 5', 'ja case.0x2f53.0', 'mov edx, 5', 'lea rsi, str._______Semaphore_Arrays__________n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'lea rsi, str.nsems', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.semid', 'xor edi, edi', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r12, rax', 'call sym.imp.dcgettext', 'mov rcx, r12', 'mov r9, rbp', 'mov r8, rbx', 'mov rdx, rax', 'push rax', 'lea rsi, str.__10s___10s___10s___10s___10s_n', 'mov edi, 1', 'push r13', 'xor eax, eax', 'call sym.imp.__printf_chk', 'pop rdx', 'pop rcx', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'test eax, eax', 'jle 0x32ab', 'mov rbx, qword [var_20h]', 'lea r12, str.____26.24s', 'jmp 0x30ab', 'cmp qword [rbx + 0x40], 0', 'je 0x4b44', 'cmp r14b, 3', 'je 0x4a58', 'mov rdi, qword [obj.stdout]', 'mov rsi, rbx', 'call fcn.000061b0', 'endbr64', 'push rbp', 'xor eax, eax', 'lea rdx, str.__10d___10o', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 8', 'mov r8d, dword [rsi + 0x18]', 'mov ecx, dword [rsi]', 'mov esi, 1', 'and r8d, 0x1ff', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x10]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x6290', 'mov ecx, dword [rbx + 0x10]', 'mov rdi, rbp', 'xor eax, eax', 'lea rdx, [0x0000c3e5]', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0x14]', 'call sym.imp.getgrgid', 'test rax, rax', 'jne 0x621b', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'test rax, rax', 'je 0x62e4', 'mov rcx, qword [rax]', 'mov rdi, rbp', 'xor eax, eax', 'mov esi, 1', 'lea rdx, str.___10s', 'call sym.imp.__fprintf_chk', 'mov edi, dword [rbx + 0xc]', 'call sym.imp.getgrgid', 'test rax, rax', 'je 0x630e', 'mov ecx, dword [rbx + 0xc]', 'add rsp, 8', 'mov rdi, rbp', 'mov esi, 1', 'pop rbx', 'lea rdx, [0x0000c465]', 'xor eax, eax', 'pop rbp', 'jmp sym.imp.__fprintf_chk', 'jmp 0x3f0d', 'mov rbx, qword [rbx + 0x58]', 'cmp qword [rbx + 0x58], 0', 'je 0x4b62', 'cmp r14b, 3', 'je 0x4a44', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov r12, rax', 'cmp r14b, 4', 'je 0x42a2', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4cad', 'mov rcx, qword [rax]', 'lea rsi, str.__8d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x20], 0', 'je 0x4b29', 'lea rdi, [rbx + 0x20]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x28], 0', 'je 0x4b0e', 'lea rdi, [rbx + 0x28]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'mov rsi, rbp', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4af3', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
666,ipcs,1380,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp r14b, 5', 'ja case.0x2f72.0', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str._______Shared_Memory_Segments__________n', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.status', 'call sym.imp.dcgettext', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.nattch', 'mov r12, rax', 'call sym.imp.dcgettext', 'cmp dword [var_14h], 3', 'mov edx, 5', 'mov rbp, rax', 'je 0x4f76', 'lea rsi, [0x0000d030]', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rbx, rax', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov r15, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.shmid', 'xor edi, edi', 'mov qword [var_8h], rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov r9, r15', 'mov rcx, r13', 'mov edi, 1', 'push r8', 'mov rdx, rax', 'lea rsi, str.__10s___10s___10s___10s___10s___10s___12s_n', 'xor eax, eax', 'push r12', 'push rbp', 'push rbx', 'mov r8, qword [var_8h]', 'call sym.imp.__printf_chk', 'add rsp, 0x20', 'jmp 0x34e4', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.000057e0', 'test eax, eax', 'jle 0x3847', 'mov rbx, qword [var_20h]', 'mov r13d, dword [var_14h]', 'lea r12, [0x0000c3f9]', 'jmp 0x35b9', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime']"
667,ipcs,1425,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp r14b, 5', 'ja case.0x2f72.0', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str._______Shared_Memory_Segments__________n', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.status', 'call sym.imp.dcgettext', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.nattch', 'mov r12, rax', 'call sym.imp.dcgettext', 'cmp dword [var_14h], 3', 'mov edx, 5', 'mov rbp, rax', 'je 0x4f76', 'lea rsi, [0x0000d030]', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rbx, rax', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov r15, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.shmid', 'xor edi, edi', 'mov qword [var_8h], rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov r9, r15', 'mov rcx, r13', 'mov edi, 1', 'push r8', 'mov rdx, rax', 'lea rsi, str.__10s___10s___10s___10s___10s___10s___12s_n', 'xor eax, eax', 'push r12', 'push rbp', 'push rbx', 'mov r8, qword [var_8h]', 'call sym.imp.__printf_chk', 'add rsp, 0x20', 'jmp 0x34e4', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.000057e0', 'test eax, eax', 'jle 0x3847', 'mov rbx, qword [var_20h]', 'mov r13d, dword [var_14h]', 'lea r12, [0x0000c3f9]', 'jmp 0x35b9', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime']"
668,ipcs,1470,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'push rbx', 'mov rbx, rdi', 'nop dword [rax]', 'mov rdi, rbx', 'mov rbx, qword [rbx + 0x58]', 'call sym.imp.free', 'test rbx, rbx', 'jne 0x6190', 'pop rbx', 'ret', 'jmp 0x4125', 'mov edi, 0xa', 'call sym.imp.putchar', 'jmp 0x2f2b', 'test r13d, r13d', 'jne 0x2f56', 'cmp r14b, 5', 'ja case.0x2f72.0', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str._______Shared_Memory_Segments__________n', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.status', 'call sym.imp.dcgettext', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.nattch', 'mov r12, rax', 'call sym.imp.dcgettext', 'cmp dword [var_14h], 3', 'mov edx, 5', 'mov rbp, rax', 'je 0x4f76', 'lea rsi, [0x0000d030]', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rbx, rax', 'mov edx, 5', 'lea rsi, str.perms', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.owner', 'xor edi, edi', 'mov r15, rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, str.shmid', 'xor edi, edi', 'mov qword [var_8h], rax', 'call sym.imp.dcgettext', 'mov edx, 5', 'lea rsi, [0x0000c388]', 'xor edi, edi', 'mov r13, rax', 'call sym.imp.dcgettext', 'mov r9, r15', 'mov rcx, r13', 'mov edi, 1', 'push r8', 'mov rdx, rax', 'lea rsi, str.__10s___10s___10s___10s___10s___10s___12s_n', 'xor eax, eax', 'push r12', 'push rbp', 'push rbx', 'mov r8, qword [var_8h]', 'call sym.imp.__printf_chk', 'add rsp, 0x20', 'jmp 0x34e4', 'or edi, 0xffffffff', 'lea rsi, [var_20h]', 'call fcn.000057e0', 'test eax, eax', 'jle 0x3847', 'mov rbx, qword [var_20h]', 'mov r13d, dword [var_14h]', 'lea r12, [0x0000c3f9]', 'jmp 0x35b9', 'cmp qword [rbx + 0x60], 0', 'je 0x4b53', 'cmp r14b, 3', 'je 0x4a30', 'mov edi, dword [rbx + 8]', 'call sym.imp.getpwuid', 'mov rbp, rax', 'cmp r14b, 4', 'je 0x4341', 'mov edx, dword [rbx]', 'test rax, rax', 'je 0x4c92', 'mov rcx, qword [rax]', 'lea rsi, str.__10d___10.10s', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x30], 0', 'je 0x4ad8', 'lea rdi, [rbx + 0x30]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x38], 0', 'je 0x4abd', 'lea rdi, [rbx + 0x38]', 'call sym.imp.ctime', 'lea rdx, [rax + 4]', 'xor eax, eax', 'lea rsi, str.___20.16s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'cmp qword [rbx + 0x40], 0', 'je 0x4aa2', 'lea rdi, [rbx + 0x40]', 'call sym.imp.ctime']"
669,ipcs,908,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'ret', 'jmp 0x2e9c', 'test r13d, r13d', 'jne 0x4635', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime']"
670,ipcs,1053,"['call sym.imp.ctime', 'mov r12, rax', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.change_time__26.24s_n', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edi, 0xa', 'call sym.imp.putchar', 'mov rdi, qword [var_20h]', 'call fcn.00006180', 'endbr64', 'test rdi, rdi', 'je 0x61a8', 'ret', 'jmp 0x2e9c', 'test r13d, r13d', 'jne 0x4635', 'cmp dword [var_10h], 0', 'jne 0x43e8', 'mov edi, dword [var_1ch]', 'lea rsi, [var_20h]', 'call fcn.00005b70', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'mov esi, 0x48', 'push rbx', 'mov ebx, edi', 'mov edi, 1', 'sub rsp, 0xb8', 'mov rax, qword fs:[0x28]', 'mov qword [var_a8h], rax', 'xor eax, eax', 'call sym.imp.calloc', 'test rax, rax', 'je 0x5cb8', 'mov qword [rbp], rax', 'lea rsi, [0x0000c32f]', 'mov r15, rax', 'lea rdi, str._proc_sysvipc_sem', 'mov qword [rax + 0x40], 0', 'call sym.imp.fopen', 'mov r13, rax', 'test rax, rax', 'je 0x5d0f', 'lea rcx, [var_10h]', 'mov edx, 0x13', 'xor esi, esi', 'xor edi, edi', 'xor eax, eax', 'xor r12d, r12d', 'lea r14, [var_40h]', 'call sym.imp.semctl', 'mov ecx, ebx', 'not ecx', 'mov dword [var_8h], eax', 'mov dword [var_ch], ecx', 'test eax, eax', 'js 0x5df5', 'mov rdi, qword [rbp]', 'xor r12d, r12d', 'call sym.imp.free', 'jmp 0x5c71', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x5e17', 'add rsp, 0xb8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov edx, 5', 'test eax, eax', 'jle 0x4d70', 'xor edi, edi', 'lea rsi, str._nSemaphore_Array_semid_d_n', 'call sym.imp.dcgettext', 'mov edx, dword [var_1ch]', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.uid_u_t_gid_u_t_cuid_u_t_cgid_u_n', 'mov r12d, dword [rax + 8]', 'mov ebp, dword [rax + 0x14]', 'mov ebx, dword [rax + 0x10]', 'mov r13d, dword [rax + 0xc]', 'call sym.imp.dcgettext', 'mov r9d, ebp', 'mov edx, r12d', 'mov edi, 1', 'mov r8d, ebx', 'mov rsi, rax', 'mov ecx, r13d', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.mode_o__access_perms_o_n', 'mov r12d, dword [rax + 0x18]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov ecx, r12d', 'mov rsi, rax', 'mov edx, r12d', 'xor eax, eax', 'and ecx, 0x1ff', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str.nsems___ju_n', 'mov r12, qword [rax + 0x30]', 'call sym.imp.dcgettext', 'mov edi, 1', 'mov rsi, rax', 'mov rdx, r12', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'cmp qword [rax + 0x28], 0', 'je 0x4b8c', 'lea rdi, [rax + 0x28]', 'call sym.imp.ctime', 'mov r12, rax', 'mov edx, 5', 'lea rsi, str.otime____26.24s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, r12', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_20h]', 'lea rdi, [rax + 0x20]', 'call sym.imp.ctime']"
671,upower,144,"['call sym.imp.up_device_to_text', 'lea rdi, [0x0000406c]', 'mov rsi, rax', 'mov r14, rax', 'xor eax, eax', 'call sym.imp.g_print', 'mov rdi, r14', 'call sym.imp.g_free', 'cmp dword [r12 + 8], ebx', 'ja 0x2868', 'mov rdx, qword [r12]', 'mov eax, ebx', 'mov r14, qword [rdx + rax*8]', 'mov eax, dword [var_3ch]', 'mov rdi, r14', 'test eax, eax', 'jne 0x2848', 'call sym.imp.up_device_get_object_path', 'mov rdi, r13', 'add ebx, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.g_print', 'mov rdi, r14', 'call sym.imp.up_device_to_text']"
672,upower,169,"['call sym.imp.up_device_to_text', 'lea rdi, [0x0000406c]', 'mov rsi, rax', 'mov r14, rax', 'xor eax, eax', 'call sym.imp.g_print', 'mov rdi, r14', 'call sym.imp.g_free', 'cmp dword [r12 + 8], ebx', 'ja 0x2868', 'mov rdi, r12', 'call sym.imp.g_ptr_array_unref', 'mov rdi, rbp', 'call sym.imp.up_client_get_display_device', 'cmp dword [var_3ch], 0', 'mov r12, rax', 'mov rdi, rax', 'jne 0x2a41', 'call sym.imp.up_device_get_object_path', 'lea rdi, str.Device:__s_n', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.g_print', 'mov rdi, r12', 'call sym.imp.up_device_to_text']"
673,make,733,"['call sym.imp.localtime', 'test rax, rax', 'je 0x111a0', 'mov r8, qword [rsp]', 'lea rcx, [0x0002d430]', 'test r8, r8', 'js 0x111b7', 'mov rdx, 0xffffffffffffffff', 'mov esi, 1', 'mov rdi, rbx', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'jmp 0x1111a', 'mov rdi, rbx', 'call sym.imp.strlen', 'lea r8d, [rbp - 3]', 'mov esi, 1', 'mov rdx, 0xffffffffffffffff', 'add rbx, rax', 'and r8d, 0x3fffffff', 'lea rcx, str.._09d', 'xor eax, eax', 'mov rdi, rbx', 'call sym.imp.__sprintf_chk', 'mov rdi, rbx', 'call sym.imp.strlen', 'lea rax, [rbx + rax - 1]', 'movzx edx, byte [rax]', 'cmp dl, 0x30', 'jne 0x11174', 'cmp dl, 0x2e', 'setne dl', 'movzx edx, dl', 'mov byte [rax + rdx], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x111d2', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'mov edx, 5', 'lea rsi, str.__Last_modified__s_n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdx, rbp', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov edx, 5', 'test byte [rbx + 0x89], 4', 'je 0x11858', 'xor edi, edi', 'lea rsi, str.__File_has_been_updated.', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'movzx edx, byte [rbx + 0x88]', 'mov eax, edx', 'shr al, 2', 'and eax, 3', 'cmp al, 1', 'je 0x11870', 'test al, al', 'je 0x11818', 'and edx, 3', 'cmp dl, 2', 'je 0x119e0', 'ja 0x119b8', 'cmp dl, 1', 'je 0x1174c', 'cmp qword [rbx + 0x50], 0', 'je 0x1175b', 'mov rdi, qword [rbx + 0x20]', 'test rdi, rdi', 'je 0x11769', 'mov rdi, qword [rbx + 0x38]', 'test rdi, rdi', 'je 0x11777', 'call fcn.000114c0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x40', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'mov eax, dword [obj.no_builtin_rules_flag]', 'test eax, eax', 'je 0x114f2', 'mov rsi, qword [loc._edata]', 'mov edi, 0xa', 'call sym.imp._IO_putc', 'mov rax, qword [rbx + 0x20]', 'test rax, rax', 'je 0x1151c', 'cmp qword [rbx + 0x50], 0', 'je 0x1152b', 'test byte [rbx + 0x89], 8', 'je 0x11980', 'cmp qword [rbx + 0x68], 0', 'lea rax, [0x0002fd01]', 'mov rdx, qword [rbx]', 'mov edi, 1', 'lea rcx, [0x0002c22d]', 'lea rsi, str._s:_s', 'cmove rcx, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [rbx + 0x18]', 'call sym.print_prereqs', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0x11490', 'mov rsi, qword [loc._edata]', 'pop rbx', 'mov edi, 0xa', 'pop rbp', 'pop r12', 'jmp sym.imp._IO_putc', 'test byte [rbx + 0x88], 0x20', 'jne 0x11960', 'movzx eax, byte [rbx + 0x89]', 'test al, 0x20', 'jne 0x11930', 'test al, 0x10', 'jne 0x11910', 'test byte [rbx + 0x8a], 1', 'jne 0x118f0', 'test byte [rbx + 0x88], 0x10', 'jne 0x118d0', 'mov edx, 5', 'test byte [rbx + 0x89], 1', 'jne 0x11798', 'xor edi, edi', 'lea rsi, str.__Implicit_rule_search_has_not_been_done.', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'mov rbp, qword [rbx + 0x28]', 'test rbp, rbp', 'je 0x11602', 'test byte [rbx + 0x89], 0x40', 'jne 0x118b0', 'cmp qword [rbx + 0x30], 0', 'je 0x11691', 'mov rsi, qword [rbx + 0x70]', 'test rsi, rsi', 'je 0x11890', 'cmp rsi, 1', 'je 0x11a20', 'cmp rsi, 2', 'je 0x11a00', 'mov rbp, rsp', 'mov rdi, rbp', 'call sym.file_timestamp_sprintf', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'lea rax, [rsi - 3]', 'mov rdi, rsp', 'shr rax, 0x1e', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
674,make,10466,"['call sym.imp.localtime', 'test rax, rax', 'je 0x111a0', 'mov r8, qword [rsp]', 'lea rcx, [0x0002d430]', 'test r8, r8', 'js 0x111b7', 'mov rdx, 0xffffffffffffffff', 'mov esi, 1', 'mov rdi, rbx', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'jmp 0x1111a', 'mov rdi, rbx', 'call sym.imp.strlen', 'lea r8d, [rbp - 3]', 'mov esi, 1', 'mov rdx, 0xffffffffffffffff', 'add rbx, rax', 'and r8d, 0x3fffffff', 'lea rcx, str.._09d', 'xor eax, eax', 'mov rdi, rbx', 'call sym.imp.__sprintf_chk', 'mov rdi, rbx', 'call sym.imp.strlen', 'lea rax, [rbx + rax - 1]', 'movzx edx, byte [rax]', 'cmp dl, 0x30', 'jne 0x11174', 'cmp dl, 0x2e', 'setne dl', 'movzx edx, dl', 'mov byte [rax + rdx], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x111d2', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'lea rsi, str._s:_Timestamp_out_of_range__substituting__s', 'mov edx, 5', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdi, r12', 'mov r13, rax', 'call sym.imp.strlen', 'mov rsi, rbp', 'mov r9d, dword [rsi]', 'add rsi, 4', 'lea edi, [r9 - 0x1010101]', 'not r9d', 'and edi, r9d', 'and edi, 0x80808080', 'je 0x11280', 'mov ecx, edi', 'mov r8, rbp', 'mov rdx, r13', 'shr ecx, 0x10', 'test edi, 0x8080', 'cmove edi, ecx', 'lea rcx, [rsi + 2]', 'cmove rsi, rcx', 'mov ecx, edi', 'add cl, dil', 'mov rcx, r12', 'sbb rsi, 3', 'xor edi, edi', 'sub rsi, rbp', 'add rsi, rax', 'xor eax, eax', 'call sym.error', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0xd8', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x1e230', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, r12', 'call sym.imp.strlen', 'mov rdi, qword [obj.program]', 'mov rbx, rax', 'call sym.imp.strlen', 'lea rbx, [r13 + rbx + 0x1a]', 'add rbx, rax', 'test rbp, rbp', 'je 0x1e350', 'mov rdi, rbx', 'call fcn.0001d5e0', 'mov rdx, qword [0x0003bac8]', 'mov rax, qword [0x0003bac0]', 'push rbx', 'mov rbx, rdi', 'cmp rdx, rdi', 'jb 0x1d600', 'mov byte [rax + rbx - 1], 0', 'pop rbx', 'ret', 'mov rbx, rax', 'mov r9d, dword [obj.makelevel]', 'mov r8, qword [obj.program]', 'test r9d, r9d', 'jne 0x1e390', 'lea rcx, str._s:_', 'mov rdx, 0xffffffffffffffff', 'mov rdi, rbx', 'xor eax, eax', 'mov esi, 1', 'call sym.imp.__sprintf_chk', 'jmp 0x1e2b6', 'mov rdi, rbx', 'call sym.imp.strlen', 'mov esi, 1', 'mov r8, rsp', 'mov rcx, r12', 'add rbx, rax', 'lea rax, [arg_100h]', 'mov rdx, 0xffffffffffffffff', 'mov dword [rsp], 0x18', 'mov qword [var_8h], rax', 'mov rdi, rbx', 'lea rax, [var_20h]', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.__vsprintf_chk', 'mov rdi, rbx', 'call sym.imp.strlen', 'mov rsi, qword [0x0003bac0]', 'mov edx, 0xa', 'mov word [rbx + rax], dx', 'test rsi, rsi', 'je 0x1e32d', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e3b2', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'mov rax, rbx', 'jne 0x11313', 'add rsp, 0x48', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r12, rax', 'mov qword [var_b8h], r12', 'jmp 0x23e7d', 'mov eax, dword [obj.clock_skew_detected]', 'test eax, eax', 'je 0x23ff0', 'cmp r12, 0xffffffffffffffff', 'je 0x23e8b', 'cmp r12, 1', 'je 0x23e8b', 'test byte [r14 + 0x89], 4', 'jne 0x23e8b', 'cmp qword [0x0003bb30], r12', 'jae 0x23e8b', 'lea rdi, [s]', 'call sym.file_timestamp_now', 'push rbp', 'mov rbp, rdi', 'xor edi, edi', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rbx, rsp', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
675,make,10515,"['call sym.imp.localtime', 'test rax, rax', 'je 0x111a0', 'mov r8, qword [rsp]', 'lea rcx, [0x0002d430]', 'test r8, r8', 'js 0x111b7', 'mov rdx, 0xffffffffffffffff', 'mov esi, 1', 'mov rdi, rbx', 'xor eax, eax', 'call sym.imp.__sprintf_chk', 'jmp 0x1111a', 'mov rdi, rbx', 'call sym.imp.strlen', 'lea r8d, [rbp - 3]', 'mov esi, 1', 'mov rdx, 0xffffffffffffffff', 'add rbx, rax', 'and r8d, 0x3fffffff', 'lea rcx, str.._09d', 'xor eax, eax', 'mov rdi, rbx', 'call sym.imp.__sprintf_chk', 'mov rdi, rbx', 'call sym.imp.strlen', 'lea rax, [rbx + rax - 1]', 'movzx edx, byte [rax]', 'cmp dl, 0x30', 'jne 0x11174', 'cmp dl, 0x2e', 'setne dl', 'movzx edx, dl', 'mov byte [rax + rdx], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x111d2', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'lea rsi, str._s:_Timestamp_out_of_range__substituting__s', 'mov edx, 5', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdi, r12', 'mov r13, rax', 'call sym.imp.strlen', 'mov rsi, rbp', 'mov r9d, dword [rsi]', 'add rsi, 4', 'lea edi, [r9 - 0x1010101]', 'not r9d', 'and edi, r9d', 'and edi, 0x80808080', 'je 0x11280', 'mov ecx, edi', 'mov r8, rbp', 'mov rdx, r13', 'shr ecx, 0x10', 'test edi, 0x8080', 'cmove edi, ecx', 'lea rcx, [rsi + 2]', 'cmove rsi, rcx', 'mov ecx, edi', 'add cl, dil', 'mov rcx, r12', 'sbb rsi, 3', 'xor edi, edi', 'sub rsi, rbp', 'add rsi, rax', 'xor eax, eax', 'call sym.error', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0xd8', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x1e230', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, r12', 'call sym.imp.strlen', 'mov rdi, qword [obj.program]', 'mov rbx, rax', 'call sym.imp.strlen', 'lea rbx, [r13 + rbx + 0x1a]', 'add rbx, rax', 'test rbp, rbp', 'je 0x1e350', 'mov rdi, rbx', 'call fcn.0001d5e0', 'mov rdx, qword [0x0003bac8]', 'mov rax, qword [0x0003bac0]', 'push rbx', 'mov rbx, rdi', 'cmp rdx, rdi', 'jb 0x1d600', 'lea rsi, [rdx + rdi*2]', 'mov rdi, rax', 'mov qword [0x0003bac8], rsi', 'call sym.xrealloc', 'sub rsp, 8', 'mov eax, 1', 'test esi, esi', 'cmove esi, eax', 'mov esi, esi', 'test rdi, rdi', 'je 0x1c8d8', 'mov rdi, rsi', 'call sym.imp.malloc', 'jmp 0x1c8ca', 'test rax, rax', 'je 0x1c8e2', 'add rsp, 8', 'ret', 'mov byte [rax + rbx - 1], 0', 'pop rbx', 'mov qword [0x0003bac0], rax', 'ret', 'mov r8, qword [r13]', 'mov rbx, rax', 'test r8, r8', 'je 0x1e7d4', 'mov r9, qword [r13 + 0x10]', 'lea rcx, str._s:_lu:__', 'mov rdi, rbx', 'xor eax, eax', 'add r9, qword [r13 + 8]', 'or rdx, 0xffffffffffffffff', 'mov esi, 1', 'call sym.imp.__sprintf_chk', 'mov rdi, rbx', 'call sym.imp.strlen', 'mov r8, rsp', 'mov rcx, r12', 'mov esi, 1', 'add rbx, rax', 'lea rax, [arg_110h]', 'mov rdx, 0xffffffffffffffff', 'mov dword [rsp], 0x18', 'mov qword [var_8h], rax', 'mov rdi, rbx', 'lea rax, [var_20h]', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.__vsprintf_chk', 'mov rsi, rbp', 'mov rdi, rbx', 'call sym.imp.strcat', 'mov rsi, qword [0x0003bac0]', 'test rsi, rsi', 'je 0x1e7a8', 'mov edi, 2', 'call sym.die', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'cmp byte [0x000393d4], 0', 'jne 0x1b864', 'cmp dword [obj.print_version_flag], 0', 'mov byte [0x000393d4], 1', 'jne 0x1b872', 'xor ebx, ebx', 'test ebp, ebp', 'setne bl', 'cmp dword [obj.job_slots_used], 0', 'je 0x1b7f6', 'call sym.remote_cleanup', 'ret', 'xor edi, edi', 'call sym.remove_intermediates', 'cmp dword [obj.print_data_base_flag], 0', 'jne 0x1b87c', 'call fcn.0001b360', 'push rbp', 'xor edi, edi', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rbx, rsp', 'call sym.imp.time', 'mov qword [rsp], rax', 'call fcn.0001b230', 'mov rdi, rbx', 'call sym.imp.ctime']"
676,make,71,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x11380', 'mov rsi, qword [rsp]', 'movsxd rdx, dword [var_8h]', 'mov eax, 1', 'mov dword [rbp], eax', 'xor edi, edi', 'call sym.file_timestamp_cons', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'mov rbp, rsi', 'push rbx', 'lea ebx, [rdx + 3]', 'mov rdx, rsi', 'shl rdx, 0x1e', 'movsxd rbx, ebx', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'add rbx, rdx', 'setb dl', 'cmp rbx, 0xfffffffffb9aca02', 'seta al', 'or dl, al', 'jne 0x11234', 'test r12, r12', 'je 0x112f8', 'cmp rbp, 3', 'mov rbp, rsp', 'sbb rbx, rbx', 'mov rdi, rbp', 'and ebx, 0x4653601', 'sub rbx, 0x46535fe', 'mov rsi, rbx', 'call sym.file_timestamp_sprintf', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'lea rax, [rsi - 3]', 'mov rdi, rsp', 'shr rax, 0x1e', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
677,make,189,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x11380', 'mov rsi, qword [rsp]', 'movsxd rdx, dword [var_8h]', 'mov eax, 1', 'mov dword [rbp], eax', 'xor edi, edi', 'call sym.file_timestamp_cons', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'mov rbp, rsi', 'push rbx', 'lea ebx, [rdx + 3]', 'mov rdx, rsi', 'shl rdx, 0x1e', 'movsxd rbx, ebx', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'add rbx, rdx', 'setb dl', 'cmp rbx, 0xfffffffffb9aca02', 'seta al', 'or dl, al', 'jne 0x11234', 'movabs rax, 0x3ffffffff', 'cmp rsi, rax', 'jbe 0x112d3', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'mov rax, rbx', 'jne 0x11313', 'add rsp, 0x48', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'jne 0x113bb', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'ret', 'mov edi, dword [s]', 'lea edx, [rdi - 1]', 'movsxd rdx, edx', 'add rdx, rax', 'mov qword [0x0003bb30], rdx', 'cmp rdx, r12', 'jae 0x2415a', 'mov r12, qword [var_b8h]', 'jmp 0x23e8b', 'mov rax, qword [r14 + 0x68]', 'test rax, rax', 'cmove rax, r14', 'movzx esi, byte [rax + 0x89]', 'shr sil, 2', 'and esi, 1', 'mov edx, esi', 'jmp 0x23ebd', 'cmp r12, 1', 'je 0x23edd', 'cmp sil, dl', 'jne 0x23ee6', 'mov rax, qword [rax + 0x38]', 'test rax, rax', 'jne 0x23eb0', 'mov rdi, qword [var_38h]', 'xor rdi, qword fs:[0x28]', 'mov rax, r12', 'jne 0x2474b', 'lea rsp, [var_28h]', 'pop rbx', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'pop rbp', 'ret', 'mov rbp, qword [rbp]', 'test rbp, rbp', 'je 0x24821', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x24c79', 'add rsp, 0xb8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdi, rbx', 'call fcn.000176d0', 'push rbp', 'mov rbp, rdi', 'add rdi, 0x34', 'push rbx', 'sub rsp, 8', 'call sym.output_close', 'test rdi, rdi', 'je 0x1dca0', 'mov edx, dword [obj.stdio_traced]', 'test edx, edx', 'jne 0x1dcc0', 'ret', 'mov edx, dword [obj.jobserver_tokens]', 'test edx, edx', 'je 0x17810', 'call sym.jobserver_enabled', 'mov eax, dword [0x00038d18]', 'not eax', 'shr eax, 0x1f', 'ret', 'test eax, eax', 'mov eax, dword [obj.jobserver_tokens]', 'je 0x17721', 'sub eax, 1', 'mov dword [obj.jobserver_tokens], eax', 'mov eax, dword [obj.handling_fatal_signal]', 'test eax, eax', 'jne 0x177c0', 'mov rdi, qword [rbp + 0x20]', 'test rdi, rdi', 'je 0x1777e', 'mov rbx, qword [rbp + 0x10]', 'test rbx, rbx', 'je 0x177ad', 'add rsp, 8', 'mov rdi, rbp', 'pop rbx', 'pop rbp', 'jmp sym.imp.free', 'jmp qword [reloc.free]', 'test rbx, rbx', 'jne 0x23f6a', 'jmp 0x24305', 'mov r12, qword [var_b8h]', 'jmp 0x23e7d', 'mov eax, dword [obj.clock_skew_detected]', 'test eax, eax', 'je 0x23ff0', 'cmp r12, 0xffffffffffffffff', 'je 0x23e8b', 'cmp r12, 1', 'je 0x23e8b', 'test byte [r14 + 0x89], 4', 'jne 0x23e8b', 'cmp qword [0x0003bb30], r12', 'jae 0x23e8b', 'lea rdi, [s]', 'call sym.file_timestamp_now', 'push rbp', 'mov rbp, rdi', 'xor edi, edi', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rbx, rsp', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
678,make,274,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x11380', 'mov rsi, qword [rsp]', 'movsxd rdx, dword [var_8h]', 'mov eax, 1', 'mov dword [rbp], eax', 'xor edi, edi', 'call sym.file_timestamp_cons', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'mov rbp, rsi', 'push rbx', 'lea ebx, [rdx + 3]', 'mov rdx, rsi', 'shl rdx, 0x1e', 'movsxd rbx, ebx', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'add rbx, rdx', 'setb dl', 'cmp rbx, 0xfffffffffb9aca02', 'seta al', 'or dl, al', 'jne 0x11234', 'movabs rax, 0x3ffffffff', 'cmp rsi, rax', 'jbe 0x112d3', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'mov rax, rbx', 'jne 0x11313', 'add rsp, 0x48', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'jne 0x113bb', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'ret', 'mov edi, dword [s]', 'lea edx, [rdi - 1]', 'movsxd rdx, edx', 'add rdx, rax', 'mov qword [0x0003bb30], rdx', 'cmp rdx, r12', 'jae 0x2415a', 'mov r12, qword [var_b8h]', 'jmp 0x23e8b', 'mov rax, qword [r14 + 0x68]', 'test rax, rax', 'cmove rax, r14', 'movzx esi, byte [rax + 0x89]', 'shr sil, 2', 'and esi, 1', 'mov edx, esi', 'jmp 0x23ebd', 'cmp r12, 1', 'je 0x23edd', 'cmp sil, dl', 'jne 0x23ee6', 'mov rax, qword [rax + 0x38]', 'test rax, rax', 'jne 0x23eb0', 'mov rdi, qword [var_38h]', 'xor rdi, qword fs:[0x28]', 'mov rax, r12', 'jne 0x2474b', 'lea rsp, [var_28h]', 'pop rbx', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'pop rbp', 'ret', 'mov rbp, qword [rbp]', 'test rbp, rbp', 'je 0x24821', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x24c79', 'add rsp, 0xb8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'jmp 0x19363', 'test byte [obj.db_level], 4', 'je 0x193da', 'xor edx, edx', 'lea rsi, [obj.fatal_signal_set]', 'xor edi, edi', 'call sym.imp.sigprocmask', 'mov eax, dword [obj.job_slots_used]', 'test eax, eax', 'je 0x193fd', 'mov rax, qword [r12]', 'test r13, r13', 'je 0x195e0', 'mov qword [r13], rax', 'mov rdi, r12', 'call fcn.000176d0', 'xor edx, edx', 'mov edi, 1', 'lea rsi, [obj.fatal_signal_set]', 'call sym.imp.sigprocmask', 'test r15b, r15b', 'jne 0x19608', 'mov eax, dword [obj.keep_going_flag]', 'or eax, dword [obj.handling_fatal_signal]', 'or eax, dword [var_14h]', 'jne 0x19432', 'mov edi, ebx', 'call sym.die', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'cmp byte [0x000393d4], 0', 'jne 0x1b864', 'cmp dword [obj.print_version_flag], 0', 'mov byte [0x000393d4], 1', 'jne 0x1b872', 'xor ebx, ebx', 'test ebp, ebp', 'setne bl', 'cmp dword [obj.job_slots_used], 0', 'je 0x1b7f6', 'call sym.remote_cleanup', 'ret', 'xor edi, edi', 'call sym.remove_intermediates', 'cmp dword [obj.print_data_base_flag], 0', 'jne 0x1b87c', 'call fcn.0001b360', 'push rbp', 'xor edi, edi', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rbx, rsp', 'call sym.imp.time', 'mov qword [rsp], rax', 'call fcn.0001b230', 'mov rdi, rbx', 'call sym.imp.ctime']"
679,make,12482,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str._n_Make_data_base__printed_on__s', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov rdx, rbp', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'call sym.print_variable_data_base', 'push r12', 'mov edx, 5', 'lea rsi, str._n_Variables_n', 'xor edi, edi', 'push rbp', 'lea r12, str._n_s_:_n', 'xor ebp, ebp', 'push rbx', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'xor edx, edx', 'lea rsi, [0x0002fd01]', 'lea rdi, [0x0003bc40]', 'call fcn.00028210', 'push rbp', 'mov rcx, rsi', 'lea rax, [0x000285c0]', 'lea rsi, [fcn.000282a0]', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'test edx, edx', 'mov rdx, rcx', 'cmovne rsi, rax', 'call sym.hash_map_arg', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov rbx, qword [rdi]', 'mov rax, qword [rdi + 0x20]', 'lea rbp, [rbx + rax*8]', 'cmp rbx, rbp', 'jae 0x2b4f0', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, qword [loc._edata]', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str._variable_set_hash_table_stats:_n', 'call sym.imp.dcgettext', 'mov rsi, rbp', 'mov rdi, rax', 'call sym.imp.fputs', 'mov edx, 2', 'mov rcx, qword [loc._edata]', 'mov esi, 1', 'lea rdi, [0x00030d4d]', 'call sym.imp.fwrite', 'mov rsi, qword [loc._edata]', 'mov rdi, rbx', 'call sym.hash_print_stats', 'push r13', 'mov edx, 5', 'push r12', 'mov r12, rsi', 'lea rsi, str.Load_ld__ld_.0f____', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rbp, qword [rdi + 0x30]', 'mov r13, qword [rdi + 0x20]', 'xor edi, edi', 'call sym.imp.dcgettext', 'test rbp, rbp', 'js 0x2b698', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, rbp', 'mulsd xmm0, qword [0x00030d18]', 'test r13, r13', 'js 0x2b670', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, r13', 'divsd xmm0, xmm1', 'mov rcx, rbp', 'mov r8, r13', 'mov rdx, rax', 'mov esi, 1', 'mov rdi, r12', 'mov eax, 1', 'call sym.imp.__fprintf_chk', 'mov ebp, dword [rbx + 0x50]', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.Rehash_d__', 'call sym.imp.dcgettext', 'mov ecx, ebp', 'mov esi, 1', 'mov rdi, r12', 'mov rdx, rax', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rbp, qword [rbx + 0x48]', 'pxor xmm0, xmm0', 'mov rbx, qword [rbx + 0x40]', 'test rbp, rbp', 'je 0x2b5d9', 'mov edx, 5', 'lea rsi, str.Collisions_ld__ld_.0f__', 'xor edi, edi', 'movsd qword [var_8h_2], xmm0', 'call sym.imp.dcgettext', 'mov r8, rbp', 'mov rcx, rbx', 'mov rdi, r12', 'movsd xmm0, qword [var_8h_2]', 'add rsp, 0x18', 'mov rdx, rax', 'mov esi, 1', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'jmp sym.imp.__fprintf_chk', 'mov rsi, qword [loc._edata]', 'add rsp, 8', 'mov edi, 0xa', 'pop rbx', 'pop rbp', 'jmp sym.imp._IO_putc', 'mov edx, 5', 'lea rsi, str._n_Pattern_specific_Variable_Values', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'mov rbx, qword [0x0003c4a0]', 'test rbx, rbx', 'je 0x2a368', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str._n_No_pattern_specific_variable_values.', 'call sym.imp.dcgettext', 'pop rbx', 'pop rbp', 'mov rdi, rax', 'pop r12', 'jmp sym.imp.puts', 'call sym.print_dir_data_base', 'push r15', 'mov edx, 5', 'lea rsi, str._n_Directories_n', 'xor edi, edi', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'mov rbx, qword [0x00038ee0]', 'mov rax, qword [0x00038f00]', 'lea r12, [rbx + rax*8]', 'cmp rbx, r12', 'jae 0xec2c', 'mov dword [var_8h], 0', 'mov dword [var_ch], 0', 'nop dword [rax]', 'mov rbp, qword [rbx]', 'test rbp, rbp', 'je 0xe9fd', 'add rbx, 8', 'cmp r12, rbx', 'ja 0xe868', 'mov rcx, qword [loc._edata]', 'mov edx, 3', 'mov esi, 1', 'lea rdi, [0x00030d4c]', 'call sym.imp.fwrite', 'mov edx, dword [var_ch]', 'test edx, edx', 'je 0xec51', 'mov edx, dword [var_ch]', 'lea rsi, [0x00030ccc]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rbx, qword [loc._edata]', 'mov edx, 5', 'lea rsi, str._files__', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdi, rax', 'mov rsi, rbx', 'call sym.imp.fputs', 'mov eax, dword [var_8h]', 'test eax, eax', 'jne 0xec10', 'mov edx, dword [var_8h]', 'lea rsi, [0x00030ccc]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0xeaa0', 'mov rbx, qword [0x00038f10]', 'mov edx, 5', 'lea rsi, str._impossibilities_in__lu_directories._n', 'xor edi, edi', 'call sym.imp.dcgettext', 'add rsp, 0x28', 'mov edi, 1', 'mov rdx, rbx', 'mov rsi, rax', 'pop rbx', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp sym.imp.__printf_chk', 'call sym.print_rule_data_base', 'push r14', 'mov edx, 5', 'lea rsi, str._n_Implicit_Rules', 'xor edi, edi', 'push r13', 'push r12', 'push rbp', 'push rbx', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'mov rbx, qword [obj.pattern_rules]', 'test rbx, rbx', 'je 0x27750', 'mov edx, 5', 'lea rsi, str._n_No_implicit_rules.', 'xor edi, edi', 'xor r13d, r13d', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'jmp 0x27716', 'mov ebx, dword [obj.num_pattern_rules]', 'test ebx, ebx', 'je 0x27725', 'cmp ebx, r13d', 'jne 0x27770', 'mov edx, 5', 'lea rsi, str.BUG:_num_pattern_rules_is_wrong____u____u', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov r8d, r13d', 'mov ecx, ebx', 'mov esi, 0x28', 'mov rdx, rax', 'xor edi, edi', 'xor eax, eax', 'call sym.fatal', 'push r15', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'sub rsp, 0xd8', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x1e684', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov edx, 5', 'lea rsi, str..__Stop._n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdi, r12', 'add r14, 0x1d', 'mov rbp, rax', 'call sym.imp.strlen', 'mov rdi, qword [obj.program]', 'mov r15, rax', 'call sym.imp.strlen', 'add r15, rax', 'test r13, r13', 'je 0x1e7b2', 'xor eax, eax', 'mov rdi, rbp', 'or rcx, 0xffffffffffffffff', 'repne scasb al, byte [rdi]', 'lea rdi, [r15 + r14]', 'mov rdx, rcx', 'not rdx', 'lea rdi, [rdx + rdi - 1]', 'call fcn.0001d5e0', 'mov rdx, qword [0x0003bac8]', 'mov rax, qword [0x0003bac0]', 'push rbx', 'mov rbx, rdi', 'cmp rdx, rdi', 'jb 0x1d600', 'lea rsi, [rdx + rdi*2]', 'mov rdi, rax', 'mov qword [0x0003bac8], rsi', 'call sym.xrealloc', 'sub rsp, 8', 'mov eax, 1', 'test esi, esi', 'cmove esi, eax', 'mov esi, esi', 'test rdi, rdi', 'je 0x1c8d8', 'mov rdi, rsi', 'call sym.imp.malloc', 'jmp 0x1c8ca', 'test rax, rax', 'je 0x1c8e2', 'add rsp, 8', 'ret', 'mov byte [rax + rbx - 1], 0', 'pop rbx', 'mov qword [0x0003bac0], rax', 'ret', 'mov rbx, rax', 'test r12d, r12d', 'je 0x1e10b', 'mov rdx, 0xffffffffffffffff', 'mov r8, rsp', 'mov rcx, rbp', 'mov rdi, rbx', 'lea rax, [arg_100h]', 'mov esi, 1', 'mov dword [rsp], 0x18', 'mov qword [var_8h], rax', 'lea rax, [var_20h]', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.__vsprintf_chk', 'mov rdi, rbx', 'call sym.imp.strlen', 'mov rsi, qword [0x0003bac0]', 'mov edx, 0xa', 'mov word [rbx + rax], dx', 'test rsi, rsi', 'je 0x1e16d', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e1c2', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'jmp 0x24a37', 'mov eax, dword [obj.just_print_flag]', 'test eax, eax', 'je 0x24a6a', 'xor edx, edx', 'movzx edi, byte [rbx + 0x88]', 'add dword [obj.commands_started], 1', 'mov eax, 1', 'and edi, 0xfffffffc', 'or edi, edx', 'mov byte [rbx + 0x88], dil', 'and edi, 3', 'jmp 0x2479e', 'cmp qword [rbx + 0x78], 0', 'jne 0x247ad', 'cmp bpl, 8', 'je 0x24850', 'test eax, eax', 'jne 0x2485d', 'mov rsi, qword [rbx + 0x68]', 'test rsi, rsi', 'je 0x2480d', 'cmp bpl, 8', 'je 0x24978', 'cmp dil, 1', 'je 0x249e0', 'mov rax, qword [var_a8h]', 'xor rax, qword fs:[0x28]', 'jne 0x24c79', 'add rsp, 0xb8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdi, rbx', 'call fcn.000176d0', 'push rbp', 'mov rbp, rdi', 'add rdi, 0x34', 'push rbx', 'sub rsp, 8', 'call sym.output_close', 'test rdi, rdi', 'je 0x1dca0', 'mov edx, dword [obj.stdio_traced]', 'test edx, edx', 'jne 0x1dcc0', 'ret', 'mov edx, dword [obj.jobserver_tokens]', 'test edx, edx', 'je 0x17810', 'call sym.jobserver_enabled', 'test eax, eax', 'mov eax, dword [obj.jobserver_tokens]', 'je 0x17721', 'sub eax, 1', 'mov dword [obj.jobserver_tokens], eax', 'mov eax, dword [obj.handling_fatal_signal]', 'test eax, eax', 'jne 0x177c0', 'mov rdi, qword [rbp + 0x20]', 'test rdi, rdi', 'je 0x1777e', 'mov rbx, qword [rbp + 0x10]', 'test rbx, rbx', 'je 0x177ad', 'add rsp, 8', 'mov rdi, rbp', 'pop rbx', 'pop rbp', 'jmp sym.imp.free', 'jmp qword [reloc.free]', 'test rbx, rbx', 'jle 0xbae0', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, rbx', 'jne 0xbae9', 'add rsp, 0x20', 'pop rbx', 'ret', 'cmp rax, 0xffffffffffffffff', 'jne 0x24270', 'mov rdi, qword [r14 + 8]', 'xor edx, edx', 'mov rsi, rax', 'call sym.file_timestamp_cons', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'mov rbp, rsi', 'push rbx', 'lea ebx, [rdx + 3]', 'mov rdx, rsi', 'shl rdx, 0x1e', 'movsxd rbx, ebx', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'add rbx, rdx', 'setb dl', 'cmp rbx, 0xfffffffffb9aca02', 'seta al', 'or dl, al', 'jne 0x11234', 'test r12, r12', 'je 0x112f8', 'cmp rbp, 3', 'mov rbp, rsp', 'sbb rbx, rbx', 'mov rdi, rbp', 'and ebx, 0x4653601', 'sub rbx, 0x46535fe', 'mov rsi, rbx', 'call sym.file_timestamp_sprintf', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'lea rax, [rsi - 3]', 'mov rdi, rsp', 'shr rax, 0x1e', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
680,make,12424,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str._n_Make_data_base__printed_on__s', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov rdx, rbp', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'call sym.print_variable_data_base', 'push r12', 'mov edx, 5', 'lea rsi, str._n_Variables_n', 'xor edi, edi', 'push rbp', 'lea r12, str._n_s_:_n', 'xor ebp, ebp', 'push rbx', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'xor edx, edx', 'lea rsi, [0x0002fd01]', 'lea rdi, [0x0003bc40]', 'call fcn.00028210', 'push rbp', 'mov rcx, rsi', 'lea rax, [0x000285c0]', 'lea rsi, [fcn.000282a0]', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'test edx, edx', 'mov rdx, rcx', 'cmovne rsi, rax', 'call sym.hash_map_arg', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov rbx, qword [rdi]', 'mov rax, qword [rdi + 0x20]', 'lea rbp, [rbx + rax*8]', 'cmp rbx, rbp', 'jae 0x2b4f0', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, qword [loc._edata]', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str._variable_set_hash_table_stats:_n', 'call sym.imp.dcgettext', 'mov rsi, rbp', 'mov rdi, rax', 'call sym.imp.fputs', 'mov edx, 2', 'mov rcx, qword [loc._edata]', 'mov esi, 1', 'lea rdi, [0x00030d4d]', 'call sym.imp.fwrite', 'mov rsi, qword [loc._edata]', 'mov rdi, rbx', 'call sym.hash_print_stats', 'push r13', 'mov edx, 5', 'push r12', 'mov r12, rsi', 'lea rsi, str.Load_ld__ld_.0f____', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rbp, qword [rdi + 0x30]', 'mov r13, qword [rdi + 0x20]', 'xor edi, edi', 'call sym.imp.dcgettext', 'test rbp, rbp', 'js 0x2b698', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, rbp', 'mulsd xmm0, qword [0x00030d18]', 'test r13, r13', 'js 0x2b670', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, r13', 'divsd xmm0, xmm1', 'mov rcx, rbp', 'mov r8, r13', 'mov rdx, rax', 'mov esi, 1', 'mov rdi, r12', 'mov eax, 1', 'call sym.imp.__fprintf_chk', 'mov ebp, dword [rbx + 0x50]', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.Rehash_d__', 'call sym.imp.dcgettext', 'mov ecx, ebp', 'mov esi, 1', 'mov rdi, r12', 'mov rdx, rax', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rbp, qword [rbx + 0x48]', 'pxor xmm0, xmm0', 'mov rbx, qword [rbx + 0x40]', 'test rbp, rbp', 'je 0x2b5d9', 'mov edx, 5', 'lea rsi, str.Collisions_ld__ld_.0f__', 'xor edi, edi', 'movsd qword [var_8h_2], xmm0', 'call sym.imp.dcgettext', 'mov r8, rbp', 'mov rcx, rbx', 'mov rdi, r12', 'movsd xmm0, qword [var_8h_2]', 'add rsp, 0x18', 'mov rdx, rax', 'mov esi, 1', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'jmp sym.imp.__fprintf_chk', 'mov rsi, qword [loc._edata]', 'add rsp, 8', 'mov edi, 0xa', 'pop rbx', 'pop rbp', 'jmp sym.imp._IO_putc', 'mov edx, 5', 'lea rsi, str._n_Pattern_specific_Variable_Values', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'mov rbx, qword [0x0003c4a0]', 'test rbx, rbx', 'je 0x2a368', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str._n_No_pattern_specific_variable_values.', 'call sym.imp.dcgettext', 'pop rbx', 'pop rbp', 'mov rdi, rax', 'pop r12', 'jmp sym.imp.puts', 'call sym.print_dir_data_base', 'push r15', 'mov edx, 5', 'lea rsi, str._n_Directories_n', 'xor edi, edi', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'mov rbx, qword [0x00038ee0]', 'mov rax, qword [0x00038f00]', 'lea r12, [rbx + rax*8]', 'cmp rbx, r12', 'jae 0xec2c', 'mov dword [var_8h], 0', 'mov dword [var_ch], 0', 'nop dword [rax]', 'mov rbp, qword [rbx]', 'test rbp, rbp', 'je 0xe9fd', 'add rbx, 8', 'cmp r12, rbx', 'ja 0xe868', 'mov rcx, qword [loc._edata]', 'mov edx, 3', 'mov esi, 1', 'lea rdi, [0x00030d4c]', 'call sym.imp.fwrite', 'mov edx, dword [var_ch]', 'test edx, edx', 'je 0xec51', 'mov edx, dword [var_ch]', 'lea rsi, [0x00030ccc]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rbx, qword [loc._edata]', 'mov edx, 5', 'lea rsi, str._files__', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdi, rax', 'mov rsi, rbx', 'call sym.imp.fputs', 'mov eax, dword [var_8h]', 'test eax, eax', 'jne 0xec10', 'mov edx, dword [var_8h]', 'lea rsi, [0x00030ccc]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0xeaa0', 'mov rbx, qword [0x00038f10]', 'mov edx, 5', 'lea rsi, str._impossibilities_in__lu_directories._n', 'xor edi, edi', 'call sym.imp.dcgettext', 'add rsp, 0x28', 'mov edi, 1', 'mov rdx, rbx', 'mov rsi, rax', 'pop rbx', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp sym.imp.__printf_chk', 'call sym.print_rule_data_base', 'push r14', 'mov edx, 5', 'lea rsi, str._n_Implicit_Rules', 'xor edi, edi', 'push r13', 'push r12', 'push rbp', 'push rbx', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'mov rbx, qword [obj.pattern_rules]', 'test rbx, rbx', 'je 0x27750', 'mov edx, 5', 'lea rsi, str._n_No_implicit_rules.', 'xor edi, edi', 'xor r13d, r13d', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'jmp 0x27716', 'mov ebx, dword [obj.num_pattern_rules]', 'test ebx, ebx', 'je 0x27725', 'cmp ebx, r13d', 'jne 0x27770', 'mov edx, 5', 'lea rsi, str.BUG:_num_pattern_rules_is_wrong____u____u', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov r8d, r13d', 'mov ecx, ebx', 'mov esi, 0x28', 'mov rdx, rax', 'xor edi, edi', 'xor eax, eax', 'call sym.fatal', 'push r15', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'sub rsp, 0xd8', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x1e684', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov edx, 5', 'lea rsi, str..__Stop._n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdi, r12', 'add r14, 0x1d', 'mov rbp, rax', 'call sym.imp.strlen', 'mov rdi, qword [obj.program]', 'mov r15, rax', 'call sym.imp.strlen', 'add r15, rax', 'test r13, r13', 'je 0x1e7b2', 'xor eax, eax', 'mov rdi, rbp', 'or rcx, 0xffffffffffffffff', 'repne scasb al, byte [rdi]', 'lea rdi, [r15 + r14]', 'mov rdx, rcx', 'not rdx', 'lea rdi, [rdx + rdi - 1]', 'call fcn.0001d5e0', 'mov rdx, qword [0x0003bac8]', 'mov rax, qword [0x0003bac0]', 'push rbx', 'mov rbx, rdi', 'cmp rdx, rdi', 'jb 0x1d600', 'lea rsi, [rdx + rdi*2]', 'mov rdi, rax', 'mov qword [0x0003bac8], rsi', 'call sym.xrealloc', 'sub rsp, 8', 'mov eax, 1', 'test esi, esi', 'cmove esi, eax', 'mov esi, esi', 'test rdi, rdi', 'je 0x1c8d8', 'mov rdi, rsi', 'call sym.imp.malloc', 'jmp 0x1c8ca', 'test rax, rax', 'je 0x1c8e2', 'add rsp, 8', 'ret', 'mov byte [rax + rbx - 1], 0', 'pop rbx', 'mov qword [0x0003bac0], rax', 'ret', 'mov r8, qword [rbp]', 'mov rbx, rax', 'test r8, r8', 'je 0x1e35b', 'mov r9, qword [rbp + 0x10]', 'lea rcx, str._s:_lu:_', 'mov rdi, rbx', 'xor eax, eax', 'add r9, qword [arg_100h]', 'mov rdx, 0xffffffffffffffff', 'mov esi, 1', 'call sym.imp.__sprintf_chk', 'mov rdi, rbx', 'call sym.imp.strlen', 'mov esi, 1', 'mov r8, rsp', 'mov rcx, r12', 'add rbx, rax', 'lea rax, [arg_100h]', 'mov rdx, 0xffffffffffffffff', 'mov dword [rsp], 0x18', 'mov qword [var_8h], rax', 'mov rdi, rbx', 'lea rax, [var_20h]', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.__vsprintf_chk', 'mov rdi, rbx', 'call sym.imp.strlen', 'mov rsi, qword [0x0003bac0]', 'mov edx, 0xa', 'mov word [rbx + rax], dx', 'test rsi, rsi', 'je 0x1e32d', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e3b2', 'add rsp, 0xd8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rcx, qword [var_38h]', 'xor rcx, qword fs:[0x28]', 'mov rax, rbx', 'jne 0x11313', 'add rsp, 0x48', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov r12, rax', 'mov qword [var_b8h], r12', 'jmp 0x23e7d', 'mov eax, dword [obj.clock_skew_detected]', 'test eax, eax', 'je 0x23ff0', 'cmp r12, 0xffffffffffffffff', 'je 0x23e8b', 'cmp r12, 1', 'je 0x23e8b', 'test byte [r14 + 0x89], 4', 'jne 0x23e8b', 'cmp qword [0x0003bb30], r12', 'jae 0x23e8b', 'lea rdi, [s]', 'call sym.file_timestamp_now', 'push rbp', 'mov rbp, rdi', 'xor edi, edi', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rbx, rsp', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
681,make,12406,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str._n_Make_data_base__printed_on__s', 'mov rbp, rax', 'call sym.imp.dcgettext', 'mov rdx, rbp', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'call sym.print_variable_data_base', 'push r12', 'mov edx, 5', 'lea rsi, str._n_Variables_n', 'xor edi, edi', 'push rbp', 'lea r12, str._n_s_:_n', 'xor ebp, ebp', 'push rbx', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'xor edx, edx', 'lea rsi, [0x0002fd01]', 'lea rdi, [0x0003bc40]', 'call fcn.00028210', 'push rbp', 'mov rcx, rsi', 'lea rax, [0x000285c0]', 'lea rsi, [fcn.000282a0]', 'push rbx', 'mov rbx, rdi', 'sub rsp, 8', 'test edx, edx', 'mov rdx, rcx', 'cmovne rsi, rax', 'call sym.hash_map_arg', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov rbx, qword [rdi]', 'mov rax, qword [rdi + 0x20]', 'lea rbp, [rbx + rax*8]', 'cmp rbx, rbp', 'jae 0x2b4f0', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, qword [loc._edata]', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str._variable_set_hash_table_stats:_n', 'call sym.imp.dcgettext', 'mov rsi, rbp', 'mov rdi, rax', 'call sym.imp.fputs', 'mov edx, 2', 'mov rcx, qword [loc._edata]', 'mov esi, 1', 'lea rdi, [0x00030d4d]', 'call sym.imp.fwrite', 'mov rsi, qword [loc._edata]', 'mov rdi, rbx', 'call sym.hash_print_stats', 'push r13', 'mov edx, 5', 'push r12', 'mov r12, rsi', 'lea rsi, str.Load_ld__ld_.0f____', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rbp, qword [rdi + 0x30]', 'mov r13, qword [rdi + 0x20]', 'xor edi, edi', 'call sym.imp.dcgettext', 'test rbp, rbp', 'js 0x2b698', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, rbp', 'mulsd xmm0, qword [0x00030d18]', 'test r13, r13', 'js 0x2b670', 'pxor xmm1, xmm1', 'cvtsi2sd xmm1, r13', 'divsd xmm0, xmm1', 'mov rcx, rbp', 'mov r8, r13', 'mov rdx, rax', 'mov esi, 1', 'mov rdi, r12', 'mov eax, 1', 'call sym.imp.__fprintf_chk', 'mov ebp, dword [rbx + 0x50]', 'mov edx, 5', 'xor edi, edi', 'lea rsi, str.Rehash_d__', 'call sym.imp.dcgettext', 'mov ecx, ebp', 'mov esi, 1', 'mov rdi, r12', 'mov rdx, rax', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rbp, qword [rbx + 0x48]', 'pxor xmm0, xmm0', 'mov rbx, qword [rbx + 0x40]', 'test rbp, rbp', 'je 0x2b5d9', 'mov edx, 5', 'lea rsi, str.Collisions_ld__ld_.0f__', 'xor edi, edi', 'movsd qword [var_8h_2], xmm0', 'call sym.imp.dcgettext', 'mov r8, rbp', 'mov rcx, rbx', 'mov rdi, r12', 'movsd xmm0, qword [var_8h_2]', 'add rsp, 0x18', 'mov rdx, rax', 'mov esi, 1', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'jmp sym.imp.__fprintf_chk', 'mov rsi, qword [loc._edata]', 'add rsp, 8', 'mov edi, 0xa', 'pop rbx', 'pop rbp', 'jmp sym.imp._IO_putc', 'mov edx, 5', 'lea rsi, str._n_Pattern_specific_Variable_Values', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'mov rbx, qword [0x0003c4a0]', 'test rbx, rbx', 'je 0x2a368', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str._n_No_pattern_specific_variable_values.', 'call sym.imp.dcgettext', 'pop rbx', 'pop rbp', 'mov rdi, rax', 'pop r12', 'jmp sym.imp.puts', 'call sym.print_dir_data_base', 'push r15', 'mov edx, 5', 'lea rsi, str._n_Directories_n', 'xor edi, edi', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'mov rbx, qword [0x00038ee0]', 'mov rax, qword [0x00038f00]', 'lea r12, [rbx + rax*8]', 'cmp rbx, r12', 'jae 0xec2c', 'mov dword [var_8h], 0', 'mov dword [var_ch], 0', 'nop dword [rax]', 'mov rbp, qword [rbx]', 'test rbp, rbp', 'je 0xe9fd', 'add rbx, 8', 'cmp r12, rbx', 'ja 0xe868', 'mov rcx, qword [loc._edata]', 'mov edx, 3', 'mov esi, 1', 'lea rdi, [0x00030d4c]', 'call sym.imp.fwrite', 'mov edx, dword [var_ch]', 'test edx, edx', 'je 0xec51', 'mov edx, dword [var_ch]', 'lea rsi, [0x00030ccc]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rbx, qword [loc._edata]', 'mov edx, 5', 'lea rsi, str._files__', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdi, rax', 'mov rsi, rbx', 'call sym.imp.fputs', 'mov eax, dword [var_8h]', 'test eax, eax', 'jne 0xec10', 'mov edx, dword [var_8h]', 'lea rsi, [0x00030ccc]', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'jmp 0xeaa0', 'mov rbx, qword [0x00038f10]', 'mov edx, 5', 'lea rsi, str._impossibilities_in__lu_directories._n', 'xor edi, edi', 'call sym.imp.dcgettext', 'add rsp, 0x28', 'mov edi, 1', 'mov rdx, rbx', 'mov rsi, rax', 'pop rbx', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp sym.imp.__printf_chk', 'call sym.print_rule_data_base', 'push r14', 'mov edx, 5', 'lea rsi, str._n_Implicit_Rules', 'xor edi, edi', 'push r13', 'push r12', 'push rbp', 'push rbx', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'mov rbx, qword [obj.pattern_rules]', 'test rbx, rbx', 'je 0x27750', 'mov edx, 5', 'lea rsi, str._n_No_implicit_rules.', 'xor edi, edi', 'xor r13d, r13d', 'call sym.imp.dcgettext', 'mov rdi, rax', 'call sym.imp.puts', 'jmp 0x27716', 'mov ebx, dword [obj.num_pattern_rules]', 'test ebx, ebx', 'je 0x27725', 'cmp ebx, r13d', 'jne 0x27770', 'mov edx, 5', 'lea rsi, str.BUG:_num_pattern_rules_is_wrong____u____u', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov r8d, r13d', 'mov ecx, ebx', 'mov esi, 0x28', 'mov rdx, rax', 'xor edi, edi', 'xor eax, eax', 'call sym.fatal', 'push r15', 'push r14', 'mov r14, rsi', 'push r13', 'mov r13, rdi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'sub rsp, 0xd8', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x1e684', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov edx, 5', 'lea rsi, str..__Stop._n', 'xor edi, edi', 'call sym.imp.dcgettext', 'mov rdi, r12', 'add r14, 0x1d', 'mov rbp, rax', 'call sym.imp.strlen', 'mov rdi, qword [obj.program]', 'mov r15, rax', 'call sym.imp.strlen', 'add r15, rax', 'test r13, r13', 'je 0x1e7b2', 'xor eax, eax', 'mov rdi, rbp', 'or rcx, 0xffffffffffffffff', 'repne scasb al, byte [rdi]', 'lea rdi, [r15 + r14]', 'mov rdx, rcx', 'not rdx', 'lea rdi, [rdx + rdi - 1]', 'call fcn.0001d5e0', 'mov rdx, qword [0x0003bac8]', 'mov rax, qword [0x0003bac0]', 'push rbx', 'mov rbx, rdi', 'cmp rdx, rdi', 'jb 0x1d600', 'mov byte [rax + rbx - 1], 0', 'pop rbx', 'ret', 'mov rbx, rax', 'mov r9d, dword [obj.makelevel]', 'mov r8, qword [obj.program]', 'test r9d, r9d', 'jne 0x1e806', 'lea rcx, str._s:__', 'or rdx, 0xffffffffffffffff', 'mov rdi, rbx', 'xor eax, eax', 'mov esi, 1', 'call sym.imp.__sprintf_chk', 'jmp 0x1e737', 'mov rdi, rbx', 'call sym.imp.strlen', 'mov r8, rsp', 'mov rcx, r12', 'mov esi, 1', 'add rbx, rax', 'lea rax, [arg_110h]', 'mov rdx, 0xffffffffffffffff', 'mov dword [rsp], 0x18', 'mov qword [var_8h], rax', 'mov rdi, rbx', 'lea rax, [var_20h]', 'mov dword [var_4h], 0x30', 'mov qword [var_10h], rax', 'call sym.imp.__vsprintf_chk', 'mov rsi, rbp', 'mov rdi, rbx', 'call sym.imp.strcat', 'mov rsi, qword [0x0003bac0]', 'test rsi, rsi', 'je 0x1e7a8', 'mov edi, 2', 'call sym.die', 'push rbp', 'mov ebp, edi', 'push rbx', 'sub rsp, 8', 'cmp byte [0x000393d4], 0', 'jne 0x1b864', 'cmp dword [obj.print_version_flag], 0', 'mov byte [0x000393d4], 1', 'jne 0x1b872', 'xor ebx, ebx', 'test ebp, ebp', 'setne bl', 'cmp dword [obj.job_slots_used], 0', 'je 0x1b7f6', 'call sym.remote_cleanup', 'ret', 'xor edi, edi', 'call sym.remove_intermediates', 'mov eax, dword [obj.question_flag]', 'or eax, dword [obj.touch_flag]', 'or eax, dword [0x00038fb0]', 'jne 0x106fe', 'ret', 'cmp dword [obj.print_data_base_flag], 0', 'jne 0x1b87c', 'call fcn.0001b360', 'push rbp', 'xor edi, edi', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rbx, rsp', 'call sym.imp.time', 'mov qword [rsp], rax', 'call fcn.0001b230', 'mov rdi, rbx', 'call sym.imp.ctime']"
682,make,269,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str._n_Finished_Make_data_base_on__s_n', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov rdx, rbx', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x1b430', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'jmp 0x1b80b', 'cmp dword [obj.verify_flag], 0', 'jne 0x1b86b', 'call sym.verify_file_data_base', 'lea rsi, [0x0000fbc0]', 'lea rdi, [0x00038fc0]', 'jmp sym.hash_map', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [rdi]', 'mov rax, qword [rdi + 0x20]', 'lea rbp, [rbx + rax*8]', 'cmp rbx, rbp', 'jae 0x2b49d', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rbx', 'mov esi, 1', 'call sym.hash_free', 'push rbx', 'mov rbx, rdi', 'test esi, esi', 'jne 0x2b458', 'mov rax, qword [rdi + 0x20]', 'mov qword [rdi + 0x30], 0', 'mov qword [rdi + 0x38], rax', 'mov rdi, qword [rbx]', 'call sym.imp.free', 'mov qword [rbx], 0', 'mov qword [rbx + 0x28], 0', 'pop rbx', 'ret', 'mov rdi, qword [rbx + 8]', 'call sym.imp.free', 'mov rdi, rbx', 'pop rbx', 'jmp sym.imp.free', 'jmp qword [reloc.free]', 'test rbx, rbx', 'jle 0xbae0', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, rbx', 'jne 0xbae9', 'add rsp, 0x20', 'pop rbx', 'ret', 'cmp rax, 0xffffffffffffffff', 'jne 0x24270', 'mov rdi, qword [r14 + 8]', 'xor edx, edx', 'mov rsi, rax', 'call sym.file_timestamp_cons', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'mov rbp, rsi', 'push rbx', 'lea ebx, [rdx + 3]', 'mov rdx, rsi', 'shl rdx, 0x1e', 'movsxd rbx, ebx', 'sub rsp, 0x48', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'add rbx, rdx', 'setb dl', 'cmp rbx, 0xfffffffffb9aca02', 'seta al', 'or dl, al', 'jne 0x11234', 'test r12, r12', 'je 0x112f8', 'cmp rbp, 3', 'mov rbp, rsp', 'sbb rbx, rbx', 'mov rdi, rbp', 'and ebx, 0x4653601', 'sub rbx, 0x46535fe', 'mov rsi, rbx', 'call sym.file_timestamp_sprintf', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'lea rax, [rsi - 3]', 'mov rdi, rsp', 'shr rax, 0x1e', 'mov qword [rsp], rax', 'call sym.imp.localtime']"
683,make,239,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str._n_Finished_Make_data_base_on__s_n', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov rdx, rbx', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x1b430', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'jmp 0x1b80b', 'cmp dword [obj.verify_flag], 0', 'jne 0x1b86b', 'call sym.verify_file_data_base', 'lea rsi, [0x0000fbc0]', 'lea rdi, [0x00038fc0]', 'jmp sym.hash_map', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [rdi]', 'mov rax, qword [rdi + 0x20]', 'lea rbp, [rbx + rax*8]', 'cmp rbx, rbp', 'jae 0x2b49d', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rbx', 'mov esi, 1', 'call sym.hash_free', 'push rbx', 'mov rbx, rdi', 'test esi, esi', 'jne 0x2b458', 'mov rax, qword [rdi + 0x20]', 'mov qword [rdi + 0x30], 0', 'mov qword [rdi + 0x38], rax', 'mov rdi, qword [rbx]', 'call sym.imp.free', 'mov qword [rbx], 0', 'mov qword [rbx + 0x28], 0', 'pop rbx', 'ret', 'mov rdi, qword [rbx + 8]', 'call sym.imp.free', 'mov rdi, rbx', 'pop rbx', 'jmp sym.imp.free', 'jmp qword [reloc.free]', 'test rbx, rbx', 'jne 0x23f6a', 'jmp 0x24305', 'mov r12, qword [var_b8h]', 'jmp 0x23e7d', 'mov eax, dword [obj.clock_skew_detected]', 'test eax, eax', 'je 0x23ff0', 'cmp r12, 0xffffffffffffffff', 'je 0x23e8b', 'cmp r12, 1', 'je 0x23e8b', 'test byte [r14 + 0x89], 4', 'jne 0x23e8b', 'cmp qword [0x0003bb30], r12', 'jae 0x23e8b', 'lea rdi, [s]', 'call sym.file_timestamp_now', 'push rbp', 'mov rbp, rdi', 'xor edi, edi', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rbx, rsp', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
684,make,311,"['call sym.imp.ctime', 'xor edi, edi', 'mov edx, 5', 'lea rsi, str._n_Finished_Make_data_base_on__s_n', 'mov rbx, rax', 'call sym.imp.dcgettext', 'mov rdx, rbx', 'mov edi, 1', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x1b430', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'ret', 'jmp 0x1b80b', 'cmp dword [obj.verify_flag], 0', 'jne 0x1b86b', 'call sym.verify_file_data_base', 'lea rsi, [0x0000fbc0]', 'lea rdi, [0x00038fc0]', 'jmp sym.hash_map', 'push r12', 'push rbp', 'push rbx', 'mov rbx, qword [rdi]', 'mov rax, qword [rdi + 0x20]', 'lea rbp, [rbx + rax*8]', 'cmp rbx, rbp', 'jae 0x2b49d', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rbx', 'mov esi, 1', 'call sym.hash_free', 'push rbx', 'mov rbx, rdi', 'test esi, esi', 'jne 0x2b458', 'mov rax, qword [rdi + 0x20]', 'mov qword [rdi + 0x30], 0', 'mov qword [rdi + 0x38], rax', 'mov rdi, qword [rbx]', 'call sym.imp.free', 'mov qword [rbx], 0', 'mov qword [rbx + 0x28], 0', 'pop rbx', 'ret', 'mov rdi, qword [rbx + 8]', 'call sym.imp.free', 'mov rdi, rbx', 'pop rbx', 'jmp sym.imp.free', 'jmp qword [reloc.free]', 'test rbx, rbx', 'jle 0xbae0', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'mov rax, rbx', 'jne 0xbae9', 'add rsp, 0x20', 'pop rbx', 'ret', 'cmp rax, rbp', 'je 0xc8cd', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0xcac0', 'add rsp, 0xa0', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rbx, qword [rbx]', 'test rbx, rbx', 'jne 0xcaf8', 'or byte [rbp + 0x44], 8', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov rbx, qword [rbx]', 'test rbx, rbx', 'jne 0xd880', 'mov eax, dword [obj.job_slots_used]', 'test eax, eax', 'je 0xd8b6', 'mov edi, 1', 'call sym.remove_intermediates', 'mov eax, dword [obj.question_flag]', 'or eax, dword [obj.touch_flag]', 'or eax, dword [0x00038fb0]', 'jne 0x106fe', 'test edi, edi', 'jne 0x106f0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x18', 'mov rbx, qword [0x00038fc0]', 'mov rax, qword [0x00038fe0]', 'lea r12, [rbx + rax*8]', 'cmp rbx, r12', 'jae 0x106d8', 'add rsp, 0x18', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp dword [obj.print_data_base_flag], 0', 'jne 0x1b87c', 'call fcn.0001b360', 'push rbp', 'xor edi, edi', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rbx, rsp', 'call sym.imp.time', 'mov qword [rsp], rax', 'call fcn.0001b230', 'mov rdi, rbx', 'call sym.imp.ctime']"
685,unrar,80,"['call sym.imp.clock', 'pop rbp', 'ret', 'mov rdx, qword [0x0005ea70]', 'sub rax, rdx', 'cmp rax, case.0x3c8d3.65', 'setg al', 'test al, al', 'je case.0x3c8d3.65', 'mov edi, 7', 'call sym.imp.putwchar', 'call fcn.0001408f', 'endbr64', 'push rbp', 'mov rbp, rsp', 'call sym.imp.clock']"
686,unrar,345,"['call sym.imp.clock', 'pop rbp', 'ret', 'mov qword [0x0005ea70], rax', 'nop', 'leave', 'ret', 'mov edx, dword [var_ch]', 'mov rax, qword [var_8h]', 'mov esi, edx', 'mov rdi, rax', 'call fcn.0001b37a', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [var_8h], rdi', 'mov dword [dest], esi', 'cmp dword [dest], 0xff', 'jne case.0x3c8d3.65', 'mov rax, qword [var_8h]', 'movzx eax, byte [rax + 8]', 'xor eax, 1', 'test al, al', 'jne case.0x3c8d3.65', 'nop', 'leave', 'ret', 'nop', 'leave', 'ret', 'nop', 'leave', 'ret', 'mov rax, qword [var_a2f8h]', 'add rax, 0x12614', 'mov rdi, rax', 'call fcn.00007110', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [var_8h], rdi', 'cmp qword [var_8h], 0', 'je case.0x3c8d3.65', 'mov eax, 0', 'leave', 'ret', 'mov qword [var_a2e8h], rax', 'cmp qword [var_a2e8h], 0', 'jne case.0x3c8d3.65', 'mov eax, 0', 'test al, al', 'je case.0x3c8d3.65', 'cmp qword [var_a2e8h], 0', 'je case.0x3c8d3.65', 'mov eax, 0', 'test al, al', 'je case.0x3c8d3.65', 'mov rax, qword [var_a2f8h]', 'mov eax, dword [rax + 0x105d4]', 'mov esi, eax', 'lea rdi, str.AFUMD', 'call sym.imp.wcschr', 'test rax, rax', 'jne case.0x3c8d3.65', 'mov rax, qword [var_a2f8h]', 'movzx eax, byte [rax + case.0x3c8d3.65]', 'test al, al', 'je case.0x3c8d3.65', 'mov rax, qword [var_a2f8h]', 'lea rdx, [rax + 0xc2c0]', 'mov rax, qword [var_a2f8h]', 'add rax, 0x12614', 'mov ecx, 0', 'mov esi, 0x800', 'mov rdi, rax', 'call fcn.00008e1e', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, case.0x3c8d3.65', 'or qword [rsp], 0', 'sub rsp, case.0x3c8d3.65', 'or qword [rsp], 0', 'sub rsp, case.0x3c8d3.65', 'mov qword [var_2278h], rdi', 'mov qword [var_2280h], rsi', 'mov qword [var_2288h], rdx', 'mov eax, ecx', 'mov byte [var_228ch], al', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov dword [var_2264h], 1', 'mov rcx, qword [var_2278h]', 'lea rax, [var_2260h]', 'mov edx, 0x894', 'mov rsi, rcx', 'mov rdi, rax', 'call fcn.00006420', 'mov byte [var_2265h], 0', 'lea rcx, [var_2265h]', 'mov edx, dword [var_2264h]', 'mov rsi, qword [var_2288h]', 'lea rax, [var_2260h]', 'mov rdi, rax', 'call fcn.0000838c', 'endbr64', 'push rbp', 'mov rbp, rsp', 'push rbx', 'lea r11, [rsp - fcn.00004000]', 'sub rsp, case.0x3c8d3.65', 'or qword [rsp], 0', 'cmp rsp, r11', 'jne case.0x3c8d3.65', 'sub rsp, case.0x3c8d3.65', 'mov qword [var_4538h], rdi', 'mov qword [var_4540h], rsi', 'mov dword [var_4544h], edx', 'mov qword [var_4550h], rcx', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov byte [var_4527h], 0', 'mov rax, qword [var_4540h]', 'mov eax, dword [rax]', 'cmp eax, 0x2b', 'jne case.0x3c8d3.65', 'mov rax, qword [var_4540h]', 'mov eax, dword [rax]', 'test eax, eax', 'je case.0x3c8d3.65', 'lea rax, str.yyyymmddhhmmss', 'lea rcx, [s1]', 'mov edx, 0x80', 'mov rsi, rax', 'mov rdi, rcx', 'call fcn.00006420', 'mov byte [var_4526h], 0', 'mov byte [var_4525h], 0', 'mov dword [n], 0', 'mov eax, dword [n]', 'mov eax, dword [rbp + rax*4 - 0x4420]', 'test eax, eax', 'je case.0x3c8d3.65', 'lea rax, [var_4500h]', 'mov rdi, rax', 'call fcn.00009040', 'lea rax, [var_4500h]', 'mov rdi, rax', 'call fcn.00018eae', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x20', 'mov qword [var_18h], rdi', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'lea rax, [timer]', 'mov rdi, rax', 'call sym.imp.time', 'mov rdx, qword [timer]', 'mov rax, qword [var_18h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.000189b6', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [var_8h], rdi', 'mov qword [var_10h], rsi', 'mov rax, qword [var_10h]', 'imul rdx, rax, case.0x3c8d3.65', 'mov rax, qword [var_8h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.00018a10', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_18h], rdi', 'mov qword [var_20h], rsi', 'movabs rax, case.0x3c8d3.65', 'mov qword [var_8h], rax', 'mov rdx, qword [var_20h]', 'mov rax, qword [var_8h]', 'add rdx, rax', 'mov rax, qword [var_18h]', 'mov qword [rax], rdx', 'nop', 'pop rbp', 'ret', 'nop', 'leave', 'ret', 'nop', 'mov rax, qword [canary]', 'xor rax, qword fs:[0x28]', 'je case.0x3c8d3.65', 'leave', 'ret', 'lea rdx, [var_44c0h]', 'lea rax, [var_4500h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.00018744', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x30', 'mov qword [var_28h], rdi', 'mov qword [var_30h], rsi', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov rax, qword [var_28h]', 'mov rdi, rax', 'call fcn.00018980', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [var_8h], rdi', 'mov rax, qword [var_8h]', 'mov rdi, rax', 'call fcn.000189e8', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_18h], rdi', 'movabs rax, case.0x3c8d3.65', 'mov qword [var_8h], rax', 'mov rax, qword [var_18h]', 'mov rax, qword [rax]', 'sub rax, qword [var_8h]', 'pop rbp', 'ret', 'shr rax, 9', 'movabs rdx, case.0x3c8d3.65', 'mul rdx', 'mov rax, rdx', 'shr rax, 0xb', 'leave', 'ret', 'mov qword [timer], rax', 'lea rax, [timer]', 'mov rdi, rax', 'call sym.imp.localtime']"
687,unrar,544,"['call sym.imp.clock', 'pop rbp', 'ret', 'mov qword [0x0005ea70], rax', 'nop', 'leave', 'ret', 'mov edx, dword [var_ch]', 'mov rax, qword [var_8h]', 'mov esi, edx', 'mov rdi, rax', 'call fcn.0001b37a', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [var_8h], rdi', 'mov dword [dest], esi', 'cmp dword [dest], 0xff', 'jne case.0x3c8d3.65', 'mov rax, qword [var_8h]', 'movzx eax, byte [rax + 8]', 'xor eax, 1', 'test al, al', 'jne case.0x3c8d3.65', 'nop', 'leave', 'ret', 'nop', 'leave', 'ret', 'nop', 'leave', 'ret', 'mov rax, qword [ptr]', 'mov rdx, qword [s1]', 'mov qword [rax], rdx', 'mov rax, qword [ptr]', 'mov rdx, qword [size]', 'mov qword [rax + 0x10], rdx', 'nop', 'leave', 'ret', 'jmp case.0x3c8d3.65', 'nop', 'leave', 'ret', 'mov rax, qword [var_8h]', 'mov rdi, rax', 'call fcn.00012cac', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_8h], rdi', 'mov rax, qword [var_8h]', 'mov byte [rax + 0x10], 0', 'nop', 'pop rbp', 'ret', 'mov rax, qword [var_8h]', 'add rax, 0x2078', 'mov esi, 0', 'mov rdi, rax', 'call fcn.00022e4a', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_8h], rdi', 'mov dword [var_ch], esi', 'mov rax, qword [var_8h]', 'mov edx, dword [var_ch]', 'mov dword [rax], edx', 'cmp dword [var_ch], 1', 'je case.0x3c8d3.65', 'cmp dword [var_ch], 2', 'jne case.0x3c8d3.65', 'cmp dword [var_ch], 3', 'jne case.0x3c8d3.65', 'nop', 'pop rbp', 'ret', 'mov rax, qword [var_8h]', 'add rax, 0x2048', 'mov rdi, rax', 'call fcn.00009060', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_8h], rdi', 'mov rax, qword [var_8h]', 'mov qword [rax], 0', 'nop', 'pop rbp', 'ret', 'mov rax, qword [var_8h]', 'add rax, 0x2058', 'mov rdi, rax', 'call fcn.00009060', 'mov rax, qword [var_8h]', 'add rax, 0x2050', 'mov rdi, rax', 'call fcn.00009060', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov dword [rax + 0x1c], 0', 'mov rax, qword [var_8h]', 'mov dword [rax + 0x20a4], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov dword [rax + 0x20f4], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov qword [rax + 0x2100], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov dword [rax + 0x2110], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_8h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'nop', 'leave', 'ret', 'mov rax, qword [var_898h]', 'mov dword [rax + 0x5474], 2', 'lea rax, [var_870h]', 'mov rdi, rax', 'call fcn.000177ba', 'mov rdx, qword [var_898h]', 'mov dword [rdx + 0x5484], eax', 'lea rax, [var_870h]', 'mov rdi, rax', 'call fcn.000177ba', 'mov edx, eax', 'mov rax, qword [var_898h]', 'mov qword [rax + 0x74d8], rdx', 'mov rax, qword [var_898h]', 'mov dword [rax + 0x74e8], 1', 'lea rax, [var_870h]', 'mov rdi, rax', 'call fcn.00017722', 'movzx edx, ax', 'mov rax, qword [var_898h]', 'mov dword [rax + 0x74ec], edx', 'lea rax, [var_870h]', 'mov rdi, rax', 'call fcn.00017722', 'movzx edx, ax', 'mov rax, qword [var_898h]', 'mov dword [rax + 0x547c], edx', 'mov rax, qword [var_898h]', 'mov eax, dword [rax + 0x547c]', 'cmp eax, 0x14', 'ja case.0x3c8d3.65', 'lea rax, [var_870h]', 'mov rdi, rax', 'call fcn.000177ba', 'mov dword [var_880h], eax', 'lea rax, [var_870h]', 'mov rdi, rax', 'call fcn.000176ce', 'movzx edx, al', 'mov rax, qword [var_898h]', 'mov dword [rax + 0x548c], edx', 'lea rax, [var_870h]', 'mov rdi, rax', 'call fcn.000176ce', 'movzx eax, al', 'or ah, 0x80', 'mov edx, eax', 'mov rax, qword [var_898h]', 'mov dword [rax + 0x5478], edx', 'lea rax, [var_870h]', 'mov rdi, rax', 'call fcn.000176ce', 'cmp al, 2', 'jne case.0x3c8d3.65', 'mov edx, 0xa', 'mov rax, qword [var_898h]', 'mov byte [rax + case.0x3c8d3.65], dl', 'lea rax, [var_870h]', 'mov rdi, rax', 'call fcn.000176ce', 'movzx eax, al', 'mov qword [var_878h], rax', 'lea rax, [var_870h]', 'mov rdi, rax', 'call fcn.000176ce', 'mov rdx, qword [var_898h]', 'mov byte [rdx + case.0x3c8d3.65], al', 'mov rax, qword [var_898h]', 'mov eax, dword [rax + 0x5478]', 'and eax, 1', 'test eax, eax', 'setne dl', 'mov rax, qword [var_898h]', 'mov byte [rax + case.0x3c8d3.65], dl', 'mov rax, qword [var_898h]', 'mov eax, dword [rax + 0x5478]', 'and eax, 2', 'test eax, eax', 'setne dl', 'mov rax, qword [var_898h]', 'mov byte [rax + case.0x3c8d3.65], dl', 'mov rax, qword [var_898h]', 'mov eax, dword [rax + 0x5478]', 'and eax, 4', 'test eax, eax', 'setne dl', 'mov rax, qword [var_898h]', 'mov byte [rax + case.0x3c8d3.65], dl', 'mov rax, qword [var_898h]', 'movzx eax, byte [rax + case.0x3c8d3.65]', 'test al, al', 'je case.0x3c8d3.65', 'mov edx, 0', 'mov rax, qword [var_898h]', 'mov dword [rax + 0x7514], edx', 'mov rax, qword [var_898h]', 'mov eax, dword [rax + 0x5484]', 'mov edx, eax', 'mov rax, qword [var_898h]', 'mov qword [rax + 0x74d0], rdx', 'mov rax, qword [var_898h]', 'mov qword [rax + 0x7570], 0x10000', 'mov rax, qword [var_898h]', 'mov eax, dword [rax + 0x548c]', 'and eax, 0x10', 'test eax, eax', 'setne dl', 'mov rax, qword [var_898h]', 'mov byte [rax + case.0x3c8d3.65], dl', 'mov rax, qword [var_898h]', 'mov byte [rax + case.0x3c8d3.65], 0', 'mov rax, qword [var_898h]', 'mov dword [rax + 0x757c], 0', 'mov rax, qword [var_898h]', 'lea rdx, [rax + 0x74b8]', 'mov eax, dword [var_880h]', 'mov esi, eax', 'mov rdi, rdx', 'call fcn.00018ac6', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x40', 'mov qword [var_38h], rdi', 'mov dword [var_3ch], esi', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov eax, dword [var_3ch]', 'and eax, 0x1f', 'add eax, eax', 'mov dword [var_1ch], eax', 'mov eax, dword [var_3ch]', 'shr eax, 5', 'and eax, 0x3f', 'mov dword [var_20h], eax', 'mov eax, dword [var_3ch]', 'shr eax, 0xb', 'and eax, 0x1f', 'mov dword [var_24h], eax', 'mov eax, dword [var_3ch]', 'shr eax, 0x10', 'and eax, 0x1f', 'mov dword [var_28h], eax', 'mov eax, dword [var_3ch]', 'shr eax, 0x15', 'and eax, 0xf', 'mov dword [var_2ch], eax', 'mov eax, dword [var_3ch]', 'shr eax, 0x19', 'add eax, 0x7bc', 'mov dword [var_30h], eax', 'mov dword [var_18h], 0', 'lea rdx, [var_30h]', 'mov rax, qword [var_38h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.0001885c', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x50', 'mov qword [var_48h], rdi', 'mov qword [var_50h], rsi', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 0x14]', 'mov dword [timeptr], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 0x10]', 'mov dword [var_3ch], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 0xc]', 'mov dword [var_38h], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 8]', 'mov dword [var_34h], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 4]', 'sub eax, 1', 'mov dword [var_30h], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax]', 'sub eax, 0x76c', 'mov dword [var_2ch], eax', 'mov dword [var_20h], 0xffffffff', 'lea rax, [timeptr]', 'mov rdi, rax', 'call sym.imp.mktime']"
688,unrar,276,"['call sym.imp.localtime', 'mov qword [var_10h], rax', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0x14]', 'add eax, 0x76c', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0x10]', 'add eax, 1', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 4], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0xc]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 8], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 8]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0xc], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 4]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x10], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x14], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0x18]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x1c], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0x1c]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x20], edx', 'mov rax, qword [var_28h]', 'mov rcx, qword [rax]', 'mov rax, rcx', 'shr rax, 9', 'movabs rdx, case.0x3c8d3.65', 'mul rdx', 'mov rax, rdx', 'shr rax, 0xb', 'imul rax, rax, case.0x3c8d3.65', 'sub rcx, rax', 'mov rax, rcx', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x18], edx', 'nop', 'mov rax, qword [canary]', 'xor rax, qword fs:[0x28]', 'je case.0x3c8d3.65', 'leave', 'ret', 'cmp byte [var_4ch], 0', 'je case.0x3c8d3.65', 'mov edi, dword [var_20h]', 'mov ecx, dword [var_24h]', 'mov r9d, dword [var_28h]', 'mov r8d, dword [var_2ch]', 'mov edx, dword [format]', 'mov rsi, qword [n]', 'mov rax, qword [s1]', 'push rdi', 'push rcx', 'mov ecx, edx', 'lea rdx, str._u__02u__02u__02u:_02u', 'mov rdi, rax', 'mov eax, 0', 'call sym.imp.swprintf', 'add rsp, 0x10', 'jmp case.0x3c8d3.65', 'nop', 'mov rax, qword [canary]', 'xor rax, qword fs:[0x28]', 'je case.0x3c8d3.65', 'leave', 'ret', 'movabs rax, case.0x3c8d3.65', 'cmp qword [var_22a8h], rax', 'je case.0x3c8d3.65', 'lea rdi, [0x00050824]', 'mov eax, 0', 'call fcn.00019e28', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0xe0', 'mov qword [var_d8h], rdi', 'mov qword [var_a8h], rsi', 'mov qword [var_a0h], rdx', 'mov qword [var_98h], rcx', 'mov qword [var_90h], r8', 'mov qword [var_88h], r9', 'test al, al', 'je case.0x3c8d3.65', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov eax, dword [0x000703a0]', 'cmp eax, 3', 'je case.0x3c8d3.65', 'nop', 'mov rax, qword [canary]', 'xor rax, qword fs:[0x28]', 'je case.0x3c8d3.65', 'leave', 'ret', 'lea rdi, str._nOverwrite__s__', 'call fcn.0001809c', 'mov rdx, rax', 'mov rax, qword [var_2298h]', 'mov rsi, rax', 'mov rdi, rdx', 'mov eax, 0', 'call fcn.00019e28', 'jmp case.0x3c8d3.65', 'mov eax, dword [var_22b4h]', 'and eax, 1', 'test eax, eax', 'sete al', 'mov byte [var_2285h], al', 'mov dword [var_2284h], 0', 'cmp byte [var_2285h], 0', 'je case.0x3c8d3.65', 'lea rax, str._Yes_No_All_nEver_Quit', 'mov rdi, rax', 'call fcn.0001809c', 'mov rdi, rax', 'call fcn.0001a280', 'endbr64', 'push rbp', 'mov rbp, rsp', 'push rbx', 'sub rsp, case.0x3c8d3.65', 'mov qword [var_7b8h], rdi', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov edi, 2', 'call fcn.00040b80', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov dword [var_4h], edi', 'movzx eax, byte [0x00073769]', 'test al, al', 'je case.0x3c8d3.65', 'call fcn.0001408f', 'endbr64', 'push rbp', 'mov rbp, rsp', 'call sym.imp.clock']"
689,unrar,300,"['call sym.imp.localtime', 'mov qword [var_10h], rax', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0x14]', 'add eax, 0x76c', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0x10]', 'add eax, 1', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 4], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0xc]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 8], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 8]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0xc], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 4]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x10], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x14], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0x18]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x1c], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0x1c]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x20], edx', 'mov rax, qword [var_28h]', 'mov rcx, qword [rax]', 'mov rax, rcx', 'shr rax, 9', 'movabs rdx, case.0x3c8d3.65', 'mul rdx', 'mov rax, rdx', 'shr rax, 0xb', 'imul rax, rax, case.0x3c8d3.65', 'sub rcx, rax', 'mov rax, rcx', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x18], edx', 'nop', 'mov rax, qword [canary]', 'xor rax, qword fs:[0x28]', 'je case.0x3c8d3.65', 'leave', 'ret', 'cmp byte [var_4ch], 0', 'je case.0x3c8d3.65', 'mov edi, dword [var_20h]', 'mov ecx, dword [var_24h]', 'mov r9d, dword [var_28h]', 'mov r8d, dword [var_2ch]', 'mov edx, dword [format]', 'mov rsi, qword [n]', 'mov rax, qword [s1]', 'push rdi', 'push rcx', 'mov ecx, edx', 'lea rdx, str._u__02u__02u__02u:_02u', 'mov rdi, rax', 'mov eax, 0', 'call sym.imp.swprintf', 'add rsp, 0x10', 'jmp case.0x3c8d3.65', 'nop', 'mov rax, qword [canary]', 'xor rax, qword fs:[0x28]', 'je case.0x3c8d3.65', 'leave', 'ret', 'movabs rax, case.0x3c8d3.65', 'cmp qword [var_22a8h], rax', 'je case.0x3c8d3.65', 'cmp qword [var_22b0h], 0', 'jne case.0x3c8d3.65', 'lea rcx, [var_2230h]', 'mov rax, qword [var_22a8h]', 'mov edx, 0x14', 'mov rsi, rcx', 'mov rdi, rax', 'call fcn.00006697', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, case.0x3c8d3.65', 'mov qword [var_f8h], rdi', 'mov qword [var_100h], rsi', 'mov qword [var_108h], rdx', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov qword [var_e0h], 0', 'mov rax, qword [var_f8h]', 'sar rax, 0x3f', 'and eax, 1', 'mov dword [var_e4h], eax', 'cmp dword [var_e4h], 0', 'je case.0x3c8d3.65', 'mov rax, qword [var_e0h]', 'lea rcx, [rax + 1]', 'mov eax, dword [var_e4h]', 'cdqe', 'mov rdx, qword [var_108h]', 'sub rdx, rax', 'mov rax, rdx', 'cmp rcx, rax', 'jae case.0x3c8d3.65', 'nop', 'cmp dword [var_e4h], 0', 'je case.0x3c8d3.65', 'mov qword [var_d8h], 0', 'mov rax, qword [var_d8h]', 'cmp rax, qword [var_e0h]', 'jae case.0x3c8d3.65', 'mov rax, qword [var_e0h]', 'lea rdx, [rax*4]', 'mov rax, qword [var_100h]', 'add rax, rdx', 'mov dword [rax], 0', 'nop', 'mov rax, qword [canary]', 'xor rax, qword fs:[0x28]', 'je case.0x3c8d3.65', 'leave', 'ret', 'lea rsi, [var_2110h]', 'mov rax, qword [var_22b0h]', 'mov ecx, 0', 'mov edx, 0x32', 'mov rdi, rax', 'call fcn.00018b62', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x50', 'mov qword [var_38h], rdi', 'mov qword [s1], rsi', 'mov qword [n], rdx', 'mov eax, ecx', 'mov byte [var_4ch], al', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov rax, qword [var_38h]', 'mov rdi, rax', 'call fcn.0000a488', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_8h], rdi', 'mov rax, qword [var_8h]', 'mov rax, qword [rax]', 'test rax, rax', 'setne al', 'pop rbp', 'ret', 'test al, al', 'je case.0x3c8d3.65', 'lea rdx, [format]', 'mov rax, qword [var_38h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.00018744', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x30', 'mov qword [var_28h], rdi', 'mov qword [var_30h], rsi', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov rax, qword [var_28h]', 'mov rdi, rax', 'call fcn.00018980', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [var_8h], rdi', 'mov rax, qword [var_8h]', 'mov rdi, rax', 'call fcn.000189e8', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_18h], rdi', 'movabs rax, case.0x3c8d3.65', 'mov qword [var_8h], rax', 'mov rax, qword [var_18h]', 'mov rax, qword [rax]', 'sub rax, qword [var_8h]', 'pop rbp', 'ret', 'shr rax, 9', 'movabs rdx, case.0x3c8d3.65', 'mul rdx', 'mov rax, rdx', 'shr rax, 0xb', 'leave', 'ret', 'mov qword [timer], rax', 'lea rax, [timer]', 'mov rdi, rax', 'call sym.imp.localtime']"
690,unrar,166,"['call sym.imp.localtime', 'mov qword [var_10h], rax', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0x14]', 'add eax, 0x76c', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0x10]', 'add eax, 1', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 4], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0xc]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 8], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 8]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0xc], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 4]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x10], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x14], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0x18]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x1c], edx', 'mov rax, qword [var_10h]', 'mov eax, dword [rax + 0x1c]', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x20], edx', 'mov rax, qword [var_28h]', 'mov rcx, qword [rax]', 'mov rax, rcx', 'shr rax, 9', 'movabs rdx, case.0x3c8d3.65', 'mul rdx', 'mov rax, rdx', 'shr rax, 0xb', 'imul rax, rax, case.0x3c8d3.65', 'sub rcx, rax', 'mov rax, rcx', 'mov edx, eax', 'mov rax, qword [var_30h]', 'mov dword [rax + 0x18], edx', 'nop', 'mov rax, qword [canary]', 'xor rax, qword fs:[0x28]', 'je case.0x3c8d3.65', 'leave', 'ret', 'mov eax, dword [var_20fch]', 'and eax, 4', 'test eax, eax', 'je case.0x3c8d3.65', 'mov dword [var_20a8h], 0', 'mov eax, dword [var_20fch]', 'and eax, 3', 'mov dword [var_20f4h], eax', 'mov dword [var_2110h], 0', 'mov eax, dword [var_2110h]', 'cmp eax, dword [var_20f4h]', 'jge case.0x3c8d3.65', 'mov eax, dword [var_20a8h]', 'imul eax, eax, 0x64', 'mov dword [var_20a8h], eax', 'lea rdx, [var_20c0h]', 'mov rax, qword [var_20d0h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.0001885c', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x50', 'mov qword [var_48h], rdi', 'mov qword [var_50h], rsi', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 0x14]', 'mov dword [timeptr], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 0x10]', 'mov dword [var_3ch], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 0xc]', 'mov dword [var_38h], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 8]', 'mov dword [var_34h], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 4]', 'sub eax, 1', 'mov dword [var_30h], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax]', 'sub eax, 0x76c', 'mov dword [var_2ch], eax', 'mov dword [var_20h], 0xffffffff', 'lea rax, [timeptr]', 'mov rdi, rax', 'call sym.imp.mktime']"
691,unrar,463,"['call sym.imp.mktime', 'mov rdx, rax', 'mov rax, qword [var_48h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.000189b6', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [var_8h], rdi', 'mov qword [var_10h], rsi', 'mov rax, qword [var_10h]', 'imul rdx, rax, case.0x3c8d3.65', 'mov rax, qword [var_8h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.00018a10', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_18h], rdi', 'mov qword [var_20h], rsi', 'movabs rax, case.0x3c8d3.65', 'mov qword [var_8h], rax', 'mov rdx, qword [var_20h]', 'mov rax, qword [var_8h]', 'add rdx, rax', 'mov rax, qword [var_18h]', 'mov qword [rax], rdx', 'nop', 'pop rbp', 'ret', 'nop', 'leave', 'ret', 'mov rax, qword [var_48h]', 'mov rdx, qword [rax]', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 0x18]', 'mov eax, eax', 'add rdx, rax', 'mov rax, qword [var_48h]', 'mov qword [rax], rdx', 'nop', 'mov rax, qword [canary]', 'xor rax, qword fs:[0x28]', 'je case.0x3c8d3.65', 'leave', 'ret', 'jmp case.0x3c8d3.65', 'add dword [var_2114h], 1', 'jmp case.0x3c8d3.65', 'cmp dword [var_2114h], 3', 'jg case.0x3c8d3.65', 'mov rax, qword [var_20f0h]', 'mov rcx, qword [rax + 0x2060]', 'mov rax, qword [var_2138h]', 'mov rax, qword [rax + 0xdeb8]', 'mov edx, 0', 'mov rsi, rcx', 'mov rdi, rax', 'call fcn.00012db5', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_8h], rdi', 'mov qword [var_10h], rsi', 'mov qword [var_18h], rdx', 'cmp qword [var_8h], 0', 'js case.0x3c8d3.65', 'mov rax, qword [var_18h]', 'pop rbp', 'ret', 'mov rdx, qword [var_2138h]', 'mov qword [rdx + 0xdeb8], rax', 'mov rax, qword [var_20f0h]', 'movzx eax, byte [rax + case.0x3c8d3.65]', 'mov byte [var_2127h], al', 'movzx edx, byte [var_2127h]', 'lea rax, [var_2090h]', 'mov esi, edx', 'mov rdi, rax', 'call fcn.00017b4a', 'endbr64', 'push rbp', 'mov rbp, rsp', 'push rbx', 'sub rsp, 0x28', 'mov qword [var_28h], rdi', 'mov eax, esi', 'mov byte [var_2ch], al', 'mov rax, qword [var_28h]', 'mov rax, qword [rax + 0x30]', 'cmp rax, 2', 'ja case.0x3c8d3.65', 'mov eax, 0', 'jmp case.0x3c8d3.65', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'ret', 'mov word [var_2124h], ax', 'mov rax, qword [var_20f0h]', 'mov edx, dword [rax]', 'movzx eax, word [var_2124h]', 'cmp edx, eax', 'je case.0x3c8d3.65', 'nop', 'jmp case.0x3c8d3.65', 'lea rax, [var_2090h]', 'mov esi, 0', 'mov rdi, rax', 'call fcn.00017b4a', 'mov word [var_2122h], ax', 'mov rax, qword [var_2138h]', 'mov edx, dword [rax + 0x53d4]', 'movzx eax, word [var_2122h]', 'cmp edx, eax', 'je case.0x3c8d3.65', 'lea rax, [var_2090h]', 'mov rdi, rax', 'call fcn.00012d26', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_8h], rdi', 'mov rax, qword [var_8h]', 'mov rax, qword [rax + 0x30]', 'pop rbp', 'ret', 'mov rbx, rax', 'nop', 'lea rax, [var_2090h]', 'mov rdi, rax', 'call fcn.00012dfe', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [var_8h], rdi', 'mov rax, qword [var_8h]', 'mov rdi, rax', 'call fcn.0000a5f8', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [ptr], rdi', 'mov rax, qword [ptr]', 'mov rax, qword [rax]', 'test rax, rax', 'je case.0x3c8d3.65', 'nop', 'leave', 'ret', 'nop', 'leave', 'ret', 'mov rax, rbx', 'mov rbx, qword [canary]', 'xor rbx, qword fs:[0x28]', 'je case.0x3c8d3.65', 'mov rbx, qword [var_8h]', 'leave', 'ret', 'mov qword [var_8h], rax', 'jmp case.0x3c8d3.65', 'cmp qword [var_8h], 0', 'je case.0x3c8d3.65', 'cmp qword [var_8h], 0', 'jne case.0x3c8d3.65', 'mov rax, qword [var_8h]', 'leave', 'ret', 'mov qword [var_8h], rax', 'cmp qword [var_8h], 0', 'je case.0x3c8d3.65', 'mov eax, 0', 'test al, al', 'je case.0x3c8d3.65', 'add qword [var_10h], 1', 'mov rax, qword [var_10h]', 'and eax, 0x7f', 'test rax, rax', 'sete al', 'test al, al', 'je case.0x3c8d3.65', 'call fcn.0001409e', 'endbr64', 'push rbp', 'mov rbp, rsp', 'movzx eax, byte [0x00066b3b]', 'test al, al', 'je case.0x3c8d3.65', 'mov esi, 0xff', 'lea rdi, [0x00066b30]', 'call fcn.0001b1d2', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [var_8h], rdi', 'mov dword [var_ch], esi', 'mov edi, 0', 'call fcn.00040b80', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov dword [var_4h], edi', 'movzx eax, byte [0x00073769]', 'test al, al', 'je case.0x3c8d3.65', 'call fcn.0001408f', 'endbr64', 'push rbp', 'mov rbp, rsp', 'call sym.imp.clock']"
692,unrar,325,"['call sym.imp.mktime', 'mov rdx, rax', 'mov rax, qword [var_48h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.000189b6', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [var_8h], rdi', 'mov qword [var_10h], rsi', 'mov rax, qword [var_10h]', 'imul rdx, rax, case.0x3c8d3.65', 'mov rax, qword [var_8h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.00018a10', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_18h], rdi', 'mov qword [var_20h], rsi', 'movabs rax, case.0x3c8d3.65', 'mov qword [var_8h], rax', 'mov rdx, qword [var_20h]', 'mov rax, qword [var_8h]', 'add rdx, rax', 'mov rax, qword [var_18h]', 'mov qword [rax], rdx', 'nop', 'pop rbp', 'ret', 'nop', 'leave', 'ret', 'mov rax, qword [var_48h]', 'mov rdx, qword [rax]', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 0x18]', 'mov eax, eax', 'add rdx, rax', 'mov rax, qword [var_48h]', 'mov qword [rax], rdx', 'nop', 'mov rax, qword [canary]', 'xor rax, qword fs:[0x28]', 'je case.0x3c8d3.65', 'leave', 'ret', 'nop', 'mov rax, qword [canary]', 'xor rax, qword fs:[0x28]', 'je case.0x3c8d3.65', 'leave', 'ret', 'lea rdx, [var_20c0h]', 'mov rax, qword [var_20d0h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.00018744', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x30', 'mov qword [var_28h], rdi', 'mov qword [var_30h], rsi', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov rax, qword [var_28h]', 'mov rdi, rax', 'call fcn.00018980', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [var_8h], rdi', 'mov rax, qword [var_8h]', 'mov rdi, rax', 'call fcn.000189e8', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_18h], rdi', 'movabs rax, case.0x3c8d3.65', 'mov qword [var_8h], rax', 'mov rax, qword [var_18h]', 'mov rax, qword [rax]', 'sub rax, qword [var_8h]', 'pop rbp', 'ret', 'shr rax, 9', 'movabs rdx, case.0x3c8d3.65', 'mul rdx', 'mov rax, rdx', 'shr rax, 0xb', 'leave', 'ret', 'mov qword [timer], rax', 'lea rax, [timer]', 'mov rdi, rax', 'call sym.imp.localtime']"
693,unrar,396,"['call sym.imp.mktime', 'mov rdx, rax', 'mov rax, qword [var_48h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.000189b6', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x10', 'mov qword [var_8h], rdi', 'mov qword [var_10h], rsi', 'mov rax, qword [var_10h]', 'imul rdx, rax, case.0x3c8d3.65', 'mov rax, qword [var_8h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.00018a10', 'endbr64', 'push rbp', 'mov rbp, rsp', 'mov qword [var_18h], rdi', 'mov qword [var_20h], rsi', 'movabs rax, case.0x3c8d3.65', 'mov qword [var_8h], rax', 'mov rdx, qword [var_20h]', 'mov rax, qword [var_8h]', 'add rdx, rax', 'mov rax, qword [var_18h]', 'mov qword [rax], rdx', 'nop', 'pop rbp', 'ret', 'nop', 'leave', 'ret', 'mov rax, qword [var_48h]', 'mov rdx, qword [rax]', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 0x18]', 'mov eax, eax', 'add rdx, rax', 'mov rax, qword [var_48h]', 'mov qword [rax], rdx', 'nop', 'mov rax, qword [canary]', 'xor rax, qword fs:[0x28]', 'je case.0x3c8d3.65', 'leave', 'ret', 'jmp case.0x3c8d3.65', 'add dword [var_2114h], 1', 'jmp case.0x3c8d3.65', 'cmp dword [var_2114h], 3', 'jg case.0x3c8d3.65', 'mov eax, dword [var_2114h]', 'cdqe', 'mov rax, qword [rbp + rax*8 - 0x2040]', 'mov qword [var_20d0h], rax', 'movzx edx, word [var_2126h]', 'mov eax, 3', 'sub eax, dword [var_2114h]', 'shl eax, 2', 'mov ecx, eax', 'sar edx, cl', 'mov eax, edx', 'mov dword [var_20fch], eax', 'mov eax, dword [var_20fch]', 'and eax, 8', 'test eax, eax', 'je case.0x3c8d3.65', 'cmp qword [var_20d0h], 0', 'je case.0x3c8d3.65', 'cmp dword [var_2114h], 0', 'je case.0x3c8d3.65', 'lea rax, [var_2090h]', 'mov rdi, rax', 'call fcn.000177ba', 'endbr64', 'push rbp', 'mov rbp, rsp', 'push rbx', 'sub rsp, 0x28', 'mov qword [var_28h], rdi', 'mov rax, qword [var_28h]', 'mov rax, qword [rax + 0x38]', 'lea rdx, [rax + 3]', 'mov rax, qword [var_28h]', 'mov rax, qword [rax + 0x30]', 'cmp rdx, rax', 'jae case.0x3c8d3.65', 'mov eax, 0', 'add rsp, 0x28', 'pop rbx', 'pop rbp', 'ret', 'mov dword [var_20f8h], eax', 'mov edx, dword [var_20f8h]', 'mov rax, qword [var_20d0h]', 'mov esi, edx', 'mov rdi, rax', 'call fcn.00018ac6', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x40', 'mov qword [var_38h], rdi', 'mov dword [var_3ch], esi', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov eax, dword [var_3ch]', 'and eax, 0x1f', 'add eax, eax', 'mov dword [var_1ch], eax', 'mov eax, dword [var_3ch]', 'shr eax, 5', 'and eax, 0x3f', 'mov dword [var_20h], eax', 'mov eax, dword [var_3ch]', 'shr eax, 0xb', 'and eax, 0x1f', 'mov dword [var_24h], eax', 'mov eax, dword [var_3ch]', 'shr eax, 0x10', 'and eax, 0x1f', 'mov dword [var_28h], eax', 'mov eax, dword [var_3ch]', 'shr eax, 0x15', 'and eax, 0xf', 'mov dword [var_2ch], eax', 'mov eax, dword [var_3ch]', 'shr eax, 0x19', 'add eax, 0x7bc', 'mov dword [var_30h], eax', 'mov dword [var_18h], 0', 'lea rdx, [var_30h]', 'mov rax, qword [var_38h]', 'mov rsi, rdx', 'mov rdi, rax', 'call fcn.0001885c', 'endbr64', 'push rbp', 'mov rbp, rsp', 'sub rsp, 0x50', 'mov qword [var_48h], rdi', 'mov qword [var_50h], rsi', 'mov rax, qword fs:[0x28]', 'mov qword [canary], rax', 'xor eax, eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 0x14]', 'mov dword [timeptr], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 0x10]', 'mov dword [var_3ch], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 0xc]', 'mov dword [var_38h], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 8]', 'mov dword [var_34h], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax + 4]', 'sub eax, 1', 'mov dword [var_30h], eax', 'mov rax, qword [var_50h]', 'mov eax, dword [rax]', 'sub eax, 0x76c', 'mov dword [var_2ch], eax', 'mov dword [var_20h], 0xffffffff', 'lea rax, [timeptr]', 'mov rdi, rax', 'call sym.imp.mktime']"
694,patch,159,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x17a48', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17a5e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x1cb25', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_20h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0x1d2c0', 'cmp al, 8', 'jg 0x1d2c8', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x1cbb8', 'movzx r12d, byte [r14 + 4]', 'lea rsi, [r14 + 4]', 'test r12b, r12b', 'je 0x1cbb8', 'mov rdx, rsi', 'mov eax, r12d', 'mov edi, 1', 'jmp 0x1cb9b', 'cmp al, 0x5c', 'jne 0x1cb80', 'cmp al, 0x22', 'je 0x1d320', 'lea rax, [var_370h]', 'mov qword [var_8h], 0', 'mov qword [var_10h], rax', 'cmp rdi, 0x64', 'jg 0x1d474', 'mov rdx, qword [var_10h]', 'cmp r12b, 0x22', 'je 0x1d375', 'mov byte [rdx], 0', 'mov rdi, qword [var_10h]', 'mov qword [var_38h], rsi', 'call fcn.000210e0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0x21150', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0x21143', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test rax, rax', 'je 0x1e7ae', 'mov rbp, rax', 'mov rdi, r13', 'mov r9, rbx', 'mov r8, rax', 'xor ecx, ecx', 'mov rdx, r15', 'mov rsi, r14', 'call fcn.0001cad0', 'endbr64', 'push r15', 'mov r15, r8', 'push r14', 'push r13', 'mov r13, rdx', 'push r12', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0x458', 'mov qword [var_28h], rdi', 'mov rdi, rsi', 'mov dword [var_18h], ecx', 'mov qword [var_10h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov qword [var_30h], rax', 'test r13, r13', 'je 0x1d4b8', 'lea r13, [var_60h]', 'mov rdi, r13', 'call fcn.00017a00', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
695,patch,113,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x17a48', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17a5e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x1cb25', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_20h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0x1d2c0', 'cmp al, 8', 'jg 0x1d2c8', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x1cbb8', 'lea rdx, [var_f0h]', 'mov rsi, r13', 'mov rdi, r15', 'call fcn.000213c0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x21450', 'add rsp, 8', 'mov rdi, r14', 'mov rsi, rdx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'jmp sym.imp.gmtime_r', 'test rax, rax', 'je 0x1d4d0', 'mov qword [var_8h], 0', 'xor r13d, r13d', 'jmp 0x1d280', 'mov rdi, qword [var_8h]', 'call fcn.000057f0', 'endbr64', 'bnd jmp qword [reloc.free]', 'mov rax, qword [var_448h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e678', 'add rsp, 0x458', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, rbp', 'mov r12d, eax', 'call fcn.000213a0', 'endbr64', 'cmp rdi, 1', 'je 0x213b0', 'jmp fcn.00021050', 'test rdi, rdi', 'je 0x21078', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x2142e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
696,patch,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x17a48', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17a5e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x1cb25', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_20h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0x1d2c0', 'cmp al, 8', 'jg 0x1d2c8', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x1cbb8', 'lea rdx, [var_f0h]', 'mov rsi, r13', 'mov rdi, r15', 'call fcn.000213c0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x21450', 'mov r12, rdi', 'call fcn.000212e0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0002450e]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x21370', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0x21301', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x215a0', 'mov rdi, rbp', 'call sym.imp.mktime']"
697,patch,340,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x17a48', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x17a5e', 'add rsp, 0x20', 'pop rbx', 'ret', 'jmp 0x1cb25', 'mov rax, qword [r13 + 8]', 'mov rbx, qword [r13]', 'mov r14, rbp', 'mov qword [var_20h], rax', 'movzx eax, byte [r14]', 'cmp al, 0xd', 'jg 0x1d2c0', 'cmp al, 8', 'jg 0x1d2c8', 'mov ecx, 4', 'lea rdi, str.TZ_', 'mov rsi, r14', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x1cbb8', 'lea rdx, [var_f0h]', 'mov rsi, r13', 'mov rdi, r15', 'call fcn.000213c0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x21450', 'mov r12, rdi', 'call fcn.000212e0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0002450e]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x21370', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0x21301', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x215a0', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x21518', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
698,patch,208,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x21420', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00021180', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x21240', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0x211b4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0x21230', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x21218', 'cmp byte [rbx], 0', 'jne 0x211e3', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0x21258', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0x21298', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0x212b0', 'mov rdi, r12', 'call fcn.000210e0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0x21150', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0x21143', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test rax, rax', 'je 0x1e7ae', 'mov rbp, rax', 'mov rdi, r13', 'mov r9, rbx', 'mov r8, rax', 'xor ecx, ecx', 'mov rdx, r15', 'mov rsi, r14', 'call fcn.0001cad0', 'endbr64', 'push r15', 'mov r15, r8', 'push r14', 'push r13', 'mov r13, rdx', 'push r12', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0x458', 'mov qword [var_28h], rdi', 'mov rdi, rsi', 'mov dword [var_18h], ecx', 'mov qword [var_10h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov qword [var_30h], rax', 'test r13, r13', 'je 0x1d4b8', 'lea r13, [var_60h]', 'mov rdi, r13', 'call fcn.00017a00', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
699,patch,87,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x21420', 'cmp r13, 1', 'je 0x2142e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x1d273', 'cmp r12, r15', 'je 0x1d280', 'mov rdi, r12', 'call fcn.000213a0', 'endbr64', 'cmp rdi, 1', 'je 0x213b0', 'jmp fcn.00021050', 'test rdi, rdi', 'je 0x21078', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x2142e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
700,patch,86,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x21420', 'cmp r13, 1', 'je 0x2142e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x1d273', 'cmp r12, r15', 'je 0x1d280', 'mov rdi, r12', 'call fcn.000213a0', 'endbr64', 'cmp rdi, 1', 'je 0x213b0', 'jmp fcn.00021050', 'test rdi, rdi', 'je 0x21078', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x215a0', 'mov rdi, rbp', 'call sym.imp.mktime']"
701,patch,310,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x21420', 'cmp r13, 1', 'je 0x2142e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x1d273', 'cmp r12, r15', 'je 0x1d280', 'mov rdi, r12', 'call fcn.000213a0', 'endbr64', 'cmp rdi, 1', 'je 0x213b0', 'jmp fcn.00021050', 'test rdi, rdi', 'je 0x21078', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x215a0', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x21518', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
702,patch,378,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x21518', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00021180', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x21240', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0x211b4', 'cmp byte [r12], 0', 'lea rbx, [rbp + 9]', 'je 0x21230', 'nop', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x21218', 'cmp byte [rbx], 0', 'jne 0x211e3', 'lea r14, [rbp + 9]', 'cmp r14, rbx', 'jne 0x21258', 'mov rdi, r12', 'call sym.imp.strlen', 'mov r15, rax', 'lea rdx, [rax + 1]', 'mov rax, rbx', 'sub rax, r14', 'mov rcx, rax', 'not rcx', 'cmp rcx, rdx', 'jb 0x21298', 'add rax, rdx', 'cmp rax, 0x76', 'ja 0x212b0', 'mov rdi, r12', 'call fcn.000210e0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0x21150', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0x21143', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test rax, rax', 'je 0x1e7ae', 'mov rbp, rax', 'mov rdi, r13', 'mov r9, rbx', 'mov r8, rax', 'xor ecx, ecx', 'mov rdx, r15', 'mov rsi, r14', 'call fcn.0001cad0', 'endbr64', 'push r15', 'mov r15, r8', 'push r14', 'push r13', 'mov r13, rdx', 'push r12', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0x458', 'mov qword [var_28h], rdi', 'mov rdi, rsi', 'mov dword [var_18h], ecx', 'mov qword [var_10h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov qword [var_30h], rax', 'test r13, r13', 'je 0x1d4b8', 'lea r13, [var_60h]', 'mov rdi, r13', 'call fcn.00017a00', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
703,patch,288,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x21518', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00021180', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x21240', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0x214d8', 'cmp r13, 1', 'je 0x214ee', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0x215ac', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x1e6f5', 'cmp byte [var_289h], 0', 'je 0x1d270', 'xor r13d, r13d', 'cmp r12, r15', 'je 0x1d280', 'mov rdi, r12', 'call fcn.000213a0', 'endbr64', 'cmp rdi, 1', 'je 0x213b0', 'jmp fcn.00021050', 'test rdi, rdi', 'je 0x21078', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x2142e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
704,patch,287,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x21518', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00021180', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x21240', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0x214d8', 'cmp r13, 1', 'je 0x214ee', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0x215ac', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x1e6f5', 'cmp byte [var_289h], 0', 'je 0x1d270', 'xor r13d, r13d', 'cmp r12, r15', 'je 0x1d280', 'mov rdi, r12', 'call fcn.000213a0', 'endbr64', 'cmp rdi, 1', 'je 0x213b0', 'jmp fcn.00021050', 'test rdi, rdi', 'je 0x21078', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x215a0', 'mov rdi, rbp', 'call sym.imp.mktime']"
705,patch,224,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x21518', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
706,patch,231,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x214d8', 'cmp r13, 1', 'je 0x214ee', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0x215ac', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdx, qword [var_18h]', 'mov rsi, r13', 'mov rdi, r12', 'mov rcx, rax', 'mov rbp, rax', 'call fcn.00019cf0', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x50', 'mov qword [var_8h], rcx', 'mov rsi, qword fs:[0x28]', 'mov qword [var_48h], rsi', 'xor esi, esi', 'cmp rcx, 0xffffffffffffffff', 'je 0x19d60', 'lea rdx, [var_10h]', 'lea rsi, [var_8h]', 'call fcn.000213c0', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x21450', 'mov r12, rdi', 'call fcn.000212e0', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x0002450e]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x21370', 'cmp byte [rbx + 8], 0', 'jne 0x21350', 'mov rdi, rbp', 'call fcn.000210e0', 'endbr64', 'push r12', 'push rbp', 'push rbx', 'test rdi, rdi', 'je 0x21150', 'mov edi, 0x80', 'call sym.imp.malloc', 'mov r12, rax', 'test rax, rax', 'je 0x21143', 'xor edx, edx', 'mov qword [r12], 0', 'mov rax, r12', 'mov word [r12 + 8], dx', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test rax, rax', 'je 0x1e7ae', 'mov rbp, rax', 'mov rdi, r13', 'mov r9, rbx', 'mov r8, rax', 'xor ecx, ecx', 'mov rdx, r15', 'mov rsi, r14', 'call fcn.0001cad0', 'endbr64', 'push r15', 'mov r15, r8', 'push r14', 'push r13', 'mov r13, rdx', 'push r12', 'push rbp', 'mov rbp, rsi', 'push rbx', 'sub rsp, 0x458', 'mov qword [var_28h], rdi', 'mov rdi, rsi', 'mov dword [var_18h], ecx', 'mov qword [var_10h], r9', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'call sym.imp.strlen', 'mov qword [var_30h], rax', 'test r13, r13', 'je 0x1d4b8', 'lea r13, [var_60h]', 'mov rdi, r13', 'call fcn.00017a00', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
707,patch,93,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x214d8', 'cmp r13, 1', 'je 0x214ee', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0x215ac', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x1e6f5', 'cmp byte [var_289h], 0', 'je 0x1d270', 'xor r13d, r13d', 'cmp r12, r15', 'je 0x1d280', 'mov rdi, r12', 'call fcn.000213a0', 'endbr64', 'cmp rdi, 1', 'je 0x213b0', 'jmp fcn.00021050', 'test rdi, rdi', 'je 0x21078', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x2142e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
708,patch,92,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x214d8', 'cmp r13, 1', 'je 0x214ee', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0x215ac', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x1e6f5', 'cmp byte [var_289h], 0', 'je 0x1d270', 'xor r13d, r13d', 'cmp r12, r15', 'je 0x1d280', 'mov rdi, r12', 'call fcn.000213a0', 'endbr64', 'cmp rdi, 1', 'je 0x213b0', 'jmp fcn.00021050', 'test rdi, rdi', 'je 0x21078', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x215a0', 'mov rdi, rbp', 'call sym.imp.mktime']"
709,patch,316,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x214d8', 'cmp r13, 1', 'je 0x214ee', 'mov rax, qword [var_8h]', 'mov rcx, qword [var_48h]', 'xor rcx, qword fs:[0x28]', 'jne 0x215ac', 'add rsp, 0x50', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbp, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x1e6f5', 'cmp byte [var_289h], 0', 'je 0x1d270', 'xor r13d, r13d', 'cmp r12, r15', 'je 0x1d280', 'mov rdi, r12', 'call fcn.000213a0', 'endbr64', 'cmp rdi, 1', 'je 0x213b0', 'jmp fcn.00021050', 'test rdi, rdi', 'je 0x21078', 'ret', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x215a0', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x21518', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
710,faillog,246,"['call sym.imp.localtime', 'mov rdi, r12', 'mov esi, 0x50', 'lea rdx, str._D__H:_M:_S__z', 'mov rcx, rax', 'call sym.imp.strftime', 'movsx ecx, word [ptr]', 'mov rdx, qword [rbx]', 'xor eax, eax', 'movsx r8d, word [var_12h]', 'lea rsi, str.__9s____5d_____5d___', 'mov edi, 1', 'call sym.imp.__printf_chk', 'mov rdx, r12', 'lea rcx, [var_14h]', 'xor eax, eax', 'lea rsi, str._s___s', 'mov edi, 1', 'call sym.imp.__printf_chk', 'mov r12, qword [var_28h]', 'test r12, r12', 'je 0x36f9', 'mov rsi, qword [obj.stdout]', 'mov edi, 0xa', 'call sym.imp.putc', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x3808', 'add rsp, 0x90', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'jmp 0x2e31', 'call sym.imp.getpwent', 'mov rdi, rax', 'test rax, rax', 'je 0x2e7d', 'cmp byte [0x00006234], 0', 'je 0x2e6f', 'movzx esi, byte [0x00006235]', 'call fcn.000035b0', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x90', 'mov rax, qword fs:[0x28]', 'mov qword [var_88h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x370a', 'mov ebp, esi', 'mov esi, dword [rdi + 0x10]', 'mov rbx, rdi', 'shl rsi, 5', 'lea rax, [rsi + 0x20]', 'cmp rax, qword [0x000061d0]', 'jbe 0x3730', 'pxor xmm0, xmm0', 'movaps xmmword [ptr], xmm0', 'movaps xmmword [var_20h], xmm0', 'test bpl, bpl', 'jne 0x3613', 'lea rdi, [timer]', 'call sym.imp.time', 'cmp byte [0x00006233], 0', 'je 0x363d', 'cmp byte [0x00006180], 0', 'je 0x37b0', 'lea rdi, [var_20h]', 'lea r12, [var_30h]', 'call sym.imp.localtime']"
711,mcd,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
712,lpstat,161,"['call sym.imp._cupsStrDate', 'mov ecx, dword [var_20h]', 'mov rax, qword [reloc.stdout]', 'test ecx, ecx', 'mov qword [var_8h], rax', 'je 0x4618', 'mov rdi, qword [rax]', 'mov rcx, r13', 'mov rdx, rbx', 'lea rsi, str._s_accepting_requests_since__s', 'xor eax, eax', 'call sym.imp._cupsLangPrintf', 'mov edx, dword [var_24h]', 'mov r13, qword [var_28h]', 'test edx, edx', 'jle 0x447b', 'test r12, r12', 'je 0x4336', 'mov r12, qword [r12]', 'jmp 0x4331', 'test r12, r12', 'jne 0x4320', 'mov edx, dword [r12 + 8]', 'mov rax, r12', 'mov r12, qword [r12]', 'cmp edx, 4', 'je 0x4370', 'mov dword [var_20h], 1', 'xor r13d, r13d', 'xor ebx, ebx', 'lea r8, str.printer_is_accepting_jobs', 'mov qword [var_10h], 0', 'jmp 0x4420', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'mov rdi, rbp', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x4398', 'cmp dword [rax + 0xc], 0x42', 'jne 0x4398', 'mov rbx, qword [rax + 0x28]', 'test r12, r12', 'jne 0x440d', 'nop word [rax + rax]', 'test rbx, rbx', 'je 0x4336', 'test r14, r14', 'je 0x44c0', 'lea rax, [var_50h]', 'mov rdx, r13', 'mov esi, 0xff', 'mov rdi, rax', 'mov qword [var_30h], rax', 'mov r13, rax', 'call sym.imp._cupsStrDate']"
713,lpstat,221,"['call sym.imp._cupsStrDate', 'mov ecx, dword [var_20h]', 'mov rax, qword [reloc.stdout]', 'test ecx, ecx', 'mov qword [var_8h], rax', 'je 0x4618', 'mov rdi, qword [rax]', 'mov rcx, r13', 'mov rdx, rbx', 'lea rsi, str._s_accepting_requests_since__s', 'xor eax, eax', 'call sym.imp._cupsLangPrintf', 'mov edx, dword [var_24h]', 'mov r13, qword [var_28h]', 'test edx, edx', 'jle 0x447b', 'test r12, r12', 'je 0x4336', 'mov r12, qword [r12]', 'jmp 0x4331', 'test r12, r12', 'jne 0x4320', 'mov edx, dword [r12 + 8]', 'mov rax, r12', 'mov r12, qword [r12]', 'cmp edx, 4', 'je 0x4370', 'mov dword [var_20h], 1', 'xor r13d, r13d', 'xor ebx, ebx', 'lea r8, str.printer_is_accepting_jobs', 'mov qword [var_10h], 0', 'jmp 0x4420', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'mov rdi, rbp', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x4398', 'cmp dword [rax + 0xc], 0x42', 'jne 0x4398', 'mov rbx, qword [rax + 0x28]', 'test r12, r12', 'jne 0x440d', 'nop word [rax + rax]', 'test rbx, rbx', 'je 0x4336', 'test r14, r14', 'je 0x44c0', 'cmp byte [r14], 0', 'je 0x44c0', 'mov rsi, rbx', 'mov rdi, r14', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'jne 0x4bb0', 'cmp dword [var_18h], 4', 'je 0x55bf', 'mov rdx, qword [var_60h]', 'lea rdi, [var_90h]', 'mov esi, 0xff', 'mov qword [var_68h], rdi', 'call sym.imp._cupsStrDate']"
714,lpstat,482,"['call sym.imp._cupsStrDate', 'mov ecx, dword [var_20h]', 'mov rax, qword [reloc.stdout]', 'test ecx, ecx', 'mov qword [var_8h], rax', 'je 0x4618', 'mov rdi, qword [rax]', 'mov rcx, r13', 'mov rdx, rbx', 'lea rsi, str._s_accepting_requests_since__s', 'xor eax, eax', 'call sym.imp._cupsLangPrintf', 'mov edx, dword [var_24h]', 'mov r13, qword [var_28h]', 'test edx, edx', 'jle 0x447b', 'test r12, r12', 'je 0x4336', 'mov r12, qword [r12]', 'jmp 0x4331', 'test r12, r12', 'jne 0x4320', 'mov edx, dword [r12 + 8]', 'mov rax, r12', 'mov r12, qword [r12]', 'cmp edx, 4', 'je 0x4370', 'mov dword [var_20h], 1', 'xor r13d, r13d', 'xor ebx, ebx', 'lea r8, str.printer_is_accepting_jobs', 'mov qword [var_10h], 0', 'jmp 0x4420', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'mov rdi, rbp', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x4398', 'cmp dword [rax + 0xc], 0x42', 'jne 0x4398', 'mov rbx, qword [rax + 0x28]', 'test r12, r12', 'jne 0x440d', 'nop word [rax + rax]', 'test rbx, rbx', 'je 0x4336', 'test r14, r14', 'je 0x44c0', 'cmp byte [r14], 0', 'je 0x44c0', 'mov rsi, rbx', 'mov rdi, r14', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'jne 0x4bb0', 'cmp dword [var_18h], 4', 'je 0x55bf', 'mov edi, 0xa', 'call sym.imp.ippNewRequest', 'sub rsp, 8', 'xor r9d, r9d', 'mov r8d, 2', 'mov rbp, rax', 'mov edx, 0x44', 'mov esi, 1', 'movabs rax, 0x10000000a', 'mov qword [rbp + 8], rax', 'lea rax, str.job_id', 'lea rcx, str.requested_attributes', 'mov rdi, rbp', 'push rax', 'call sym.imp.ippAddStrings', 'lea rax, str._printers__s', 'mov qword [rsp], r12', 'lea rbx, [var_1a0h]', 'push rax', 'lea r9, str.localhost', 'xor r8d, r8d', 'mov edx, 0x400', 'push 0', 'lea rcx, [0x00007a4e]', 'mov rsi, rbx', 'xor eax, eax', 'mov edi, 0xf', 'call sym.imp.httpAssembleURIf', 'add rsp, 0x20', 'xor r8d, r8d', 'mov r9, rbx', 'lea rcx, [0x00007ce5]', 'mov edx, 0x45', 'mov esi, 1', 'mov rdi, rbp', 'call sym.imp.ippAddString', 'lea rdx, [0x00007c9c]', 'mov rsi, rbp', 'xor edi, edi', 'call sym.imp.cupsDoRequest', 'mov dword [var_74h], 0', 'mov r8, rax', 'test rax, rax', 'jne 0x5815', 'lea r14, [var_90h]', 'mov rdx, qword [var_60h]', 'mov esi, 0xff', 'mov rdi, r14', 'mov qword [var_68h], r14', 'call sym.imp._cupsStrDate']"
715,lpstat,246,"['call sym.imp._cupsStrDate', 'mov ecx, dword [var_20h]', 'mov rax, qword [reloc.stdout]', 'test ecx, ecx', 'mov qword [var_8h], rax', 'je 0x4618', 'mov rdi, qword [rax]', 'mov rcx, r13', 'mov rdx, rbx', 'lea rsi, str._s_accepting_requests_since__s', 'xor eax, eax', 'call sym.imp._cupsLangPrintf', 'mov edx, dword [var_24h]', 'mov r13, qword [var_28h]', 'test edx, edx', 'jle 0x447b', 'test r12, r12', 'je 0x4336', 'mov r12, qword [r12]', 'jmp 0x4331', 'test r12, r12', 'jne 0x4320', 'mov edx, dword [r12 + 8]', 'mov rax, r12', 'mov r12, qword [r12]', 'cmp edx, 4', 'je 0x4370', 'mov dword [var_20h], 1', 'xor r13d, r13d', 'xor ebx, ebx', 'lea r8, str.printer_is_accepting_jobs', 'mov qword [var_10h], 0', 'jmp 0x4420', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'mov rdi, rbp', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x4398', 'cmp dword [rax + 0xc], 0x42', 'jne 0x4398', 'mov rbx, qword [rax + 0x28]', 'test r12, r12', 'jne 0x440d', 'nop word [rax + rax]', 'test rbx, rbx', 'je 0x4336', 'test r14, r14', 'je 0x44c0', 'cmp byte [r14], 0', 'je 0x44c0', 'mov rsi, rbx', 'mov rdi, r14', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0x6347', 'lea rbx, [var_60h]', 'sub rsp, 8', 'mov ecx, 0xff', 'mov edx, 1', 'mov eax, dword [var_18h_2]', 'lea r8, str._s__d', 'mov esi, 0xff', 'mov rdi, rbx', 'push rax', 'mov r9, qword [var_10h]', 'xor eax, eax', 'call sym.imp.__snprintf_chk', 'mov rdx, qword [var_38h]', 'mov esi, 0xff', 'lea r8, [var_170h]', 'mov rdi, r8', 'mov qword [var_18h_2], r8', 'call sym.imp._cupsStrDate']"
716,lpstat,249,"['call sym.imp._cupsStrDate', 'mov ecx, dword [var_20h]', 'mov rax, qword [reloc.stdout]', 'test ecx, ecx', 'mov qword [var_8h], rax', 'je 0x4618', 'mov rdi, qword [rax]', 'mov rcx, r13', 'mov rdx, rbx', 'lea rsi, str._s_accepting_requests_since__s', 'xor eax, eax', 'call sym.imp._cupsLangPrintf', 'mov edx, dword [var_24h]', 'mov r13, qword [var_28h]', 'test edx, edx', 'jle 0x447b', 'test r12, r12', 'je 0x4336', 'mov r12, qword [r12]', 'jmp 0x4331', 'test r12, r12', 'jne 0x4320', 'mov edx, dword [r12 + 8]', 'mov rax, r12', 'mov r12, qword [r12]', 'cmp edx, 4', 'je 0x4370', 'mov dword [var_20h], 1', 'xor r13d, r13d', 'xor ebx, ebx', 'lea r8, str.printer_is_accepting_jobs', 'mov qword [var_10h], 0', 'jmp 0x4420', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'mov rdi, rbp', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x4398', 'cmp dword [rax + 0xc], 0x42', 'jne 0x4398', 'mov rbx, qword [rax + 0x28]', 'test r12, r12', 'jne 0x440d', 'nop word [rax + rax]', 'test rbx, rbx', 'je 0x4336', 'test r14, r14', 'je 0x44c0', 'cmp byte [r14], 0', 'je 0x44c0', 'mov rsi, rbx', 'mov rdi, r14', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0x6347', 'mov rdi, qword [var_48h]', 'test rdi, rdi', 'je 0x6230', 'lea rbx, [var_60h]', 'sub rsp, 8', 'mov ecx, 0xff', 'mov edx, 1', 'mov eax, dword [var_18h_2]', 'lea r8, str._s__d', 'mov esi, 0xff', 'mov rdi, rbx', 'push rax', 'mov r9, qword [var_10h]', 'xor eax, eax', 'call sym.imp.__snprintf_chk', 'mov rdx, qword [var_38h]', 'mov esi, 0xff', 'lea r8, [var_170h]', 'mov rdi, r8', 'mov qword [var_18h_2], r8', 'call sym.imp._cupsStrDate']"
717,lpstat,174,"['call sym.imp._cupsStrDate', 'mov eax, dword [var_18h]', 'cmp eax, 5', 'je 0x5528', 'cmp eax, 3', 'je 0x54e8', 'cmp qword [var_10h], 0', 'mov dword [var_74h], 0', 'je 0x4c28', 'cmp dword [var_1ch], 1', 'jg 0x51d8', 'mov esi, dword [var_1ch]', 'test esi, esi', 'jne 0x589b', 'mov r10d, dword [var_ch]', 'test r10d, r10d', 'jle 0x4a33', 'test r15, r15', 'je 0x47c4', 'mov r15, qword [r15]', 'jmp 0x47bf', 'test r15, r15', 'jne 0x47b0', 'mov edx, dword [r15 + 8]', 'mov rax, r15', 'mov r15, qword [r15]', 'cmp edx, 4', 'je 0x4800', 'mov qword [var_60h], 0', 'xor r12d, r12d', 'xor r13d, r13d', 'lea r8, str.printer_state_change_time', 'mov dword [var_70h], 0', 'lea r9, str.printer_info', 'lea rbx, str.printer_uri_supported', 'mov dword [var_18h], 3', 'lea rbp, str.printer_state_reasons', 'lea r10, str.requesting_user_name_allowed', 'mov qword [var_48h_2], 0', 'lea r14, str.printer_make_and_model', 'lea r11, str.printer_location', 'mov qword [var_28h], 0', 'mov qword [var_78h], 0', 'mov qword [s1], 0', 'mov qword [var_58h], 0', 'mov qword [var_50h], 0', 'mov qword [var_10h], 0', 'jmp 0x497a', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'lea rdi, str.printer_name', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x49a3', 'cmp dword [rax + 0xc], 0x42', 'je 0x4af8', 'mov r12, qword [rax + 0x28]', 'jmp 0x4960', 'test r15, r15', 'je 0x4a00', 'test r12, r12', 'je 0x47c4', 'mov rax, qword [var_40h]', 'test rax, rax', 'je 0x4bb0', 'cmp byte [rax], 0', 'je 0x4bb0', 'mov rsi, r12', 'mov rdi, rax', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'jne 0x44c0', 'lea rax, [var_50h]', 'mov rdx, r13', 'mov esi, 0xff', 'mov rdi, rax', 'mov qword [var_30h], rax', 'mov r13, rax', 'call sym.imp._cupsStrDate']"
718,lpstat,114,"['call sym.imp._cupsStrDate', 'mov eax, dword [var_18h]', 'cmp eax, 5', 'je 0x5528', 'cmp eax, 3', 'je 0x54e8', 'cmp qword [var_10h], 0', 'mov dword [var_74h], 0', 'je 0x4c28', 'cmp dword [var_1ch], 1', 'jg 0x51d8', 'mov esi, dword [var_1ch]', 'test esi, esi', 'jne 0x589b', 'mov r10d, dword [var_ch]', 'test r10d, r10d', 'jle 0x4a33', 'test r15, r15', 'je 0x47c4', 'mov r15, qword [r15]', 'jmp 0x47bf', 'test r15, r15', 'jne 0x47b0', 'mov edx, dword [r15 + 8]', 'mov rax, r15', 'mov r15, qword [r15]', 'cmp edx, 4', 'je 0x4800', 'mov qword [var_60h], 0', 'xor r12d, r12d', 'xor r13d, r13d', 'lea r8, str.printer_state_change_time', 'mov dword [var_70h], 0', 'lea r9, str.printer_info', 'lea rbx, str.printer_uri_supported', 'mov dword [var_18h], 3', 'lea rbp, str.printer_state_reasons', 'lea r10, str.requesting_user_name_allowed', 'mov qword [var_48h_2], 0', 'lea r14, str.printer_make_and_model', 'lea r11, str.printer_location', 'mov qword [var_28h], 0', 'mov qword [var_78h], 0', 'mov qword [s1], 0', 'mov qword [var_58h], 0', 'mov qword [var_50h], 0', 'mov qword [var_10h], 0', 'jmp 0x497a', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'lea rdi, str.printer_name', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x49a3', 'cmp dword [rax + 0xc], 0x42', 'je 0x4af8', 'mov r12, qword [rax + 0x28]', 'jmp 0x4960', 'test r15, r15', 'je 0x4a00', 'test r12, r12', 'je 0x47c4', 'mov rax, qword [var_40h]', 'test rax, rax', 'je 0x4bb0', 'cmp dword [var_18h], 4', 'je 0x55bf', 'mov rdx, qword [var_60h]', 'lea rdi, [var_90h]', 'mov esi, 0xff', 'mov qword [var_68h], rdi', 'call sym.imp._cupsStrDate']"
719,lpstat,375,"['call sym.imp._cupsStrDate', 'mov eax, dword [var_18h]', 'cmp eax, 5', 'je 0x5528', 'cmp eax, 3', 'je 0x54e8', 'cmp qword [var_10h], 0', 'mov dword [var_74h], 0', 'je 0x4c28', 'cmp dword [var_1ch], 1', 'jg 0x51d8', 'mov esi, dword [var_1ch]', 'test esi, esi', 'jne 0x589b', 'mov r10d, dword [var_ch]', 'test r10d, r10d', 'jle 0x4a33', 'test r15, r15', 'je 0x47c4', 'mov r15, qword [r15]', 'jmp 0x47bf', 'test r15, r15', 'jne 0x47b0', 'mov edx, dword [r15 + 8]', 'mov rax, r15', 'mov r15, qword [r15]', 'cmp edx, 4', 'je 0x4800', 'mov qword [var_60h], 0', 'xor r12d, r12d', 'xor r13d, r13d', 'lea r8, str.printer_state_change_time', 'mov dword [var_70h], 0', 'lea r9, str.printer_info', 'lea rbx, str.printer_uri_supported', 'mov dword [var_18h], 3', 'lea rbp, str.printer_state_reasons', 'lea r10, str.requesting_user_name_allowed', 'mov qword [var_48h_2], 0', 'lea r14, str.printer_make_and_model', 'lea r11, str.printer_location', 'mov qword [var_28h], 0', 'mov qword [var_78h], 0', 'mov qword [s1], 0', 'mov qword [var_58h], 0', 'mov qword [var_50h], 0', 'mov qword [var_10h], 0', 'jmp 0x497a', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'lea rdi, str.printer_name', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x49a3', 'cmp dword [rax + 0xc], 0x42', 'je 0x4af8', 'mov r12, qword [rax + 0x28]', 'jmp 0x4960', 'test r15, r15', 'je 0x4a00', 'test r12, r12', 'je 0x47c4', 'mov rax, qword [var_40h]', 'test rax, rax', 'je 0x4bb0', 'cmp dword [var_18h], 4', 'je 0x55bf', 'mov edi, 0xa', 'call sym.imp.ippNewRequest', 'sub rsp, 8', 'xor r9d, r9d', 'mov r8d, 2', 'mov rbp, rax', 'mov edx, 0x44', 'mov esi, 1', 'movabs rax, 0x10000000a', 'mov qword [rbp + 8], rax', 'lea rax, str.job_id', 'lea rcx, str.requested_attributes', 'mov rdi, rbp', 'push rax', 'call sym.imp.ippAddStrings', 'lea rax, str._printers__s', 'mov qword [rsp], r12', 'lea rbx, [var_1a0h]', 'push rax', 'lea r9, str.localhost', 'xor r8d, r8d', 'mov edx, 0x400', 'push 0', 'lea rcx, [0x00007a4e]', 'mov rsi, rbx', 'xor eax, eax', 'mov edi, 0xf', 'call sym.imp.httpAssembleURIf', 'add rsp, 0x20', 'xor r8d, r8d', 'mov r9, rbx', 'lea rcx, [0x00007ce5]', 'mov edx, 0x45', 'mov esi, 1', 'mov rdi, rbp', 'call sym.imp.ippAddString', 'lea rdx, [0x00007c9c]', 'mov rsi, rbp', 'xor edi, edi', 'call sym.imp.cupsDoRequest', 'mov dword [var_74h], 0', 'mov r8, rax', 'test rax, rax', 'jne 0x5815', 'lea r14, [var_90h]', 'mov rdx, qword [var_60h]', 'mov esi, 0xff', 'mov rdi, r14', 'mov qword [var_68h], r14', 'call sym.imp._cupsStrDate']"
720,lpstat,199,"['call sym.imp._cupsStrDate', 'mov eax, dword [var_18h]', 'cmp eax, 5', 'je 0x5528', 'cmp eax, 3', 'je 0x54e8', 'cmp qword [var_10h], 0', 'mov dword [var_74h], 0', 'je 0x4c28', 'cmp dword [var_1ch], 1', 'jg 0x51d8', 'mov esi, dword [var_1ch]', 'test esi, esi', 'jne 0x589b', 'mov r10d, dword [var_ch]', 'test r10d, r10d', 'jle 0x4a33', 'test r15, r15', 'je 0x47c4', 'mov r15, qword [r15]', 'jmp 0x47bf', 'test r15, r15', 'jne 0x47b0', 'mov edx, dword [r15 + 8]', 'mov rax, r15', 'mov r15, qword [r15]', 'cmp edx, 4', 'je 0x4800', 'mov qword [var_60h], 0', 'xor r12d, r12d', 'xor r13d, r13d', 'lea r8, str.printer_state_change_time', 'mov dword [var_70h], 0', 'lea r9, str.printer_info', 'lea rbx, str.printer_uri_supported', 'mov dword [var_18h], 3', 'lea rbp, str.printer_state_reasons', 'lea r10, str.requesting_user_name_allowed', 'mov qword [var_48h_2], 0', 'lea r14, str.printer_make_and_model', 'lea r11, str.printer_location', 'mov qword [var_28h], 0', 'mov qword [var_78h], 0', 'mov qword [s1], 0', 'mov qword [var_58h], 0', 'mov qword [var_50h], 0', 'mov qword [var_10h], 0', 'jmp 0x497a', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'lea rdi, str.printer_name', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x49a3', 'cmp dword [rax + 0xc], 0x42', 'je 0x4af8', 'mov r12, qword [rax + 0x28]', 'jmp 0x4960', 'test r15, r15', 'je 0x4a00', 'test r12, r12', 'je 0x47c4', 'mov rax, qword [var_40h]', 'test rax, rax', 'je 0x4bb0', 'cmp byte [rax], 0', 'je 0x4bb0', 'mov rsi, r12', 'mov rdi, rax', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0x6347', 'lea rbx, [var_60h]', 'sub rsp, 8', 'mov ecx, 0xff', 'mov edx, 1', 'mov eax, dword [var_18h_2]', 'lea r8, str._s__d', 'mov esi, 0xff', 'mov rdi, rbx', 'push rax', 'mov r9, qword [var_10h]', 'xor eax, eax', 'call sym.imp.__snprintf_chk', 'mov rdx, qword [var_38h]', 'mov esi, 0xff', 'lea r8, [var_170h]', 'mov rdi, r8', 'mov qword [var_18h_2], r8', 'call sym.imp._cupsStrDate']"
721,lpstat,202,"['call sym.imp._cupsStrDate', 'mov eax, dword [var_18h]', 'cmp eax, 5', 'je 0x5528', 'cmp eax, 3', 'je 0x54e8', 'cmp qword [var_10h], 0', 'mov dword [var_74h], 0', 'je 0x4c28', 'cmp dword [var_1ch], 1', 'jg 0x51d8', 'mov esi, dword [var_1ch]', 'test esi, esi', 'jne 0x589b', 'mov r10d, dword [var_ch]', 'test r10d, r10d', 'jle 0x4a33', 'test r15, r15', 'je 0x47c4', 'mov r15, qword [r15]', 'jmp 0x47bf', 'test r15, r15', 'jne 0x47b0', 'mov edx, dword [r15 + 8]', 'mov rax, r15', 'mov r15, qword [r15]', 'cmp edx, 4', 'je 0x4800', 'mov qword [var_60h], 0', 'xor r12d, r12d', 'xor r13d, r13d', 'lea r8, str.printer_state_change_time', 'mov dword [var_70h], 0', 'lea r9, str.printer_info', 'lea rbx, str.printer_uri_supported', 'mov dword [var_18h], 3', 'lea rbp, str.printer_state_reasons', 'lea r10, str.requesting_user_name_allowed', 'mov qword [var_48h_2], 0', 'lea r14, str.printer_make_and_model', 'lea r11, str.printer_location', 'mov qword [var_28h], 0', 'mov qword [var_78h], 0', 'mov qword [s1], 0', 'mov qword [var_58h], 0', 'mov qword [var_50h], 0', 'mov qword [var_10h], 0', 'jmp 0x497a', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'lea rdi, str.printer_name', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x49a3', 'cmp dword [rax + 0xc], 0x42', 'je 0x4af8', 'mov r12, qword [rax + 0x28]', 'jmp 0x4960', 'test r15, r15', 'je 0x4a00', 'test r12, r12', 'je 0x47c4', 'mov rax, qword [var_40h]', 'test rax, rax', 'je 0x4bb0', 'cmp byte [rax], 0', 'je 0x4bb0', 'mov rsi, r12', 'mov rdi, rax', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0x6347', 'mov rdi, qword [var_48h]', 'test rdi, rdi', 'je 0x6230', 'lea rbx, [var_60h]', 'sub rsp, 8', 'mov ecx, 0xff', 'mov edx, 1', 'mov eax, dword [var_18h_2]', 'lea r8, str._s__d', 'mov esi, 0xff', 'mov rdi, rbx', 'push rax', 'mov r9, qword [var_10h]', 'xor eax, eax', 'call sym.imp.__snprintf_chk', 'mov rdx, qword [var_38h]', 'mov esi, 0xff', 'lea r8, [var_170h]', 'mov rdi, r8', 'mov qword [var_18h_2], r8', 'call sym.imp._cupsStrDate']"
722,lpstat,241,"['call sym.imp._cupsStrDate', 'mov r8d, dword [var_74h]', 'xor eax, eax', 'mov r9, r14', 'mov rbx, qword [reloc.stdout]', 'mov rcx, r12', 'mov rdx, r12', 'lea rsi, str.printer__s_now_printing__s__d.__enabled_since__s', 'mov rdi, qword [rbx]', 'call sym.imp._cupsLangPrintf', 'cmp qword [var_10h], 0', 'jne 0x4bfd', 'jmp 0x4c28', 'cmp dword [var_1ch], 1', 'jg 0x51d8', 'mov esi, dword [var_1ch]', 'test esi, esi', 'jne 0x589b', 'mov r10d, dword [var_ch]', 'test r10d, r10d', 'jle 0x4a33', 'test r15, r15', 'je 0x47c4', 'mov r15, qword [r15]', 'jmp 0x47bf', 'test r15, r15', 'jne 0x47b0', 'mov edx, dword [r15 + 8]', 'mov rax, r15', 'mov r15, qword [r15]', 'cmp edx, 4', 'je 0x4800', 'mov qword [var_60h], 0', 'xor r12d, r12d', 'xor r13d, r13d', 'lea r8, str.printer_state_change_time', 'mov dword [var_70h], 0', 'lea r9, str.printer_info', 'lea rbx, str.printer_uri_supported', 'mov dword [var_18h], 3', 'lea rbp, str.printer_state_reasons', 'lea r10, str.requesting_user_name_allowed', 'mov qword [var_48h_2], 0', 'lea r14, str.printer_make_and_model', 'lea r11, str.printer_location', 'mov qword [var_28h], 0', 'mov qword [var_78h], 0', 'mov qword [s1], 0', 'mov qword [var_58h], 0', 'mov qword [var_50h], 0', 'mov qword [var_10h], 0', 'jmp 0x497a', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'lea rdi, str.printer_name', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x49a3', 'cmp dword [rax + 0xc], 0x42', 'je 0x4af8', 'mov r12, qword [rax + 0x28]', 'jmp 0x4960', 'test r15, r15', 'je 0x4a00', 'test r12, r12', 'je 0x47c4', 'mov rax, qword [var_40h]', 'test rax, rax', 'je 0x4bb0', 'cmp byte [rax], 0', 'je 0x4bb0', 'mov rsi, r12', 'mov rdi, rax', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'jne 0x44c0', 'lea rax, [var_50h]', 'mov rdx, r13', 'mov esi, 0xff', 'mov rdi, rax', 'mov qword [var_30h], rax', 'mov r13, rax', 'call sym.imp._cupsStrDate']"
723,lpstat,181,"['call sym.imp._cupsStrDate', 'mov r8d, dword [var_74h]', 'xor eax, eax', 'mov r9, r14', 'mov rbx, qword [reloc.stdout]', 'mov rcx, r12', 'mov rdx, r12', 'lea rsi, str.printer__s_now_printing__s__d.__enabled_since__s', 'mov rdi, qword [rbx]', 'call sym.imp._cupsLangPrintf', 'cmp qword [var_10h], 0', 'jne 0x4bfd', 'jmp 0x4c28', 'cmp dword [var_1ch], 1', 'jg 0x51d8', 'mov esi, dword [var_1ch]', 'test esi, esi', 'jne 0x589b', 'mov r10d, dword [var_ch]', 'test r10d, r10d', 'jle 0x4a33', 'test r15, r15', 'je 0x47c4', 'mov r15, qword [r15]', 'jmp 0x47bf', 'test r15, r15', 'jne 0x47b0', 'mov edx, dword [r15 + 8]', 'mov rax, r15', 'mov r15, qword [r15]', 'cmp edx, 4', 'je 0x4800', 'mov qword [var_60h], 0', 'xor r12d, r12d', 'xor r13d, r13d', 'lea r8, str.printer_state_change_time', 'mov dword [var_70h], 0', 'lea r9, str.printer_info', 'lea rbx, str.printer_uri_supported', 'mov dword [var_18h], 3', 'lea rbp, str.printer_state_reasons', 'lea r10, str.requesting_user_name_allowed', 'mov qword [var_48h_2], 0', 'lea r14, str.printer_make_and_model', 'lea r11, str.printer_location', 'mov qword [var_28h], 0', 'mov qword [var_78h], 0', 'mov qword [s1], 0', 'mov qword [var_58h], 0', 'mov qword [var_50h], 0', 'mov qword [var_10h], 0', 'jmp 0x497a', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'lea rdi, str.printer_name', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x49a3', 'cmp dword [rax + 0xc], 0x42', 'je 0x4af8', 'mov r12, qword [rax + 0x28]', 'jmp 0x4960', 'test r15, r15', 'je 0x4a00', 'test r12, r12', 'je 0x47c4', 'mov rax, qword [var_40h]', 'test rax, rax', 'je 0x4bb0', 'cmp dword [var_18h], 4', 'je 0x55bf', 'mov rdx, qword [var_60h]', 'lea rdi, [var_90h]', 'mov esi, 0xff', 'mov qword [var_68h], rdi', 'call sym.imp._cupsStrDate']"
724,lpstat,442,"['call sym.imp._cupsStrDate', 'mov r8d, dword [var_74h]', 'xor eax, eax', 'mov r9, r14', 'mov rbx, qword [reloc.stdout]', 'mov rcx, r12', 'mov rdx, r12', 'lea rsi, str.printer__s_now_printing__s__d.__enabled_since__s', 'mov rdi, qword [rbx]', 'call sym.imp._cupsLangPrintf', 'cmp qword [var_10h], 0', 'jne 0x4bfd', 'jmp 0x4c28', 'cmp dword [var_1ch], 1', 'jg 0x51d8', 'mov esi, dword [var_1ch]', 'test esi, esi', 'jne 0x589b', 'mov r10d, dword [var_ch]', 'test r10d, r10d', 'jle 0x4a33', 'test r15, r15', 'je 0x47c4', 'mov r15, qword [r15]', 'jmp 0x47bf', 'test r15, r15', 'jne 0x47b0', 'mov edx, dword [r15 + 8]', 'mov rax, r15', 'mov r15, qword [r15]', 'cmp edx, 4', 'je 0x4800', 'mov qword [var_60h], 0', 'xor r12d, r12d', 'xor r13d, r13d', 'lea r8, str.printer_state_change_time', 'mov dword [var_70h], 0', 'lea r9, str.printer_info', 'lea rbx, str.printer_uri_supported', 'mov dword [var_18h], 3', 'lea rbp, str.printer_state_reasons', 'lea r10, str.requesting_user_name_allowed', 'mov qword [var_48h_2], 0', 'lea r14, str.printer_make_and_model', 'lea r11, str.printer_location', 'mov qword [var_28h], 0', 'mov qword [var_78h], 0', 'mov qword [s1], 0', 'mov qword [var_58h], 0', 'mov qword [var_50h], 0', 'mov qword [var_10h], 0', 'jmp 0x497a', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'lea rdi, str.printer_name', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x49a3', 'cmp dword [rax + 0xc], 0x42', 'je 0x4af8', 'mov r12, qword [rax + 0x28]', 'jmp 0x4960', 'test r15, r15', 'je 0x4a00', 'test r12, r12', 'je 0x47c4', 'mov rax, qword [var_40h]', 'test rax, rax', 'je 0x4bb0', 'cmp dword [var_18h], 4', 'je 0x55bf', 'mov edi, 0xa', 'call sym.imp.ippNewRequest', 'sub rsp, 8', 'xor r9d, r9d', 'mov r8d, 2', 'mov rbp, rax', 'mov edx, 0x44', 'mov esi, 1', 'movabs rax, 0x10000000a', 'mov qword [rbp + 8], rax', 'lea rax, str.job_id', 'lea rcx, str.requested_attributes', 'mov rdi, rbp', 'push rax', 'call sym.imp.ippAddStrings', 'lea rax, str._printers__s', 'mov qword [rsp], r12', 'lea rbx, [var_1a0h]', 'push rax', 'lea r9, str.localhost', 'xor r8d, r8d', 'mov edx, 0x400', 'push 0', 'lea rcx, [0x00007a4e]', 'mov rsi, rbx', 'xor eax, eax', 'mov edi, 0xf', 'call sym.imp.httpAssembleURIf', 'add rsp, 0x20', 'xor r8d, r8d', 'mov r9, rbx', 'lea rcx, [0x00007ce5]', 'mov edx, 0x45', 'mov esi, 1', 'mov rdi, rbp', 'call sym.imp.ippAddString', 'lea rdx, [0x00007c9c]', 'mov rsi, rbp', 'xor edi, edi', 'call sym.imp.cupsDoRequest', 'mov dword [var_74h], 0', 'mov r8, rax', 'test rax, rax', 'jne 0x5815', 'lea r14, [var_90h]', 'mov rdx, qword [var_60h]', 'mov esi, 0xff', 'mov rdi, r14', 'mov qword [var_68h], r14', 'call sym.imp._cupsStrDate']"
725,lpstat,266,"['call sym.imp._cupsStrDate', 'mov r8d, dword [var_74h]', 'xor eax, eax', 'mov r9, r14', 'mov rbx, qword [reloc.stdout]', 'mov rcx, r12', 'mov rdx, r12', 'lea rsi, str.printer__s_now_printing__s__d.__enabled_since__s', 'mov rdi, qword [rbx]', 'call sym.imp._cupsLangPrintf', 'cmp qword [var_10h], 0', 'jne 0x4bfd', 'jmp 0x4c28', 'cmp dword [var_1ch], 1', 'jg 0x51d8', 'mov esi, dword [var_1ch]', 'test esi, esi', 'jne 0x589b', 'mov r10d, dword [var_ch]', 'test r10d, r10d', 'jle 0x4a33', 'test r15, r15', 'je 0x47c4', 'mov r15, qword [r15]', 'jmp 0x47bf', 'test r15, r15', 'jne 0x47b0', 'mov edx, dword [r15 + 8]', 'mov rax, r15', 'mov r15, qword [r15]', 'cmp edx, 4', 'je 0x4800', 'mov qword [var_60h], 0', 'xor r12d, r12d', 'xor r13d, r13d', 'lea r8, str.printer_state_change_time', 'mov dword [var_70h], 0', 'lea r9, str.printer_info', 'lea rbx, str.printer_uri_supported', 'mov dword [var_18h], 3', 'lea rbp, str.printer_state_reasons', 'lea r10, str.requesting_user_name_allowed', 'mov qword [var_48h_2], 0', 'lea r14, str.printer_make_and_model', 'lea r11, str.printer_location', 'mov qword [var_28h], 0', 'mov qword [var_78h], 0', 'mov qword [s1], 0', 'mov qword [var_58h], 0', 'mov qword [var_50h], 0', 'mov qword [var_10h], 0', 'jmp 0x497a', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'lea rdi, str.printer_name', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x49a3', 'cmp dword [rax + 0xc], 0x42', 'je 0x4af8', 'mov r12, qword [rax + 0x28]', 'jmp 0x4960', 'test r15, r15', 'je 0x4a00', 'test r12, r12', 'je 0x47c4', 'mov rax, qword [var_40h]', 'test rax, rax', 'je 0x4bb0', 'cmp byte [rax], 0', 'je 0x4bb0', 'mov rsi, r12', 'mov rdi, rax', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0x6347', 'lea rbx, [var_60h]', 'sub rsp, 8', 'mov ecx, 0xff', 'mov edx, 1', 'mov eax, dword [var_18h_2]', 'lea r8, str._s__d', 'mov esi, 0xff', 'mov rdi, rbx', 'push rax', 'mov r9, qword [var_10h]', 'xor eax, eax', 'call sym.imp.__snprintf_chk', 'mov rdx, qword [var_38h]', 'mov esi, 0xff', 'lea r8, [var_170h]', 'mov rdi, r8', 'mov qword [var_18h_2], r8', 'call sym.imp._cupsStrDate']"
726,lpstat,269,"['call sym.imp._cupsStrDate', 'mov r8d, dword [var_74h]', 'xor eax, eax', 'mov r9, r14', 'mov rbx, qword [reloc.stdout]', 'mov rcx, r12', 'mov rdx, r12', 'lea rsi, str.printer__s_now_printing__s__d.__enabled_since__s', 'mov rdi, qword [rbx]', 'call sym.imp._cupsLangPrintf', 'cmp qword [var_10h], 0', 'jne 0x4bfd', 'jmp 0x4c28', 'cmp dword [var_1ch], 1', 'jg 0x51d8', 'mov esi, dword [var_1ch]', 'test esi, esi', 'jne 0x589b', 'mov r10d, dword [var_ch]', 'test r10d, r10d', 'jle 0x4a33', 'test r15, r15', 'je 0x47c4', 'mov r15, qword [r15]', 'jmp 0x47bf', 'test r15, r15', 'jne 0x47b0', 'mov edx, dword [r15 + 8]', 'mov rax, r15', 'mov r15, qword [r15]', 'cmp edx, 4', 'je 0x4800', 'mov qword [var_60h], 0', 'xor r12d, r12d', 'xor r13d, r13d', 'lea r8, str.printer_state_change_time', 'mov dword [var_70h], 0', 'lea r9, str.printer_info', 'lea rbx, str.printer_uri_supported', 'mov dword [var_18h], 3', 'lea rbp, str.printer_state_reasons', 'lea r10, str.requesting_user_name_allowed', 'mov qword [var_48h_2], 0', 'lea r14, str.printer_make_and_model', 'lea r11, str.printer_location', 'mov qword [var_28h], 0', 'mov qword [var_78h], 0', 'mov qword [s1], 0', 'mov qword [var_58h], 0', 'mov qword [var_50h], 0', 'mov qword [var_10h], 0', 'jmp 0x497a', 'mov rdx, qword [rax + 0x10]', 'mov ecx, 0xd', 'lea rdi, str.printer_name', 'mov rsi, rdx', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta cl', 'sbb cl, 0', 'test cl, cl', 'jne 0x49a3', 'cmp dword [rax + 0xc], 0x42', 'je 0x4af8', 'mov r12, qword [rax + 0x28]', 'jmp 0x4960', 'test r15, r15', 'je 0x4a00', 'test r12, r12', 'je 0x47c4', 'mov rax, qword [var_40h]', 'test rax, rax', 'je 0x4bb0', 'cmp byte [rax], 0', 'je 0x4bb0', 'mov rsi, r12', 'mov rdi, rax', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0x6347', 'mov rdi, qword [var_48h]', 'test rdi, rdi', 'je 0x6230', 'lea rbx, [var_60h]', 'sub rsp, 8', 'mov ecx, 0xff', 'mov edx, 1', 'mov eax, dword [var_18h_2]', 'lea r8, str._s__d', 'mov esi, 0xff', 'mov rdi, rbx', 'push rax', 'mov r9, qword [var_10h]', 'xor eax, eax', 'call sym.imp.__snprintf_chk', 'mov rdx, qword [var_38h]', 'mov esi, 0xff', 'lea r8, [var_170h]', 'mov rdi, r8', 'mov qword [var_18h_2], r8', 'call sym.imp._cupsStrDate']"
727,lpstat,236,"['call sym.imp._cupsStrDate', 'pop rcx', 'pop rsi', 'mov edi, dword [var_58h]', 'mov r8, qword [var_18h_2]', 'test edi, edi', 'je 0x63f6', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, dword [var_28h]', 'mulsd xmm0, qword [0x00007ea0]', 'mov rax, qword [reloc.stdout]', 'mov rcx, qword [var_30h]', 'mov rdx, rbx', 'lea rsi, str.__23s___13s__8.0f____s', 'mov rdi, qword [rax]', 'mov qword [var_18h_2], rax', 'mov eax, 1', 'call sym.imp._cupsLangPrintf', 'jmp 0x62f2', 'mov r9d, dword [var_54h]', 'test r9d, r9d', 'je 0x6347', 'test r15, r15', 'je 0x5ec4', 'mov r15, qword [r15]', 'jmp 0x5ebf', 'test r15, r15', 'jne 0x5eb0', 'mov eax, dword [r15 + 8]', 'mov r13, r15', 'mov r15, qword [r15]', 'cmp eax, 2', 'je 0x5f30', 'mov qword [var_38h], 0', 'lea rbx, str.job_k_octets', 'mov dword [var_28h], 0', 'mov dword [var_18h_2], 0', 'mov qword [var_40h], 0', 'mov qword [var_30h], 0', 'mov qword [var_10h], 0', 'mov qword [rsp], 0', 'jmp 0x5fde', 'mov r12, qword [r13 + 0x10]', 'mov ecx, 7', 'mov rdi, rbp', 'mov rsi, r12', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5f78', 'cmp dword [r13 + 0xc], 0x21', 'je 0x61d0', 'mov eax, dword [r13 + 0x20]', 'mov dword [var_18h_2], eax', 'jmp 0x5fc8', 'test r15, r15', 'je 0x6030', 'cmp qword [var_10h], 0', 'je 0x5ec4', 'mov eax, dword [var_18h_2]', 'test eax, eax', 'je 0x5ec4', 'mov rax, qword [var_20h]', 'add dword [var_5ch], 1', 'test rax, rax', 'je 0x6071', 'cmp byte [rax], 0', 'je 0x6071', 'mov rsi, qword [var_10h]', 'mov rdi, rax', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'jne 0x44c0', 'lea rax, [var_50h]', 'mov rdx, r13', 'mov esi, 0xff', 'mov rdi, rax', 'mov qword [var_30h], rax', 'mov r13, rax', 'call sym.imp._cupsStrDate']"
728,lpstat,236,"['call sym.imp._cupsStrDate', 'pop rcx', 'pop rsi', 'mov edi, dword [var_58h]', 'mov r8, qword [var_18h_2]', 'test edi, edi', 'je 0x63f6', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, dword [var_28h]', 'mulsd xmm0, qword [0x00007ea0]', 'mov rax, qword [reloc.stdout]', 'mov rcx, qword [var_30h]', 'mov rdx, rbx', 'lea rsi, str.__23s___13s__8.0f____s', 'mov rdi, qword [rax]', 'mov qword [var_18h_2], rax', 'mov eax, 1', 'call sym.imp._cupsLangPrintf', 'jmp 0x62f2', 'mov r9d, dword [var_54h]', 'test r9d, r9d', 'je 0x6347', 'test r15, r15', 'je 0x5ec4', 'mov r15, qword [r15]', 'jmp 0x5ebf', 'test r15, r15', 'jne 0x5eb0', 'mov eax, dword [r15 + 8]', 'mov r13, r15', 'mov r15, qword [r15]', 'cmp eax, 2', 'je 0x5f30', 'mov qword [var_38h], 0', 'lea rbx, str.job_k_octets', 'mov dword [var_28h], 0', 'mov dword [var_18h_2], 0', 'mov qword [var_40h], 0', 'mov qword [var_30h], 0', 'mov qword [var_10h], 0', 'mov qword [rsp], 0', 'jmp 0x5fde', 'mov r12, qword [r13 + 0x10]', 'mov ecx, 7', 'mov rdi, rbp', 'mov rsi, r12', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5f78', 'cmp dword [r13 + 0xc], 0x21', 'je 0x61d0', 'mov eax, dword [r13 + 0x20]', 'mov dword [var_18h_2], eax', 'jmp 0x5fc8', 'test r15, r15', 'je 0x6030', 'cmp qword [var_10h], 0', 'je 0x5ec4', 'mov eax, dword [var_18h_2]', 'test eax, eax', 'je 0x5ec4', 'mov rax, qword [var_20h]', 'add dword [var_5ch], 1', 'test rax, rax', 'je 0x6071', 'cmp byte [rax], 0', 'je 0x6071', 'mov rsi, qword [var_10h]', 'mov rdi, rax', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'jne 0x4bb0', 'cmp dword [var_18h], 4', 'je 0x55bf', 'mov rdx, qword [var_60h]', 'lea rdi, [var_90h]', 'mov esi, 0xff', 'mov qword [var_68h], rdi', 'call sym.imp._cupsStrDate']"
729,lpstat,497,"['call sym.imp._cupsStrDate', 'pop rcx', 'pop rsi', 'mov edi, dword [var_58h]', 'mov r8, qword [var_18h_2]', 'test edi, edi', 'je 0x63f6', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, dword [var_28h]', 'mulsd xmm0, qword [0x00007ea0]', 'mov rax, qword [reloc.stdout]', 'mov rcx, qword [var_30h]', 'mov rdx, rbx', 'lea rsi, str.__23s___13s__8.0f____s', 'mov rdi, qword [rax]', 'mov qword [var_18h_2], rax', 'mov eax, 1', 'call sym.imp._cupsLangPrintf', 'jmp 0x62f2', 'mov r9d, dword [var_54h]', 'test r9d, r9d', 'je 0x6347', 'test r15, r15', 'je 0x5ec4', 'mov r15, qword [r15]', 'jmp 0x5ebf', 'test r15, r15', 'jne 0x5eb0', 'mov eax, dword [r15 + 8]', 'mov r13, r15', 'mov r15, qword [r15]', 'cmp eax, 2', 'je 0x5f30', 'mov qword [var_38h], 0', 'lea rbx, str.job_k_octets', 'mov dword [var_28h], 0', 'mov dword [var_18h_2], 0', 'mov qword [var_40h], 0', 'mov qword [var_30h], 0', 'mov qword [var_10h], 0', 'mov qword [rsp], 0', 'jmp 0x5fde', 'mov r12, qword [r13 + 0x10]', 'mov ecx, 7', 'mov rdi, rbp', 'mov rsi, r12', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5f78', 'cmp dword [r13 + 0xc], 0x21', 'je 0x61d0', 'mov eax, dword [r13 + 0x20]', 'mov dword [var_18h_2], eax', 'jmp 0x5fc8', 'test r15, r15', 'je 0x6030', 'cmp qword [var_10h], 0', 'je 0x5ec4', 'mov eax, dword [var_18h_2]', 'test eax, eax', 'je 0x5ec4', 'mov rax, qword [var_20h]', 'add dword [var_5ch], 1', 'test rax, rax', 'je 0x6071', 'cmp byte [rax], 0', 'je 0x6071', 'mov rsi, qword [var_10h]', 'mov rdi, rax', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'jne 0x4bb0', 'cmp dword [var_18h], 4', 'je 0x55bf', 'mov edi, 0xa', 'call sym.imp.ippNewRequest', 'sub rsp, 8', 'xor r9d, r9d', 'mov r8d, 2', 'mov rbp, rax', 'mov edx, 0x44', 'mov esi, 1', 'movabs rax, 0x10000000a', 'mov qword [rbp + 8], rax', 'lea rax, str.job_id', 'lea rcx, str.requested_attributes', 'mov rdi, rbp', 'push rax', 'call sym.imp.ippAddStrings', 'lea rax, str._printers__s', 'mov qword [rsp], r12', 'lea rbx, [var_1a0h]', 'push rax', 'lea r9, str.localhost', 'xor r8d, r8d', 'mov edx, 0x400', 'push 0', 'lea rcx, [0x00007a4e]', 'mov rsi, rbx', 'xor eax, eax', 'mov edi, 0xf', 'call sym.imp.httpAssembleURIf', 'add rsp, 0x20', 'xor r8d, r8d', 'mov r9, rbx', 'lea rcx, [0x00007ce5]', 'mov edx, 0x45', 'mov esi, 1', 'mov rdi, rbp', 'call sym.imp.ippAddString', 'lea rdx, [0x00007c9c]', 'mov rsi, rbp', 'xor edi, edi', 'call sym.imp.cupsDoRequest', 'mov dword [var_74h], 0', 'mov r8, rax', 'test rax, rax', 'jne 0x5815', 'lea r14, [var_90h]', 'mov rdx, qword [var_60h]', 'mov esi, 0xff', 'mov rdi, r14', 'mov qword [var_68h], r14', 'call sym.imp._cupsStrDate']"
730,lpstat,228,"['call sym.imp._cupsStrDate', 'pop rcx', 'pop rsi', 'mov edi, dword [var_58h]', 'mov r8, qword [var_18h_2]', 'test edi, edi', 'je 0x63f6', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, dword [var_28h]', 'mulsd xmm0, qword [0x00007ea0]', 'mov rax, qword [reloc.stdout]', 'mov rcx, qword [var_30h]', 'mov rdx, rbx', 'lea rsi, str.__23s___13s__8.0f____s', 'mov rdi, qword [rax]', 'mov qword [var_18h_2], rax', 'mov eax, 1', 'call sym.imp._cupsLangPrintf', 'jmp 0x62f2', 'mov r9d, dword [var_54h]', 'test r9d, r9d', 'je 0x6347', 'test r15, r15', 'je 0x5ec4', 'mov r15, qword [r15]', 'jmp 0x5ebf', 'test r15, r15', 'jne 0x5eb0', 'mov eax, dword [r15 + 8]', 'mov r13, r15', 'mov r15, qword [r15]', 'cmp eax, 2', 'je 0x5f30', 'mov qword [var_38h], 0', 'lea rbx, str.job_k_octets', 'mov dword [var_28h], 0', 'mov dword [var_18h_2], 0', 'mov qword [var_40h], 0', 'mov qword [var_30h], 0', 'mov qword [var_10h], 0', 'mov qword [rsp], 0', 'jmp 0x5fde', 'mov r12, qword [r13 + 0x10]', 'mov ecx, 7', 'mov rdi, rbp', 'mov rsi, r12', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5f78', 'cmp dword [r13 + 0xc], 0x21', 'je 0x61d0', 'mov eax, dword [r13 + 0x20]', 'mov dword [var_18h_2], eax', 'jmp 0x5fc8', 'test r15, r15', 'je 0x6030', 'cmp qword [var_10h], 0', 'je 0x5ec4', 'mov eax, dword [var_18h_2]', 'test eax, eax', 'je 0x5ec4', 'mov rax, qword [var_20h]', 'add dword [var_5ch], 1', 'test rax, rax', 'je 0x6071', 'mov rdi, qword [var_48h]', 'test rdi, rdi', 'je 0x6230', 'cmp byte [rdi], 0', 'je 0x6230', 'mov rax, qword [var_30h]', 'test rax, rax', 'je 0x6347', 'mov rsi, rax', 'call fcn.00003af0', 'test eax, eax', 'je 0x6347', 'lea rbx, [var_60h]', 'sub rsp, 8', 'mov ecx, 0xff', 'mov edx, 1', 'mov eax, dword [var_18h_2]', 'lea r8, str._s__d', 'mov esi, 0xff', 'mov rdi, rbx', 'push rax', 'mov r9, qword [var_10h]', 'xor eax, eax', 'call sym.imp.__snprintf_chk', 'mov rdx, qword [var_38h]', 'mov esi, 0xff', 'lea r8, [var_170h]', 'mov rdi, r8', 'mov qword [var_18h_2], r8', 'call sym.imp._cupsStrDate']"
731,lpstat,204,"['call sym.imp._cupsStrDate', 'pop rcx', 'pop rsi', 'mov edi, dword [var_58h]', 'mov r8, qword [var_18h_2]', 'test edi, edi', 'je 0x63f6', 'pxor xmm0, xmm0', 'cvtsi2sd xmm0, dword [var_28h]', 'mulsd xmm0, qword [0x00007ea0]', 'mov rax, qword [reloc.stdout]', 'mov rcx, qword [var_30h]', 'mov rdx, rbx', 'lea rsi, str.__23s___13s__8.0f____s', 'mov rdi, qword [rax]', 'mov qword [var_18h_2], rax', 'mov eax, 1', 'call sym.imp._cupsLangPrintf', 'jmp 0x62f2', 'mov r9d, dword [var_54h]', 'test r9d, r9d', 'je 0x6347', 'test r15, r15', 'je 0x5ec4', 'mov r15, qword [r15]', 'jmp 0x5ebf', 'test r15, r15', 'jne 0x5eb0', 'mov eax, dword [r15 + 8]', 'mov r13, r15', 'mov r15, qword [r15]', 'cmp eax, 2', 'je 0x5f30', 'mov qword [var_38h], 0', 'lea rbx, str.job_k_octets', 'mov dword [var_28h], 0', 'mov dword [var_18h_2], 0', 'mov qword [var_40h], 0', 'mov qword [var_30h], 0', 'mov qword [var_10h], 0', 'mov qword [rsp], 0', 'jmp 0x5fde', 'mov r12, qword [r13 + 0x10]', 'mov ecx, 7', 'mov rdi, rbp', 'mov rsi, r12', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5f78', 'cmp dword [r13 + 0xc], 0x21', 'je 0x61d0', 'mov eax, dword [r13 + 0x20]', 'mov dword [var_18h_2], eax', 'jmp 0x5fc8', 'test r15, r15', 'je 0x6030', 'cmp qword [var_10h], 0', 'je 0x5ec4', 'mov eax, dword [var_18h_2]', 'test eax, eax', 'je 0x5ec4', 'mov rax, qword [var_20h]', 'add dword [var_5ch], 1', 'test rax, rax', 'je 0x6071', 'mov rdi, qword [var_48h]', 'test rdi, rdi', 'je 0x6230', 'lea rbx, [var_60h]', 'sub rsp, 8', 'mov ecx, 0xff', 'mov edx, 1', 'mov eax, dword [var_18h_2]', 'lea r8, str._s__d', 'mov esi, 0xff', 'mov rdi, rbx', 'push rax', 'mov r9, qword [var_10h]', 'xor eax, eax', 'call sym.imp.__snprintf_chk', 'mov rdx, qword [var_38h]', 'mov esi, 0xff', 'lea r8, [var_170h]', 'mov rdi, r8', 'mov qword [var_18h_2], r8', 'call sym.imp._cupsStrDate']"
732,lpstat,241,"['call sym.imp._cupsStrDate', 'pop r10', 'pop r11', 'pxor xmm0, xmm0', 'mov rdx, qword [var_30h]', 'mov r12d, dword [var_58h]', 'lea rax, [0x00007969]', 'cvtsi2sd xmm0, dword [var_28h]', 'mov r8, qword [var_18h_2]', 'mulsd xmm0, qword [0x00007ea0]', 'test rdx, rdx', 'cmovne rax, rdx', 'test r12d, r12d', 'mov qword [var_30h], rax', 'je 0x6408', 'mov rax, qword [reloc.stdout]', 'mov rcx, qword [var_30h]', 'mov rdx, rbx', 'lea rsi, str.__23s___13s__8.0f____s', 'mov rdi, qword [rax]', 'mov qword [var_18h_2], rax', 'mov eax, 1', 'call sym.imp._cupsLangPrintf', 'jmp 0x62f2', 'mov r9d, dword [var_54h]', 'test r9d, r9d', 'je 0x6347', 'test r15, r15', 'je 0x5ec4', 'mov r15, qword [r15]', 'jmp 0x5ebf', 'test r15, r15', 'jne 0x5eb0', 'mov eax, dword [r15 + 8]', 'mov r13, r15', 'mov r15, qword [r15]', 'cmp eax, 2', 'je 0x5f30', 'mov qword [var_38h], 0', 'lea rbx, str.job_k_octets', 'mov dword [var_28h], 0', 'mov dword [var_18h_2], 0', 'mov qword [var_40h], 0', 'mov qword [var_30h], 0', 'mov qword [var_10h], 0', 'mov qword [rsp], 0', 'jmp 0x5fde', 'mov r12, qword [r13 + 0x10]', 'mov ecx, 7', 'mov rdi, rbp', 'mov rsi, r12', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5f78', 'cmp dword [r13 + 0xc], 0x21', 'je 0x61d0', 'mov eax, dword [r13 + 0x20]', 'mov dword [var_18h_2], eax', 'jmp 0x5fc8', 'test r15, r15', 'je 0x6030', 'cmp qword [var_10h], 0', 'je 0x5ec4', 'mov eax, dword [var_18h_2]', 'test eax, eax', 'je 0x5ec4', 'mov rax, qword [var_20h]', 'add dword [var_5ch], 1', 'test rax, rax', 'je 0x6071', 'cmp byte [rax], 0', 'je 0x6071', 'mov rsi, qword [var_10h]', 'mov rdi, rax', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'jne 0x44c0', 'lea rax, [var_50h]', 'mov rdx, r13', 'mov esi, 0xff', 'mov rdi, rax', 'mov qword [var_30h], rax', 'mov r13, rax', 'call sym.imp._cupsStrDate']"
733,lpstat,241,"['call sym.imp._cupsStrDate', 'pop r10', 'pop r11', 'pxor xmm0, xmm0', 'mov rdx, qword [var_30h]', 'mov r12d, dword [var_58h]', 'lea rax, [0x00007969]', 'cvtsi2sd xmm0, dword [var_28h]', 'mov r8, qword [var_18h_2]', 'mulsd xmm0, qword [0x00007ea0]', 'test rdx, rdx', 'cmovne rax, rdx', 'test r12d, r12d', 'mov qword [var_30h], rax', 'je 0x6408', 'mov rax, qword [reloc.stdout]', 'mov rcx, qword [var_30h]', 'mov rdx, rbx', 'lea rsi, str.__23s___13s__8.0f____s', 'mov rdi, qword [rax]', 'mov qword [var_18h_2], rax', 'mov eax, 1', 'call sym.imp._cupsLangPrintf', 'jmp 0x62f2', 'mov r9d, dword [var_54h]', 'test r9d, r9d', 'je 0x6347', 'test r15, r15', 'je 0x5ec4', 'mov r15, qword [r15]', 'jmp 0x5ebf', 'test r15, r15', 'jne 0x5eb0', 'mov eax, dword [r15 + 8]', 'mov r13, r15', 'mov r15, qword [r15]', 'cmp eax, 2', 'je 0x5f30', 'mov qword [var_38h], 0', 'lea rbx, str.job_k_octets', 'mov dword [var_28h], 0', 'mov dword [var_18h_2], 0', 'mov qword [var_40h], 0', 'mov qword [var_30h], 0', 'mov qword [var_10h], 0', 'mov qword [rsp], 0', 'jmp 0x5fde', 'mov r12, qword [r13 + 0x10]', 'mov ecx, 7', 'mov rdi, rbp', 'mov rsi, r12', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5f78', 'cmp dword [r13 + 0xc], 0x21', 'je 0x61d0', 'mov eax, dword [r13 + 0x20]', 'mov dword [var_18h_2], eax', 'jmp 0x5fc8', 'test r15, r15', 'je 0x6030', 'cmp qword [var_10h], 0', 'je 0x5ec4', 'mov eax, dword [var_18h_2]', 'test eax, eax', 'je 0x5ec4', 'mov rax, qword [var_20h]', 'add dword [var_5ch], 1', 'test rax, rax', 'je 0x6071', 'cmp byte [rax], 0', 'je 0x6071', 'mov rsi, qword [var_10h]', 'mov rdi, rax', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'jne 0x4bb0', 'cmp dword [var_18h], 4', 'je 0x55bf', 'mov rdx, qword [var_60h]', 'lea rdi, [var_90h]', 'mov esi, 0xff', 'mov qword [var_68h], rdi', 'call sym.imp._cupsStrDate']"
734,lpstat,502,"['call sym.imp._cupsStrDate', 'pop r10', 'pop r11', 'pxor xmm0, xmm0', 'mov rdx, qword [var_30h]', 'mov r12d, dword [var_58h]', 'lea rax, [0x00007969]', 'cvtsi2sd xmm0, dword [var_28h]', 'mov r8, qword [var_18h_2]', 'mulsd xmm0, qword [0x00007ea0]', 'test rdx, rdx', 'cmovne rax, rdx', 'test r12d, r12d', 'mov qword [var_30h], rax', 'je 0x6408', 'mov rax, qword [reloc.stdout]', 'mov rcx, qword [var_30h]', 'mov rdx, rbx', 'lea rsi, str.__23s___13s__8.0f____s', 'mov rdi, qword [rax]', 'mov qword [var_18h_2], rax', 'mov eax, 1', 'call sym.imp._cupsLangPrintf', 'jmp 0x62f2', 'mov r9d, dword [var_54h]', 'test r9d, r9d', 'je 0x6347', 'test r15, r15', 'je 0x5ec4', 'mov r15, qword [r15]', 'jmp 0x5ebf', 'test r15, r15', 'jne 0x5eb0', 'mov eax, dword [r15 + 8]', 'mov r13, r15', 'mov r15, qword [r15]', 'cmp eax, 2', 'je 0x5f30', 'mov qword [var_38h], 0', 'lea rbx, str.job_k_octets', 'mov dword [var_28h], 0', 'mov dword [var_18h_2], 0', 'mov qword [var_40h], 0', 'mov qword [var_30h], 0', 'mov qword [var_10h], 0', 'mov qword [rsp], 0', 'jmp 0x5fde', 'mov r12, qword [r13 + 0x10]', 'mov ecx, 7', 'mov rdi, rbp', 'mov rsi, r12', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5f78', 'cmp dword [r13 + 0xc], 0x21', 'je 0x61d0', 'mov eax, dword [r13 + 0x20]', 'mov dword [var_18h_2], eax', 'jmp 0x5fc8', 'test r15, r15', 'je 0x6030', 'cmp qword [var_10h], 0', 'je 0x5ec4', 'mov eax, dword [var_18h_2]', 'test eax, eax', 'je 0x5ec4', 'mov rax, qword [var_20h]', 'add dword [var_5ch], 1', 'test rax, rax', 'je 0x6071', 'cmp byte [rax], 0', 'je 0x6071', 'mov rsi, qword [var_10h]', 'mov rdi, rax', 'call fcn.00003af0', 'push r14', 'push r13', 'push r12', 'push rbp', 'movzx ebp, byte [rdi]', 'push rbx', 'test bpl, bpl', 'je 0x3b6b', 'mov rbx, rdi', 'mov r13, rsi', 'call sym.imp.__ctype_b_loc', 'mov r14, qword [rax]', 'jmp 0x3b18', 'movzx eax, bpl', 'test byte [r14 + rax*2 + 1], 0x20', 'jne 0x3b10', 'cmp bpl, 0x2c', 'je 0x3b10', 'test bpl, bpl', 'je 0x3b6b', 'movzx r12d, byte [r13]', 'test r12b, r12b', 'je 0x3b93', 'call sym.imp.__ctype_tolower_loc', 'mov rdx, qword [rax]', 'mov rax, r13', 'nop dword [rax]', 'mov ecx, dword [rdx + rbp*4]', 'cmp dword [rdx + r12*4], ecx', 'jne 0x3b93', 'movzx r12d, byte [rax + 1]', 'add rax, 1', 'add rbx, 1', 'movzx ebp, byte [rbx]', 'test r12b, r12b', 'je 0x3b80', 'test bpl, bpl', 'je 0x3bd0', 'pop rbx', 'mov eax, 1', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'jne 0x4bb0', 'cmp dword [var_18h], 4', 'je 0x55bf', 'mov edi, 0xa', 'call sym.imp.ippNewRequest', 'sub rsp, 8', 'xor r9d, r9d', 'mov r8d, 2', 'mov rbp, rax', 'mov edx, 0x44', 'mov esi, 1', 'movabs rax, 0x10000000a', 'mov qword [rbp + 8], rax', 'lea rax, str.job_id', 'lea rcx, str.requested_attributes', 'mov rdi, rbp', 'push rax', 'call sym.imp.ippAddStrings', 'lea rax, str._printers__s', 'mov qword [rsp], r12', 'lea rbx, [var_1a0h]', 'push rax', 'lea r9, str.localhost', 'xor r8d, r8d', 'mov edx, 0x400', 'push 0', 'lea rcx, [0x00007a4e]', 'mov rsi, rbx', 'xor eax, eax', 'mov edi, 0xf', 'call sym.imp.httpAssembleURIf', 'add rsp, 0x20', 'xor r8d, r8d', 'mov r9, rbx', 'lea rcx, [0x00007ce5]', 'mov edx, 0x45', 'mov esi, 1', 'mov rdi, rbp', 'call sym.imp.ippAddString', 'lea rdx, [0x00007c9c]', 'mov rsi, rbp', 'xor edi, edi', 'call sym.imp.cupsDoRequest', 'mov dword [var_74h], 0', 'mov r8, rax', 'test rax, rax', 'jne 0x5815', 'lea r14, [var_90h]', 'mov rdx, qword [var_60h]', 'mov esi, 0xff', 'mov rdi, r14', 'mov qword [var_68h], r14', 'call sym.imp._cupsStrDate']"
735,lpstat,233,"['call sym.imp._cupsStrDate', 'pop r10', 'pop r11', 'pxor xmm0, xmm0', 'mov rdx, qword [var_30h]', 'mov r12d, dword [var_58h]', 'lea rax, [0x00007969]', 'cvtsi2sd xmm0, dword [var_28h]', 'mov r8, qword [var_18h_2]', 'mulsd xmm0, qword [0x00007ea0]', 'test rdx, rdx', 'cmovne rax, rdx', 'test r12d, r12d', 'mov qword [var_30h], rax', 'je 0x6408', 'mov rax, qword [reloc.stdout]', 'mov rcx, qword [var_30h]', 'mov rdx, rbx', 'lea rsi, str.__23s___13s__8.0f____s', 'mov rdi, qword [rax]', 'mov qword [var_18h_2], rax', 'mov eax, 1', 'call sym.imp._cupsLangPrintf', 'jmp 0x62f2', 'mov r9d, dword [var_54h]', 'test r9d, r9d', 'je 0x6347', 'test r15, r15', 'je 0x5ec4', 'mov r15, qword [r15]', 'jmp 0x5ebf', 'test r15, r15', 'jne 0x5eb0', 'mov eax, dword [r15 + 8]', 'mov r13, r15', 'mov r15, qword [r15]', 'cmp eax, 2', 'je 0x5f30', 'mov qword [var_38h], 0', 'lea rbx, str.job_k_octets', 'mov dword [var_28h], 0', 'mov dword [var_18h_2], 0', 'mov qword [var_40h], 0', 'mov qword [var_30h], 0', 'mov qword [var_10h], 0', 'mov qword [rsp], 0', 'jmp 0x5fde', 'mov r12, qword [r13 + 0x10]', 'mov ecx, 7', 'mov rdi, rbp', 'mov rsi, r12', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5f78', 'cmp dword [r13 + 0xc], 0x21', 'je 0x61d0', 'mov eax, dword [r13 + 0x20]', 'mov dword [var_18h_2], eax', 'jmp 0x5fc8', 'test r15, r15', 'je 0x6030', 'cmp qword [var_10h], 0', 'je 0x5ec4', 'mov eax, dword [var_18h_2]', 'test eax, eax', 'je 0x5ec4', 'mov rax, qword [var_20h]', 'add dword [var_5ch], 1', 'test rax, rax', 'je 0x6071', 'mov rdi, qword [var_48h]', 'test rdi, rdi', 'je 0x6230', 'cmp byte [rdi], 0', 'je 0x6230', 'mov rax, qword [var_30h]', 'test rax, rax', 'je 0x6347', 'mov rsi, rax', 'call fcn.00003af0', 'test eax, eax', 'je 0x6347', 'lea rbx, [var_60h]', 'sub rsp, 8', 'mov ecx, 0xff', 'mov edx, 1', 'mov eax, dword [var_18h_2]', 'lea r8, str._s__d', 'mov esi, 0xff', 'mov rdi, rbx', 'push rax', 'mov r9, qword [var_10h]', 'xor eax, eax', 'call sym.imp.__snprintf_chk', 'mov rdx, qword [var_38h]', 'mov esi, 0xff', 'lea r8, [var_170h]', 'mov rdi, r8', 'mov qword [var_18h_2], r8', 'call sym.imp._cupsStrDate']"
736,lpstat,209,"['call sym.imp._cupsStrDate', 'pop r10', 'pop r11', 'pxor xmm0, xmm0', 'mov rdx, qword [var_30h]', 'mov r12d, dword [var_58h]', 'lea rax, [0x00007969]', 'cvtsi2sd xmm0, dword [var_28h]', 'mov r8, qword [var_18h_2]', 'mulsd xmm0, qword [0x00007ea0]', 'test rdx, rdx', 'cmovne rax, rdx', 'test r12d, r12d', 'mov qword [var_30h], rax', 'je 0x6408', 'mov rax, qword [reloc.stdout]', 'mov rcx, qword [var_30h]', 'mov rdx, rbx', 'lea rsi, str.__23s___13s__8.0f____s', 'mov rdi, qword [rax]', 'mov qword [var_18h_2], rax', 'mov eax, 1', 'call sym.imp._cupsLangPrintf', 'jmp 0x62f2', 'mov r9d, dword [var_54h]', 'test r9d, r9d', 'je 0x6347', 'test r15, r15', 'je 0x5ec4', 'mov r15, qword [r15]', 'jmp 0x5ebf', 'test r15, r15', 'jne 0x5eb0', 'mov eax, dword [r15 + 8]', 'mov r13, r15', 'mov r15, qword [r15]', 'cmp eax, 2', 'je 0x5f30', 'mov qword [var_38h], 0', 'lea rbx, str.job_k_octets', 'mov dword [var_28h], 0', 'mov dword [var_18h_2], 0', 'mov qword [var_40h], 0', 'mov qword [var_30h], 0', 'mov qword [var_10h], 0', 'mov qword [rsp], 0', 'jmp 0x5fde', 'mov r12, qword [r13 + 0x10]', 'mov ecx, 7', 'mov rdi, rbp', 'mov rsi, r12', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5f78', 'cmp dword [r13 + 0xc], 0x21', 'je 0x61d0', 'mov eax, dword [r13 + 0x20]', 'mov dword [var_18h_2], eax', 'jmp 0x5fc8', 'test r15, r15', 'je 0x6030', 'cmp qword [var_10h], 0', 'je 0x5ec4', 'mov eax, dword [var_18h_2]', 'test eax, eax', 'je 0x5ec4', 'mov rax, qword [var_20h]', 'add dword [var_5ch], 1', 'test rax, rax', 'je 0x6071', 'mov rdi, qword [var_48h]', 'test rdi, rdi', 'je 0x6230', 'lea rbx, [var_60h]', 'sub rsp, 8', 'mov ecx, 0xff', 'mov edx, 1', 'mov eax, dword [var_18h_2]', 'lea r8, str._s__d', 'mov esi, 0xff', 'mov rdi, rbx', 'push rax', 'mov r9, qword [var_10h]', 'xor eax, eax', 'call sym.imp.__snprintf_chk', 'mov rdx, qword [var_38h]', 'mov esi, 0xff', 'lea r8, [var_170h]', 'mov rdi, r8', 'mov qword [var_18h_2], r8', 'call sym.imp._cupsStrDate']"
737,cpio,375,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1bf58', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1bf6e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test al, al', 'jne 0x1a66c', 'mov rax, qword [var_108h]', 'xor rax, qword fs:[0x28]', 'jne 0x1a90e', 'add rsp, 0x110', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'js 0xe840', 'mov rax, qword [var_28h]', 'xor rax, qword fs:[0x28]', 'jne 0xe854', 'add rsp, 0x30', 'pop rbp', 'ret', 'jmp 0x6883', 'mov r15d, dword [0x00028f48]', 'test r15d, r15d', 'jne 0x6b98', 'mov r12d, dword [0x00028f44]', 'test r12d, r12d', 'je 0x6748', 'mov dword [0x00028f24], 0', 'mov esi, ebx', 'mov rdi, rbp', 'mov dword [0x00028f28], 0', 'call fcn.000060e0', 'endbr64', 'push r15', 'push r14', 'mov r14, rdi', 'push r13', 'mov r13d, esi', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x218', 'mov rax, qword fs:[0x28]', 'mov qword [var_208h], rax', 'xor eax, eax', 'mov eax, dword [0x00028f68]', 'test eax, eax', 'je 0x6360', 'sub eax, 5', 'xor r12d, r12d', 'mov rbp, rsp', 'cmp eax, 1', 'ja 0x61a0', 'mov r8d, dword [0x00028f34]', 'test r8d, r8d', 'je 0x6156', 'test r12, r12', 'je 0x6163', 'mov esi, r13d', 'mov rdi, r14', 'call fcn.0000c3c0', 'endbr64', 'push r15', 'mov edx, 0x200', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'mov ebx, esi', 'sub rsp, 0x228', 'mov rax, qword fs:[0x28]', 'mov qword [var_218h], rax', 'xor eax, eax', 'lea r12, [var_10h]', 'mov rdi, r12', 'call fcn.0000ddf0', 'mov rax, r12', 'lea rdx, [var_210h]', 'nop word [rax + rax]', 'add rax, 8', 'cmp qword [rax - 8], 0', 'jne 0xc460', 'cmp rax, rdx', 'jne 0xc410', 'lea rsi, str.TRAILER___', 'mov rdi, rbp', 'call fcn.0000e9a0', 'endbr64', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 8', 'call sym.imp.strlen', 'mov rdi, qword [rbx + 0x68]', 'lea r12, [rax + 1]', 'cmp r12, qword [rbx + 0x70]', 'jbe 0xe9e5', 'mov qword [rbx + 0x58], r12', 'add rsp, 8', 'mov rdx, r12', 'mov rsi, rbp', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'jmp sym.imp.memmove', 'mov rax, qword [var_218h]', 'xor rax, qword fs:[0x28]', 'jne 0xc7fb', 'add rsp, 0x228', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'jmp 0x6270', 'mov rax, qword [var_208h]', 'xor rax, qword fs:[0x28]', 'jne 0x64dd', 'add rsp, 0x218', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp qword [var_a8h], 0', 'je 0x6960', 'mov r8, qword [path2]', 'mov ecx, 0xb', 'mov rsi, r13', 'mov rdi, r8', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x6c40', 'mov eax, dword [0x00028f08]', 'xor edx, edx', 'mov rdi, r8', 'test eax, eax', 'sete dl', 'xor ecx, ecx', 'xor esi, esi', 'call fcn.0000ea00', 'endbr64', 'push r12', 'movzx edx, dl', 'movzx esi, sil', 'mov r12, rdi', 'push rbp', 'push rbx', 'mov ebx, ecx', 'call fcn.00011c10', 'endbr64', 'push r15', 'push r14', 'push r13', 'mov r13d, esi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'movzx eax, byte [rdi]', 'test dl, dl', 'jne 0x11ca0', 'test al, al', 'je 0x11ce3', 'mov r12, rdi', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbp, rax', 'test bl, bl', 'je 0xea50', 'cmp rbp, r12', 'je 0xea81', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov eax, dword [0x00029564]', 'test eax, eax', 'jg 0x6900', 'mov eax, dword [0x00028f50]', 'test eax, eax', 'jne 0x6a20', 'mov r15d, dword [0x00028f48]', 'test r15d, r15d', 'je 0x6cf8', 'mov eax, dword [mode]', 'and eax, 0xf000', 'cmp eax, 0xa000', 'je 0x6d20', 'xor esi, esi', 'mov rdi, rbp', 'call fcn.00005780', 'endbr64', 'push r12', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x50', 'mov edi, dword [rdi + 0x10]', 'mov rax, qword fs:[0x28]', 'mov qword [var_48h], rax', 'xor eax, eax', 'lea r12, [var_15h]', 'mov rsi, r12', 'call fcn.0000f100', 'endbr64', 'mov ecx, edi', 'mov eax, 0x62', 'and ecx, 0xf000', 'mov edx, ecx', 'cmp ecx, 0x6000', 'je 0xf175', 'mov byte [rsi], al', 'mov eax, edi', 'and ax, 0x100', 'cmp ax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 1], al', 'mov eax, edi', 'and ax, 0x80', 'cmp ax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 2], al', 'mov eax, edi', 'and eax, 0x40', 'cmp ax, 1', 'lea eax, [rdi*8]', 'sbb ecx, ecx', 'mov edx, eax', 'and ecx, 0xffffffb5', 'and dx, 0x100', 'add ecx, 0x78', 'cmp dx, 1', 'sbb edx, edx', 'mov byte [rsi + 3], cl', 'and edx, 0xffffffbb', 'add edx, 0x72', 'mov byte [rsi + 4], dl', 'mov edx, eax', 'and dx, 0x80', 'cmp dx, 1', 'sbb edx, edx', 'and eax, 0x40', 'and edx, 0xffffffb6', 'add edx, 0x77', 'cmp ax, 1', 'mov eax, edi', 'mov byte [rsi + 5], dl', 'sbb edx, edx', 'shl eax, 6', 'mov r8d, eax', 'and edx, 0xffffffb5', 'and r8w, 0x100', 'add edx, 0x78', 'cmp r8w, 1', 'mov byte [rsi + 6], dl', 'sbb r8d, r8d', 'and r8d, 0xffffffbb', 'add r8d, 0x72', 'mov byte [rsi + 7], r8b', 'mov r8d, eax', 'and r8w, 0x80', 'cmp r8w, 1', 'sbb r8d, r8d', 'and eax, 0x40', 'and r8d, 0xffffffb6', 'add r8d, 0x77', 'cmp ax, 1', 'sbb eax, eax', 'mov byte [rsi + 8], r8b', 'and eax, 0xffffffb5', 'add eax, 0x78', 'mov byte [rsi + 9], al', 'test edi, 0x800', 'je 0xf268', 'test edi, 0x400', 'je 0xf283', 'and edi, 0x200', 'je 0xf29d', 'ret', 'mov rax, qword [rbx + 0x28]', 'lea rdi, [timer]', 'mov byte [var_1fh], 0', 'mov qword [timer], rax', 'call sym.imp.ctime']"
738,cpio,46,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1bf58', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1bf6e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [rbx + 0x18]', 'cmp rax, 0x3ffffffe', 'je 0x1a37c', 'jmp 0x1a3bd', 'xor r12d, r12d', 'cmp rax, 0x3fffffff', 'jne 0x1a38f', 'lea rdi, [rbx + 0x10]', 'call fcn.0001bf10', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
739,mmd,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
740,flock,61,"['call sym.imp.clock_gettime', 'mov r8d, eax', 'test eax, eax', 'jne 0x36cb', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x36e4', 'add rsp, 0x20', 'mov eax, r8d', 'pop rbx', 'ret', 'jmp 0x2a26', 'or r14d, ebx', 'mov r13d, r14d', 'lea r14, [var_2ch]', 'nop dword [rax]', 'mov esi, r13d', 'mov edi, ebp', 'call sym.imp.flock', 'test eax, eax', 'je 0x2c25', 'cmp dword [var_4h], 0', 'jne 0x2dfc', 'cmp dword [var_8h], 0', 'jne 0x2d47', 'lea rdi, [var_50h]', 'call fcn.00003670', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edi, 4', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rsi, rsp', 'call sym.imp.clock_gettime']"
741,crontab,1129,"['call sym.imp.ctime', 'lea rcx, [0x0000b6e0]', 'mov esi, 1', 'mov rdi, r12', 'mov r8, rax', 'lea rdx, str.___s_installed_on___24.24s__n', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov esi, 1', 'mov rdi, r12', 'xor eax, eax', 'lea rcx, str._Id:_crontab.c_v_2.13_1994_01_17_03:20:37_vixie_Exp__', 'lea rdx, str.__Cron_version_____s__n', 'call sym.imp.__fprintf_chk', 'mov rdi, qword [0x0000b640]', 'call sym.imp.rewind', 'mov dword [0x0000bf90], 1', 'jmp 0x395a', 'mov rdi, qword [0x0000b640]', 'call fcn.00004f10', 'endbr64', 'sub rsp, 8', 'call sym.imp.getc', 'cmp eax, 0xa', 'jne 0x4f27', 'add rsp, 8', 'ret', 'mov ebp, eax', 'cmp eax, 0xffffffff', 'jne 0x3950', 'mov rdi, r12', 'call sym.imp.ferror', 'test eax, eax', 'jne 0x3bd0', 'call sym.imp.__errno_location', 'mov edi, dword [rax]', 'call sym.imp.strerror', 'mov rcx, qword [0x0000bf88]', 'mov rdi, qword [obj.stderr]', 'lea r8, [0x0000b5c0]', 'mov r9, rax', 'lea rdx, str._s:__s:__s_n', 'mov esi, 1', 'xor eax, eax', 'call sym.imp.__fprintf_chk', 'mov rdi, r12', 'mov ebp, 0xfffffffe', 'call sym.imp.fclose', 'lea rdi, [0x0000b5c0]', 'call sym.imp.unlink', 'jmp 0x3b18', 'mov rax, qword [var_468h]', 'xor rax, qword fs:[0x28]', 'jne 0x3d99', 'add rsp, 0x470', 'mov eax, ebp', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'cmp eax, 0xffffffff', 'je 0x46f1', 'lea r15, [var_1b0h]', 'mov rsi, r14', 'mov edi, 1', 'xor eax, eax', 'call sym.imp.__printf_chk', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'mov rdx, qword [obj.stdin]', 'mov rdi, r15', 'mov esi, 0x3e8', 'mov byte [var_1b0h], 0', 'call sym.imp.fgets', 'call sym.imp.__ctype_b_loc', 'movsx rdx, byte [var_1b0h]', 'mov r8, rax', 'mov rcx, qword [r8]', 'mov rax, rdx', 'test byte [rcx + rdx*2 + 1], 2', 'jne 0x4763', 'cmp eax, 0x6e', 'je 0x46c4', 'cmp eax, 0x79', 'je 0x418c', 'mov esi, 1', 'mov edi, 1', 'call sym.imp.signal', 'mov esi, 1', 'mov edi, 2', 'call sym.imp.signal', 'mov esi, 1', 'mov edi, 3', 'call sym.imp.signal', 'call sym.imp.fork', 'mov r15d, eax', 'cmp eax, 0xffffffff', 'je 0x49bc', 'test eax, eax', 'jne 0x42b0', 'mov edx, 2', 'mov rsi, rbx', 'mov edi, r15d', 'call sym.imp.waitpid', 'cmp eax, 0xffffffff', 'je 0x4278', 'cmp r15d, eax', 'jne 0x48b4', 'mov eax, dword [var_1ch]', 'cmp al, 0x7f', 'je 0x42b0', 'mov ecx, eax', 'and ecx, 0x7f', 'je 0x44c8', 'mov edx, eax', 'and edx, 0x7f', 'add edx, 1', 'sub dl, 1', 'jg 0x4940', 'xor esi, esi', 'mov edi, 1', 'call sym.imp.signal', 'xor esi, esi', 'mov edi, 2', 'call sym.imp.signal', 'xor esi, esi', 'mov edi, 3', 'call sym.imp.signal', 'xor esi, esi', 'mov edi, 0x14', 'call sym.imp.signal', 'xor esi, esi', 'lea rdi, [0x0000b6e0]', 'xor eax, eax', 'call sym.imp.open', 'mov r15d, eax', 'test eax, eax', 'js 0x4631', 'mov rdx, r13', 'mov esi, eax', 'mov edi, 1', 'call sym.imp.__fxstat', 'test eax, eax', 'js 0x4797', 'mov eax, dword [var_cch]', 'mov dword [var_8h], eax', 'call sym.imp.getuid', 'cmp dword [var_8h], eax', 'jne 0x467d', 'mov eax, dword [var_c8h]', 'and eax, 0xf000', 'cmp eax, 0x8000', 'jne 0x47bb', 'mov rax, qword [var_78h]', 'cmp qword [var_108h], rax', 'je 0x47e7', 'lea rsi, [0x0000748d]', 'mov edi, r15d', 'call sym.imp.fdopen', 'mov qword [0x0000b640], rax', 'test rax, rax', 'je 0x488e', 'mov rcx, qword [0x0000bf88]', 'mov rdi, qword [obj.stderr]', 'lea rdx, str._s:_installing_new_crontab_n', 'xor eax, eax', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'call fcn.000037d0', 'push r14', 'xor edi, edi', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0x470', 'mov rax, qword fs:[0x28]', 'mov qword [var_468h], rax', 'xor eax, eax', 'call sym.imp.time', 'mov qword [timer], rax', 'call fcn.00006490', 'endbr64', 'sub rsp, 8', 'mov edi, 8', 'call sym.imp.malloc', 'test rax, rax', 'je 0x64ae', 'add rsp, 8', 'ret', 'test rax, rax', 'je 0x3d4c', 'lea rsi, [0x00003500]', 'mov edi, 1', 'mov r13, rax', 'call sym.imp.signal', 'lea rsi, [0x00003500]', 'mov edi, 2', 'call sym.imp.signal', 'lea rsi, [0x00003500]', 'mov edi, 3', 'call sym.imp.signal', 'mov esi, 1', 'mov edi, 0x14', 'call sym.imp.signal', 'sub rsp, 8', 'lea rax, str.tmp.XXXXXX', 'mov esi, 0x64', 'push rax', 'lea r9, str.crontabs', 'mov ecx, 0x64', 'xor eax, eax', 'lea r8, [0x000070bb]', 'mov edx, 1', 'lea rdi, [0x0000b5c0]', 'call sym.imp.__snprintf_chk', 'mov edi, 0x3f', 'call sym.imp.umask', 'lea rdi, [0x0000b5c0]', 'mov ebp, eax', 'call sym.imp.mkstemp', 'pop rsi', 'pop rdi', 'mov r14d, eax', 'test eax, eax', 'js 0x3cdf', 'lea rsi, [0x0000713c]', 'mov edi, eax', 'call sym.imp.fdopen', 'mov r12, rax', 'test rax, rax', 'je 0x3d77', 'mov edi, ebp', 'call sym.imp.umask', 'mov rcx, r12', 'mov edx, 0x39', 'mov esi, 1', 'lea rdi, str._DO_NOT_EDIT_THIS_FILE___edit_the_master_and_reinstall._n', 'call sym.imp.fwrite', 'lea rdi, [timer]', 'call sym.imp.ctime']"
742,dbus-daemon,20579,"['call sym.imp._dbus_get_monotonic_time', 'mov esi, dword [0x0003d014]', 'mov rdx, rbp', 'mov rdi, r12', 'lea rcx, [0x00018170]', 'call sym.imp.dbus_connection_set_data', 'mov r13d, eax', 'test eax, eax', 'je 0x18890', 'mov esi, 1', 'mov r13, rsp', 'mov rdi, r12', 'call sym.imp.dbus_connection_set_route_peer_messages', 'mov rdi, r13', 'call sym.imp.dbus_error_init', 'mov rdi, r12', 'mov rsi, r13', 'call fcn.00022d60', 'endbr64', 'push r12', 'push rbp', 'sub rsp, 0x28', 'mov edx, dword [0x0003daa0]', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test edx, edx', 'je 0x22db8', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'jne 0x22e90', 'add rsp, 0x28', 'pop rbp', 'pop r12', 'ret', 'mov rdi, r13', 'mov qword [rbp + 0x68], rax', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0x18780', 'mov rdi, r12', 'mov rsi, r13', 'call fcn.00010190', 'endbr64', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0003d438]', 'test eax, eax', 'je 0x10216', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x102bb', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdi, r13', 'mov qword [rbp + 0x70], rax', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0x18780', 'xor r9d, r9d', 'mov r8, r12', 'lea rcx, [0x00018110]', 'mov rdi, r12', 'lea rdx, [0x00018130]', 'lea rsi, [0x00018150]', 'call sym.imp.dbus_connection_set_watch_functions', 'test eax, eax', 'jne 0x188b8', 'mov rdi, qword [r14 + 0x28]', 'lea rdx, str.No_memory_to_set_up_new_connection', 'mov esi, 1', 'xor eax, eax', 'call fcn.000124f0', 'jmp 0x187a4', 'mov rdi, qword [rbp + 0x70]', 'mov qword [rbp + 0x68], 0', 'test rdi, rdi', 'je 0x187ba', 'call fcn.00010150', 'endbr64', 'mov eax, dword [0x0003d438]', 'test eax, eax', 'je 0x10163', 'sub dword [rdi], 1', 'je 0x10168', 'jmp fcn.0000fd20', 'push rbp', 'mov rbp, rdi', 'mov rdi, qword [rdi + 8]', 'call sym.imp.free', 'mov rdi, rbp', 'pop rbp', 'jmp sym.imp.dbus_free', 'jmp 0x10d99', 'mov edx, dword [var_88h]', 'xor eax, eax', 'test edx, edx', 'je 0x107ef', 'mov rbx, qword [var_d8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1120f', 'add rsp, 0xe8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x40', 'test eax, eax', 'jne 0x13740', 'xor r13d, r13d', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x139b8', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'jne 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'mov edi, 0x50', 'call sym.imp.dbus_malloc0', 'mov r13, rax', 'test rax, rax', 'je 0xf682', 'mov qword [rax + 8], rbx', 'mov rdi, r12', 'mov dword [rax], 1', 'mov qword [var_8h], rax', 'call sym.imp._dbus_strdup', 'mov r11, qword [var_8h]', 'mov qword [r11 + 0x10], rax', 'test rax, rax', 'je 0xed40', 'mov rax, qword [var_20h]', 'test rax, rax', 'je 0xed80', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.00012410', 'endbr64', 'mov eax, dword [rdi + 0xb8]', 'ret', 'mov r11, qword [var_8h]', 'xor ecx, ecx', 'lea rsi, [0x0000d1a0]', 'mov edi, eax', 'mov rdx, r11', 'call sym.imp._dbus_timeout_new', 'mov r11, qword [var_8h]', 'mov rbp, rax', 'mov qword [r11 + 0x40], rax', 'test rax, rax', 'je 0xed40', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.000123c0', 'mov rsi, rbp', 'mov rdi, rax', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x1875e', 'mov rdx, r12', 'lea rsi, [0x00018060]', 'mov rdi, r12', 'mov r13d, 1', 'call sym.imp._dbus_connection_set_pending_fds_function', 'mov rsi, qword [rbp + 8]', 'lea rdi, [r14 + 0x18]', 'call sym.imp._dbus_list_append_link', 'add dword [r14 + 0x20], 1', 'mov rdi, r12', 'call sym.imp.dbus_connection_ref', 'mov rdi, r14', 'call fcn.000184f0', 'endbr64', 'push r14', 'mov esi, 0xffffffff', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x30', 'mov rax, qword fs:[0x28]', 'mov qword [var_28h], rax', 'xor eax, eax', 'cmp qword [rdi + 0x18], 0', 'je 0x1861a', 'lea rsi, [var_20h]', 'lea rdi, [var_18h]', 'call sym.imp._dbus_get_monotonic_time']"
743,dbus-daemon,10446,"['call sym.imp._dbus_get_monotonic_time', 'mov esi, dword [0x0003d014]', 'mov rdx, rbp', 'mov rdi, r12', 'lea rcx, [0x00018170]', 'call sym.imp.dbus_connection_set_data', 'mov r13d, eax', 'test eax, eax', 'je 0x18890', 'mov esi, 1', 'mov r13, rsp', 'mov rdi, r12', 'call sym.imp.dbus_connection_set_route_peer_messages', 'mov rdi, r13', 'call sym.imp.dbus_error_init', 'mov rdi, r12', 'mov rsi, r13', 'call fcn.00022d60', 'endbr64', 'push r12', 'push rbp', 'sub rsp, 0x28', 'mov edx, dword [0x0003daa0]', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test edx, edx', 'je 0x22db8', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'jne 0x22e90', 'add rsp, 0x28', 'pop rbp', 'pop r12', 'ret', 'mov rdi, r13', 'mov qword [rbp + 0x68], rax', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0x18780', 'mov rdi, r12', 'mov rsi, r13', 'call fcn.00010190', 'endbr64', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0003d438]', 'test eax, eax', 'je 0x10216', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x102bb', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdi, r13', 'mov qword [rbp + 0x70], rax', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0x18780', 'xor r9d, r9d', 'mov r8, r12', 'lea rcx, [0x00018110]', 'mov rdi, r12', 'lea rdx, [0x00018130]', 'lea rsi, [0x00018150]', 'call sym.imp.dbus_connection_set_watch_functions', 'test eax, eax', 'jne 0x188b8', 'mov rdi, qword [r14 + 0x28]', 'lea rdx, str.No_memory_to_set_up_new_connection', 'mov esi, 1', 'xor eax, eax', 'call fcn.000124f0', 'jmp 0x187a4', 'mov rdi, qword [rbp + 0x70]', 'mov qword [rbp + 0x68], 0', 'test rdi, rdi', 'je 0x187ba', 'call fcn.00010150', 'endbr64', 'mov eax, dword [0x0003d438]', 'test eax, eax', 'je 0x10163', 'sub dword [rdi], 1', 'je 0x10168', 'jmp fcn.0000fd20', 'push rbp', 'mov rbp, rdi', 'mov rdi, qword [rdi + 8]', 'call sym.imp.free', 'mov rdi, rbp', 'pop rbp', 'jmp sym.imp.dbus_free', 'jmp 0x10d99', 'mov edx, dword [var_88h]', 'xor eax, eax', 'test edx, edx', 'je 0x107ef', 'mov rbx, qword [var_d8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1120f', 'add rsp, 0xe8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x40', 'test eax, eax', 'jne 0x13740', 'xor r13d, r13d', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x139b8', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rsi', 'pop rdi', 'mov r8d, eax', 'test eax, eax', 'jne 0x1bed0', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x1c166', 'add rsp, 0x98', 'mov eax, r8d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'jne 0xe720', 'test rbx, rbx', 'je 0xe7b0', 'mov edi, 0x10', 'call sym.imp.dbus_malloc', 'mov r14, rax', 'test rax, rax', 'je 0xe86e', 'mov qword [rax], rbp', 'mov rax, qword [rbp + 8]', 'mov rdi, qword [rax + 0x10]', 'call sym.imp._dbus_hash_table_preallocate_entry', 'mov qword [r14 + 8], rax', 'mov rax, qword [r14]', 'add dword [rax], 1', 'cmp qword [r14 + 8], 0', 'je 0xe848', 'lea rcx, [fcn.0000e100]', 'mov rdx, r14', 'lea rsi, [0x0000cc40]', 'mov rdi, r13', 'call fcn.0001a340', 'endbr64', 'push r14', 'mov r14, rcx', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x1a3bd', 'mov qword [rax], r13', 'lea rdi, [rbx + 0x10]', 'mov rsi, rax', 'mov rbp, rax', 'mov qword [rax + 0x10], r12', 'mov qword [rax + 8], r14', 'call sym.imp._dbus_list_prepend', 'test eax, eax', 'je 0x1a3a0', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov r14d, eax', 'test eax, eax', 'je 0x1a5e0', 'mov qword [rbp], rbx', 'lea rsi, [rbx + 8]', 'mov rdi, rbx', 'mov r14d, 1', 'mov qword [rbp + 8], r12', 'call sym.imp._dbus_get_monotonic_time']"
744,dbus-daemon,10471,"['call sym.imp._dbus_get_monotonic_time', 'mov esi, dword [0x0003d014]', 'mov rdx, rbp', 'mov rdi, r12', 'lea rcx, [0x00018170]', 'call sym.imp.dbus_connection_set_data', 'mov r13d, eax', 'test eax, eax', 'je 0x18890', 'mov esi, 1', 'mov r13, rsp', 'mov rdi, r12', 'call sym.imp.dbus_connection_set_route_peer_messages', 'mov rdi, r13', 'call sym.imp.dbus_error_init', 'mov rdi, r12', 'mov rsi, r13', 'call fcn.00022d60', 'endbr64', 'push r12', 'push rbp', 'sub rsp, 0x28', 'mov edx, dword [0x0003daa0]', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test edx, edx', 'je 0x22db8', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'jne 0x22e90', 'add rsp, 0x28', 'pop rbp', 'pop r12', 'ret', 'mov rdi, r13', 'mov qword [rbp + 0x68], rax', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0x18780', 'mov rdi, r12', 'mov rsi, r13', 'call fcn.00010190', 'endbr64', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0003d438]', 'test eax, eax', 'je 0x10216', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x102bb', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdi, r13', 'mov qword [rbp + 0x70], rax', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0x18780', 'xor r9d, r9d', 'mov r8, r12', 'lea rcx, [0x00018110]', 'mov rdi, r12', 'lea rdx, [0x00018130]', 'lea rsi, [0x00018150]', 'call sym.imp.dbus_connection_set_watch_functions', 'test eax, eax', 'jne 0x188b8', 'mov rdi, qword [r14 + 0x28]', 'lea rdx, str.No_memory_to_set_up_new_connection', 'mov esi, 1', 'xor eax, eax', 'call fcn.000124f0', 'jmp 0x187a4', 'mov rdi, qword [rbp + 0x70]', 'mov qword [rbp + 0x68], 0', 'test rdi, rdi', 'je 0x187ba', 'call fcn.00010150', 'endbr64', 'mov eax, dword [0x0003d438]', 'test eax, eax', 'je 0x10163', 'sub dword [rdi], 1', 'je 0x10168', 'jmp fcn.0000fd20', 'push rbp', 'mov rbp, rdi', 'mov rdi, qword [rdi + 8]', 'call sym.imp.free', 'mov rdi, rbp', 'pop rbp', 'jmp sym.imp.dbus_free', 'jmp 0x10d99', 'mov edx, dword [var_88h]', 'xor eax, eax', 'test edx, edx', 'je 0x107ef', 'mov rbx, qword [var_d8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1120f', 'add rsp, 0xe8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x40', 'test eax, eax', 'jne 0x13740', 'xor r13d, r13d', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x139b8', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'jne 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'mov edi, 0x50', 'call sym.imp.dbus_malloc0', 'mov r13, rax', 'test rax, rax', 'je 0xf682', 'mov qword [rax + 8], rbx', 'mov rdi, r12', 'mov dword [rax], 1', 'mov qword [var_8h], rax', 'call sym.imp._dbus_strdup', 'mov r11, qword [var_8h]', 'mov qword [r11 + 0x10], rax', 'test rax, rax', 'je 0xed40', 'mov rax, qword [var_20h]', 'test rax, rax', 'je 0xed80', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.00012410', 'endbr64', 'mov eax, dword [rdi + 0xb8]', 'ret', 'mov r11, qword [var_8h]', 'xor ecx, ecx', 'lea rsi, [0x0000d1a0]', 'mov edi, eax', 'mov rdx, r11', 'call sym.imp._dbus_timeout_new', 'mov r11, qword [var_8h]', 'mov rbp, rax', 'mov qword [r11 + 0x40], rax', 'test rax, rax', 'je 0xed40', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.000123c0', 'mov rsi, rbp', 'mov rdi, rax', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time']"
745,dbus-daemon,10857,"['call sym.imp._dbus_get_monotonic_time', 'mov esi, dword [0x0003d014]', 'mov rdx, rbp', 'mov rdi, r12', 'lea rcx, [0x00018170]', 'call sym.imp.dbus_connection_set_data', 'mov r13d, eax', 'test eax, eax', 'je 0x18890', 'mov esi, 1', 'mov r13, rsp', 'mov rdi, r12', 'call sym.imp.dbus_connection_set_route_peer_messages', 'mov rdi, r13', 'call sym.imp.dbus_error_init', 'mov rdi, r12', 'mov rsi, r13', 'call fcn.00022d60', 'endbr64', 'push r12', 'push rbp', 'sub rsp, 0x28', 'mov edx, dword [0x0003daa0]', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test edx, edx', 'je 0x22db8', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'jne 0x22e90', 'add rsp, 0x28', 'pop rbp', 'pop r12', 'ret', 'mov rdi, r13', 'mov qword [rbp + 0x68], rax', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0x18780', 'mov rdi, r12', 'mov rsi, r13', 'call fcn.00010190', 'endbr64', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0003d438]', 'test eax, eax', 'je 0x10216', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x102bb', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdi, r13', 'mov qword [rbp + 0x70], rax', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0x18780', 'xor r9d, r9d', 'mov r8, r12', 'lea rcx, [0x00018110]', 'mov rdi, r12', 'lea rdx, [0x00018130]', 'lea rsi, [0x00018150]', 'call sym.imp.dbus_connection_set_watch_functions', 'test eax, eax', 'jne 0x188b8', 'mov rdi, qword [r14 + 0x28]', 'lea rdx, str.No_memory_to_set_up_new_connection', 'mov esi, 1', 'xor eax, eax', 'call fcn.000124f0', 'jmp 0x187a4', 'mov rdi, qword [rbp + 0x70]', 'mov qword [rbp + 0x68], 0', 'test rdi, rdi', 'je 0x187ba', 'call fcn.00010150', 'endbr64', 'mov eax, dword [0x0003d438]', 'test eax, eax', 'je 0x10163', 'sub dword [rdi], 1', 'je 0x10168', 'jmp fcn.0000fd20', 'push rbp', 'mov rbp, rdi', 'mov rdi, qword [rdi + 8]', 'call sym.imp.free', 'mov rdi, rbp', 'pop rbp', 'jmp sym.imp.dbus_free', 'jmp 0x10d99', 'mov edx, dword [var_88h]', 'xor eax, eax', 'test edx, edx', 'je 0x107ef', 'mov rbx, qword [var_d8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1120f', 'add rsp, 0xe8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x40', 'test eax, eax', 'jne 0x13740', 'xor r13d, r13d', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x139b8', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'jne 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'mov edi, 0x50', 'call sym.imp.dbus_malloc0', 'mov r13, rax', 'test rax, rax', 'je 0xf682', 'mov qword [rax + 8], rbx', 'mov rdi, r12', 'mov dword [rax], 1', 'mov qword [var_8h], rax', 'call sym.imp._dbus_strdup', 'mov r11, qword [var_8h]', 'mov qword [r11 + 0x10], rax', 'test rax, rax', 'je 0xed40', 'mov rax, qword [var_20h]', 'test rax, rax', 'je 0xed80', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.00012410', 'endbr64', 'mov eax, dword [rdi + 0xb8]', 'ret', 'mov r11, qword [var_8h]', 'xor ecx, ecx', 'lea rsi, [0x0000d1a0]', 'mov edi, eax', 'mov rdx, r11', 'call sym.imp._dbus_timeout_new', 'mov r11, qword [var_8h]', 'mov rbp, rax', 'mov qword [r11 + 0x40], rax', 'test rax, rax', 'je 0xed40', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.000123c0', 'mov rsi, rbp', 'mov rdi, rax', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x184a0', 'mov dword [r12], 1', 'mov qword [r12 + 0x28], rbx', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov qword [r13 + 0x60], rax', 'test rax, rax', 'je 0x12cc8', 'lea rdx, str.Memory_allocation_failure_in_message_bus', 'lea rsi, str.org.freedesktop.DBus.Error.NoMemory', 'mov rdi, rbp', 'call sym.imp.dbus_set_error_const', 'jmp 0x12c51', 'mov rdi, r15', 'call fcn.00015e50', 'endbr64', 'sub dword [rdi], 1', 'jne 0x15e60', 'ret', 'jmp 0x126aa', 'sub dword [r13], 1', 'je 0x12859', 'mov eax, dword [0x0003d010]', 'xor r13d, r13d', 'test eax, eax', 'jns 0x12820', 'mov rax, qword [var_b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x130f6', 'add rsp, 0xc8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, r15', 'mov qword [0x0003dab8], rax', 'call sym.imp._dbus_string_free', 'mov rdi, rbx', 'call sym.imp._dbus_string_free', 'mov rdi, qword [0x0003dab8]', 'test rdi, rdi', 'je 0xc9a0', 'call fcn.000123c0', 'lea r12, [s]', 'mov rdi, r12', 'mov rbp, rax', 'call sym.imp.dbus_error_init', 'lea rsi, [0x0003dab4]', 'mov rcx, r12', 'mov edx, 1', 'lea rdi, [rsi - 4]', 'call sym.imp._dbus_socketpair', 'test eax, eax', 'je 0xc921', 'mov esi, 1', 'xor r9d, r9d', 'xor r8d, r8d', 'mov edx, 1', 'mov edi, dword [0x0003dab0]', 'lea rcx, [0x00027790]', 'call sym.imp._dbus_watch_new', 'mov rsi, rax', 'test rax, rax', 'je 0xc8fe', 'mov rdi, rbp', 'call fcn.000282b0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 8', 'call sym.imp._dbus_watch_get_pollable', 'mov rdi, qword [rbx + 8]', 'mov esi, eax', 'mov r13d, eax', 'call sym.imp._dbus_hash_table_lookup_int', 'mov r14, rax', 'test rax, rax', 'je 0x283a0', 'mov rdi, rbp', 'call sym.imp._dbus_watch_ref', 'mov rdi, r14', 'mov rsi, rax', 'call sym.imp._dbus_list_append', 'mov r12d, eax', 'test eax, eax', 'je 0x28360', 'mov rdi, r14', 'call sym.imp._dbus_list_length_is_one', 'test eax, eax', 'je 0x28378', 'lea rsi, [rbx + 0x10]', 'lea rdi, [rbx + 8]', 'mov ecx, r13d', 'mov rdx, r14', 'call fcn.00028040', 'push r15', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdx', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x28110', 'mov rdi, rbp', 'xor r15d, r15d', 'xor r14d, r14d', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'jmp 0x28082', 'test rbx, rbx', 'je 0x280c0', 'mov rdi, qword [r13]', 'mov rax, qword [rdi]', 'test r15d, r15d', 'je 0x280f0', 'mov rax, qword [rax + 0x20]', 'add rsp, 8', 'mov esi, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp rax', 'mov eax, dword [canary]', 'mov dword [var_ch], eax', 'jmp 0x287e5', 'cmp qword [rbp + 0x30], 0', 'je 0x28808', 'mov rax, qword [var_278h]', 'xor rax, qword fs:[0x28]', 'jne 0x28bbc', 'mov eax, dword [var_ch]', 'add rsp, 0x288', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp dword [rbp + 0x2c], ebx', 'jne 0x28bf0', 'mov esi, 1', 'mov rdi, rbp', 'call fcn.00028660', 'endbr64', 'push r15', 'push r14', 'mov r14d, esi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x288', 'mov rax, qword fs:[0x28]', 'mov qword [var_278h], rax', 'xor eax, eax', 'mov eax, dword [rdi + 0x2c]', 'mov rdi, qword [rdi + 8]', 'mov dword [var_8h], eax', 'call sym.imp._dbus_hash_table_get_n_entries', 'test eax, eax', 'jne 0x286ad', 'mov esi, dword [rbp + 0x28]', 'mov r13, 0xffffffffffffffff', 'test esi, esi', 'jg 0x2887a', 'lea rsi, [var_40h]', 'lea rdi, [var_38h]', 'call sym.imp._dbus_get_monotonic_time']"
746,dbus-daemon,10827,"['call sym.imp._dbus_get_monotonic_time', 'mov esi, dword [0x0003d014]', 'mov rdx, rbp', 'mov rdi, r12', 'lea rcx, [0x00018170]', 'call sym.imp.dbus_connection_set_data', 'mov r13d, eax', 'test eax, eax', 'je 0x18890', 'mov esi, 1', 'mov r13, rsp', 'mov rdi, r12', 'call sym.imp.dbus_connection_set_route_peer_messages', 'mov rdi, r13', 'call sym.imp.dbus_error_init', 'mov rdi, r12', 'mov rsi, r13', 'call fcn.00022d60', 'endbr64', 'push r12', 'push rbp', 'sub rsp, 0x28', 'mov edx, dword [0x0003daa0]', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'test edx, edx', 'je 0x22db8', 'mov rcx, qword [var_18h]', 'xor rcx, qword fs:[0x28]', 'jne 0x22e90', 'add rsp, 0x28', 'pop rbp', 'pop r12', 'ret', 'mov rdi, r13', 'mov qword [rbp + 0x68], rax', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0x18780', 'mov rdi, r12', 'mov rsi, r13', 'call fcn.00010190', 'endbr64', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'push rbx', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0003d438]', 'test eax, eax', 'je 0x10216', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x102bb', 'add rsp, 0x28', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rdi, r13', 'mov qword [rbp + 0x70], rax', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0x18780', 'xor r9d, r9d', 'mov r8, r12', 'lea rcx, [0x00018110]', 'mov rdi, r12', 'lea rdx, [0x00018130]', 'lea rsi, [0x00018150]', 'call sym.imp.dbus_connection_set_watch_functions', 'test eax, eax', 'jne 0x188b8', 'mov rdi, qword [r14 + 0x28]', 'lea rdx, str.No_memory_to_set_up_new_connection', 'mov esi, 1', 'xor eax, eax', 'call fcn.000124f0', 'jmp 0x187a4', 'mov rdi, qword [rbp + 0x70]', 'mov qword [rbp + 0x68], 0', 'test rdi, rdi', 'je 0x187ba', 'call fcn.00010150', 'endbr64', 'mov eax, dword [0x0003d438]', 'test eax, eax', 'je 0x10163', 'sub dword [rdi], 1', 'je 0x10168', 'jmp fcn.0000fd20', 'push rbp', 'mov rbp, rdi', 'mov rdi, qword [rdi + 8]', 'call sym.imp.free', 'mov rdi, rbp', 'pop rbp', 'jmp sym.imp.dbus_free', 'jmp 0x10d99', 'mov edx, dword [var_88h]', 'xor eax, eax', 'test edx, edx', 'je 0x107ef', 'mov rbx, qword [var_d8h]', 'xor rbx, qword fs:[0x28]', 'jne 0x1120f', 'add rsp, 0xe8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'add rsp, 0x40', 'test eax, eax', 'jne 0x13740', 'xor r13d, r13d', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x139b8', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'jne 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'mov edi, 0x50', 'call sym.imp.dbus_malloc0', 'mov r13, rax', 'test rax, rax', 'je 0xf682', 'mov qword [rax + 8], rbx', 'mov rdi, r12', 'mov dword [rax], 1', 'mov qword [var_8h], rax', 'call sym.imp._dbus_strdup', 'mov r11, qword [var_8h]', 'mov qword [r11 + 0x10], rax', 'test rax, rax', 'je 0xed40', 'mov rax, qword [var_20h]', 'test rax, rax', 'je 0xed80', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.00012410', 'endbr64', 'mov eax, dword [rdi + 0xb8]', 'ret', 'mov r11, qword [var_8h]', 'xor ecx, ecx', 'lea rsi, [0x0000d1a0]', 'mov edi, eax', 'mov rdx, r11', 'call sym.imp._dbus_timeout_new', 'mov r11, qword [var_8h]', 'mov rbp, rax', 'mov qword [r11 + 0x40], rax', 'test rax, rax', 'je 0xed40', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.000123c0', 'mov rsi, rbp', 'mov rdi, rax', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x184a0', 'mov dword [r12], 1', 'mov qword [r12 + 0x28], rbx', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov qword [r13 + 0x60], rax', 'test rax, rax', 'je 0x12cc8', 'lea rdx, str.Memory_allocation_failure_in_message_bus', 'lea rsi, str.org.freedesktop.DBus.Error.NoMemory', 'mov rdi, rbp', 'call sym.imp.dbus_set_error_const', 'jmp 0x12c51', 'mov rdi, r15', 'call fcn.00015e50', 'endbr64', 'sub dword [rdi], 1', 'jne 0x15e60', 'ret', 'jmp 0x126aa', 'sub dword [r13], 1', 'je 0x12859', 'mov eax, dword [0x0003d010]', 'xor r13d, r13d', 'test eax, eax', 'jns 0x12820', 'mov rax, qword [var_b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x130f6', 'add rsp, 0xc8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, r15', 'mov qword [0x0003dab8], rax', 'call sym.imp._dbus_string_free', 'mov rdi, rbx', 'call sym.imp._dbus_string_free', 'mov rdi, qword [0x0003dab8]', 'test rdi, rdi', 'je 0xc9a0', 'call fcn.000123c0', 'lea r12, [s]', 'mov rdi, r12', 'mov rbp, rax', 'call sym.imp.dbus_error_init', 'lea rsi, [0x0003dab4]', 'mov rcx, r12', 'mov edx, 1', 'lea rdi, [rsi - 4]', 'call sym.imp._dbus_socketpair', 'test eax, eax', 'je 0xc921', 'mov esi, 1', 'xor r9d, r9d', 'xor r8d, r8d', 'mov edx, 1', 'mov edi, dword [0x0003dab0]', 'lea rcx, [0x00027790]', 'call sym.imp._dbus_watch_new', 'mov rsi, rax', 'test rax, rax', 'je 0xc8fe', 'mov rdi, rbp', 'call fcn.000282b0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 8', 'call sym.imp._dbus_watch_get_pollable', 'mov rdi, qword [rbx + 8]', 'mov esi, eax', 'mov r13d, eax', 'call sym.imp._dbus_hash_table_lookup_int', 'mov r14, rax', 'test rax, rax', 'je 0x283a0', 'mov rdi, rbp', 'call sym.imp._dbus_watch_ref', 'mov rdi, r14', 'mov rsi, rax', 'call sym.imp._dbus_list_append', 'mov r12d, eax', 'test eax, eax', 'je 0x28360', 'mov rdi, r14', 'call sym.imp._dbus_list_length_is_one', 'test eax, eax', 'je 0x28378', 'lea rsi, [rbx + 0x10]', 'lea rdi, [rbx + 8]', 'mov ecx, r13d', 'mov rdx, r14', 'call fcn.00028040', 'push r15', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdx', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x28110', 'mov rdi, rbp', 'xor r15d, r15d', 'xor r14d, r14d', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'jmp 0x28082', 'test rbx, rbx', 'je 0x280c0', 'mov rdi, qword [r13]', 'mov rax, qword [rdi]', 'test r15d, r15d', 'je 0x280f0', 'mov rax, qword [rax + 0x20]', 'add rsp, 8', 'mov esi, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp rax', 'mov rdi, r13', 'call sym.imp._dbus_hash_iter_next', 'test eax, eax', 'jne 0x28ab4', 'mov dword [var_ch], 1', 'jmp 0x28723', 'mov ecx, dword [rbp + 0x28]', 'mov r14d, dword [rbp + 0x20]', 'test ecx, ecx', 'jg 0x28945', 'lea rdi, [var_38h]', 'lea rsi, [var_40h]', 'call sym.imp._dbus_get_monotonic_time']"
747,dbus-daemon,10300,"['call sym.imp._dbus_get_monotonic_time', 'jmp 0x1a40c', 'add rsp, 0x28', 'mov eax, r14d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'setne r13b', 'jmp 0x13583', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x139b8', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'jne 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'mov edi, 0x50', 'call sym.imp.dbus_malloc0', 'mov r13, rax', 'test rax, rax', 'je 0xf682', 'mov qword [rax + 8], rbx', 'mov rdi, r12', 'mov dword [rax], 1', 'mov qword [var_8h], rax', 'call sym.imp._dbus_strdup', 'mov r11, qword [var_8h]', 'mov qword [r11 + 0x10], rax', 'test rax, rax', 'je 0xed40', 'mov rax, qword [var_20h]', 'test rax, rax', 'je 0xed80', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.00012410', 'endbr64', 'mov eax, dword [rdi + 0xb8]', 'ret', 'mov r11, qword [var_8h]', 'xor ecx, ecx', 'lea rsi, [0x0000d1a0]', 'mov edi, eax', 'mov rdx, r11', 'call sym.imp._dbus_timeout_new', 'mov r11, qword [var_8h]', 'mov rbp, rax', 'mov qword [r11 + 0x40], rax', 'test rax, rax', 'je 0xed40', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.000123c0', 'mov rsi, rbp', 'mov rdi, rax', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x1875e', 'mov rdx, r12', 'lea rsi, [0x00018060]', 'mov rdi, r12', 'mov r13d, 1', 'call sym.imp._dbus_connection_set_pending_fds_function', 'mov rsi, qword [rbp + 8]', 'lea rdi, [r14 + 0x18]', 'call sym.imp._dbus_list_append_link', 'add dword [r14 + 0x20], 1', 'mov rdi, r12', 'call sym.imp.dbus_connection_ref', 'mov rdi, r14', 'call fcn.000184f0', 'endbr64', 'push r14', 'mov esi, 0xffffffff', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x30', 'mov rax, qword fs:[0x28]', 'mov qword [var_28h], rax', 'xor eax, eax', 'cmp qword [rdi + 0x18], 0', 'je 0x1861a', 'lea rsi, [var_20h]', 'lea rdi, [var_18h]', 'call sym.imp._dbus_get_monotonic_time']"
748,dbus-daemon,167,"['call sym.imp._dbus_get_monotonic_time', 'jmp 0x1a40c', 'add rsp, 0x28', 'mov eax, r14d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'setne r13b', 'jmp 0x13583', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x139b8', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rsi', 'pop rdi', 'mov r8d, eax', 'test eax, eax', 'jne 0x1bed0', 'mov rax, qword [var_88h]', 'xor rax, qword fs:[0x28]', 'jne 0x1c166', 'add rsp, 0x98', 'mov eax, r8d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'jne 0xe720', 'test rbx, rbx', 'je 0xe7b0', 'mov edi, 0x10', 'call sym.imp.dbus_malloc', 'mov r14, rax', 'test rax, rax', 'je 0xe86e', 'mov qword [rax], rbp', 'mov rax, qword [rbp + 8]', 'mov rdi, qword [rax + 0x10]', 'call sym.imp._dbus_hash_table_preallocate_entry', 'mov qword [r14 + 8], rax', 'mov rax, qword [r14]', 'add dword [rax], 1', 'cmp qword [r14 + 8], 0', 'je 0xe848', 'lea rcx, [fcn.0000e100]', 'mov rdx, r14', 'lea rsi, [0x0000cc40]', 'mov rdi, r13', 'call fcn.0001a340', 'endbr64', 'push r14', 'mov r14, rcx', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x1a3bd', 'mov qword [rax], r13', 'lea rdi, [rbx + 0x10]', 'mov rsi, rax', 'mov rbp, rax', 'mov qword [rax + 0x10], r12', 'mov qword [rax + 8], r14', 'call sym.imp._dbus_list_prepend', 'test eax, eax', 'je 0x1a3a0', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov r14d, eax', 'test eax, eax', 'je 0x1a5e0', 'mov qword [rbp], rbx', 'lea rsi, [rbx + 8]', 'mov rdi, rbx', 'mov r14d, 1', 'mov qword [rbp + 8], r12', 'call sym.imp._dbus_get_monotonic_time']"
749,dbus-daemon,192,"['call sym.imp._dbus_get_monotonic_time', 'jmp 0x1a40c', 'add rsp, 0x28', 'mov eax, r14d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'setne r13b', 'jmp 0x13583', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x139b8', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'jne 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'mov edi, 0x50', 'call sym.imp.dbus_malloc0', 'mov r13, rax', 'test rax, rax', 'je 0xf682', 'mov qword [rax + 8], rbx', 'mov rdi, r12', 'mov dword [rax], 1', 'mov qword [var_8h], rax', 'call sym.imp._dbus_strdup', 'mov r11, qword [var_8h]', 'mov qword [r11 + 0x10], rax', 'test rax, rax', 'je 0xed40', 'mov rax, qword [var_20h]', 'test rax, rax', 'je 0xed80', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.00012410', 'endbr64', 'mov eax, dword [rdi + 0xb8]', 'ret', 'mov r11, qword [var_8h]', 'xor ecx, ecx', 'lea rsi, [0x0000d1a0]', 'mov edi, eax', 'mov rdx, r11', 'call sym.imp._dbus_timeout_new', 'mov r11, qword [var_8h]', 'mov rbp, rax', 'mov qword [r11 + 0x40], rax', 'test rax, rax', 'je 0xed40', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.000123c0', 'mov rsi, rbp', 'mov rdi, rax', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time']"
750,dbus-daemon,578,"['call sym.imp._dbus_get_monotonic_time', 'jmp 0x1a40c', 'add rsp, 0x28', 'mov eax, r14d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'setne r13b', 'jmp 0x13583', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x139b8', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'jne 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'mov edi, 0x50', 'call sym.imp.dbus_malloc0', 'mov r13, rax', 'test rax, rax', 'je 0xf682', 'mov qword [rax + 8], rbx', 'mov rdi, r12', 'mov dword [rax], 1', 'mov qword [var_8h], rax', 'call sym.imp._dbus_strdup', 'mov r11, qword [var_8h]', 'mov qword [r11 + 0x10], rax', 'test rax, rax', 'je 0xed40', 'mov rax, qword [var_20h]', 'test rax, rax', 'je 0xed80', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.00012410', 'endbr64', 'mov eax, dword [rdi + 0xb8]', 'ret', 'mov r11, qword [var_8h]', 'xor ecx, ecx', 'lea rsi, [0x0000d1a0]', 'mov edi, eax', 'mov rdx, r11', 'call sym.imp._dbus_timeout_new', 'mov r11, qword [var_8h]', 'mov rbp, rax', 'mov qword [r11 + 0x40], rax', 'test rax, rax', 'je 0xed40', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.000123c0', 'mov rsi, rbp', 'mov rdi, rax', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x184a0', 'mov dword [r12], 1', 'mov qword [r12 + 0x28], rbx', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov qword [r13 + 0x60], rax', 'test rax, rax', 'je 0x12cc8', 'lea rdx, str.Memory_allocation_failure_in_message_bus', 'lea rsi, str.org.freedesktop.DBus.Error.NoMemory', 'mov rdi, rbp', 'call sym.imp.dbus_set_error_const', 'jmp 0x12c51', 'mov rdi, r15', 'call fcn.00015e50', 'endbr64', 'sub dword [rdi], 1', 'jne 0x15e60', 'ret', 'jmp 0x126aa', 'sub dword [r13], 1', 'je 0x12859', 'mov eax, dword [0x0003d010]', 'xor r13d, r13d', 'test eax, eax', 'jns 0x12820', 'mov rax, qword [var_b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x130f6', 'add rsp, 0xc8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, r15', 'mov qword [0x0003dab8], rax', 'call sym.imp._dbus_string_free', 'mov rdi, rbx', 'call sym.imp._dbus_string_free', 'mov rdi, qword [0x0003dab8]', 'test rdi, rdi', 'je 0xc9a0', 'call fcn.000123c0', 'lea r12, [s]', 'mov rdi, r12', 'mov rbp, rax', 'call sym.imp.dbus_error_init', 'lea rsi, [0x0003dab4]', 'mov rcx, r12', 'mov edx, 1', 'lea rdi, [rsi - 4]', 'call sym.imp._dbus_socketpair', 'test eax, eax', 'je 0xc921', 'mov esi, 1', 'xor r9d, r9d', 'xor r8d, r8d', 'mov edx, 1', 'mov edi, dword [0x0003dab0]', 'lea rcx, [0x00027790]', 'call sym.imp._dbus_watch_new', 'mov rsi, rax', 'test rax, rax', 'je 0xc8fe', 'mov rdi, rbp', 'call fcn.000282b0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 8', 'call sym.imp._dbus_watch_get_pollable', 'mov rdi, qword [rbx + 8]', 'mov esi, eax', 'mov r13d, eax', 'call sym.imp._dbus_hash_table_lookup_int', 'mov r14, rax', 'test rax, rax', 'je 0x283a0', 'mov rdi, rbp', 'call sym.imp._dbus_watch_ref', 'mov rdi, r14', 'mov rsi, rax', 'call sym.imp._dbus_list_append', 'mov r12d, eax', 'test eax, eax', 'je 0x28360', 'mov rdi, r14', 'call sym.imp._dbus_list_length_is_one', 'test eax, eax', 'je 0x28378', 'lea rsi, [rbx + 0x10]', 'lea rdi, [rbx + 8]', 'mov ecx, r13d', 'mov rdx, r14', 'call fcn.00028040', 'push r15', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdx', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x28110', 'mov rdi, rbp', 'xor r15d, r15d', 'xor r14d, r14d', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'jmp 0x28082', 'test rbx, rbx', 'je 0x280c0', 'mov rdi, qword [r13]', 'mov rax, qword [rdi]', 'test r15d, r15d', 'je 0x280f0', 'mov rax, qword [rax + 0x20]', 'add rsp, 8', 'mov esi, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp rax', 'mov eax, dword [canary]', 'mov dword [var_ch], eax', 'jmp 0x287e5', 'cmp qword [rbp + 0x30], 0', 'je 0x28808', 'mov rax, qword [var_278h]', 'xor rax, qword fs:[0x28]', 'jne 0x28bbc', 'mov eax, dword [var_ch]', 'add rsp, 0x288', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp dword [rbp + 0x2c], ebx', 'jne 0x28bf0', 'mov esi, 1', 'mov rdi, rbp', 'call fcn.00028660', 'endbr64', 'push r15', 'push r14', 'mov r14d, esi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x288', 'mov rax, qword fs:[0x28]', 'mov qword [var_278h], rax', 'xor eax, eax', 'mov eax, dword [rdi + 0x2c]', 'mov rdi, qword [rdi + 8]', 'mov dword [var_8h], eax', 'call sym.imp._dbus_hash_table_get_n_entries', 'test eax, eax', 'jne 0x286ad', 'mov esi, dword [rbp + 0x28]', 'mov r13, 0xffffffffffffffff', 'test esi, esi', 'jg 0x2887a', 'lea rsi, [var_40h]', 'lea rdi, [var_38h]', 'call sym.imp._dbus_get_monotonic_time']"
751,dbus-daemon,548,"['call sym.imp._dbus_get_monotonic_time', 'jmp 0x1a40c', 'add rsp, 0x28', 'mov eax, r14d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'setne r13b', 'jmp 0x13583', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x139b8', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'jne 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'mov edi, 0x50', 'call sym.imp.dbus_malloc0', 'mov r13, rax', 'test rax, rax', 'je 0xf682', 'mov qword [rax + 8], rbx', 'mov rdi, r12', 'mov dword [rax], 1', 'mov qword [var_8h], rax', 'call sym.imp._dbus_strdup', 'mov r11, qword [var_8h]', 'mov qword [r11 + 0x10], rax', 'test rax, rax', 'je 0xed40', 'mov rax, qword [var_20h]', 'test rax, rax', 'je 0xed80', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.00012410', 'endbr64', 'mov eax, dword [rdi + 0xb8]', 'ret', 'mov r11, qword [var_8h]', 'xor ecx, ecx', 'lea rsi, [0x0000d1a0]', 'mov edi, eax', 'mov rdx, r11', 'call sym.imp._dbus_timeout_new', 'mov r11, qword [var_8h]', 'mov rbp, rax', 'mov qword [r11 + 0x40], rax', 'test rax, rax', 'je 0xed40', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.000123c0', 'mov rsi, rbp', 'mov rdi, rax', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x184a0', 'mov dword [r12], 1', 'mov qword [r12 + 0x28], rbx', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov qword [r13 + 0x60], rax', 'test rax, rax', 'je 0x12cc8', 'lea rdx, str.Memory_allocation_failure_in_message_bus', 'lea rsi, str.org.freedesktop.DBus.Error.NoMemory', 'mov rdi, rbp', 'call sym.imp.dbus_set_error_const', 'jmp 0x12c51', 'mov rdi, r15', 'call fcn.00015e50', 'endbr64', 'sub dword [rdi], 1', 'jne 0x15e60', 'ret', 'jmp 0x126aa', 'sub dword [r13], 1', 'je 0x12859', 'mov eax, dword [0x0003d010]', 'xor r13d, r13d', 'test eax, eax', 'jns 0x12820', 'mov rax, qword [var_b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x130f6', 'add rsp, 0xc8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, r15', 'mov qword [0x0003dab8], rax', 'call sym.imp._dbus_string_free', 'mov rdi, rbx', 'call sym.imp._dbus_string_free', 'mov rdi, qword [0x0003dab8]', 'test rdi, rdi', 'je 0xc9a0', 'call fcn.000123c0', 'lea r12, [s]', 'mov rdi, r12', 'mov rbp, rax', 'call sym.imp.dbus_error_init', 'lea rsi, [0x0003dab4]', 'mov rcx, r12', 'mov edx, 1', 'lea rdi, [rsi - 4]', 'call sym.imp._dbus_socketpair', 'test eax, eax', 'je 0xc921', 'mov esi, 1', 'xor r9d, r9d', 'xor r8d, r8d', 'mov edx, 1', 'mov edi, dword [0x0003dab0]', 'lea rcx, [0x00027790]', 'call sym.imp._dbus_watch_new', 'mov rsi, rax', 'test rax, rax', 'je 0xc8fe', 'mov rdi, rbp', 'call fcn.000282b0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 8', 'call sym.imp._dbus_watch_get_pollable', 'mov rdi, qword [rbx + 8]', 'mov esi, eax', 'mov r13d, eax', 'call sym.imp._dbus_hash_table_lookup_int', 'mov r14, rax', 'test rax, rax', 'je 0x283a0', 'mov rdi, rbp', 'call sym.imp._dbus_watch_ref', 'mov rdi, r14', 'mov rsi, rax', 'call sym.imp._dbus_list_append', 'mov r12d, eax', 'test eax, eax', 'je 0x28360', 'mov rdi, r14', 'call sym.imp._dbus_list_length_is_one', 'test eax, eax', 'je 0x28378', 'lea rsi, [rbx + 0x10]', 'lea rdi, [rbx + 8]', 'mov ecx, r13d', 'mov rdx, r14', 'call fcn.00028040', 'push r15', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdx', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x28110', 'mov rdi, rbp', 'xor r15d, r15d', 'xor r14d, r14d', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'jmp 0x28082', 'test rbx, rbx', 'je 0x280c0', 'mov rdi, qword [r13]', 'mov rax, qword [rdi]', 'test r15d, r15d', 'je 0x280f0', 'mov rax, qword [rax + 0x20]', 'add rsp, 8', 'mov esi, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp rax', 'mov rdi, r13', 'call sym.imp._dbus_hash_iter_next', 'test eax, eax', 'jne 0x28ab4', 'mov dword [var_ch], 1', 'jmp 0x28723', 'mov ecx, dword [rbp + 0x28]', 'mov r14d, dword [rbp + 0x20]', 'test ecx, ecx', 'jg 0x28945', 'lea rdi, [var_38h]', 'lea rsi, [var_40h]', 'call sym.imp._dbus_get_monotonic_time']"
752,dbus-daemon,10103,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'add dword [rbx + 0x20], 1', 'mov eax, 1', 'add dword [rbx + 0x28], 1', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x1875e', 'mov rdx, r12', 'lea rsi, [0x00018060]', 'mov rdi, r12', 'mov r13d, 1', 'call sym.imp._dbus_connection_set_pending_fds_function', 'mov rsi, qword [rbp + 8]', 'lea rdi, [r14 + 0x18]', 'call sym.imp._dbus_list_append_link', 'add dword [r14 + 0x20], 1', 'mov rdi, r12', 'call sym.imp.dbus_connection_ref', 'mov rdi, r14', 'call fcn.000184f0', 'endbr64', 'push r14', 'mov esi, 0xffffffff', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x30', 'mov rax, qword fs:[0x28]', 'mov qword [var_28h], rax', 'xor eax, eax', 'cmp qword [rdi + 0x18], 0', 'je 0x1861a', 'lea rsi, [var_20h]', 'lea rdi, [var_18h]', 'call sym.imp._dbus_get_monotonic_time']"
753,dbus-daemon,159,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'add dword [rbx + 0x20], 1', 'mov eax, 1', 'add dword [rbx + 0x28], 1', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r11, qword [var_8h]', 'test eax, eax', 'mov r8d, eax', 'je 0xf0f0', 'or byte [r11 + 0x48], 1', 'lea rdi, [r11 + 0x28]', 'mov rsi, r14', 'mov qword [var_8h], r11', 'call sym.imp._dbus_list_append', 'mov r11, qword [var_8h]', 'test eax, eax', 'mov r8d, eax', 'je 0xf0f0', 'mov rax, qword [r11 + 8]', 'add dword [r11 + 0x30], 1', 'mov rdx, r11', 'mov qword [var_8h], r11', 'add dword [rax + 0x28], 1', 'mov rsi, qword [r11 + 0x10]', 'mov rdi, qword [rbx + 0x10]', 'call sym.imp._dbus_hash_table_insert_string', 'mov r11, qword [var_8h]', 'test eax, eax', 'je 0xf489', 'mov rdi, qword [var_18h]', 'mov rdx, r11', 'lea rcx, [0x0000e0d0]', 'lea rsi, [0x0000d250]', 'mov qword [var_8h], r11', 'call fcn.0001a340', 'endbr64', 'push r14', 'mov r14, rcx', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x1a3bd', 'mov qword [rax], r13', 'lea rdi, [rbx + 0x10]', 'mov rsi, rax', 'mov rbp, rax', 'mov qword [rax + 0x10], r12', 'mov qword [rax + 8], r14', 'call sym.imp._dbus_list_prepend', 'test eax, eax', 'je 0x1a3a0', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov r14d, eax', 'test eax, eax', 'je 0x1a5e0', 'mov qword [rbp], rbx', 'lea rsi, [rbx + 8]', 'mov rdi, rbx', 'mov r14d, 1', 'mov qword [rbp + 8], r12', 'call sym.imp._dbus_get_monotonic_time']"
754,dbus-daemon,84,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'add dword [rbx + 0x20], 1', 'mov eax, 1', 'add dword [rbx + 0x28], 1', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x20bf0', 'pop rbx', 'mov rax, r12', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov qword [r12 + 0x48], rax', 'test rax, rax', 'je 0x184aa', 'mov rbp, qword [r12 + 0x38]', 'mov rdi, rbx', 'call fcn.000123c0', 'endbr64', 'mov rax, qword [rdi + 0x50]', 'ret', 'mov rdi, rax', 'mov rsi, rbp', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time']"
755,dbus-daemon,381,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'add dword [rbx + 0x20], 1', 'mov eax, 1', 'add dword [rbx + 0x28], 1', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x184a0', 'mov dword [r12], 1', 'mov qword [r12 + 0x28], rbx', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov qword [r13 + 0x60], rax', 'test rax, rax', 'je 0x12cc8', 'lea rdx, str.Memory_allocation_failure_in_message_bus', 'lea rsi, str.org.freedesktop.DBus.Error.NoMemory', 'mov rdi, rbp', 'call sym.imp.dbus_set_error_const', 'jmp 0x12c51', 'mov rdi, r15', 'call fcn.00015e50', 'endbr64', 'sub dword [rdi], 1', 'jne 0x15e60', 'ret', 'jmp 0x126aa', 'sub dword [r13], 1', 'je 0x12859', 'mov eax, dword [0x0003d010]', 'xor r13d, r13d', 'test eax, eax', 'jns 0x12820', 'mov rax, qword [var_b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x130f6', 'add rsp, 0xc8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, r15', 'mov qword [0x0003dab8], rax', 'call sym.imp._dbus_string_free', 'mov rdi, rbx', 'call sym.imp._dbus_string_free', 'mov rdi, qword [0x0003dab8]', 'test rdi, rdi', 'je 0xc9a0', 'call fcn.000123c0', 'lea r12, [s]', 'mov rdi, r12', 'mov rbp, rax', 'call sym.imp.dbus_error_init', 'lea rsi, [0x0003dab4]', 'mov rcx, r12', 'mov edx, 1', 'lea rdi, [rsi - 4]', 'call sym.imp._dbus_socketpair', 'test eax, eax', 'je 0xc921', 'mov esi, 1', 'xor r9d, r9d', 'xor r8d, r8d', 'mov edx, 1', 'mov edi, dword [0x0003dab0]', 'lea rcx, [0x00027790]', 'call sym.imp._dbus_watch_new', 'mov rsi, rax', 'test rax, rax', 'je 0xc8fe', 'mov rdi, rbp', 'call fcn.000282b0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 8', 'call sym.imp._dbus_watch_get_pollable', 'mov rdi, qword [rbx + 8]', 'mov esi, eax', 'mov r13d, eax', 'call sym.imp._dbus_hash_table_lookup_int', 'mov r14, rax', 'test rax, rax', 'je 0x283a0', 'mov rdi, rbp', 'call sym.imp._dbus_watch_ref', 'mov rdi, r14', 'mov rsi, rax', 'call sym.imp._dbus_list_append', 'mov r12d, eax', 'test eax, eax', 'je 0x28360', 'mov rdi, r14', 'call sym.imp._dbus_list_length_is_one', 'test eax, eax', 'je 0x28378', 'lea rsi, [rbx + 0x10]', 'lea rdi, [rbx + 8]', 'mov ecx, r13d', 'mov rdx, r14', 'call fcn.00028040', 'push r15', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdx', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x28110', 'mov rdi, rbp', 'xor r15d, r15d', 'xor r14d, r14d', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'jmp 0x28082', 'test rbx, rbx', 'je 0x280c0', 'mov rdi, qword [r13]', 'mov rax, qword [rdi]', 'test r15d, r15d', 'je 0x280f0', 'mov rax, qword [rax + 0x20]', 'add rsp, 8', 'mov esi, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp rax', 'mov eax, dword [canary]', 'mov dword [var_ch], eax', 'jmp 0x287e5', 'cmp qword [rbp + 0x30], 0', 'je 0x28808', 'mov rax, qword [var_278h]', 'xor rax, qword fs:[0x28]', 'jne 0x28bbc', 'mov eax, dword [var_ch]', 'add rsp, 0x288', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp dword [rbp + 0x2c], ebx', 'jne 0x28bf0', 'mov esi, 1', 'mov rdi, rbp', 'call fcn.00028660', 'endbr64', 'push r15', 'push r14', 'mov r14d, esi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x288', 'mov rax, qword fs:[0x28]', 'mov qword [var_278h], rax', 'xor eax, eax', 'mov eax, dword [rdi + 0x2c]', 'mov rdi, qword [rdi + 8]', 'mov dword [var_8h], eax', 'call sym.imp._dbus_hash_table_get_n_entries', 'test eax, eax', 'jne 0x286ad', 'mov esi, dword [rbp + 0x28]', 'mov r13, 0xffffffffffffffff', 'test esi, esi', 'jg 0x2887a', 'lea rsi, [var_40h]', 'lea rdi, [var_38h]', 'call sym.imp._dbus_get_monotonic_time']"
756,dbus-daemon,351,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'add dword [rbx + 0x20], 1', 'mov eax, 1', 'add dword [rbx + 0x28], 1', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x184a0', 'mov dword [r12], 1', 'mov qword [r12 + 0x28], rbx', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov qword [r13 + 0x60], rax', 'test rax, rax', 'je 0x12cc8', 'lea rdx, str.Memory_allocation_failure_in_message_bus', 'lea rsi, str.org.freedesktop.DBus.Error.NoMemory', 'mov rdi, rbp', 'call sym.imp.dbus_set_error_const', 'jmp 0x12c51', 'mov rdi, r15', 'call fcn.00015e50', 'endbr64', 'sub dword [rdi], 1', 'jne 0x15e60', 'ret', 'jmp 0x126aa', 'sub dword [r13], 1', 'je 0x12859', 'mov eax, dword [0x0003d010]', 'xor r13d, r13d', 'test eax, eax', 'jns 0x12820', 'mov rax, qword [var_b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x130f6', 'add rsp, 0xc8', 'mov rax, r13', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rdi, r15', 'mov qword [0x0003dab8], rax', 'call sym.imp._dbus_string_free', 'mov rdi, rbx', 'call sym.imp._dbus_string_free', 'mov rdi, qword [0x0003dab8]', 'test rdi, rdi', 'je 0xc9a0', 'call fcn.000123c0', 'lea r12, [s]', 'mov rdi, r12', 'mov rbp, rax', 'call sym.imp.dbus_error_init', 'lea rsi, [0x0003dab4]', 'mov rcx, r12', 'mov edx, 1', 'lea rdi, [rsi - 4]', 'call sym.imp._dbus_socketpair', 'test eax, eax', 'je 0xc921', 'mov esi, 1', 'xor r9d, r9d', 'xor r8d, r8d', 'mov edx, 1', 'mov edi, dword [0x0003dab0]', 'lea rcx, [0x00027790]', 'call sym.imp._dbus_watch_new', 'mov rsi, rax', 'test rax, rax', 'je 0xc8fe', 'mov rdi, rbp', 'call fcn.000282b0', 'endbr64', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov rbp, rsi', 'push rbx', 'mov rbx, rdi', 'mov rdi, rsi', 'sub rsp, 8', 'call sym.imp._dbus_watch_get_pollable', 'mov rdi, qword [rbx + 8]', 'mov esi, eax', 'mov r13d, eax', 'call sym.imp._dbus_hash_table_lookup_int', 'mov r14, rax', 'test rax, rax', 'je 0x283a0', 'mov rdi, rbp', 'call sym.imp._dbus_watch_ref', 'mov rdi, r14', 'mov rsi, rax', 'call sym.imp._dbus_list_append', 'mov r12d, eax', 'test eax, eax', 'je 0x28360', 'mov rdi, r14', 'call sym.imp._dbus_list_length_is_one', 'test eax, eax', 'je 0x28378', 'lea rsi, [rbx + 0x10]', 'lea rdi, [rbx + 8]', 'mov ecx, r13d', 'mov rdx, r14', 'call fcn.00028040', 'push r15', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdx', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x28110', 'mov rdi, rbp', 'xor r15d, r15d', 'xor r14d, r14d', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'jmp 0x28082', 'test rbx, rbx', 'je 0x280c0', 'mov rdi, qword [r13]', 'mov rax, qword [rdi]', 'test r15d, r15d', 'je 0x280f0', 'mov rax, qword [rax + 0x20]', 'add rsp, 8', 'mov esi, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp rax', 'mov rdi, r13', 'call sym.imp._dbus_hash_iter_next', 'test eax, eax', 'jne 0x28ab4', 'mov dword [var_ch], 1', 'jmp 0x28723', 'mov ecx, dword [rbp + 0x28]', 'mov r14d, dword [rbp + 0x20]', 'test ecx, ecx', 'jg 0x28945', 'lea rdi, [var_38h]', 'lea rsi, [var_40h]', 'call sym.imp._dbus_get_monotonic_time']"
757,dbus-daemon,10934,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbp + 0x18]', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'nop dword [rax]', 'test rbx, rbx', 'je 0x286bf', 'test r14d, r14d', 'je 0x28835', 'xor r13d, r13d', 'jmp 0x286d6', 'test byte [rbp + 0x38], 1', 'je 0x286ec', 'mov rdi, qword [rbp + 0x10]', 'lea rax, [var_70h]', 'mov ecx, r13d', 'mov edx, 0x40', 'mov qword [var_10h], rax', 'mov rsi, rax', 'mov rax, qword [rdi]', 'call qword [rax + 0x28]', 'mov dword [var_ch], 0', 'mov dword [canary], eax', 'movzx eax, byte [rbp + 0x38]', 'test al, 1', 'jne 0x28a8b', 'and eax, 0xfffffffe', 'lea r13, [var_40h]', 'mov rdi, qword [rbp + 8]', 'mov byte [rbp + 0x38], al', 'mov rsi, r13', 'call sym.imp._dbus_hash_iter_init', 'nop word [rax + rax]', 'mov rdi, r13', 'call sym.imp._dbus_hash_iter_next', 'test eax, eax', 'je 0x28b22', 'mov rdi, r13', 'xor ebx, ebx', 'call sym.imp._dbus_hash_iter_get_int_key', 'mov rdi, r13', 'mov dword [rsp], eax', 'call sym.imp._dbus_hash_iter_get_value', 'mov rdi, rax', 'mov r12, rax', 'call sym.imp._dbus_list_get_first_link', 'mov r14, rax', 'nop word [rax + rax]', 'test r14, r14', 'je 0x28aff', 'test ebx, ebx', 'je 0x28aa8', 'mov ecx, dword [rsp]', 'lea rdi, [rbp + 8]', 'lea rsi, [rbp + 0x10]', 'mov rdx, r12', 'call fcn.00028040', 'push r15', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdx', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x28110', 'mov rdi, rbp', 'xor r15d, r15d', 'xor r14d, r14d', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'jmp 0x28082', 'test rbx, rbx', 'je 0x280c0', 'mov rdi, qword [r13]', 'mov rax, qword [rdi]', 'test r15d, r15d', 'je 0x280f0', 'mov rax, qword [rax + 0x20]', 'add rsp, 8', 'mov esi, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp rax', 'jmp 0x2833c', 'add dword [rbx + 0x20], 1', 'mov r12d, 1', 'add dword [rbx + 0x24], 1', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'je 0x1bdf0', 'lea rdi, str.Unable_to_add_reload_watch_to_main_loop', 'call sym.imp._dbus_warn', 'mov rdi, qword [0x0003d468]', 'call sym.imp._dbus_watch_unref', 'mov qword [0x0003d468], 0', 'jmp 0x1bdaf', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rdi, r12', 'call sym.imp._dbus_list_clear', 'mov eax, 1', 'jmp 0x11ea8', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11ec4', 'add rsp, 0x18', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0x12c51', 'mov rdi, r15', 'call fcn.00015e50', 'endbr64', 'sub dword [rdi], 1', 'jne 0x15e60', 'jmp fcn.000156c0', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'lea rbx, [rdi + 0x20]', 'sub rsp, 8', 'cmp qword [rdi + 0x20], 0', 'jne 0x156f0', 'jmp 0x15720', 'mov rdi, qword [r12 + 0x28]', 'lea r13, [r12 + 0x40]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0x30]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0x38]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0xc8]', 'call sym.imp.dbus_free', 'mov rbp, qword [reloc.dbus_free]', 'xor edx, edx', 'mov rdi, r13', 'mov rsi, rbp', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x50]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'lea rsi, [0x00014050]', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x58]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'mov rsi, rbp', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x48]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'mov rsi, rbp', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'call sym.imp._dbus_list_clear', 'lea rdi, [r12 + 8]', 'call sym.imp._dbus_string_free', 'mov rdi, qword [r12 + 0x60]', 'test rdi, rdi', 'je 0x157d7', 'mov rdi, qword [r12 + 0xd8]', 'test rdi, rdi', 'je 0x157e9', 'add rsp, 8', 'mov rdi, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'jmp sym.imp.dbus_free', 'mov eax, 1', 'jmp 0x15b34', 'mov rcx, qword [var_58h]', 'xor rcx, qword fs:[0x28]', 'jne 0x15c15', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'jne 0x17420', 'mov rdi, r13', 'call sym.imp._dbus_string_free', 'mov rdi, qword [var_8h]', 'mov rdx, r14', 'mov rsi, rbx', 'call fcn.0002a170', 'endbr64', 'push r14', 'mov r14, rdi', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'nop dword [rax]', 'mov dword [rbp], 0', 'mov rdi, qword [r14]', 'call sym.imp.readdir', 'mov rbx, rax', 'test rax, rax', 'je 0x2a218', 'mov ebp, dword [rbp]', 'xor r12d, r12d', 'test ebp, ebp', 'je 0x2a1dd', 'mov edi, ebp', 'call sym.imp._dbus_strerror', 'mov edi, ebp', 'mov r14, rax', 'call sym.imp._dbus_error_from_errno', 'mov rcx, r14', 'mov rdi, r13', 'lea rdx, [0x00032347]', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.dbus_set_error', 'pop rbx', 'mov eax, r12d', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0xdf88', 'mov rdi, r15', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0xdf60', 'mov eax, 1', 'jmp 0xde2a', 'mov rdi, r14', 'mov dword [rsp], eax', 'call fcn.0002a260', 'mov eax, dword [rsp]', 'mov rdi, rbp', 'mov dword [rsp], eax', 'call sym.imp._dbus_string_free', 'mov rdi, r13', 'call sym.imp._dbus_string_free', 'mov eax, dword [rsp]', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0xdfbb', 'add rsp, 0xa8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'je 0xec80', 'mov r14, qword [r14 + 8]', 'cmp r14, qword [rbx + 0x30]', 'jne 0xec34', 'mov rdi, qword [rbx + 8]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov qword [var_20h], rax', 'jmp 0xead8', 'cmp qword [var_20h], 0', 'je 0xf420', 'mov eax, dword [var_8h]', 'test eax, eax', 'je 0xeb20', 'lea r14, [var_40h]', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp._dbus_string_init_const', 'mov rdi, qword [rbx + 0x20]', 'call fcn.00012380', 'endbr64', 'mov rax, qword [rdi + 0x70]', 'ret', 'mov rsi, r14', 'mov rdi, rax', 'call fcn.00023560', 'endbr64', 'mov rdi, qword [rdi + 0x10]', 'mov rsi, qword [rsi]', 'jmp sym.imp._dbus_hash_table_lookup_string', 'test rax, rax', 'je 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'mov edi, 0x50', 'call sym.imp.dbus_malloc0', 'mov r13, rax', 'test rax, rax', 'je 0xf682', 'mov qword [rax + 8], rbx', 'mov rdi, r12', 'mov dword [rax], 1', 'mov qword [var_8h], rax', 'call sym.imp._dbus_strdup', 'mov r11, qword [var_8h]', 'mov qword [r11 + 0x10], rax', 'test rax, rax', 'je 0xed40', 'mov rax, qword [var_20h]', 'test rax, rax', 'je 0xed80', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.00012410', 'endbr64', 'mov eax, dword [rdi + 0xb8]', 'ret', 'mov r11, qword [var_8h]', 'xor ecx, ecx', 'lea rsi, [0x0000d1a0]', 'mov edi, eax', 'mov rdx, r11', 'call sym.imp._dbus_timeout_new', 'mov r11, qword [var_8h]', 'mov rbp, rax', 'mov qword [r11 + 0x40], rax', 'test rax, rax', 'je 0xed40', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.000123c0', 'mov rsi, rbp', 'mov rdi, rax', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x1875e', 'mov rdx, r12', 'lea rsi, [0x00018060]', 'mov rdi, r12', 'mov r13d, 1', 'call sym.imp._dbus_connection_set_pending_fds_function', 'mov rsi, qword [rbp + 8]', 'lea rdi, [r14 + 0x18]', 'call sym.imp._dbus_list_append_link', 'add dword [r14 + 0x20], 1', 'mov rdi, r12', 'call sym.imp.dbus_connection_ref', 'mov rdi, r14', 'call fcn.000184f0', 'endbr64', 'push r14', 'mov esi, 0xffffffff', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x30', 'mov rax, qword fs:[0x28]', 'mov qword [var_28h], rax', 'xor eax, eax', 'cmp qword [rdi + 0x18], 0', 'je 0x1861a', 'lea rsi, [var_20h]', 'lea rdi, [var_18h]', 'call sym.imp._dbus_get_monotonic_time']"
758,dbus-daemon,815,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbp + 0x18]', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'nop dword [rax]', 'test rbx, rbx', 'je 0x286bf', 'test r14d, r14d', 'je 0x28835', 'xor r13d, r13d', 'jmp 0x286d6', 'test byte [rbp + 0x38], 1', 'je 0x286ec', 'mov rdi, qword [rbp + 0x10]', 'lea rax, [var_70h]', 'mov ecx, r13d', 'mov edx, 0x40', 'mov qword [var_10h], rax', 'mov rsi, rax', 'mov rax, qword [rdi]', 'call qword [rax + 0x28]', 'mov dword [var_ch], 0', 'mov dword [canary], eax', 'movzx eax, byte [rbp + 0x38]', 'test al, 1', 'jne 0x28a8b', 'and eax, 0xfffffffe', 'lea r13, [var_40h]', 'mov rdi, qword [rbp + 8]', 'mov byte [rbp + 0x38], al', 'mov rsi, r13', 'call sym.imp._dbus_hash_iter_init', 'nop word [rax + rax]', 'mov rdi, r13', 'call sym.imp._dbus_hash_iter_next', 'test eax, eax', 'je 0x28b22', 'mov rdi, r13', 'xor ebx, ebx', 'call sym.imp._dbus_hash_iter_get_int_key', 'mov rdi, r13', 'mov dword [rsp], eax', 'call sym.imp._dbus_hash_iter_get_value', 'mov rdi, rax', 'mov r12, rax', 'call sym.imp._dbus_list_get_first_link', 'mov r14, rax', 'nop word [rax + rax]', 'test r14, r14', 'je 0x28aff', 'test ebx, ebx', 'je 0x28aa8', 'mov ecx, dword [rsp]', 'lea rdi, [rbp + 8]', 'lea rsi, [rbp + 0x10]', 'mov rdx, r12', 'call fcn.00028040', 'push r15', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdx', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x28110', 'mov rdi, rbp', 'xor r15d, r15d', 'xor r14d, r14d', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'jmp 0x28082', 'test rbx, rbx', 'je 0x280c0', 'mov rdi, qword [r13]', 'mov rax, qword [rdi]', 'test r15d, r15d', 'je 0x280f0', 'mov rax, qword [rax + 0x20]', 'add rsp, 8', 'mov esi, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp rax', 'jmp 0x2833c', 'add dword [rbx + 0x20], 1', 'mov r12d, 1', 'add dword [rbx + 0x24], 1', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'je 0x1bdf0', 'lea rdi, str.Unable_to_add_reload_watch_to_main_loop', 'call sym.imp._dbus_warn', 'mov rdi, qword [0x0003d468]', 'call sym.imp._dbus_watch_unref', 'mov qword [0x0003d468], 0', 'jmp 0x1bdaf', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rdi, r12', 'call sym.imp._dbus_list_clear', 'mov eax, 1', 'jmp 0x11ea8', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11ec4', 'add rsp, 0x18', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0x12c51', 'mov rdi, r15', 'call fcn.00015e50', 'endbr64', 'sub dword [rdi], 1', 'jne 0x15e60', 'jmp fcn.000156c0', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'lea rbx, [rdi + 0x20]', 'sub rsp, 8', 'cmp qword [rdi + 0x20], 0', 'jne 0x156f0', 'jmp 0x15720', 'mov rdi, qword [r12 + 0x28]', 'lea r13, [r12 + 0x40]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0x30]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0x38]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0xc8]', 'call sym.imp.dbus_free', 'mov rbp, qword [reloc.dbus_free]', 'xor edx, edx', 'mov rdi, r13', 'mov rsi, rbp', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x50]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'lea rsi, [0x00014050]', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x58]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'mov rsi, rbp', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x48]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'mov rsi, rbp', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'call sym.imp._dbus_list_clear', 'lea rdi, [r12 + 8]', 'call sym.imp._dbus_string_free', 'mov rdi, qword [r12 + 0x60]', 'test rdi, rdi', 'je 0x157d7', 'mov rdi, qword [r12 + 0xd8]', 'test rdi, rdi', 'je 0x157e9', 'add rsp, 8', 'mov rdi, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'jmp sym.imp.dbus_free', 'mov eax, 1', 'jmp 0x15b34', 'mov rcx, qword [var_58h]', 'xor rcx, qword fs:[0x28]', 'jne 0x15c15', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'jne 0x17420', 'mov rdi, r13', 'call sym.imp._dbus_string_free', 'mov rdi, qword [var_8h]', 'mov rdx, r14', 'mov rsi, rbx', 'call fcn.0002a170', 'endbr64', 'push r14', 'mov r14, rdi', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'nop dword [rax]', 'mov dword [rbp], 0', 'mov rdi, qword [r14]', 'call sym.imp.readdir', 'mov rbx, rax', 'test rax, rax', 'je 0x2a218', 'mov ebp, dword [rbp]', 'xor r12d, r12d', 'test ebp, ebp', 'je 0x2a1dd', 'mov edi, ebp', 'call sym.imp._dbus_strerror', 'mov edi, ebp', 'mov r14, rax', 'call sym.imp._dbus_error_from_errno', 'mov rcx, r14', 'mov rdi, r13', 'lea rdx, [0x00032347]', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.dbus_set_error', 'pop rbx', 'mov eax, r12d', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0xdf88', 'mov rdi, r15', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0xdf60', 'mov eax, 1', 'jmp 0xde2a', 'mov rdi, r14', 'mov dword [rsp], eax', 'call fcn.0002a260', 'mov eax, dword [rsp]', 'mov rdi, rbp', 'mov dword [rsp], eax', 'call sym.imp._dbus_string_free', 'mov rdi, r13', 'call sym.imp._dbus_string_free', 'mov eax, dword [rsp]', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0xdfbb', 'add rsp, 0xa8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'je 0xec80', 'mov r14, qword [r14 + 8]', 'cmp r14, qword [rbx + 0x30]', 'jne 0xec34', 'mov rdi, qword [rbx + 8]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov qword [var_20h], rax', 'jmp 0xead8', 'cmp qword [var_20h], 0', 'je 0xf420', 'mov eax, dword [var_8h]', 'test eax, eax', 'je 0xeb20', 'lea r14, [var_40h]', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp._dbus_string_init_const', 'mov rdi, qword [rbx + 0x20]', 'call fcn.00012380', 'endbr64', 'mov rax, qword [rdi + 0x70]', 'ret', 'mov rsi, r14', 'mov rdi, rax', 'call fcn.00023560', 'endbr64', 'mov rdi, qword [rdi + 0x10]', 'mov rsi, qword [rsi]', 'jmp sym.imp._dbus_hash_table_lookup_string', 'test rax, rax', 'je 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'lea rdi, [rax + 0x28]', 'mov rsi, r14', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0xf0c0', 'mov rax, qword [r13 + 8]', 'add dword [r13 + 0x30], 1', 'mov rdx, r13', 'lea rcx, [0x0000e0d0]', 'mov rdi, qword [var_18h]', 'lea rsi, [0x0000d250]', 'add dword [rax + 0x28], 1', 'call fcn.0001a340', 'endbr64', 'push r14', 'mov r14, rcx', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x1a3bd', 'mov qword [rax], r13', 'lea rdi, [rbx + 0x10]', 'mov rsi, rax', 'mov rbp, rax', 'mov qword [rax + 0x10], r12', 'mov qword [rax + 8], r14', 'call sym.imp._dbus_list_prepend', 'test eax, eax', 'je 0x1a3a0', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov r14d, eax', 'test eax, eax', 'je 0x1a5e0', 'mov qword [rbp], rbx', 'lea rsi, [rbx + 8]', 'mov rdi, rbx', 'mov r14d, 1', 'mov qword [rbp + 8], r12', 'call sym.imp._dbus_get_monotonic_time']"
759,dbus-daemon,826,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbp + 0x18]', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'nop dword [rax]', 'test rbx, rbx', 'je 0x286bf', 'test r14d, r14d', 'je 0x28835', 'xor r13d, r13d', 'jmp 0x286d6', 'test byte [rbp + 0x38], 1', 'je 0x286ec', 'mov rdi, qword [rbp + 0x10]', 'lea rax, [var_70h]', 'mov ecx, r13d', 'mov edx, 0x40', 'mov qword [var_10h], rax', 'mov rsi, rax', 'mov rax, qword [rdi]', 'call qword [rax + 0x28]', 'mov dword [var_ch], 0', 'mov dword [canary], eax', 'movzx eax, byte [rbp + 0x38]', 'test al, 1', 'jne 0x28a8b', 'and eax, 0xfffffffe', 'lea r13, [var_40h]', 'mov rdi, qword [rbp + 8]', 'mov byte [rbp + 0x38], al', 'mov rsi, r13', 'call sym.imp._dbus_hash_iter_init', 'nop word [rax + rax]', 'mov rdi, r13', 'call sym.imp._dbus_hash_iter_next', 'test eax, eax', 'je 0x28b22', 'mov rdi, r13', 'xor ebx, ebx', 'call sym.imp._dbus_hash_iter_get_int_key', 'mov rdi, r13', 'mov dword [rsp], eax', 'call sym.imp._dbus_hash_iter_get_value', 'mov rdi, rax', 'mov r12, rax', 'call sym.imp._dbus_list_get_first_link', 'mov r14, rax', 'nop word [rax + rax]', 'test r14, r14', 'je 0x28aff', 'test ebx, ebx', 'je 0x28aa8', 'mov ecx, dword [rsp]', 'lea rdi, [rbp + 8]', 'lea rsi, [rbp + 0x10]', 'mov rdx, r12', 'call fcn.00028040', 'push r15', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdx', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x28110', 'mov rdi, rbp', 'xor r15d, r15d', 'xor r14d, r14d', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'jmp 0x28082', 'test rbx, rbx', 'je 0x280c0', 'mov rdi, qword [r13]', 'mov rax, qword [rdi]', 'test r15d, r15d', 'je 0x280f0', 'mov rax, qword [rax + 0x20]', 'add rsp, 8', 'mov esi, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp rax', 'jmp 0x2833c', 'add dword [rbx + 0x20], 1', 'mov r12d, 1', 'add dword [rbx + 0x24], 1', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'je 0x1bdf0', 'lea rdi, str.Unable_to_add_reload_watch_to_main_loop', 'call sym.imp._dbus_warn', 'mov rdi, qword [0x0003d468]', 'call sym.imp._dbus_watch_unref', 'mov qword [0x0003d468], 0', 'jmp 0x1bdaf', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rdi, r12', 'call sym.imp._dbus_list_clear', 'mov eax, 1', 'jmp 0x11ea8', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11ec4', 'add rsp, 0x18', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0x12c51', 'mov rdi, r15', 'call fcn.00015e50', 'endbr64', 'sub dword [rdi], 1', 'jne 0x15e60', 'jmp fcn.000156c0', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'lea rbx, [rdi + 0x20]', 'sub rsp, 8', 'cmp qword [rdi + 0x20], 0', 'jne 0x156f0', 'jmp 0x15720', 'mov rdi, qword [r12 + 0x28]', 'lea r13, [r12 + 0x40]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0x30]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0x38]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0xc8]', 'call sym.imp.dbus_free', 'mov rbp, qword [reloc.dbus_free]', 'xor edx, edx', 'mov rdi, r13', 'mov rsi, rbp', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x50]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'lea rsi, [0x00014050]', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x58]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'mov rsi, rbp', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x48]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'mov rsi, rbp', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'call sym.imp._dbus_list_clear', 'lea rdi, [r12 + 8]', 'call sym.imp._dbus_string_free', 'mov rdi, qword [r12 + 0x60]', 'test rdi, rdi', 'je 0x157d7', 'mov rdi, qword [r12 + 0xd8]', 'test rdi, rdi', 'je 0x157e9', 'add rsp, 8', 'mov rdi, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'jmp sym.imp.dbus_free', 'mov eax, 1', 'jmp 0x15b34', 'mov rcx, qword [var_58h]', 'xor rcx, qword fs:[0x28]', 'jne 0x15c15', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'jne 0x17420', 'mov rdi, r13', 'call sym.imp._dbus_string_free', 'mov rdi, qword [var_8h]', 'mov rdx, r14', 'mov rsi, rbx', 'call fcn.0002a170', 'endbr64', 'push r14', 'mov r14, rdi', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'nop dword [rax]', 'mov dword [rbp], 0', 'mov rdi, qword [r14]', 'call sym.imp.readdir', 'mov rbx, rax', 'test rax, rax', 'je 0x2a218', 'mov ebp, dword [rbp]', 'xor r12d, r12d', 'test ebp, ebp', 'je 0x2a1dd', 'mov edi, ebp', 'call sym.imp._dbus_strerror', 'mov edi, ebp', 'mov r14, rax', 'call sym.imp._dbus_error_from_errno', 'mov rcx, r14', 'mov rdi, r13', 'lea rdx, [0x00032347]', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.dbus_set_error', 'pop rbx', 'mov eax, r12d', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0xdf88', 'mov rdi, r15', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0xdf60', 'mov eax, 1', 'jmp 0xde2a', 'mov rdi, r14', 'mov dword [rsp], eax', 'call fcn.0002a260', 'mov eax, dword [rsp]', 'mov rdi, rbp', 'mov dword [rsp], eax', 'call sym.imp._dbus_string_free', 'mov rdi, r13', 'call sym.imp._dbus_string_free', 'mov eax, dword [rsp]', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0xdfbb', 'add rsp, 0xa8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'je 0xec80', 'mov r14, qword [r14 + 8]', 'cmp r14, qword [rbx + 0x30]', 'jne 0xec34', 'mov rdi, qword [rbx + 8]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov qword [var_20h], rax', 'jmp 0xead8', 'cmp qword [var_20h], 0', 'je 0xf420', 'mov eax, dword [var_8h]', 'test eax, eax', 'je 0xeb20', 'lea r14, [var_40h]', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp._dbus_string_init_const', 'mov rdi, qword [rbx + 0x20]', 'call fcn.00012380', 'endbr64', 'mov rax, qword [rdi + 0x70]', 'ret', 'mov rsi, r14', 'mov rdi, rax', 'call fcn.00023560', 'endbr64', 'mov rdi, qword [rdi + 0x10]', 'mov rsi, qword [rsi]', 'jmp sym.imp._dbus_hash_table_lookup_string', 'test rax, rax', 'je 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'mov edi, 0x50', 'call sym.imp.dbus_malloc0', 'mov r13, rax', 'test rax, rax', 'je 0xf682', 'mov qword [rax + 8], rbx', 'mov rdi, r12', 'mov dword [rax], 1', 'mov qword [var_8h], rax', 'call sym.imp._dbus_strdup', 'mov r11, qword [var_8h]', 'mov qword [r11 + 0x10], rax', 'test rax, rax', 'je 0xed40', 'mov rax, qword [var_20h]', 'test rax, rax', 'je 0xed80', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.00012410', 'endbr64', 'mov eax, dword [rdi + 0xb8]', 'ret', 'mov r11, qword [var_8h]', 'xor ecx, ecx', 'lea rsi, [0x0000d1a0]', 'mov edi, eax', 'mov rdx, r11', 'call sym.imp._dbus_timeout_new', 'mov r11, qword [var_8h]', 'mov rbp, rax', 'mov qword [r11 + 0x40], rax', 'test rax, rax', 'je 0xed40', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.000123c0', 'mov rsi, rbp', 'mov rdi, rax', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time']"
760,dbus-daemon,104,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbp + 0x18]', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'nop dword [rax]', 'test rbx, rbx', 'je 0x286bf', 'test r14d, r14d', 'je 0x28835', 'xor r13d, r13d', 'jmp 0x286d6', 'test byte [rbp + 0x38], 1', 'je 0x286ec', 'mov rdi, qword [rbp + 0x10]', 'lea rax, [var_70h]', 'mov ecx, r13d', 'mov edx, 0x40', 'mov qword [var_10h], rax', 'mov rsi, rax', 'mov rax, qword [rdi]', 'call qword [rax + 0x28]', 'mov dword [var_ch], 0', 'mov dword [canary], eax', 'movzx eax, byte [rbp + 0x38]', 'test al, 1', 'jne 0x28a8b', 'mov ecx, dword [rbp + 0x28]', 'mov r14d, dword [rbp + 0x20]', 'test ecx, ecx', 'jg 0x28945', 'mov eax, dword [canary]', 'test eax, eax', 'jle 0x287e5', 'cmp qword [rbp + 0x30], 0', 'je 0x28808', 'mov rax, qword [var_278h]', 'xor rax, qword fs:[0x28]', 'jne 0x28bbc', 'mov eax, dword [var_ch]', 'add rsp, 0x288', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp dword [rbp + 0x2c], ebx', 'jne 0x28bf0', 'mov esi, 1', 'mov rdi, rbp', 'call fcn.00028660', 'endbr64', 'push r15', 'push r14', 'mov r14d, esi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x288', 'mov rax, qword fs:[0x28]', 'mov qword [var_278h], rax', 'xor eax, eax', 'mov eax, dword [rdi + 0x2c]', 'mov rdi, qword [rdi + 8]', 'mov dword [var_8h], eax', 'call sym.imp._dbus_hash_table_get_n_entries', 'test eax, eax', 'jne 0x286ad', 'mov esi, dword [rbp + 0x28]', 'mov r13, 0xffffffffffffffff', 'test esi, esi', 'jg 0x2887a', 'lea rsi, [var_40h]', 'lea rdi, [var_38h]', 'call sym.imp._dbus_get_monotonic_time']"
761,dbus-daemon,55,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbp + 0x18]', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'nop dword [rax]', 'test rbx, rbx', 'je 0x286bf', 'test r14d, r14d', 'je 0x28835', 'xor r13d, r13d', 'jmp 0x286d6', 'test byte [rbp + 0x38], 1', 'je 0x286ec', 'mov rdi, qword [rbp + 0x10]', 'lea rax, [var_70h]', 'mov ecx, r13d', 'mov edx, 0x40', 'mov qword [var_10h], rax', 'mov rsi, rax', 'mov rax, qword [rdi]', 'call qword [rax + 0x28]', 'mov dword [var_ch], 0', 'mov dword [canary], eax', 'movzx eax, byte [rbp + 0x38]', 'test al, 1', 'jne 0x28a8b', 'mov ecx, dword [rbp + 0x28]', 'mov r14d, dword [rbp + 0x20]', 'test ecx, ecx', 'jg 0x28945', 'lea rdi, [var_38h]', 'lea rsi, [var_40h]', 'call sym.imp._dbus_get_monotonic_time']"
762,dbus-daemon,10925,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbp + 0x18]', 'call sym.imp._dbus_list_get_first_link', 'test rax, rax', 'je 0x28732', 'mov eax, dword [canary]', 'test eax, eax', 'jle 0x287e5', 'sub eax, 1', 'xor ebx, ebx', 'mov qword [var_20h], rax', 'lea rax, [rbp + 0x10]', 'mov qword [var_28h], rax', 'mov dword [var_1ch], ebx', 'cmp dword [rbp + 0x20], r14d', 'jne 0x287e5', 'mov eax, dword [var_8h]', 'cmp dword [rbp + 0x2c], eax', 'jne 0x287e5', 'mov rax, qword [var_10h]', 'mov r15d, dword [rax + rbx*8 + 4]', 'mov eax, r15d', 'and eax, 0x10', 'mov dword [canary], eax', 'je 0x28840', 'test r15d, r15d', 'je 0x28863', 'mov rax, qword [var_10h]', 'mov rdi, qword [rbp + 8]', 'mov esi, dword [rax + rbx*8]', 'call sym.imp._dbus_hash_table_lookup_int', 'mov qword [rsp], rax', 'test rax, rax', 'jne 0x289f0', 'mov rdi, rax', 'call sym.imp._dbus_list_get_first_link', 'mov r13, rax', 'test rax, rax', 'jne 0x28a1a', 'mov r12, qword [r13 + 0x10]', 'mov rax, qword [rsp]', 'mov r13, qword [r13 + 8]', 'mov rdi, r12', 'cmp r13, qword [rax]', 'jne 0x28a08', 'call sym.imp.dbus_watch_get_enabled', 'test eax, eax', 'je 0x28b58', 'mov eax, dword [canary]', 'test eax, eax', 'je 0x28863', 'mov rax, qword [var_10h]', 'mov rdx, qword [rsp]', 'lea rdi, [rbp + 8]', 'mov rsi, qword [var_28h]', 'mov ecx, dword [rax + rbx*8]', 'call fcn.00028040', 'push r15', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdx', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x28110', 'mov rdi, rbp', 'xor r15d, r15d', 'xor r14d, r14d', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'jmp 0x28082', 'test rbx, rbx', 'je 0x280c0', 'mov rdi, qword [r13]', 'mov rax, qword [rdi]', 'test r15d, r15d', 'je 0x280f0', 'mov rax, qword [rax + 0x18]', 'add rsp, 8', 'mov edx, r14d', 'mov esi, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp rax', 'jmp 0x2833c', 'add dword [rbx + 0x20], 1', 'mov r12d, 1', 'add dword [rbx + 0x24], 1', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'je 0x1bdf0', 'lea rdi, str.Unable_to_add_reload_watch_to_main_loop', 'call sym.imp._dbus_warn', 'mov rdi, qword [0x0003d468]', 'call sym.imp._dbus_watch_unref', 'mov qword [0x0003d468], 0', 'jmp 0x1bdaf', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rdi, r12', 'call sym.imp._dbus_list_clear', 'mov eax, 1', 'jmp 0x11ea8', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11ec4', 'add rsp, 0x18', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0x12c51', 'mov rdi, r15', 'call fcn.00015e50', 'endbr64', 'sub dword [rdi], 1', 'jne 0x15e60', 'jmp fcn.000156c0', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'lea rbx, [rdi + 0x20]', 'sub rsp, 8', 'cmp qword [rdi + 0x20], 0', 'jne 0x156f0', 'jmp 0x15720', 'mov rdi, qword [r12 + 0x28]', 'lea r13, [r12 + 0x40]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0x30]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0x38]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0xc8]', 'call sym.imp.dbus_free', 'mov rbp, qword [reloc.dbus_free]', 'xor edx, edx', 'mov rdi, r13', 'mov rsi, rbp', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x50]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'lea rsi, [0x00014050]', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x58]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'mov rsi, rbp', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x48]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'mov rsi, rbp', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'call sym.imp._dbus_list_clear', 'lea rdi, [r12 + 8]', 'call sym.imp._dbus_string_free', 'mov rdi, qword [r12 + 0x60]', 'test rdi, rdi', 'je 0x157d7', 'mov rdi, qword [r12 + 0xd8]', 'test rdi, rdi', 'je 0x157e9', 'add rsp, 8', 'mov rdi, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'jmp sym.imp.dbus_free', 'mov eax, 1', 'jmp 0x15b34', 'mov rcx, qword [var_58h]', 'xor rcx, qword fs:[0x28]', 'jne 0x15c15', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'jne 0x17420', 'mov rdi, r13', 'call sym.imp._dbus_string_free', 'mov rdi, qword [var_8h]', 'mov rdx, r14', 'mov rsi, rbx', 'call fcn.0002a170', 'endbr64', 'push r14', 'mov r14, rdi', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'nop dword [rax]', 'mov dword [rbp], 0', 'mov rdi, qword [r14]', 'call sym.imp.readdir', 'mov rbx, rax', 'test rax, rax', 'je 0x2a218', 'mov ebp, dword [rbp]', 'xor r12d, r12d', 'test ebp, ebp', 'je 0x2a1dd', 'mov edi, ebp', 'call sym.imp._dbus_strerror', 'mov edi, ebp', 'mov r14, rax', 'call sym.imp._dbus_error_from_errno', 'mov rcx, r14', 'mov rdi, r13', 'lea rdx, [0x00032347]', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.dbus_set_error', 'pop rbx', 'mov eax, r12d', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0xdf88', 'mov rdi, r15', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0xdf60', 'mov eax, 1', 'jmp 0xde2a', 'mov rdi, r14', 'mov dword [rsp], eax', 'call fcn.0002a260', 'mov eax, dword [rsp]', 'mov rdi, rbp', 'mov dword [rsp], eax', 'call sym.imp._dbus_string_free', 'mov rdi, r13', 'call sym.imp._dbus_string_free', 'mov eax, dword [rsp]', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0xdfbb', 'add rsp, 0xa8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'je 0xec80', 'mov r14, qword [r14 + 8]', 'cmp r14, qword [rbx + 0x30]', 'jne 0xec34', 'mov rdi, qword [rbx + 8]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov qword [var_20h], rax', 'jmp 0xead8', 'cmp qword [var_20h], 0', 'je 0xf420', 'mov eax, dword [var_8h]', 'test eax, eax', 'je 0xeb20', 'lea r14, [var_40h]', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp._dbus_string_init_const', 'mov rdi, qword [rbx + 0x20]', 'call fcn.00012380', 'endbr64', 'mov rax, qword [rdi + 0x70]', 'ret', 'mov rsi, r14', 'mov rdi, rax', 'call fcn.00023560', 'endbr64', 'mov rdi, qword [rdi + 0x10]', 'mov rsi, qword [rsi]', 'jmp sym.imp._dbus_hash_table_lookup_string', 'test rax, rax', 'je 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'mov edi, 0x50', 'call sym.imp.dbus_malloc0', 'mov r13, rax', 'test rax, rax', 'je 0xf682', 'mov qword [rax + 8], rbx', 'mov rdi, r12', 'mov dword [rax], 1', 'mov qword [var_8h], rax', 'call sym.imp._dbus_strdup', 'mov r11, qword [var_8h]', 'mov qword [r11 + 0x10], rax', 'test rax, rax', 'je 0xed40', 'mov rax, qword [var_20h]', 'test rax, rax', 'je 0xed80', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.00012410', 'endbr64', 'mov eax, dword [rdi + 0xb8]', 'ret', 'mov r11, qword [var_8h]', 'xor ecx, ecx', 'lea rsi, [0x0000d1a0]', 'mov edi, eax', 'mov rdx, r11', 'call sym.imp._dbus_timeout_new', 'mov r11, qword [var_8h]', 'mov rbp, rax', 'mov qword [r11 + 0x40], rax', 'test rax, rax', 'je 0xed40', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.000123c0', 'mov rsi, rbp', 'mov rdi, rax', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbx + 0x18]', 'mov rsi, rbp', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0x28550', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'test eax, eax', 'je 0x1875e', 'mov rdx, r12', 'lea rsi, [0x00018060]', 'mov rdi, r12', 'mov r13d, 1', 'call sym.imp._dbus_connection_set_pending_fds_function', 'mov rsi, qword [rbp + 8]', 'lea rdi, [r14 + 0x18]', 'call sym.imp._dbus_list_append_link', 'add dword [r14 + 0x20], 1', 'mov rdi, r12', 'call sym.imp.dbus_connection_ref', 'mov rdi, r14', 'call fcn.000184f0', 'endbr64', 'push r14', 'mov esi, 0xffffffff', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x30', 'mov rax, qword fs:[0x28]', 'mov qword [var_28h], rax', 'xor eax, eax', 'cmp qword [rdi + 0x18], 0', 'je 0x1861a', 'lea rsi, [var_20h]', 'lea rdi, [var_18h]', 'call sym.imp._dbus_get_monotonic_time']"
763,dbus-daemon,806,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbp + 0x18]', 'call sym.imp._dbus_list_get_first_link', 'test rax, rax', 'je 0x28732', 'mov eax, dword [canary]', 'test eax, eax', 'jle 0x287e5', 'sub eax, 1', 'xor ebx, ebx', 'mov qword [var_20h], rax', 'lea rax, [rbp + 0x10]', 'mov qword [var_28h], rax', 'mov dword [var_1ch], ebx', 'cmp dword [rbp + 0x20], r14d', 'jne 0x287e5', 'mov eax, dword [var_8h]', 'cmp dword [rbp + 0x2c], eax', 'jne 0x287e5', 'mov rax, qword [var_10h]', 'mov r15d, dword [rax + rbx*8 + 4]', 'mov eax, r15d', 'and eax, 0x10', 'mov dword [canary], eax', 'je 0x28840', 'test r15d, r15d', 'je 0x28863', 'mov rax, qword [var_10h]', 'mov rdi, qword [rbp + 8]', 'mov esi, dword [rax + rbx*8]', 'call sym.imp._dbus_hash_table_lookup_int', 'mov qword [rsp], rax', 'test rax, rax', 'jne 0x289f0', 'mov rdi, rax', 'call sym.imp._dbus_list_get_first_link', 'mov r13, rax', 'test rax, rax', 'jne 0x28a1a', 'mov r12, qword [r13 + 0x10]', 'mov rax, qword [rsp]', 'mov r13, qword [r13 + 8]', 'mov rdi, r12', 'cmp r13, qword [rax]', 'jne 0x28a08', 'call sym.imp.dbus_watch_get_enabled', 'test eax, eax', 'je 0x28b58', 'mov eax, dword [canary]', 'test eax, eax', 'je 0x28863', 'mov rax, qword [var_10h]', 'mov rdx, qword [rsp]', 'lea rdi, [rbp + 8]', 'mov rsi, qword [var_28h]', 'mov ecx, dword [rax + rbx*8]', 'call fcn.00028040', 'push r15', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdx', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x28110', 'mov rdi, rbp', 'xor r15d, r15d', 'xor r14d, r14d', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'jmp 0x28082', 'test rbx, rbx', 'je 0x280c0', 'mov rdi, qword [r13]', 'mov rax, qword [rdi]', 'test r15d, r15d', 'je 0x280f0', 'mov rax, qword [rax + 0x18]', 'add rsp, 8', 'mov edx, r14d', 'mov esi, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp rax', 'jmp 0x2833c', 'add dword [rbx + 0x20], 1', 'mov r12d, 1', 'add dword [rbx + 0x24], 1', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'je 0x1bdf0', 'lea rdi, str.Unable_to_add_reload_watch_to_main_loop', 'call sym.imp._dbus_warn', 'mov rdi, qword [0x0003d468]', 'call sym.imp._dbus_watch_unref', 'mov qword [0x0003d468], 0', 'jmp 0x1bdaf', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rdi, r12', 'call sym.imp._dbus_list_clear', 'mov eax, 1', 'jmp 0x11ea8', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11ec4', 'add rsp, 0x18', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0x12c51', 'mov rdi, r15', 'call fcn.00015e50', 'endbr64', 'sub dword [rdi], 1', 'jne 0x15e60', 'jmp fcn.000156c0', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'lea rbx, [rdi + 0x20]', 'sub rsp, 8', 'cmp qword [rdi + 0x20], 0', 'jne 0x156f0', 'jmp 0x15720', 'mov rdi, qword [r12 + 0x28]', 'lea r13, [r12 + 0x40]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0x30]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0x38]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0xc8]', 'call sym.imp.dbus_free', 'mov rbp, qword [reloc.dbus_free]', 'xor edx, edx', 'mov rdi, r13', 'mov rsi, rbp', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x50]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'lea rsi, [0x00014050]', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x58]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'mov rsi, rbp', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x48]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'mov rsi, rbp', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'call sym.imp._dbus_list_clear', 'lea rdi, [r12 + 8]', 'call sym.imp._dbus_string_free', 'mov rdi, qword [r12 + 0x60]', 'test rdi, rdi', 'je 0x157d7', 'mov rdi, qword [r12 + 0xd8]', 'test rdi, rdi', 'je 0x157e9', 'add rsp, 8', 'mov rdi, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'jmp sym.imp.dbus_free', 'mov eax, 1', 'jmp 0x15b34', 'mov rcx, qword [var_58h]', 'xor rcx, qword fs:[0x28]', 'jne 0x15c15', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'jne 0x17420', 'mov rdi, r13', 'call sym.imp._dbus_string_free', 'mov rdi, qword [var_8h]', 'mov rdx, r14', 'mov rsi, rbx', 'call fcn.0002a170', 'endbr64', 'push r14', 'mov r14, rdi', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'nop dword [rax]', 'mov dword [rbp], 0', 'mov rdi, qword [r14]', 'call sym.imp.readdir', 'mov rbx, rax', 'test rax, rax', 'je 0x2a218', 'mov ebp, dword [rbp]', 'xor r12d, r12d', 'test ebp, ebp', 'je 0x2a1dd', 'mov edi, ebp', 'call sym.imp._dbus_strerror', 'mov edi, ebp', 'mov r14, rax', 'call sym.imp._dbus_error_from_errno', 'mov rcx, r14', 'mov rdi, r13', 'lea rdx, [0x00032347]', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.dbus_set_error', 'pop rbx', 'mov eax, r12d', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0xdf88', 'mov rdi, r15', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0xdf60', 'mov eax, 1', 'jmp 0xde2a', 'mov rdi, r14', 'mov dword [rsp], eax', 'call fcn.0002a260', 'mov eax, dword [rsp]', 'mov rdi, rbp', 'mov dword [rsp], eax', 'call sym.imp._dbus_string_free', 'mov rdi, r13', 'call sym.imp._dbus_string_free', 'mov eax, dword [rsp]', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0xdfbb', 'add rsp, 0xa8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'je 0xec80', 'mov r14, qword [r14 + 8]', 'cmp r14, qword [rbx + 0x30]', 'jne 0xec34', 'mov rdi, qword [rbx + 8]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov qword [var_20h], rax', 'jmp 0xead8', 'cmp qword [var_20h], 0', 'je 0xf420', 'mov eax, dword [var_8h]', 'test eax, eax', 'je 0xeb20', 'lea r14, [var_40h]', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp._dbus_string_init_const', 'mov rdi, qword [rbx + 0x20]', 'call fcn.00012380', 'endbr64', 'mov rax, qword [rdi + 0x70]', 'ret', 'mov rsi, r14', 'mov rdi, rax', 'call fcn.00023560', 'endbr64', 'mov rdi, qword [rdi + 0x10]', 'mov rsi, qword [rsi]', 'jmp sym.imp._dbus_hash_table_lookup_string', 'test rax, rax', 'je 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'lea rdi, [rax + 0x28]', 'mov rsi, r14', 'call sym.imp._dbus_list_append', 'test eax, eax', 'je 0xf0c0', 'mov rax, qword [r13 + 8]', 'add dword [r13 + 0x30], 1', 'mov rdx, r13', 'lea rcx, [0x0000e0d0]', 'mov rdi, qword [var_18h]', 'lea rsi, [0x0000d250]', 'add dword [rax + 0x28], 1', 'call fcn.0001a340', 'endbr64', 'push r14', 'mov r14, rcx', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12, rdx', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x1a3bd', 'mov qword [rax], r13', 'lea rdi, [rbx + 0x10]', 'mov rsi, rax', 'mov rbp, rax', 'mov qword [rax + 0x10], r12', 'mov qword [rax + 8], r14', 'call sym.imp._dbus_list_prepend', 'test eax, eax', 'je 0x1a3a0', 'mov rdi, rbp', 'mov dword [var_ch], eax', 'call sym.imp.dbus_free', 'mov eax, dword [var_ch]', 'add rsp, 0x10', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov r14d, eax', 'test eax, eax', 'je 0x1a5e0', 'mov qword [rbp], rbx', 'lea rsi, [rbx + 8]', 'mov rdi, rbx', 'mov r14d, 1', 'mov qword [rbp + 8], r12', 'call sym.imp._dbus_get_monotonic_time']"
764,dbus-daemon,817,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbp + 0x18]', 'call sym.imp._dbus_list_get_first_link', 'test rax, rax', 'je 0x28732', 'mov eax, dword [canary]', 'test eax, eax', 'jle 0x287e5', 'sub eax, 1', 'xor ebx, ebx', 'mov qword [var_20h], rax', 'lea rax, [rbp + 0x10]', 'mov qword [var_28h], rax', 'mov dword [var_1ch], ebx', 'cmp dword [rbp + 0x20], r14d', 'jne 0x287e5', 'mov eax, dword [var_8h]', 'cmp dword [rbp + 0x2c], eax', 'jne 0x287e5', 'mov rax, qword [var_10h]', 'mov r15d, dword [rax + rbx*8 + 4]', 'mov eax, r15d', 'and eax, 0x10', 'mov dword [canary], eax', 'je 0x28840', 'test r15d, r15d', 'je 0x28863', 'mov rax, qword [var_10h]', 'mov rdi, qword [rbp + 8]', 'mov esi, dword [rax + rbx*8]', 'call sym.imp._dbus_hash_table_lookup_int', 'mov qword [rsp], rax', 'test rax, rax', 'jne 0x289f0', 'mov rdi, rax', 'call sym.imp._dbus_list_get_first_link', 'mov r13, rax', 'test rax, rax', 'jne 0x28a1a', 'mov r12, qword [r13 + 0x10]', 'mov rax, qword [rsp]', 'mov r13, qword [r13 + 8]', 'mov rdi, r12', 'cmp r13, qword [rax]', 'jne 0x28a08', 'call sym.imp.dbus_watch_get_enabled', 'test eax, eax', 'je 0x28b58', 'mov eax, dword [canary]', 'test eax, eax', 'je 0x28863', 'mov rax, qword [var_10h]', 'mov rdx, qword [rsp]', 'lea rdi, [rbp + 8]', 'mov rsi, qword [var_28h]', 'mov ecx, dword [rax + rbx*8]', 'call fcn.00028040', 'push r15', 'push r14', 'push r13', 'mov r13, rsi', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdx', 'push rbx', 'sub rsp, 8', 'test rdx, rdx', 'je 0x28110', 'mov rdi, rbp', 'xor r15d, r15d', 'xor r14d, r14d', 'call sym.imp._dbus_list_get_first_link', 'mov rbx, rax', 'jmp 0x28082', 'test rbx, rbx', 'je 0x280c0', 'mov rdi, qword [r13]', 'mov rax, qword [rdi]', 'test r15d, r15d', 'je 0x280f0', 'mov rax, qword [rax + 0x18]', 'add rsp, 8', 'mov edx, r14d', 'mov esi, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'jmp rax', 'jmp 0x2833c', 'add dword [rbx + 0x20], 1', 'mov r12d, 1', 'add dword [rbx + 0x24], 1', 'add rsp, 8', 'mov eax, r12d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'je 0x1bdf0', 'lea rdi, str.Unable_to_add_reload_watch_to_main_loop', 'call sym.imp._dbus_warn', 'mov rdi, qword [0x0003d468]', 'call sym.imp._dbus_watch_unref', 'mov qword [0x0003d468], 0', 'jmp 0x1bdaf', 'add rsp, 8', 'pop rbp', 'pop r12', 'ret', 'mov rdi, r12', 'call sym.imp._dbus_list_clear', 'mov eax, 1', 'jmp 0x11ea8', 'mov rcx, qword [var_8h]', 'xor rcx, qword fs:[0x28]', 'jne 0x11ec4', 'add rsp, 0x18', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0x12c51', 'mov rdi, r15', 'call fcn.00015e50', 'endbr64', 'sub dword [rdi], 1', 'jne 0x15e60', 'jmp fcn.000156c0', 'push r13', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'lea rbx, [rdi + 0x20]', 'sub rsp, 8', 'cmp qword [rdi + 0x20], 0', 'jne 0x156f0', 'jmp 0x15720', 'mov rdi, qword [r12 + 0x28]', 'lea r13, [r12 + 0x40]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0x30]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0x38]', 'call sym.imp.dbus_free', 'mov rdi, qword [r12 + 0xc8]', 'call sym.imp.dbus_free', 'mov rbp, qword [reloc.dbus_free]', 'xor edx, edx', 'mov rdi, r13', 'mov rsi, rbp', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x50]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'lea rsi, [0x00014050]', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x58]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'mov rsi, rbp', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'lea r13, [r12 + 0x48]', 'call sym.imp._dbus_list_clear', 'xor edx, edx', 'mov rsi, rbp', 'mov rdi, r13', 'call sym.imp._dbus_list_foreach', 'mov rdi, r13', 'call sym.imp._dbus_list_clear', 'lea rdi, [r12 + 8]', 'call sym.imp._dbus_string_free', 'mov rdi, qword [r12 + 0x60]', 'test rdi, rdi', 'je 0x157d7', 'mov rdi, qword [r12 + 0xd8]', 'test rdi, rdi', 'je 0x157e9', 'add rsp, 8', 'mov rdi, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'jmp sym.imp.dbus_free', 'mov eax, 1', 'jmp 0x15b34', 'mov rcx, qword [var_58h]', 'xor rcx, qword fs:[0x28]', 'jne 0x15c15', 'add rsp, 0x68', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'jne 0x17420', 'mov rdi, r13', 'call sym.imp._dbus_string_free', 'mov rdi, qword [var_8h]', 'mov rdx, r14', 'mov rsi, rbx', 'call fcn.0002a170', 'endbr64', 'push r14', 'mov r14, rdi', 'push r13', 'mov r13, rdx', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'nop dword [rax]', 'mov dword [rbp], 0', 'mov rdi, qword [r14]', 'call sym.imp.readdir', 'mov rbx, rax', 'test rax, rax', 'je 0x2a218', 'mov ebp, dword [rbp]', 'xor r12d, r12d', 'test ebp, ebp', 'je 0x2a1dd', 'mov edi, ebp', 'call sym.imp._dbus_strerror', 'mov edi, ebp', 'mov r14, rax', 'call sym.imp._dbus_error_from_errno', 'mov rcx, r14', 'mov rdi, r13', 'lea rdx, [0x00032347]', 'mov rsi, rax', 'xor eax, eax', 'call sym.imp.dbus_set_error', 'pop rbx', 'mov eax, r12d', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test eax, eax', 'je 0xdf88', 'mov rdi, r15', 'call sym.imp.dbus_error_is_set', 'test eax, eax', 'jne 0xdf60', 'mov eax, 1', 'jmp 0xde2a', 'mov rdi, r14', 'mov dword [rsp], eax', 'call fcn.0002a260', 'mov eax, dword [rsp]', 'mov rdi, rbp', 'mov dword [rsp], eax', 'call sym.imp._dbus_string_free', 'mov rdi, r13', 'call sym.imp._dbus_string_free', 'mov eax, dword [rsp]', 'mov rcx, qword [var_98h]', 'xor rcx, qword fs:[0x28]', 'jne 0xdfbb', 'add rsp, 0xa8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test eax, eax', 'je 0xec80', 'mov r14, qword [r14 + 8]', 'cmp r14, qword [rbx + 0x30]', 'jne 0xec34', 'mov rdi, qword [rbx + 8]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov qword [var_20h], rax', 'jmp 0xead8', 'cmp qword [var_20h], 0', 'je 0xf420', 'mov eax, dword [var_8h]', 'test eax, eax', 'je 0xeb20', 'lea r14, [var_40h]', 'mov rsi, r12', 'mov rdi, r14', 'call sym.imp._dbus_string_init_const', 'mov rdi, qword [rbx + 0x20]', 'call fcn.00012380', 'endbr64', 'mov rax, qword [rdi + 0x70]', 'ret', 'mov rsi, r14', 'mov rdi, rax', 'call fcn.00023560', 'endbr64', 'mov rdi, qword [rdi + 0x10]', 'mov rsi, qword [rsi]', 'jmp sym.imp._dbus_hash_table_lookup_string', 'test rax, rax', 'je 0xe9bd', 'mov edi, 0x18', 'call sym.imp.dbus_malloc0', 'mov r14, rax', 'test rax, rax', 'je 0xf150', 'mov eax, dword [var_8h]', 'mov qword [r14], r13', 'mov rdi, r13', 'mov dword [r14 + 0x10], eax', 'call sym.imp.dbus_message_ref', 'mov rax, qword [var_10h]', 'mov qword [r14 + 8], rax', 'test rax, rax', 'je 0xe9fc', 'mov rdi, qword [rbx + 0x10]', 'mov rsi, r12', 'call sym.imp._dbus_hash_table_lookup_string', 'mov r13, rax', 'test rax, rax', 'je 0xecb0', 'mov edi, 0x50', 'call sym.imp.dbus_malloc0', 'mov r13, rax', 'test rax, rax', 'je 0xf682', 'mov qword [rax + 8], rbx', 'mov rdi, r12', 'mov dword [rax], 1', 'mov qword [var_8h], rax', 'call sym.imp._dbus_strdup', 'mov r11, qword [var_8h]', 'mov qword [r11 + 0x10], rax', 'test rax, rax', 'je 0xed40', 'mov rax, qword [var_20h]', 'test rax, rax', 'je 0xed80', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.00012410', 'endbr64', 'mov eax, dword [rdi + 0xb8]', 'ret', 'mov r11, qword [var_8h]', 'xor ecx, ecx', 'lea rsi, [0x0000d1a0]', 'mov edi, eax', 'mov rdx, r11', 'call sym.imp._dbus_timeout_new', 'mov r11, qword [var_8h]', 'mov rbp, rax', 'mov qword [r11 + 0x40], rax', 'test rax, rax', 'je 0xed40', 'mov rdi, qword [rbx + 0x20]', 'mov qword [var_8h], r11', 'call fcn.000123c0', 'mov rsi, rbp', 'mov rdi, rax', 'call fcn.000284f0', 'endbr64', 'push r12', 'mov r12, rsi', 'push rbp', 'push rbx', 'mov rbx, rdi', 'mov edi, 0x18', 'sub rsp, 0x10', 'call sym.imp.dbus_malloc', 'test rax, rax', 'je 0x28569', 'mov qword [rax], r12', 'mov rbp, rax', 'lea rsi, [rax + 0x10]', 'lea rdi, [rax + 8]', 'call sym.imp._dbus_get_monotonic_time']"
765,dbus-daemon,79,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbp + 0x18]', 'call sym.imp._dbus_list_get_first_link', 'test rax, rax', 'je 0x28732', 'mov eax, dword [canary]', 'test eax, eax', 'jle 0x287e5', 'cmp qword [rbp + 0x30], 0', 'je 0x28808', 'mov rax, qword [var_278h]', 'xor rax, qword fs:[0x28]', 'jne 0x28bbc', 'mov eax, dword [var_ch]', 'add rsp, 0x288', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp dword [rbp + 0x2c], ebx', 'jne 0x28bf0', 'mov esi, 1', 'mov rdi, rbp', 'call fcn.00028660', 'endbr64', 'push r15', 'push r14', 'mov r14d, esi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x288', 'mov rax, qword fs:[0x28]', 'mov qword [var_278h], rax', 'xor eax, eax', 'mov eax, dword [rdi + 0x2c]', 'mov rdi, qword [rdi + 8]', 'mov dword [var_8h], eax', 'call sym.imp._dbus_hash_table_get_n_entries', 'test eax, eax', 'jne 0x286ad', 'mov esi, dword [rbp + 0x28]', 'mov r13, 0xffffffffffffffff', 'test esi, esi', 'jg 0x2887a', 'lea rsi, [var_40h]', 'lea rdi, [var_38h]', 'call sym.imp._dbus_get_monotonic_time']"
766,dbus-daemon,102,"['call sym.imp._dbus_get_monotonic_time', 'lea rdi, [rbp + 0x18]', 'call sym.imp._dbus_list_get_first_link', 'test rax, rax', 'je 0x28732', 'mov eax, dword [canary]', 'test eax, eax', 'jle 0x287e5', 'cmp qword [rbp + 0x30], 0', 'je 0x28808', 'mov rax, qword [var_278h]', 'xor rax, qword fs:[0x28]', 'jne 0x28bbc', 'mov eax, dword [var_ch]', 'add rsp, 0x288', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'cmp dword [rbp + 0x2c], ebx', 'jne 0x28bf0', 'mov esi, 1', 'mov rdi, rbp', 'call fcn.00028660', 'endbr64', 'push r15', 'push r14', 'mov r14d, esi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 0x288', 'mov rax, qword fs:[0x28]', 'mov qword [var_278h], rax', 'xor eax, eax', 'mov eax, dword [rdi + 0x2c]', 'mov rdi, qword [rdi + 8]', 'mov dword [var_8h], eax', 'call sym.imp._dbus_hash_table_get_n_entries', 'test eax, eax', 'jne 0x286ad', 'mov esi, dword [rbp + 0x28]', 'mov r13, 0xffffffffffffffff', 'test esi, esi', 'jg 0x2887a', 'test r14d, r14d', 'je 0x28835', 'xor r13d, r13d', 'jmp 0x286d6', 'test byte [rbp + 0x38], 1', 'je 0x286ec', 'mov rdi, qword [rbp + 0x10]', 'lea rax, [var_70h]', 'mov ecx, r13d', 'mov edx, 0x40', 'mov qword [var_10h], rax', 'mov rsi, rax', 'mov rax, qword [rdi]', 'call qword [rax + 0x28]', 'mov dword [var_ch], 0', 'mov dword [canary], eax', 'movzx eax, byte [rbp + 0x38]', 'test al, 1', 'jne 0x28a8b', 'mov ecx, dword [rbp + 0x28]', 'mov r14d, dword [rbp + 0x20]', 'test ecx, ecx', 'jg 0x28945', 'lea rdi, [var_38h]', 'lea rsi, [var_40h]', 'call sym.imp._dbus_get_monotonic_time']"
767,cabextract,374,"['call sym.imp.mktime', 'mov rsi, qword [var_58h]', 'mov rdi, r14', 'mov qword [var_a8h], rax', 'mov qword [var_a0h], rax', 'call sym.imp.utime', 'mov eax, dword [rbx + 0x14]', 'mov rdi, r14', 'mov edx, eax', 'and edx, 0x40', 'cmp edx, 1', 'sbb esi, esi', 'and esi, 0xffffffb7', 'add esi, 0x16d', 'mov edx, esi', 'or dl, 0x92', 'test al, 1', 'mov eax, dword [0x000092d8]', 'cmove esi, edx', 'not eax', 'and esi, eax', 'call sym.imp.chmod', 'jmp 0x329e', 'mov rdi, r14', 'call sym.imp.free', 'mov rax, qword [rsp]', 'mov rax, qword [rax]', 'mov qword [rsp], rax', 'test rax, rax', 'je 0x35a0', 'mov r13, qword [0x000092c0]', 'jmp 0x2ea8', 'mov rax, qword [rsp]', 'mov ecx, dword [rax + 0x14]', 'mov rbp, qword [rax + 8]', 'and ecx, 0x80', 'mov rdi, rbp', 'mov dword [errnum], ecx', 'mov ecx, dword [0x000092a4]', 'mov dword [var_10h], ecx', 'call sym.imp.strlen', 'mov r15, rax', 'lea rbx, [rax*4]', 'lea r12, [rbp + rax]', 'test r13, r13', 'je 0x3488', 'lea rdi, [rbx + 2]', 'call sym.imp.malloc', 'mov rbx, rax', 'test rax, rax', 'je 0x3560', 'mov r14, rax', 'jmp 0x2f3f', 'mov r10d, dword [errnum]', 'test r10d, r10d', 'jne 0x3070', 'mov r13, rbx', 'cmp rbp, r12', 'jae 0x31a5', 'mov byte [r13], 0', 'movzx eax, byte [rbx]', 'cmp al, 0x2f', 'je 0x31b5', 'cmp al, 0x5c', 'jne 0x31fa', 'test al, al', 'je 0x3216', 'mov rdi, qword [0x000092c8]', 'test rdi, rdi', 'je 0x3238', 'mov esi, dword [0x000092ac]', 'test esi, esi', 'jne 0x3518', 'mov ecx, dword [0x000092bc]', 'test ecx, ecx', 'je 0x34a8', 'mov edx, dword [0x000092a8]', 'test edx, edx', 'je 0x3708', 'mov eax, dword [0x000092b0]', 'test eax, eax', 'je 0x3b10', 'movzx eax, byte [r14 + 1]', 'lea rbx, [r14 + 1]', 'test al, al', 'je 0x37d0', 'mov rax, qword [0x000092f8]', 'mov rsi, qword [rsp]', 'mov rdx, r14', 'mov rdi, rax', 'call qword [rax + 0x28]', 'test eax, eax', 'je 0x3a50', 'mov rbx, qword [rsp]', 'mov rdi, qword [timeptr]', 'movsx eax, byte [rbx + 0x1a]', 'mov dword [var_b0h], eax', 'movsx eax, byte [rbx + 0x19]', 'mov dword [var_b4h], eax', 'movsx eax, byte [rbx + 0x18]', 'mov dword [var_b8h], eax', 'movsx eax, byte [rbx + 0x1b]', 'mov dword [var_bch], eax', 'movsx eax, byte [rbx + 0x1c]', 'sub eax, 1', 'mov dword [var_c0h], eax', 'mov eax, dword [rbx + 0x20]', 'mov dword [var_d0h], 0xffffffff', 'mov dword [errnum], eax', 'sub eax, 0x76c', 'mov dword [var_c4h], eax', 'call sym.imp.mktime']"
768,systemd-tty-ask-password-agent,262,"['call sym.imp.now', 'cmp rax, qword [ptr]', 'jbe 0x3dbd', 'jmp 0x3dfc', 'mov rdi, qword [var_58h]', 'call sym.imp.free', 'mov rdi, qword [path]', 'call sym.imp.free', 'mov rdi, rbp', 'call sym.imp.free', 'jmp 0x3bb0', 'mov dword [r15], 0', 'mov rdi, r14', 'call sym.imp.readdir64', 'mov rbp, rax', 'test rax, rax', 'je 0x4049', 'lea r13, [rbp + 0x13]', 'mov rdi, r13', 'call sym.imp.hidden_or_backup_file', 'test al, al', 'jne 0x3bb0', 'cmp byte [rbp + 0x12], 8', 'jne 0x3bb0', 'cmp dword [rbp + 0x13], 0x2e6b7361', 'jne 0x3bb0', 'mov rdx, 0xffffffffffffffff', 'mov rsi, r13', 'lea rdi, str._run_systemd_ask_password', 'mov dword [var_14h], 0', 'call sym.imp.path_join_internal', 'mov rbp, rax', 'test rax, rax', 'je 0x433f', 'lea rdi, [var_180h]', 'xor eax, eax', 'mov ecx, 0x23', 'mov qword [path], 0', 'rep stosq qword [rdi], rax', 'lea rdx, [path]', 'lea rax, str.Socket', 'mov qword [var_58h], 0', 'lea rcx, str.NotAfter', 'lea rsi, str.Message', 'xor edi, edi', 'mov qword [var_188h], rax', 'mov rax, qword [reloc.config_parse_string]', 'mov qword [var_1a0h], rdx', 'mov rdx, qword [reloc.config_parse_uint64]', 'mov qword [var_1b0h], rcx', 'lea rcx, str.Echo', 'mov qword [var_190h], rax', 'mov qword [var_1e0h], rax', 'lea rax, [var_58h]', 'mov qword [var_1f0h], rax', 'lea rax, [0x000057f0]', 'mov qword [var_200h], rax', 'mov rax, qword [reloc.config_parse_unsigned]', 'mov qword [var_1b8h], rdx', 'lea rdx, [ptr]', 'mov qword [var_208h], rax', 'lea rax, [var_4ch]', 'mov qword [var_218h], rax', 'lea rax, str.AcceptCached', 'mov qword [var_228h], rax', 'mov rax, qword [reloc.config_parse_bool]', 'mov qword [var_1c8h], rdx', 'lea rdx, [var_4ah]', 'mov qword [var_1d8h], rsi', 'mov rsi, rbp', 'mov qword [var_230h], rax', 'mov qword [var_240h], rdx', 'xor edx, edx', 'mov byte [var_4ah], 0', 'mov byte [var_4bh], 0', 'mov qword [ptr], 0', 'mov dword [var_4ch], 0', 'mov qword [var_180h], rbx', 'mov qword [var_1a8h], rbx', 'mov qword [var_1d0h], rbx', 'mov qword [var_1f8h], rbx', 'mov qword [var_220h], rbx', 'mov qword [var_248h], rbx', 'mov qword [var_250h], rcx', 'mov r8, qword [reloc.config_item_table_lookup]', 'xor ecx, ecx', 'mov qword [var_258h], rax', 'lea rax, [var_4bh]', 'mov qword [var_268h], rax', 'push 0', 'push 5', 'lea r9, [var_180h]', 'call sym.imp.config_parse', 'pop rcx', 'pop rsi', 'mov r13d, eax', 'test eax, eax', 'js 0x3e80', 'cmp qword [path], 0', 'je 0x411c', 'cmp qword [ptr], 0', 'jne 0x4061', 'mov edi, 1', 'call sym.imp.now']"
769,x86_64-linux-gnu-ar,269,"['call sym.imp.ctime', 'test rax, rax', 'je 0x8d48', 'lea r9, [rax + 0x14]', 'lea r8, [rax + 4]', 'xor eax, eax', 'mov edx, 0x28', 'lea r13, [var_b0h]', 'lea rcx, str._.12s__.4s', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.__sprintf_chk', 'mov edi, dword [var_28h]', 'lea rsi, [var_a5h]', 'call fcn.000093d0', 'endbr64', 'mov rdx, rdi', 'mov eax, 0x64', 'and edx, 0xf000', 'cmp rdx, 0x4000', 'je 0x9437', 'mov byte [rsi], al', 'mov rax, rdi', 'and eax, 0x100', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 1], al', 'mov rax, rdi', 'and eax, 0x80', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 2], al', 'mov rax, rdi', 'and eax, 0x40', 'cmp rax, 1', 'mov rax, rdi', 'sbb ecx, ecx', 'and eax, 0x20', 'and ecx, 0xffffffb5', 'add ecx, 0x78', 'cmp rax, 1', 'sbb eax, eax', 'mov byte [rsi + 3], cl', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 4], al', 'mov rax, rdi', 'and eax, 0x10', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 5], al', 'mov rax, rdi', 'and eax, 8', 'cmp rax, 1', 'mov rax, rdi', 'sbb edx, edx', 'and eax, 4', 'and edx, 0xffffffb5', 'add edx, 0x78', 'cmp rax, 1', 'sbb eax, eax', 'mov byte [rsi + 6], dl', 'and eax, 0xffffffbb', 'add eax, 0x72', 'mov byte [rsi + 7], al', 'mov rax, rdi', 'and eax, 2', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffb6', 'add eax, 0x77', 'mov byte [rsi + 8], al', 'mov rax, rdi', 'and eax, 1', 'cmp rax, 1', 'sbb eax, eax', 'and eax, 0xffffffb5', 'add eax, 0x78', 'mov byte [rsi + 9], al', 'test edi, 0x800', 'je 0x9517', 'test edi, 0x400', 'je 0x9532', 'test edi, 0x200', 'je 0x954c', 'ret', 'mov esi, 1', 'mov rdi, rbp', 'xor eax, eax', 'mov byte [var_afh], 0', 'lea rcx, [var_a6h]', 'lea rdx, str._s__ld__ld__6lu__s_', 'push r13', 'push qword [var_48h]', 'mov r9d, dword [var_40h]', 'mov r8d, dword [var_3ch]', 'call sym.imp.__fprintf_chk', 'pop rax', 'pop rdx', 'jmp 0x8c2b', 'mov rdi, qword [rbx]', 'mov rsi, rbp', 'call sym.imp.fputs', 'test r12d, r12d', 'je 0x8c50', 'mov rsi, rbp', 'mov edi, 0xa', 'call sym.imp.fputc', 'mov rax, qword [var_d8h]', 'xor rax, qword fs:[0x28]', 'jne 0x8d7f', 'add rsp, 0xe8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'ret', 'mov rbx, qword [rbx + 0xd8]', 'test rbx, rbx', 'jne 0x7820', 'mov edx, dword [0x000111f0]', 'mov rdi, qword [0x00011248]', 'mov rsi, rbx', 'xor ecx, ecx', 'call fcn.00008be0', 'endbr64', 'push r13', 'push r12', 'mov r12d, ecx', 'push rbp', 'mov rbp, rdi', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0xe8', 'mov rax, qword fs:[0x28]', 'mov qword [var_d8h], rax', 'xor eax, eax', 'test edx, edx', 'je 0x8c2b', 'mov rax, qword [rbx + 8]', 'lea rsi, [var_10h]', 'mov rdi, rbx', 'call qword [rax + 0x1e0]', 'test eax, eax', 'je 0x8cb0', 'mov rax, qword [var_68h]', 'lea rdi, [timer]', 'mov qword [timer], rax', 'call sym.imp.ctime']"
770,mdeltree,428,"['call sym.imp.localtime', 'mov rsi, r12', 'mov rdi, r15', 'mov rbx, rax', 'call fcn.0001a570', 'endbr64', 'push rbx', 'mov rbx, rdi', 'mov edx, 8', 'mov rdi, rsi', 'mov rsi, rbx', 'call sym.imp.strncpy', 'lea rsi, [rbx + 8]', 'mov edx, 3', 'pop rbx', 'mov rdi, rax', 'add rdi, 8', 'jmp sym.imp.strncpy', 'mov byte [r12 + 0xb], r14b', 'mov byte [r12 + 0xd], 0', 'mov ecx, dword [rbx]', 'mov edx, dword [rbx + 4]', 'mov eax, ecx', 'shr eax, 0x1f', 'mov esi, edx', 'shl edx, 5', 'add eax, ecx', 'mov ecx, dword [rbx + 8]', 'sar esi, 3', 'sar eax, 1', 'add eax, edx', 'lea ecx, [rsi + rcx*8]', 'mov byte [r12 + 0x17], cl', 'mov byte [r12 + 0xf], cl', 'mov byte [r12 + 0x16], al', 'mov byte [r12 + 0xe], al', 'mov esi, dword [rbx + 0x10]', 'mov eax, dword [rbx + 0xc]', 'mov ecx, dword [rbx + 0x14]', 'mov word [r12 + 0x1a], bp', 'lea edx, [rsi + 1]', 'add esi, 1', 'mov dword [r12 + 0x1c], r13d', 'shl esi, 5', 'sar edx, 3', 'add eax, esi', 'lea edx, [rdx + rcx*2 + 0x60]', 'mov byte [r12 + 0x18], al', 'mov byte [r12 + 0x10], al', 'mov byte [r12 + 0x12], al', 'mov eax, ebp', 'shr ebp, 0x18', 'shr eax, 0x10', 'mov byte [r12 + 0x19], dl', 'mov byte [r12 + 0x11], dl', 'mov byte [r12 + 0x13], dl', 'mov byte [r12 + 0x15], bpl', 'mov byte [r12 + 0x14], al', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x934f', 'add rsp, 0x18', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'mov rbx, qword [var_18h]', 'xor rbx, qword fs:[0x28]', 'jne 0x93e6', 'add rsp, 0x20', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'mov rdi, r12', 'test ebp, ebp', 'je 0xc658', 'call fcn.0000e7e0', 'endbr64', 'lea rax, [0x00031600]', 'test rdi, rdi', 'jne 0xe801', 'cmp qword [rdi], rax', 'jne 0xe7f8', 'mov rax, rdi', 'ret', 'mov esi, ebp', 'mov rbx, rax', 'mov rdi, rax', 'call fcn.0000ba70', 'push r13', 'push r12', 'xor r12d, r12d', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov dword [var_4h], 0', 'mov r13, rsp', 'mov dword [rsp], 0', 'nop dword [rax]', 'cmp dword [rbx + 0x6c], ebp', 'jb 0xbad8', 'cmp ebp, 1', 'jbe 0xbad8', 'mov esi, ebp', 'mov rdi, rbx', 'add r12d, 1', 'call fcn.0000ae30', 'endbr64', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'mov rbx, rdi', 'call qword [rdi + 0x40]', 'mov r12d, eax', 'test eax, eax', 'je 0xae60', 'cmp eax, 1', 'jbe 0xae5a', 'cmp dword [rbx + 0x6c], r12d', 'ja 0xae70', 'mov rdi, qword [obj.stderr]', 'mov r8d, ebp', 'mov ecx, r12d', 'xor eax, eax', 'lea rdx, str.Bad_FAT_entry__d_at__d_n', 'mov esi, 1', 'call sym.imp.__fprintf_chk', 'mov eax, r12d', 'add dword [rbx + 0x38], 1', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'cmp eax, 1', 'jne 0xb190', 'pop rbx', 'mov rax, 0xffffffffffffffff', 'pop rbp', 'pop r12', 'ret', 'mov rdi, rax', 'cmp rax, 0xffffffffffffffff', 'je 0x14d20', 'mov rcx, qword [obj.stderr]', 'mov edx, 0xa', 'mov esi, 1', 'lea rdi, str.Fat_error_n', 'call sym.imp.fwrite', 'jmp 0x14c53', 'lea rdi, [0x00033098]', 'call fcn.00020190', 'mov byte [0x000330c8], 0', 'mov rax, qword [var_8h]', 'xor rax, qword fs:[0x28]', 'jne 0x14d42', 'add rsp, 0x10', 'pop rbx', 'ret', 'jmp 0x14d90', 'mov esi, r12d', 'mov rdi, rbp', 'mov byte [0x000330c8], bl', 'call fcn.00013fb0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'mov ebp, esi', 'push rbx', 'sub rsp, 0x568', 'mov rax, qword fs:[0x28]', 'mov qword [var_558h], rax', 'xor eax, eax', 'call fcn.0000e7e0', 'mov rdi, rax', 'mov rbx, rax', 'call fcn.0000c580', 'endbr64', 'push r13', 'mov ecx, 0x87', 'push r12', 'mov r12, rdi', 'push rbp', 'push rbx', 'sub rsp, 0x458', 'mov rax, qword fs:[0x28]', 'mov qword [var_448h], rax', 'xor eax, eax', 'lea r13, [var_10h]', 'mov rdi, r13', 'rep stosq qword [rdi], rax', 'mov rdi, r12', 'call fcn.0000b120', 'endbr64', 'sub rsp, 8', 'call fcn.0000e7e0', 'xor r8d, r8d', 'cmp dword [rax + 0x70], 0x20', 'jne 0xb13d', 'mov eax, r8d', 'add rsp, 8', 'ret', 'lea r9, [var_1ch]', 'xor r8d, r8d', 'xor ecx, ecx', 'lea rdi, [0x00027856]', 'mov ebp, eax', 'mov edx, eax', 'mov esi, 0x10', 'mov dword [var_18h], 0xfffffffd', 'mov dword [var_3ch], 0', 'call fcn.00009360', 'endbr64', 'push r14', 'mov r10, rdi', 'mov r14, r9', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12d, edx', 'mov edx, 8', 'push rbp', 'mov rbp, r8', 'push rbx', 'mov ebx, esi', 'mov rsi, r10', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rdi, [dest]', 'call sym.imp.strncpy', 'movzx esi, bl', 'mov r9, r14', 'mov r8, rbp', 'mov rdi, rax', 'mov rcx, r13', 'mov eax, 0x2020', 'mov edx, r12d', 'mov word [var_14h], ax', 'mov byte [var_16h], 0x20', 'call fcn.00009250', 'endbr64', 'push r15', 'mov r15, rdi', 'push r14', 'mov r14d, esi', 'push r13', 'mov r13, rcx', 'push r12', 'mov r12, r9', 'push rbp', 'mov ebp, edx', 'push rbx', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov rdi, rsp', 'mov qword [rsp], r8', 'call sym.imp.localtime']"
771,vdir,221,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xeb28', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xeb3e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rcx, qword [var_20h]', 'mov r9, qword [var_28h]', 'mov rdx, qword [0x00024370]', 'mov rsi, qword [0x00024378]', 'lea rdi, [rdx - 0xf0c2ac]', 'cmp rdi, rcx', 'jge 0x9808', 'xor eax, eax', 'cmp rdi, rcx', 'jg 0x9611', 'cmp byte [0x000233c8], 0', 'mov r8, qword [0x000242a8]', 'je 0x9a00', 'lea rdx, str._b__e___Y', 'mov rdx, qword [rdx + rax*8]', 'jmp 0x9643', 'mov rcx, r13', 'mov esi, 0x3e9', 'mov rdi, rbx', 'call fcn.00013280', 'endbr64', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov byte [var_7h], 0', 'push r9', 'push r8', 'xor r8d, r8d', 'lea r9, [var_7h]', 'call fcn.000119f0', 'push r15', 'mov r10, rdi', 'push r14', 'mov r14, rcx', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdx', 'sub rsp, 0x4c8', 'mov r15, qword [rcx + 0x30]', 'mov r13d, dword [rcx + 8]', 'mov rax, qword [arg_500h]', 'mov qword [rsp], rsi', 'mov qword [var_18h], r9', 'mov qword [var_10h], rax', 'mov byte [var_2bh], r8b', 'mov rax, qword fs:[0x28]', 'mov qword [var_4b8h], rax', 'xor eax, eax', 'test r15, r15', 'lea rax, [0x000197fe]', 'cmove r15, rax', 'cmp r13d, 0xc', 'jle 0x11b00', 'sub r13d, 0xc', 'movzx eax, byte [rbx]', 'xor r11d, r11d', 'test al, al', 'je 0x11ab7', 'test r10, r10', 'je 0x11ad3', 'mov rax, qword [var_4b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x13256', 'add rsp, 0x4c8', 'mov rax, r11', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'mov rdx, qword [var_8h]', 'xor rdx, qword fs:[0x28]', 'jne 0x132c5', 'add rsp, 0x18', 'ret', 'test rax, rax', 'je 0x9660', 'cmp byte [rbx], 0', 'jne 0x993c', 'cmp byte [r12 + 0xb8], 0', 'je 0x9a95', 'lea r13, [0x000197e2]', 'jmp 0x930d', 'mov r8d, dword [0x00023014]', 'test r8d, r8d', 'js 0x9970', 'lea r14, [var_70h]', 'mov rdi, qword [0x000242a8]', 'lea rsi, [var_18h]', 'mov qword [var_18h], 0', 'mov rdx, r14', 'call fcn.00017030', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x170c0', 'mov r12, rdi', 'call fcn.00016f50', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00019af0]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x16fe0', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0x16f71', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x9660', 'mov rdx, qword [0x00024370]', 'mov rcx, qword [var_20h]', 'mov rsi, qword [0x00024378]', 'mov r9, qword [var_28h]', 'cmp rdx, rcx', 'jl 0x9a10', 'lea rdi, [0x00024370]', 'call fcn.0000eae0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
772,vdir,196,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xeb28', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xeb3e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rcx, qword [var_20h]', 'mov r9, qword [var_28h]', 'mov rdx, qword [0x00024370]', 'mov rsi, qword [0x00024378]', 'lea rdi, [rdx - 0xf0c2ac]', 'cmp rdi, rcx', 'jge 0x9808', 'xor eax, eax', 'cmp rdi, rcx', 'jg 0x9611', 'cmp byte [0x000233c8], 0', 'mov r8, qword [0x000242a8]', 'je 0x9a00', 'lea rdx, str._b__e___Y', 'mov rdx, qword [rdx + rax*8]', 'jmp 0x9643', 'mov rcx, r13', 'mov esi, 0x3e9', 'mov rdi, rbx', 'call fcn.00013280', 'endbr64', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov byte [var_7h], 0', 'push r9', 'push r8', 'xor r8d, r8d', 'lea r9, [var_7h]', 'call fcn.000119f0', 'push r15', 'mov r10, rdi', 'push r14', 'mov r14, rcx', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdx', 'sub rsp, 0x4c8', 'mov r15, qword [rcx + 0x30]', 'mov r13d, dword [rcx + 8]', 'mov rax, qword [arg_500h]', 'mov qword [rsp], rsi', 'mov qword [var_18h], r9', 'mov qword [var_10h], rax', 'mov byte [var_2bh], r8b', 'mov rax, qword fs:[0x28]', 'mov qword [var_4b8h], rax', 'xor eax, eax', 'test r15, r15', 'lea rax, [0x000197fe]', 'cmove r15, rax', 'cmp r13d, 0xc', 'jle 0x11b00', 'sub r13d, 0xc', 'movzx eax, byte [rbx]', 'xor r11d, r11d', 'test al, al', 'je 0x11ab7', 'test r10, r10', 'je 0x11ad3', 'mov rax, qword [var_4b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x13256', 'add rsp, 0x4c8', 'mov rax, r11', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'mov rdx, qword [var_8h]', 'xor rdx, qword fs:[0x28]', 'jne 0x132c5', 'add rsp, 0x18', 'ret', 'test rax, rax', 'je 0x9660', 'cmp byte [rbx], 0', 'jne 0x993c', 'cmp byte [r12 + 0xb8], 0', 'je 0x9a95', 'lea r13, [0x000197e2]', 'jmp 0x930d', 'mov r8d, dword [0x00023014]', 'test r8d, r8d', 'js 0x9970', 'lea r14, [var_70h]', 'mov rdi, qword [0x000242a8]', 'lea rsi, [var_18h]', 'mov qword [var_18h], 0', 'mov rdx, r14', 'call fcn.00017030', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x170c0', 'mov r12, rdi', 'call fcn.00016f50', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00019af0]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x16fe0', 'cmp byte [rbx + 8], 0', 'mov r12d, 1', 'jne 0x16f71', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
773,vdir,209,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xeb28', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xeb3e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rcx, qword [var_20h]', 'mov r9, qword [var_28h]', 'mov rdx, qword [0x00024370]', 'mov rsi, qword [0x00024378]', 'lea rdi, [rdx - 0xf0c2ac]', 'cmp rdi, rcx', 'jge 0x9808', 'xor eax, eax', 'cmp rdi, rcx', 'jg 0x9611', 'cmp byte [0x000233c8], 0', 'mov r8, qword [0x000242a8]', 'je 0x9a00', 'lea rdx, str._b__e___Y', 'mov rdx, qword [rdx + rax*8]', 'jmp 0x9643', 'mov rcx, r13', 'mov esi, 0x3e9', 'mov rdi, rbx', 'call fcn.00013280', 'endbr64', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov byte [var_7h], 0', 'push r9', 'push r8', 'xor r8d, r8d', 'lea r9, [var_7h]', 'call fcn.000119f0', 'push r15', 'mov r10, rdi', 'push r14', 'mov r14, rcx', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdx', 'sub rsp, 0x4c8', 'mov r15, qword [rcx + 0x30]', 'mov r13d, dword [rcx + 8]', 'mov rax, qword [arg_500h]', 'mov qword [rsp], rsi', 'mov qword [var_18h], r9', 'mov qword [var_10h], rax', 'mov byte [var_2bh], r8b', 'mov rax, qword fs:[0x28]', 'mov qword [var_4b8h], rax', 'xor eax, eax', 'test r15, r15', 'lea rax, [0x000197fe]', 'cmove r15, rax', 'cmp r13d, 0xc', 'jle 0x11b00', 'sub r13d, 0xc', 'movzx eax, byte [rbx]', 'xor r11d, r11d', 'test al, al', 'je 0x11ab7', 'test r10, r10', 'je 0x11ad3', 'mov rax, qword [var_4b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x13256', 'add rsp, 0x4c8', 'mov rax, r11', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'mov rdx, qword [var_8h]', 'xor rdx, qword fs:[0x28]', 'jne 0x132c5', 'add rsp, 0x18', 'ret', 'test rax, rax', 'je 0x9660', 'cmp byte [rbx], 0', 'jne 0x993c', 'cmp byte [r12 + 0xb8], 0', 'je 0x9a95', 'lea r13, [0x000197e2]', 'jmp 0x930d', 'mov r8d, dword [0x00023014]', 'test r8d, r8d', 'js 0x9970', 'lea r14, [var_70h]', 'mov rdi, qword [0x000242a8]', 'lea rsi, [var_18h]', 'mov qword [var_18h], 0', 'mov rdx, r14', 'call fcn.00017030', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x170c0', 'mov r12, rdi', 'call fcn.00016f50', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00019af0]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x16fe0', 'cmp byte [rbx + 8], 0', 'jne 0x16fc0', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x16f71', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime']"
774,vdir,433,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xeb28', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xeb3e', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rcx, qword [var_20h]', 'mov r9, qword [var_28h]', 'mov rdx, qword [0x00024370]', 'mov rsi, qword [0x00024378]', 'lea rdi, [rdx - 0xf0c2ac]', 'cmp rdi, rcx', 'jge 0x9808', 'xor eax, eax', 'cmp rdi, rcx', 'jg 0x9611', 'cmp byte [0x000233c8], 0', 'mov r8, qword [0x000242a8]', 'je 0x9a00', 'lea rdx, str._b__e___Y', 'mov rdx, qword [rdx + rax*8]', 'jmp 0x9643', 'mov rcx, r13', 'mov esi, 0x3e9', 'mov rdi, rbx', 'call fcn.00013280', 'endbr64', 'sub rsp, 0x18', 'mov rax, qword fs:[0x28]', 'mov qword [var_8h], rax', 'xor eax, eax', 'mov byte [var_7h], 0', 'push r9', 'push r8', 'xor r8d, r8d', 'lea r9, [var_7h]', 'call fcn.000119f0', 'push r15', 'mov r10, rdi', 'push r14', 'mov r14, rcx', 'push r13', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdx', 'sub rsp, 0x4c8', 'mov r15, qword [rcx + 0x30]', 'mov r13d, dword [rcx + 8]', 'mov rax, qword [arg_500h]', 'mov qword [rsp], rsi', 'mov qword [var_18h], r9', 'mov qword [var_10h], rax', 'mov byte [var_2bh], r8b', 'mov rax, qword fs:[0x28]', 'mov qword [var_4b8h], rax', 'xor eax, eax', 'test r15, r15', 'lea rax, [0x000197fe]', 'cmove r15, rax', 'cmp r13d, 0xc', 'jle 0x11b00', 'sub r13d, 0xc', 'movzx eax, byte [rbx]', 'xor r11d, r11d', 'test al, al', 'je 0x11ab7', 'test r10, r10', 'je 0x11ad3', 'mov rax, qword [var_4b8h]', 'xor rax, qword fs:[0x28]', 'jne 0x13256', 'add rsp, 0x4c8', 'mov rax, r11', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'mov rdx, qword [var_8h]', 'xor rdx, qword fs:[0x28]', 'jne 0x132c5', 'add rsp, 0x18', 'ret', 'test rax, rax', 'je 0x9660', 'cmp byte [rbx], 0', 'jne 0x993c', 'cmp byte [r12 + 0xb8], 0', 'je 0x9a95', 'lea r13, [0x000197e2]', 'jmp 0x930d', 'mov r8d, dword [0x00023014]', 'test r8d, r8d', 'js 0x9970', 'lea r14, [var_70h]', 'mov rdi, qword [0x000242a8]', 'lea rsi, [var_18h]', 'mov qword [var_18h], 0', 'mov rdx, r14', 'call fcn.00017030', 'endbr64', 'push r14', 'mov r14, rsi', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdx', 'sub rsp, 8', 'test rdi, rdi', 'je 0x170c0', 'mov r12, rdi', 'call fcn.00016f50', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rdi', 'lea rdi, [0x00019af0]', 'call sym.imp.getenv', 'mov rbp, rax', 'test rax, rax', 'je 0x16fe0', 'cmp byte [rbx + 8], 0', 'jne 0x16fc0', 'lea rdi, [rbx + 9]', 'mov rsi, rax', 'mov r12d, 1', 'call sym.imp.strcmp', 'test eax, eax', 'jne 0x16f71', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
775,vdir,81,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17090', 'cmp r13, 1', 'je 0x1709e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x9660', 'mov rdx, qword [0x00024370]', 'mov rcx, qword [var_20h]', 'mov rsi, qword [0x00024378]', 'mov r9, qword [var_28h]', 'cmp rdx, rcx', 'jl 0x9a10', 'lea rdi, [0x00024370]', 'call fcn.0000eae0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
776,vdir,101,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17090', 'cmp r13, 1', 'je 0x1709e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
777,vdir,100,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17090', 'cmp r13, 1', 'je 0x1709e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime']"
778,vdir,324,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17090', 'cmp r13, 1', 'je 0x1709e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
779,vdir,283,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00016df0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x16eb0', 'mov rbp, rdi', 'mov r13, rsi', 'cmp rsi, r12', 'ja 0x16e24', 'lea rdx, [rsi + 0x38]', 'mov eax, 1', 'cmp r12, rdx', 'jb 0x16e91', 'add rsp, 8', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'je 0x17090', 'cmp r13, 1', 'jne 0x170b0', 'add rsp, 8', 'mov rax, rbp', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x9660', 'mov rdx, qword [0x00024370]', 'mov rcx, qword [var_20h]', 'mov rsi, qword [0x00024378]', 'mov r9, qword [var_28h]', 'cmp rdx, rcx', 'jl 0x9a10', 'lea rdi, [0x00024370]', 'call fcn.0000eae0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
780,vdir,296,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00016df0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x16eb0', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
781,vdir,295,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'mov rsi, rbp', 'mov rdi, r12', 'call fcn.00016df0', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 8', 'mov r12, qword [rsi + 0x30]', 'test r12, r12', 'je 0x16eb0', 'add rsp, 8', 'mov eax, 1', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'test al, al', 'jne 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime']"
782,vdir,224,"['call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
783,vdir,126,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'add rsp, 8', 'xor eax, eax', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'ret', 'test rax, rax', 'je 0x9660', 'mov rdx, qword [0x00024370]', 'mov rcx, qword [var_20h]', 'mov rsi, qword [0x00024378]', 'mov r9, qword [var_28h]', 'cmp rdx, rcx', 'jl 0x9a10', 'lea rdi, [0x00024370]', 'call fcn.0000eae0', 'endbr64', 'push rbx', 'mov rsi, rdi', 'mov rbx, rdi', 'xor edi, edi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'call sym.imp.clock_gettime']"
784,vdir,101,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x1709e', 'mov rsi, rbp', 'mov rdi, r14', 'call sym.imp.localtime_r']"
785,vdir,100,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime']"
786,vdir,324,"['call sym.imp.localtime_r', 'test rax, rax', 'je 0x17148', 'cmp r13, 1', 'je 0x1715e', 'mov rdi, r13', 'call fcn.00016cf0', 'push r13', 'push r12', 'push rbp', 'mov rbp, rdi', 'push rbx', 'sub rsp, 8', 'call sym.imp.__errno_location', 'cmp byte [rbp + 8], 0', 'lea rdi, [rbp + 9]', 'mov r12d, dword [rax]', 'mov rbx, rax', 'jne 0x16d14', 'call fcn.00016c90', 'mov rsi, rdi', 'test rdi, rdi', 'je 0x16cb0', 'lea rdi, [0x00019af0]', 'jmp sym.imp.unsetenv', 'test eax, eax', 'je 0x16ff8', 'call sym.imp.__errno_location', 'mov ebp, dword [rax]', 'mov rbx, rax', 'cmp r12, 1', 'je 0x16fae', 'mov dword [rbx], ebp', 'xor r12d, r12d', 'mov rax, r12', 'pop rbx', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x17210', 'mov rdi, rbp', 'call sym.imp.mktime', 'mov qword [var_8h], rax', 'cmp rax, 0xffffffffffffffff', 'je 0x17188', 'lea rsi, [var_10h]', 'lea rdi, [var_8h]', 'call sym.imp.localtime_r']"
787,scp,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0xbd98', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xbe09', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0xbfa5', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0xbf70', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0000be10', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0000bd40', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0001d268]', 'test eax, eax', 'jne 0xbde0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
788,scp,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xbd77', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xbe09', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0xbfa5', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0xbf70', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0000be10', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0000bd40', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0001d268]', 'test eax, eax', 'jne 0xbde0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
789,scp,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xbd77', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xbe09', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0xbfa5', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0xbf70', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0000be10', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0000bd40', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0001d268]', 'test eax, eax', 'jne 0xbde0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0xbd98', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
790,scp,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xbd77', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xbe09', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0xbfa5', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0xbf70', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0000be10', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0000bd40', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0001d268]', 'test eax, eax', 'jne 0xbde0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
791,scp,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xbd77', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xbe09', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0xbfa5', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0xbf70', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0000be10', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0000bd40', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0001d268]', 'test eax, eax', 'jne 0xbde0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0xbd98', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
792,scp,139,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0xbd77', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0xbe09', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0xbfa5', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0xbf70', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0000be10', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0000bd40', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0001d268]', 'test eax, eax', 'jne 0xbde0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0xbd98', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime', 'test eax, eax', 'je 0xbd77', 'xor edi, edi', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
793,ssh-add,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x1e608', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e679', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x1e815', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x1e7e0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0001e680', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0001e5b0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0005b1e8]', 'test eax, eax', 'jne 0x1e650', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
794,ssh-add,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e5e7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e679', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x1e815', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x1e7e0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0001e680', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0001e5b0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0005b1e8]', 'test eax, eax', 'jne 0x1e650', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
795,ssh-add,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e5e7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e679', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x1e815', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x1e7e0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0001e680', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0001e5b0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0005b1e8]', 'test eax, eax', 'jne 0x1e650', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x1e608', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
796,ssh-add,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e5e7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e679', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x1e815', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x1e7e0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0001e680', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0001e5b0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0005b1e8]', 'test eax, eax', 'jne 0x1e650', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
797,ssh-add,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e5e7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e679', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x1e815', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x1e7e0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0001e680', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0001e5b0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0005b1e8]', 'test eax, eax', 'jne 0x1e650', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x1e608', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
798,ssh-add,139,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e5e7', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e679', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x1e815', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x1e7e0', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0001e680', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0001e5b0', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x0005b1e8]', 'test eax, eax', 'jne 0x1e650', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x1e608', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e5e7', 'xor edi, edi', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
799,ssh-add,825,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e5e7', 'call sym.imp.__errno_location', 'mov edi, dword [rax]', 'call sym.imp.strerror', 'lea rdi, str.clock_gettime:__s', 'mov rsi, rax', 'xor eax, eax', 'call fcn.0001a590', 'endbr64', 'sub rsp, 0xd8', 'mov r10, rdi', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x1a5f2', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov rdx, rsp', 'mov rsi, r10', 'mov qword [var_8h], rax', 'mov edi, 7', 'lea rax, [var_20h]', 'mov qword [var_10h], rax', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'call fcn.00019d90', 'endbr64', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x828', 'mov dword [var_844h], edi', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'cmp dword [0x0005b020], edi', 'jl 0x19e92', 'mov r14d, edi', 'mov rbx, rsi', 'mov r13, rdx', 'call sym.imp.__errno_location', 'mov r12, rax', 'mov eax, dword [rax]', 'mov dword [var_848h], eax', 'cmp r14d, 7', 'ja case.0x19dfd.0', 'lea rcx, [0x000331e0]', 'mov edx, r14d', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1a180', 'add rsp, 0xd8', 'ret', 'test r14d, r14d', 'jne 0x9d6a', 'mov rdi, r13', 'call fcn.0000b1e0', 'endbr64', 'test rdi, rdi', 'je 0xb230', 'push rbp', 'mov edx, dword [rdi + 0x30]', 'mov rbp, rdi', 'test edx, edx', 'je 0xb220', 'mov eax, dword [rbp + 0x38]', 'sub eax, 1', 'cmp eax, 0xfffff', 'jbe 0xb238', 'cmp qword [rbp + 8], 0', 'je 0xb201', 'mov rdx, qword [rbp + 0x20]', 'cmp rdx, 0x8000000', 'ja 0xb201', 'mov rcx, qword [rbp + 0x28]', 'cmp rdx, rcx', 'jb 0xb201', 'mov rdx, qword [rbp + 0x18]', 'cmp rcx, rdx', 'jb 0xb201', 'cmp rdx, qword [rbp + 0x10]', 'jb 0xb201', 'mov dword [rbp + 0x38], eax', 'test eax, eax', 'jne 0xb2a0', 'pop rbp', 'ret', 'jmp 0xb311', 'add rsp, 8', 'mov rax, r12', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x2824d', 'mov rsi, qword [var_28h]', 'mov rdi, rax', 'sub rsi, qword [var_30h]', 'call fcn.0000bb80', 'endbr64', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xbba9', 'mov edx, dword [rdi + 0x30]', 'mov rbx, rdi', 'mov rbp, rsi', 'test edx, edx', 'je 0xbbd0', 'mov eax, dword [rbx + 0x38]', 'sub eax, 1', 'cmp eax, 0xfffff', 'jbe 0xbbe6', 'mov rcx, qword [rbx + 8]', 'test rcx, rcx', 'je 0xbba9', 'mov rax, qword [rbx + 0x20]', 'cmp rax, 0x8000000', 'ja 0xbba9', 'mov rsi, qword [rbx + 0x28]', 'cmp rax, rsi', 'jb 0xbba9', 'mov rax, qword [rbx + 0x18]', 'cmp rsi, rax', 'jb 0xbba9', 'mov rsi, qword [rbx + 0x10]', 'cmp rax, rsi', 'jb 0xbba9', 'test rbp, rbp', 'je 0xbc53', 'xor eax, eax', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov r15d, eax', 'test eax, eax', 'je 0x27d90', 'call fcn.00026440', 'endbr64', 'sub rsp, 8', 'mov esi, 0x48', 'mov edi, 1', 'call sym.imp.calloc', 'test rax, rax', 'je 0x26484', 'add rsp, 8', 'ret', 'mov r14, rax', 'test rax, rax', 'je 0x27dfd', 'lea rsi, [var_6ch]', 'mov rdi, r13', 'call fcn.00015080', 'mov r15d, eax', 'test eax, eax', 'jne 0x27df0', 'cmp dword [var_6ch], 1', 'je 0x27dde', 'mov rsi, r14', 'mov rdi, r13', 'call fcn.00015040', 'mov r15d, eax', 'test eax, eax', 'je 0x27e17', 'lea rsi, [r14 + 8]', 'mov rdi, r13', 'call fcn.00015040', 'mov r15d, eax', 'test eax, eax', 'jne 0x27df0', 'lea rsi, [r14 + 0x10]', 'mov rdi, r13', 'call fcn.00015040', 'mov r15d, eax', 'test eax, eax', 'jne 0x28016', 'xor edx, edx', 'xor esi, esi', 'mov rdi, r13', 'call fcn.00015410', 'mov r15d, eax', 'test eax, eax', 'jne 0x28016', 'lea rsi, [r14 + 0x18]', 'xor edx, edx', 'mov rdi, r13', 'call fcn.00015590', 'mov r15d, eax', 'test eax, eax', 'jne 0x28016', 'mov rax, qword [r14 + 8]', 'mov qword [timer], rax', 'lea rax, [timer]', 'mov rdi, rax', 'mov qword [var_38h], rax', 'call sym.imp.localtime']"
800,ssh-add,872,"['call sym.imp.localtime', 'mov rcx, rax', 'test rax, rax', 'je 0x28026', 'lea r12, [s]', 'lea rdx, str._Y_m_dT_H_M_S', 'mov esi, 0x40', 'mov byte [s], 0', 'mov rdi, r12', 'call sym.imp.strftime', 'mov r8, qword [r14 + 0x18]', 'lea rax, [0x00032475]', 'mov rsi, qword [r14]', 'mov rdx, r12', 'lea rcx, [0x00031207]', 'lea rdi, str.KRL_version__llu_generated_at__s_s_s', 'cmp byte [r8], 0', 'cmove rcx, rax', 'xor eax, eax', 'call fcn.0001a3f0', 'endbr64', 'sub rsp, 0xd8', 'mov r10, rdi', 'mov qword [var_28h], rsi', 'mov qword [var_30h], rdx', 'mov qword [var_38h], rcx', 'mov qword [var_40h], r8', 'mov qword [var_48h], r9', 'test al, al', 'je 0x1a452', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'lea rax, [arg_e0h]', 'mov rdx, rsp', 'mov rsi, r10', 'mov qword [var_8h], rax', 'mov edi, 5', 'lea rax, [var_20h]', 'mov qword [var_10h], rax', 'mov dword [rsp], 8', 'mov dword [var_4h], 0x30', 'call fcn.00019d90', 'endbr64', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0x828', 'mov dword [var_844h], edi', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'cmp dword [0x0005b020], edi', 'jl 0x19e92', 'mov r14d, edi', 'mov rbx, rsi', 'mov r13, rdx', 'call sym.imp.__errno_location', 'mov r12, rax', 'mov eax, dword [rax]', 'mov dword [var_848h], eax', 'cmp r14d, 7', 'ja case.0x19dfd.0', 'lea rcx, [0x000331e0]', 'mov edx, r14d', 'movsxd rax, dword [rcx + rdx*4]', 'add rax, rcx', 'jmp rax', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1a180', 'add rsp, 0xd8', 'ret', 'test r14d, r14d', 'jne 0x9d6a', 'mov rdi, r13', 'call fcn.0000b1e0', 'endbr64', 'test rdi, rdi', 'je 0xb230', 'push rbp', 'mov edx, dword [rdi + 0x30]', 'mov rbp, rdi', 'test edx, edx', 'je 0xb220', 'mov rax, qword [rdi + 8]', 'cmp qword [rdi], rax', 'jne 0xb201', 'mov edi, 0xb', 'xor esi, esi', 'call fcn.00020ac0', 'mov edi, 0xb', 'pop rbp', 'jmp sym.imp.raise', 'jmp 0xb311', 'add rsp, 8', 'mov rax, r12', 'pop rbp', 'pop r12', 'ret', 'mov r13, rax', 'test rax, rax', 'je 0x2824d', 'mov rsi, qword [var_28h]', 'mov rdi, rax', 'sub rsi, qword [var_30h]', 'call fcn.0000bb80', 'endbr64', 'push rbp', 'push rbx', 'sub rsp, 8', 'test rdi, rdi', 'je 0xbba9', 'mov edx, dword [rdi + 0x30]', 'mov rbx, rdi', 'mov rbp, rsi', 'test edx, edx', 'je 0xbbd0', 'mov eax, dword [rbx + 0x38]', 'sub eax, 1', 'cmp eax, 0xfffff', 'jbe 0xbbe6', 'mov rcx, qword [rbx + 8]', 'test rcx, rcx', 'je 0xbba9', 'mov rax, qword [rbx + 0x20]', 'cmp rax, 0x8000000', 'ja 0xbba9', 'mov rsi, qword [rbx + 0x28]', 'cmp rax, rsi', 'jb 0xbba9', 'mov rax, qword [rbx + 0x18]', 'cmp rsi, rax', 'jb 0xbba9', 'mov rsi, qword [rbx + 0x10]', 'cmp rax, rsi', 'jb 0xbba9', 'test rbp, rbp', 'je 0xbc53', 'xor eax, eax', 'add rsp, 8', 'pop rbx', 'pop rbp', 'ret', 'mov r15d, eax', 'test eax, eax', 'je 0x27d90', 'call fcn.00026440', 'endbr64', 'sub rsp, 8', 'mov esi, 0x48', 'mov edi, 1', 'call sym.imp.calloc', 'test rax, rax', 'je 0x26484', 'add rsp, 8', 'ret', 'mov r14, rax', 'test rax, rax', 'je 0x27dfd', 'lea rsi, [var_6ch]', 'mov rdi, r13', 'call fcn.00015080', 'mov r15d, eax', 'test eax, eax', 'jne 0x27df0', 'cmp dword [var_6ch], 1', 'je 0x27dde', 'mov rsi, r14', 'mov rdi, r13', 'call fcn.00015040', 'mov r15d, eax', 'test eax, eax', 'je 0x27e17', 'lea rsi, [r14 + 8]', 'mov rdi, r13', 'call fcn.00015040', 'mov r15d, eax', 'test eax, eax', 'jne 0x27df0', 'lea rsi, [r14 + 0x10]', 'mov rdi, r13', 'call fcn.00015040', 'mov r15d, eax', 'test eax, eax', 'jne 0x28016', 'xor edx, edx', 'xor esi, esi', 'mov rdi, r13', 'call fcn.00015410', 'mov r15d, eax', 'test eax, eax', 'jne 0x28016', 'lea rsi, [r14 + 0x18]', 'xor edx, edx', 'mov rdi, r13', 'call fcn.00015590', 'mov r15d, eax', 'test eax, eax', 'jne 0x28016', 'mov rax, qword [r14 + 8]', 'mov qword [timer], rax', 'lea rax, [timer]', 'mov rdi, rax', 'mov qword [var_38h], rax', 'call sym.imp.localtime']"
801,idevicedate,458,"['call sym.imp.localtime', 'mov rdi, rax', 'call sym.imp.mktime', 'mov qword [timer], rax', 'jmp 0x145f', 'add r14d, 1', 'cmp ebp, r14d', 'jg 0x1422', 'lea rdi, [var_18h]', 'mov rsi, r12', 'call sym.imp.idevice_new', 'test eax, eax', 'jne 0x1929', 'mov rdi, qword [var_18h]', 'lea rsi, [var_10h]', 'lea rdx, str.idevicedate', 'call sym.imp.lockdownd_client_new_with_handshake', 'test eax, eax', 'jne 0x1719', 'mov rdi, qword [var_10h]', 'lea rcx, [var_28h]', 'lea rdx, str.TimeIntervalSince1970', 'xor esi, esi', 'call sym.imp.lockdownd_get_value', 'mov r12d, eax', 'test eax, eax', 'jne 0x180a', 'mov rdi, qword [var_28h]', 'test rdi, rdi', 'je 0x1887', 'call sym.imp.plist_get_node_type', 'mov ebx, eax', 'mov rax, qword [timer]', 'test rax, rax', 'jne 0x1767', 'cmp ebx, 1', 'je 0x186e', 'mov rdi, qword [var_28h]', 'lea rsi, [var_30h]', 'lea rbp, [var_38h]', 'call sym.imp.plist_get_uint_val', 'jmp 0x1515', 'mov rdi, qword [var_28h]', 'call sym.imp.plist_free', 'mov rax, qword [var_30h]', 'mov rdi, rbp', 'mov qword [var_28h], 0', 'lea rbp, [var_40h]', 'mov qword [var_38h], rax', 'call sym.imp.localtime']"
802,idevicedate,356,"['call sym.imp.localtime', 'mov rdi, rax', 'call sym.imp.mktime', 'mov qword [timer], rax', 'jmp 0x145f', 'add r14d, 1', 'cmp ebp, r14d', 'jg 0x1422', 'movsxd rax, r14d', 'mov r15, qword [rbx + rax*8]', 'lea rdx, [rax*8]', 'movzx r10d, byte [r15]', 'cmp r10d, 0x2d', 'jne 0x1580', 'mov ecx, 8', 'mov rsi, r15', 'mov rdi, r13', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x1455', 'cmp r10d, 0x2d', 'jne 0x15ab', 'mov ecx, 7', 'mov rsi, r15', 'lea rdi, str.__udid', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x1615', 'lea rsi, [0x00002028]', 'mov rdi, r15', 'mov qword [var_8h], rdx', 'call sym.imp.strcmp', 'mov rdx, qword [var_8h]', 'test eax, eax', 'je 0x164a', 'lea rsi, str.__set', 'mov rdi, r15', 'call sym.imp.strcmp', 'mov rdx, qword [var_8h]', 'test eax, eax', 'jne 0x16b4', 'lea rsi, [0x00002031]', 'mov rdi, r15', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x16ed', 'xor edi, edi', 'add r14d, 1', 'call sym.imp.time', 'lea rdi, [timer]', 'mov qword [timer], rax', 'call sym.imp.localtime']"
803,idevicedate,51,"['call sym.imp.localtime', 'mov rdi, rax', 'call sym.imp.mktime']"
804,idevicedate,516,"['call sym.imp.localtime', 'mov rdi, rax', 'call sym.imp.mktime', 'mov qword [timer], rax', 'jmp 0x145f', 'add r14d, 1', 'cmp ebp, r14d', 'jg 0x1422', 'lea rdi, [var_18h]', 'mov rsi, r12', 'call sym.imp.idevice_new', 'test eax, eax', 'jne 0x1929', 'mov rdi, qword [var_18h]', 'lea rsi, [var_10h]', 'lea rdx, str.idevicedate', 'call sym.imp.lockdownd_client_new_with_handshake', 'test eax, eax', 'jne 0x1719', 'mov rdi, qword [var_10h]', 'lea rcx, [var_28h]', 'lea rdx, str.TimeIntervalSince1970', 'xor esi, esi', 'call sym.imp.lockdownd_get_value', 'mov r12d, eax', 'test eax, eax', 'jne 0x180a', 'mov rdi, qword [var_28h]', 'test rdi, rdi', 'je 0x1887', 'call sym.imp.plist_get_node_type', 'mov ebx, eax', 'mov rax, qword [timer]', 'test rax, rax', 'jne 0x1767', 'mov rdi, qword [var_28h]', 'mov qword [var_30h], rax', 'call sym.imp.plist_free', 'mov qword [var_28h], 0', 'cmp ebx, 1', 'je 0x18fa', 'mov rdi, qword [var_30h]', 'call sym.imp.plist_new_uint', 'mov qword [var_28h], rax', 'jmp 0x17ae', 'mov rcx, qword [var_28h]', 'mov rdi, qword [var_10h]', 'xor esi, esi', 'lea rdx, str.TimeIntervalSince1970', 'call sym.imp.lockdownd_set_value', 'test eax, eax', 'jne 0x18ad', 'lea rdi, [timer]', 'lea rbp, [var_40h]', 'call sym.imp.localtime']"
805,idevicedate,407,"['call sym.imp.mktime', 'mov qword [timer], rax', 'jmp 0x145f', 'add r14d, 1', 'cmp ebp, r14d', 'jg 0x1422', 'lea rdi, [var_18h]', 'mov rsi, r12', 'call sym.imp.idevice_new', 'test eax, eax', 'jne 0x1929', 'mov rdi, qword [var_18h]', 'lea rsi, [var_10h]', 'lea rdx, str.idevicedate', 'call sym.imp.lockdownd_client_new_with_handshake', 'test eax, eax', 'jne 0x1719', 'mov rdi, qword [var_10h]', 'lea rcx, [var_28h]', 'lea rdx, str.TimeIntervalSince1970', 'xor esi, esi', 'call sym.imp.lockdownd_get_value', 'mov r12d, eax', 'test eax, eax', 'jne 0x180a', 'mov rdi, qword [var_28h]', 'test rdi, rdi', 'je 0x1887', 'call sym.imp.plist_get_node_type', 'mov ebx, eax', 'mov rax, qword [timer]', 'test rax, rax', 'jne 0x1767', 'cmp ebx, 1', 'je 0x186e', 'mov rdi, qword [var_28h]', 'lea rsi, [var_30h]', 'lea rbp, [var_38h]', 'call sym.imp.plist_get_uint_val', 'jmp 0x1515', 'mov rdi, qword [var_28h]', 'call sym.imp.plist_free', 'mov rax, qword [var_30h]', 'mov rdi, rbp', 'mov qword [var_28h], 0', 'lea rbp, [var_40h]', 'mov qword [var_38h], rax', 'call sym.imp.localtime']"
806,idevicedate,305,"['call sym.imp.mktime', 'mov qword [timer], rax', 'jmp 0x145f', 'add r14d, 1', 'cmp ebp, r14d', 'jg 0x1422', 'movsxd rax, r14d', 'mov r15, qword [rbx + rax*8]', 'lea rdx, [rax*8]', 'movzx r10d, byte [r15]', 'cmp r10d, 0x2d', 'jne 0x1580', 'mov ecx, 8', 'mov rsi, r15', 'mov rdi, r13', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x1455', 'cmp r10d, 0x2d', 'jne 0x15ab', 'mov ecx, 7', 'mov rsi, r15', 'lea rdi, str.__udid', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x1615', 'lea rsi, [0x00002028]', 'mov rdi, r15', 'mov qword [var_8h], rdx', 'call sym.imp.strcmp', 'mov rdx, qword [var_8h]', 'test eax, eax', 'je 0x164a', 'lea rsi, str.__set', 'mov rdi, r15', 'call sym.imp.strcmp', 'mov rdx, qword [var_8h]', 'test eax, eax', 'jne 0x16b4', 'lea rsi, [0x00002031]', 'mov rdi, r15', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x16ed', 'xor edi, edi', 'add r14d, 1', 'call sym.imp.time', 'lea rdi, [timer]', 'mov qword [timer], rax', 'call sym.imp.localtime']"
807,idevicedate,356,"['call sym.imp.mktime', 'mov qword [timer], rax', 'jmp 0x145f', 'add r14d, 1', 'cmp ebp, r14d', 'jg 0x1422', 'movsxd rax, r14d', 'mov r15, qword [rbx + rax*8]', 'lea rdx, [rax*8]', 'movzx r10d, byte [r15]', 'cmp r10d, 0x2d', 'jne 0x1580', 'mov ecx, 8', 'mov rsi, r15', 'mov rdi, r13', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x1455', 'cmp r10d, 0x2d', 'jne 0x15ab', 'mov ecx, 7', 'mov rsi, r15', 'lea rdi, str.__udid', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x1615', 'lea rsi, [0x00002028]', 'mov rdi, r15', 'mov qword [var_8h], rdx', 'call sym.imp.strcmp', 'mov rdx, qword [var_8h]', 'test eax, eax', 'je 0x164a', 'lea rsi, str.__set', 'mov rdi, r15', 'call sym.imp.strcmp', 'mov rdx, qword [var_8h]', 'test eax, eax', 'jne 0x16b4', 'lea rsi, [0x00002031]', 'mov rdi, r15', 'call sym.imp.strcmp', 'test eax, eax', 'je 0x16ed', 'xor edi, edi', 'add r14d, 1', 'call sym.imp.time', 'lea rdi, [timer]', 'mov qword [timer], rax', 'call sym.imp.localtime', 'mov rdi, rax', 'call sym.imp.mktime']"
808,idevicedate,465,"['call sym.imp.mktime', 'mov qword [timer], rax', 'jmp 0x145f', 'add r14d, 1', 'cmp ebp, r14d', 'jg 0x1422', 'lea rdi, [var_18h]', 'mov rsi, r12', 'call sym.imp.idevice_new', 'test eax, eax', 'jne 0x1929', 'mov rdi, qword [var_18h]', 'lea rsi, [var_10h]', 'lea rdx, str.idevicedate', 'call sym.imp.lockdownd_client_new_with_handshake', 'test eax, eax', 'jne 0x1719', 'mov rdi, qword [var_10h]', 'lea rcx, [var_28h]', 'lea rdx, str.TimeIntervalSince1970', 'xor esi, esi', 'call sym.imp.lockdownd_get_value', 'mov r12d, eax', 'test eax, eax', 'jne 0x180a', 'mov rdi, qword [var_28h]', 'test rdi, rdi', 'je 0x1887', 'call sym.imp.plist_get_node_type', 'mov ebx, eax', 'mov rax, qword [timer]', 'test rax, rax', 'jne 0x1767', 'mov rdi, qword [var_28h]', 'mov qword [var_30h], rax', 'call sym.imp.plist_free', 'mov qword [var_28h], 0', 'cmp ebx, 1', 'je 0x18fa', 'mov rdi, qword [var_30h]', 'call sym.imp.plist_new_uint', 'mov qword [var_28h], rax', 'jmp 0x17ae', 'mov rcx, qword [var_28h]', 'mov rdi, qword [var_10h]', 'xor esi, esi', 'lea rdx, str.TimeIntervalSince1970', 'call sym.imp.lockdownd_set_value', 'test eax, eax', 'jne 0x18ad', 'lea rdi, [timer]', 'lea rbp, [var_40h]', 'call sym.imp.localtime']"
809,ssh-agent,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x1e768', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e7d9', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x1e975', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x1e940', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0001e7e0', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0001e710', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x00056208]', 'test eax, eax', 'jne 0x1e7b0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
810,ssh-agent,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e747', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e7d9', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x1e975', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x1e940', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0001e7e0', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0001e710', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x00056208]', 'test eax, eax', 'jne 0x1e7b0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
811,ssh-agent,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e747', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e7d9', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x1e975', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x1e940', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0001e7e0', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0001e710', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x00056208]', 'test eax, eax', 'jne 0x1e7b0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x1e768', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
812,ssh-agent,93,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e747', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e7d9', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x1e975', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x1e940', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0001e7e0', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0001e710', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x00056208]', 'test eax, eax', 'jne 0x1e7b0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime']"
813,ssh-agent,116,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e747', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e7d9', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x1e975', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x1e940', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0001e7e0', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0001e710', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x00056208]', 'test eax, eax', 'jne 0x1e7b0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x1e768', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime']"
814,ssh-agent,139,"['call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e747', 'mov rax, qword [var_18h]', 'xor rax, qword fs:[0x28]', 'jne 0x1e7d9', 'add rsp, 0x20', 'pop rbx', 'ret', 'mov rax, qword [var_10h]', 'mov rcx, qword [var_18h]', 'movabs rdx, 0x20c49ba5e353f7cf', 'mov dword [var_10h], ebp', 'mov qword [rsp], rax', 'mov rax, rcx', 'sar rcx, 0x3f', 'imul rdx', 'mov word [var_14h], bx', 'sar rdx, 7', 'sub rdx, rcx', 'mov qword [var_8h], rdx', 'call sym.imp.__errno_location', 'mov rbp, rax', 'jmp 0x1e975', 'mov edx, dword [r12]', 'test edx, edx', 'jns 0x1e940', 'mov esi, 1', 'mov rdi, r13', 'call sym.imp.poll', 'mov r15d, dword [rbp]', 'mov rsi, r12', 'mov rdi, r14', 'mov ebx, eax', 'call fcn.0001e7e0', 'endbr64', 'push r13', 'mov r13, rdi', 'push r12', 'push rbp', 'push rbx', 'mov rbx, rsi', 'sub rsp, 0x28', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov rdi, rsp', 'call fcn.0001e710', 'endbr64', 'push rbx', 'mov rbx, rdi', 'sub rsp, 0x20', 'mov rax, qword fs:[0x28]', 'mov qword [var_18h], rax', 'xor eax, eax', 'mov eax, dword [0x00056208]', 'test eax, eax', 'jne 0x1e7b0', 'mov rsi, rdi', 'mov edi, 7', 'call sym.imp.clock_gettime', 'test eax, eax', 'jne 0x1e768', 'mov rsi, rbx', 'mov edi, 1', 'call sym.imp.clock_gettime', 'test eax, eax', 'je 0x1e747', 'xor edi, edi', 'mov rsi, rbx', 'call sym.imp.clock_gettime']"
815,foo2oak,10015,"['call sym.imp.ctime', 'mov edx, 0x20', 'mov rdi, r13', 'mov rsi, rax', 'call sym.imp.__strcpy_chk', 'mov rax, qword [rsp]', 'mov rdi, r12', 'mov dword [var_60h], eax', 'call sym.imp.localtime']"
816,systemd-cgtop,287,"['call sym.imp.now', 'mov r13, rax', 'mov rax, qword [0x0000a018]', 'add rax, r14', 'cmp r13, rax', 'jae 0x3ee5', 'test r15b, r15b', 'je 0x3fad', 'mov rdi, rbp', 'call fcn.00004d40', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x5561', 'mov rbx, rdi', 'call sym.imp.terminal_is_dumb', 'test al, al', 'je 0x52b0', 'mov rdi, rbx', 'call sym.imp.internal_hashmap_size', 'mov edx, eax', 'lea rax, [rdx*8]', 'cmp rdx, 0x80000', 'ja 0x5582', 'add rax, 0x17', 'mov rdi, rsp', 'shr rax, 4', 'shl rax, 4', 'mov rdx, rax', 'and rdx, 0xfffffffffffff000', 'sub rdi, rdx', 'mov rdx, rdi', 'cmp rsp, rdx', 'je 0x4dd4', 'and eax, 0xfff', 'sub rsp, rax', 'test rax, rax', 'jne 0x54e9', 'lea rax, [var_fh]', 'mov dword [var_90h], 0xfffffffe', 'lea r13, [var_98h]', 'and rax, 0xfffffffffffffff0', 'lea r12, [var_90h]', 'mov qword [var_88h], 0', 'mov qword [base], rax', 'mov dword [var_b0h], 0', 'jmp 0x4e39', 'xor ecx, ecx', 'mov rdx, r13', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.internal_hashmap_iterate', 'test al, al', 'jne 0x4e28', 'mov esi, dword [var_b0h]', 'cmp esi, 1', 'jbe 0x54c8', 'mov r8d, dword [var_b0h]', 'test r8d, r8d', 'jne 0x4e74', 'xor r15d, r15d', 'mov ebx, 3', 'lea r13, [var_80h]', 'jmp 0x4f2a', 'mov edi, dword [0x0000a090]', 'test edi, edi', 'jne 0x5278', 'mov ecx, 0x40', 'mov edx, 1', 'mov rdi, r13', 'xor eax, eax', 'lea r9, str._CPU', 'lea r8, [0x00007057]', 'mov esi, 0x40', 'call sym.imp.__snprintf_chk', 'call sym.imp.lines', 'mov edx, 0xa', 'cmp eax, 0xa', 'cmovae edx, eax', 'mov dword [var_a8h], edx', 'call sym.imp.on_tty', 'mov dword [var_a4h], ebx', 'test al, al', 'jne 0x52d8', 'mov eax, dword [var_b0h]', 'movsxd rdi, dword [var_a4h]', 'lea ebx, [rax - 1]', 'mov qword [var_b8h], rdi', 'mov qword [var_b0h], rbx', 'xor ebx, ebx', 'test eax, eax', 'je 0x5250', 'mov rax, qword [var_38h]', 'xor rax, qword fs:[0x28]', 'jne 0x56cd', 'lea rsp, [var_28h]', 'pop rbx', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'pop rbp', 'ret', 'mov eax, dword [0x0000a020]', 'test eax, eax', 'setne dl', 'cmp eax, ebx', 'setbe al', 'test dl, al', 'jne case.0x4043.113', 'call sym.imp.on_tty', 'test al, al', 'je 0x456f', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'cmp byte [0x0000a094], 0', 'je 0x44f0', 'mov rdx, qword [0x0000a018]', 'mov rdi, qword [obj.stdin]', 'xor ecx, ecx', 'lea rsi, [var_1fh]', 'sub rdx, r13', 'add rdx, r14', 'call sym.imp.read_one_char', 'cmp eax, 0xffffff92', 'je 0x453f', 'xor r15d, r15d', 'jmp 0x3ec0', 'mov edi, 1', 'call sym.imp.now']"
817,systemd-cgtop,232,"['call sym.imp.now', 'mov r13, rax', 'mov rax, qword [0x0000a018]', 'add rax, r14', 'cmp r13, rax', 'jae 0x3ee5', 'lea eax, [rbx + 1]', 'mov r14, qword [ptr]', 'mov qword [var_68h], 0', 'lea r15, [var_30h]', 'mov dword [var_ch], eax', 'lea rax, str._systemd', 'lea rdi, str._systemd', 'mov qword [var_30h], rax', 'lea rax, [0x00007149]', 'mov qword [var_38h], rax', 'lea rax, str.cpuacct', 'mov qword [var_40h], rax', 'lea rax, str.memory', 'mov qword [var_48h], rax', 'lea rax, [0x00007128]', 'mov qword [var_50h], rax', 'lea rax, str.blkio', 'mov qword [var_58h], rax', 'lea rax, str.pids', 'mov qword [var_60h], rax', 'nop word [rax + rax]', 'sub rsp, 8', 'mov rcx, rbp', 'mov rdx, r12', 'xor r9d, r9d', 'push 0', 'mov r8d, ebx', 'mov rsi, r14', 'call fcn.00005710', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0xa8', 'mov rax, qword [arg_e0h]', 'mov qword [rsp], rcx', 'mov dword [var_ch], r8d', 'mov qword [var_10h], rax', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'mov qword [var_40h], 0', 'test rdi, rdi', 'je 0x5d10', 'mov rbx, rsi', 'test rsi, rsi', 'je 0x5d38', 'mov r12, rdx', 'test rdx, rdx', 'je 0x5d60', 'xor r13d, r13d', 'cmp dword [0x0000a008], r9d', 'mov r15d, r9d', 'jae 0x57b0', 'mov rbp, rdi', 'call sym.imp.cg_all_unified', 'mov r13d, eax', 'test eax, eax', 'js 0x5a70', 'mov rsi, rbx', 'mov rdi, r12', 'call sym.imp.internal_hashmap_get', 'mov qword [var_20h], rax', 'test rax, rax', 'je 0x5f50', 'mov ecx, 9', 'mov rsi, rbp', 'lea rdi, str._systemd', 'mov edx, dword [0x0000a0ac]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x5808', 'mov ecx, 5', 'lea rdi, str.pids', 'mov rsi, rbp', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'movsx eax, al', 'or eax, edx', 'je 0x5ff0', 'mov ecx, 7', 'lea rdi, str.memory', 'mov rsi, rbp', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5e38', 'movzx eax, byte [rbp]', 'sub eax, 0x69', 'jne 0x5a90', 'mov ecx, 6', 'lea rdi, str.blkio', 'mov rsi, rbp', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'movsx eax, al', 'or eax, r13d', 'je 0x5d88', 'lea rax, [0x00007149]', 'lea r14, str.cpuacct', 'mov rsi, rbp', 'mov qword [var_90h], 0', 'lea rdi, [var_80h]', 'mov qword [var_80h], rax', 'mov qword [var_88h], r14', 'call sym.imp.strv_find', 'test rax, rax', 'je 0x6360', 'mov qword [var_50h], 0', 'mov qword [var_58h], 0', 'call sym.imp.detect_container', 'test eax, eax', 'jle 0x628a', 'mov rdi, rbx', 'call sym.imp.empty_or_root', 'test al, al', 'je 0x5b14', 'lea rdi, [ptr]', 'call sym.imp.procfs_cpu_get_usage', 'mov r14d, eax', 'test eax, eax', 'jns 0x5bca', 'mov edi, 1', 'call sym.imp.now_nsec']"
818,systemd-cgtop,256,"['call sym.imp.now', 'mov r13, rax', 'mov rax, qword [0x0000a018]', 'add rax, r14', 'cmp r13, rax', 'jae 0x3ee5', 'lea eax, [rbx + 1]', 'mov r14, qword [ptr]', 'mov qword [var_68h], 0', 'lea r15, [var_30h]', 'mov dword [var_ch], eax', 'lea rax, str._systemd', 'lea rdi, str._systemd', 'mov qword [var_30h], rax', 'lea rax, [0x00007149]', 'mov qword [var_38h], rax', 'lea rax, str.cpuacct', 'mov qword [var_40h], rax', 'lea rax, str.memory', 'mov qword [var_48h], rax', 'lea rax, [0x00007128]', 'mov qword [var_50h], rax', 'lea rax, str.blkio', 'mov qword [var_58h], rax', 'lea rax, str.pids', 'mov qword [var_60h], rax', 'nop word [rax + rax]', 'sub rsp, 8', 'mov rcx, rbp', 'mov rdx, r12', 'xor r9d, r9d', 'push 0', 'mov r8d, ebx', 'mov rsi, r14', 'call fcn.00005710', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0xa8', 'mov rax, qword [arg_e0h]', 'mov qword [rsp], rcx', 'mov dword [var_ch], r8d', 'mov qword [var_10h], rax', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'mov qword [var_40h], 0', 'test rdi, rdi', 'je 0x5d10', 'mov rbx, rsi', 'test rsi, rsi', 'je 0x5d38', 'mov r12, rdx', 'test rdx, rdx', 'je 0x5d60', 'lea r8, str.refresh_one', 'mov ecx, 0x1b4', 'lea rdx, [0x00007036]', 'xor edi, edi', 'lea rsi, [0x00007048]', 'call sym.imp.log_assert_failed_realm', 'nop dword [rax]', 'mov qword [var_48h], 0', 'lea rdx, str.blkio.io_service_bytes', 'mov qword [var_50h], 0', 'mov qword [var_58h], 0', 'jmp 0x5898', 'lea rcx, [var_48h]', 'mov rsi, rbx', 'mov rdi, rbp', 'call sym.imp.cg_get_path', 'mov r14d, eax', 'test eax, eax', 'js 0x60b8', 'mov rdi, qword [var_48h]', 'lea rsi, [0x0000712b]', 'call sym.imp.fopen64', 'lea rcx, [ptr]', 'mov qword [var_28h], rcx', 'lea rcx, [var_68h]', 'mov qword [var_18h], rax', 'test rax, rax', 'je 0x6372', 'mov qword [var_30h], rbp', 'mov r14, rcx', 'mov qword [var_38h], rbx', 'jmp 0x5943', 'mov rcx, qword [var_28h]', 'mov rdi, qword [var_18h]', 'xor edx, edx', 'mov esi, 0x100000', 'mov qword [ptr], 0', 'call sym.imp.read_line_full', 'test eax, eax', 'js 0x6269', 'mov rdi, qword [ptr]', 'je 0x62b8', 'mov rbp, qword [var_30h]', 'mov rbx, qword [var_38h]', 'call sym.imp.free', 'mov edi, 1', 'call sym.imp.now_nsec']"
819,systemd-cgtop,389,"['call sym.imp.now_nsec', 'mov rsi, qword [var_20h]', 'mov rdx, rax', 'mov eax, dword [var_ch]', 'lea ecx, [rax - 1]', 'mov rax, qword [ptr]', 'cmp dword [rsi + 0x18], ecx', 'je 0x647f', 'mov rcx, qword [var_20h]', 'mov qword [rcx + 0x20], rax', 'mov eax, dword [var_ch]', 'mov qword [rcx + 0x28], rdx', 'mov dword [rcx + 0x18], eax', 'mov rdi, qword [var_58h]', 'call sym.imp.free', 'mov rdi, qword [var_50h]', 'call sym.imp.free', 'nop dword [rax]', 'lea rdx, [var_40h]', 'mov rsi, rbx', 'mov rdi, rbp', 'call sym.imp.cg_enumerate_subgroups', 'mov r13d, eax', 'cmp eax, 0xfffffffe', 'je 0x5f40', 'xor r13d, r13d', 'jmp 0x5a70', 'mov rdi, qword [var_40h]', 'test rdi, rdi', 'je 0x5783', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x650c', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'js 0x4547', 'mov rdi, qword [r15 + 8]', 'add r15, 8', 'test rdi, rdi', 'jne 0x3f60', 'mov rdi, rbp', 'xor edx, edx', 'xor esi, esi', 'mov r14, r13', 'call sym.imp.internal_hashmap_clear', 'mov rax, r12', 'mov ebx, dword [var_ch]', 'mov r12, rbp', 'mov rbp, rax', 'mov rdi, rbp', 'call fcn.00004d40', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x5561', 'mov rbx, rdi', 'call sym.imp.terminal_is_dumb', 'test al, al', 'je 0x52b0', 'mov rdi, rbx', 'call sym.imp.internal_hashmap_size', 'mov edx, eax', 'lea rax, [rdx*8]', 'cmp rdx, 0x80000', 'ja 0x5582', 'add rax, 0x17', 'mov rdi, rsp', 'shr rax, 4', 'shl rax, 4', 'mov rdx, rax', 'and rdx, 0xfffffffffffff000', 'sub rdi, rdx', 'mov rdx, rdi', 'cmp rsp, rdx', 'je 0x4dd4', 'and eax, 0xfff', 'sub rsp, rax', 'test rax, rax', 'jne 0x54e9', 'lea rax, [var_fh]', 'mov dword [var_90h], 0xfffffffe', 'lea r13, [var_98h]', 'and rax, 0xfffffffffffffff0', 'lea r12, [var_90h]', 'mov qword [var_88h], 0', 'mov qword [base], rax', 'mov dword [var_b0h], 0', 'jmp 0x4e39', 'xor ecx, ecx', 'mov rdx, r13', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.internal_hashmap_iterate', 'test al, al', 'jne 0x4e28', 'mov esi, dword [var_b0h]', 'cmp esi, 1', 'jbe 0x54c8', 'mov r8d, dword [var_b0h]', 'test r8d, r8d', 'jne 0x4e74', 'xor r15d, r15d', 'mov ebx, 3', 'lea r13, [var_80h]', 'jmp 0x4f2a', 'mov edi, dword [0x0000a090]', 'test edi, edi', 'jne 0x5278', 'mov ecx, 0x40', 'mov edx, 1', 'mov rdi, r13', 'xor eax, eax', 'lea r9, str._CPU', 'lea r8, [0x00007057]', 'mov esi, 0x40', 'call sym.imp.__snprintf_chk', 'call sym.imp.lines', 'mov edx, 0xa', 'cmp eax, 0xa', 'cmovae edx, eax', 'mov dword [var_a8h], edx', 'call sym.imp.on_tty', 'mov dword [var_a4h], ebx', 'test al, al', 'jne 0x52d8', 'mov eax, dword [var_b0h]', 'movsxd rdi, dword [var_a4h]', 'lea ebx, [rax - 1]', 'mov qword [var_b8h], rdi', 'mov qword [var_b0h], rbx', 'xor ebx, ebx', 'test eax, eax', 'je 0x5250', 'mov rax, qword [var_38h]', 'xor rax, qword fs:[0x28]', 'jne 0x56cd', 'lea rsp, [var_28h]', 'pop rbx', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'pop rbp', 'ret', 'mov eax, dword [0x0000a020]', 'test eax, eax', 'setne dl', 'cmp eax, ebx', 'setbe al', 'test dl, al', 'jne case.0x4043.113', 'call sym.imp.on_tty', 'test al, al', 'je 0x456f', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'cmp byte [0x0000a094], 0', 'je 0x44f0', 'mov rdx, qword [0x0000a018]', 'mov rdi, qword [obj.stdin]', 'xor ecx, ecx', 'lea rsi, [var_1fh]', 'sub rdx, r13', 'add rdx, r14', 'call sym.imp.read_one_char', 'cmp eax, 0xffffff92', 'je 0x453f', 'xor r15d, r15d', 'jmp 0x3ec0', 'mov edi, 1', 'call sym.imp.now']"
820,systemd-cgtop,290,"['call sym.imp.now_nsec', 'mov rsi, qword [var_20h]', 'mov rdx, rax', 'mov eax, dword [var_ch]', 'lea ecx, [rax - 1]', 'mov rax, qword [ptr]', 'cmp dword [rsi + 0x18], ecx', 'je 0x647f', 'mov rcx, qword [var_20h]', 'mov qword [rcx + 0x20], rax', 'mov eax, dword [var_ch]', 'mov qword [rcx + 0x28], rdx', 'mov dword [rcx + 0x18], eax', 'mov rdi, qword [var_58h]', 'call sym.imp.free', 'mov rdi, qword [var_50h]', 'call sym.imp.free', 'nop dword [rax]', 'lea rdx, [var_40h]', 'mov rsi, rbx', 'mov rdi, rbp', 'call sym.imp.cg_enumerate_subgroups', 'mov r13d, eax', 'cmp eax, 0xfffffffe', 'je 0x5f40', 'xor r13d, r13d', 'jmp 0x5a70', 'mov rdi, qword [var_40h]', 'test rdi, rdi', 'je 0x5783', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x650c', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'js 0x4547', 'mov rdi, qword [r15 + 8]', 'add r15, 8', 'test rdi, rdi', 'jne 0x3f60', 'sub rsp, 8', 'mov rcx, rbp', 'mov rdx, r12', 'xor r9d, r9d', 'push 0', 'mov r8d, ebx', 'mov rsi, r14', 'call fcn.00005710', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0xa8', 'mov rax, qword [arg_e0h]', 'mov qword [rsp], rcx', 'mov dword [var_ch], r8d', 'mov qword [var_10h], rax', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'mov qword [var_40h], 0', 'test rdi, rdi', 'je 0x5d10', 'mov rbx, rsi', 'test rsi, rsi', 'je 0x5d38', 'mov r12, rdx', 'test rdx, rdx', 'je 0x5d60', 'xor r13d, r13d', 'cmp dword [0x0000a008], r9d', 'mov r15d, r9d', 'jae 0x57b0', 'mov rbp, rdi', 'call sym.imp.cg_all_unified', 'mov r13d, eax', 'test eax, eax', 'js 0x5a70', 'mov rsi, rbx', 'mov rdi, r12', 'call sym.imp.internal_hashmap_get', 'mov qword [var_20h], rax', 'test rax, rax', 'je 0x5f50', 'mov ecx, 9', 'mov rsi, rbp', 'lea rdi, str._systemd', 'mov edx, dword [0x0000a0ac]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x5808', 'mov ecx, 5', 'lea rdi, str.pids', 'mov rsi, rbp', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'movsx eax, al', 'or eax, edx', 'je 0x5ff0', 'mov ecx, 7', 'lea rdi, str.memory', 'mov rsi, rbp', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5e38', 'movzx eax, byte [rbp]', 'sub eax, 0x69', 'jne 0x5a90', 'mov ecx, 6', 'lea rdi, str.blkio', 'mov rsi, rbp', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'movsx eax, al', 'or eax, r13d', 'je 0x5d88', 'lea rax, [0x00007149]', 'lea r14, str.cpuacct', 'mov rsi, rbp', 'mov qword [var_90h], 0', 'lea rdi, [var_80h]', 'mov qword [var_80h], rax', 'mov qword [var_88h], r14', 'call sym.imp.strv_find', 'test rax, rax', 'je 0x6360', 'mov qword [var_50h], 0', 'mov qword [var_58h], 0', 'call sym.imp.detect_container', 'test eax, eax', 'jle 0x628a', 'mov rdi, rbx', 'call sym.imp.empty_or_root', 'test al, al', 'je 0x5b14', 'lea rdi, [ptr]', 'call sym.imp.procfs_cpu_get_usage', 'mov r14d, eax', 'test eax, eax', 'jns 0x5bca', 'mov edi, 1', 'call sym.imp.now_nsec']"
821,systemd-cgtop,314,"['call sym.imp.now_nsec', 'mov rsi, qword [var_20h]', 'mov rdx, rax', 'mov eax, dword [var_ch]', 'lea ecx, [rax - 1]', 'mov rax, qword [ptr]', 'cmp dword [rsi + 0x18], ecx', 'je 0x647f', 'mov rcx, qword [var_20h]', 'mov qword [rcx + 0x20], rax', 'mov eax, dword [var_ch]', 'mov qword [rcx + 0x28], rdx', 'mov dword [rcx + 0x18], eax', 'mov rdi, qword [var_58h]', 'call sym.imp.free', 'mov rdi, qword [var_50h]', 'call sym.imp.free', 'nop dword [rax]', 'lea rdx, [var_40h]', 'mov rsi, rbx', 'mov rdi, rbp', 'call sym.imp.cg_enumerate_subgroups', 'mov r13d, eax', 'cmp eax, 0xfffffffe', 'je 0x5f40', 'xor r13d, r13d', 'jmp 0x5a70', 'mov rdi, qword [var_40h]', 'test rdi, rdi', 'je 0x5783', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x650c', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'js 0x4547', 'mov rdi, qword [r15 + 8]', 'add r15, 8', 'test rdi, rdi', 'jne 0x3f60', 'sub rsp, 8', 'mov rcx, rbp', 'mov rdx, r12', 'xor r9d, r9d', 'push 0', 'mov r8d, ebx', 'mov rsi, r14', 'call fcn.00005710', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0xa8', 'mov rax, qword [arg_e0h]', 'mov qword [rsp], rcx', 'mov dword [var_ch], r8d', 'mov qword [var_10h], rax', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'mov qword [var_40h], 0', 'test rdi, rdi', 'je 0x5d10', 'mov rbx, rsi', 'test rsi, rsi', 'je 0x5d38', 'mov r12, rdx', 'test rdx, rdx', 'je 0x5d60', 'lea r8, str.refresh_one', 'mov ecx, 0x1b4', 'lea rdx, [0x00007036]', 'xor edi, edi', 'lea rsi, [0x00007048]', 'call sym.imp.log_assert_failed_realm', 'nop dword [rax]', 'mov qword [var_48h], 0', 'lea rdx, str.blkio.io_service_bytes', 'mov qword [var_50h], 0', 'mov qword [var_58h], 0', 'jmp 0x5898', 'lea rcx, [var_48h]', 'mov rsi, rbx', 'mov rdi, rbp', 'call sym.imp.cg_get_path', 'mov r14d, eax', 'test eax, eax', 'js 0x60b8', 'mov rdi, qword [var_48h]', 'lea rsi, [0x0000712b]', 'call sym.imp.fopen64', 'lea rcx, [ptr]', 'mov qword [var_28h], rcx', 'lea rcx, [var_68h]', 'mov qword [var_18h], rax', 'test rax, rax', 'je 0x6372', 'mov qword [var_30h], rbp', 'mov r14, rcx', 'mov qword [var_38h], rbx', 'jmp 0x5943', 'mov rcx, qword [var_28h]', 'mov rdi, qword [var_18h]', 'xor edx, edx', 'mov esi, 0x100000', 'mov qword [ptr], 0', 'call sym.imp.read_line_full', 'test eax, eax', 'js 0x6269', 'mov rdi, qword [ptr]', 'je 0x62b8', 'mov rbp, qword [var_30h]', 'mov rbx, qword [var_38h]', 'call sym.imp.free', 'mov edi, 1', 'call sym.imp.now_nsec']"
822,systemd-cgtop,387,"['call sym.imp.now_nsec', 'mov rdx, qword [var_20h]', 'mov rsi, qword [var_58h]', 'mov rcx, rax', 'mov eax, dword [var_ch]', 'mov rdi, qword [var_50h]', 'sub eax, 1', 'cmp dword [rdx + 0x40], eax', 'je 0x640a', 'mov rax, qword [var_20h]', 'mov qword [rax + 0x58], rcx', 'mov ecx, dword [var_ch]', 'mov qword [rax + 0x48], rsi', 'mov qword [rax + 0x50], rdi', 'mov rdi, qword [var_48h]', 'mov dword [rax + 0x40], ecx', 'call sym.imp.free', 'mov rdi, qword [var_18h]', 'call sym.imp.safe_fclose', 'jmp 0x5c20', 'lea rdx, [var_40h]', 'mov rsi, rbx', 'mov rdi, rbp', 'call sym.imp.cg_enumerate_subgroups', 'mov r13d, eax', 'cmp eax, 0xfffffffe', 'je 0x5f40', 'xor r13d, r13d', 'jmp 0x5a70', 'mov rdi, qword [var_40h]', 'test rdi, rdi', 'je 0x5783', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x650c', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'js 0x4547', 'mov rdi, qword [r15 + 8]', 'add r15, 8', 'test rdi, rdi', 'jne 0x3f60', 'mov rdi, rbp', 'xor edx, edx', 'xor esi, esi', 'mov r14, r13', 'call sym.imp.internal_hashmap_clear', 'mov rax, r12', 'mov ebx, dword [var_ch]', 'mov r12, rbp', 'mov rbp, rax', 'mov rdi, rbp', 'call fcn.00004d40', 'push rbp', 'mov rbp, rsp', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbx', 'sub rsp, 0xd8', 'mov rax, qword fs:[0x28]', 'mov qword [var_38h], rax', 'xor eax, eax', 'test rdi, rdi', 'je 0x5561', 'mov rbx, rdi', 'call sym.imp.terminal_is_dumb', 'test al, al', 'je 0x52b0', 'mov rdi, rbx', 'call sym.imp.internal_hashmap_size', 'mov edx, eax', 'lea rax, [rdx*8]', 'cmp rdx, 0x80000', 'ja 0x5582', 'add rax, 0x17', 'mov rdi, rsp', 'shr rax, 4', 'shl rax, 4', 'mov rdx, rax', 'and rdx, 0xfffffffffffff000', 'sub rdi, rdx', 'mov rdx, rdi', 'cmp rsp, rdx', 'je 0x4dd4', 'and eax, 0xfff', 'sub rsp, rax', 'test rax, rax', 'jne 0x54e9', 'lea rax, [var_fh]', 'mov dword [var_90h], 0xfffffffe', 'lea r13, [var_98h]', 'and rax, 0xfffffffffffffff0', 'lea r12, [var_90h]', 'mov qword [var_88h], 0', 'mov qword [base], rax', 'mov dword [var_b0h], 0', 'jmp 0x4e39', 'xor ecx, ecx', 'mov rdx, r13', 'mov rsi, r12', 'mov rdi, rbx', 'call sym.imp.internal_hashmap_iterate', 'test al, al', 'jne 0x4e28', 'mov esi, dword [var_b0h]', 'cmp esi, 1', 'jbe 0x54c8', 'mov r8d, dword [var_b0h]', 'test r8d, r8d', 'jne 0x4e74', 'xor r15d, r15d', 'mov ebx, 3', 'lea r13, [var_80h]', 'jmp 0x4f2a', 'mov edi, dword [0x0000a090]', 'test edi, edi', 'jne 0x5278', 'mov ecx, 0x40', 'mov edx, 1', 'mov rdi, r13', 'xor eax, eax', 'lea r9, str._CPU', 'lea r8, [0x00007057]', 'mov esi, 0x40', 'call sym.imp.__snprintf_chk', 'call sym.imp.lines', 'mov edx, 0xa', 'cmp eax, 0xa', 'cmovae edx, eax', 'mov dword [var_a8h], edx', 'call sym.imp.on_tty', 'mov dword [var_a4h], ebx', 'test al, al', 'jne 0x52d8', 'mov eax, dword [var_b0h]', 'movsxd rdi, dword [var_a4h]', 'lea ebx, [rax - 1]', 'mov qword [var_b8h], rdi', 'mov qword [var_b0h], rbx', 'xor ebx, ebx', 'test eax, eax', 'je 0x5250', 'mov rax, qword [var_38h]', 'xor rax, qword fs:[0x28]', 'jne 0x56cd', 'lea rsp, [var_28h]', 'pop rbx', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'pop rbp', 'ret', 'mov eax, dword [0x0000a020]', 'test eax, eax', 'setne dl', 'cmp eax, ebx', 'setbe al', 'test dl, al', 'jne case.0x4043.113', 'call sym.imp.on_tty', 'test al, al', 'je 0x456f', 'mov rdi, qword [obj.stdout]', 'call sym.imp.fflush', 'cmp byte [0x0000a094], 0', 'je 0x44f0', 'mov rdx, qword [0x0000a018]', 'mov rdi, qword [obj.stdin]', 'xor ecx, ecx', 'lea rsi, [var_1fh]', 'sub rdx, r13', 'add rdx, r14', 'call sym.imp.read_one_char', 'cmp eax, 0xffffff92', 'je 0x453f', 'xor r15d, r15d', 'jmp 0x3ec0', 'mov edi, 1', 'call sym.imp.now']"
823,systemd-cgtop,288,"['call sym.imp.now_nsec', 'mov rdx, qword [var_20h]', 'mov rsi, qword [var_58h]', 'mov rcx, rax', 'mov eax, dword [var_ch]', 'mov rdi, qword [var_50h]', 'sub eax, 1', 'cmp dword [rdx + 0x40], eax', 'je 0x640a', 'mov rax, qword [var_20h]', 'mov qword [rax + 0x58], rcx', 'mov ecx, dword [var_ch]', 'mov qword [rax + 0x48], rsi', 'mov qword [rax + 0x50], rdi', 'mov rdi, qword [var_48h]', 'mov dword [rax + 0x40], ecx', 'call sym.imp.free', 'mov rdi, qword [var_18h]', 'call sym.imp.safe_fclose', 'jmp 0x5c20', 'lea rdx, [var_40h]', 'mov rsi, rbx', 'mov rdi, rbp', 'call sym.imp.cg_enumerate_subgroups', 'mov r13d, eax', 'cmp eax, 0xfffffffe', 'je 0x5f40', 'xor r13d, r13d', 'jmp 0x5a70', 'mov rdi, qword [var_40h]', 'test rdi, rdi', 'je 0x5783', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x650c', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'js 0x4547', 'mov rdi, qword [r15 + 8]', 'add r15, 8', 'test rdi, rdi', 'jne 0x3f60', 'sub rsp, 8', 'mov rcx, rbp', 'mov rdx, r12', 'xor r9d, r9d', 'push 0', 'mov r8d, ebx', 'mov rsi, r14', 'call fcn.00005710', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0xa8', 'mov rax, qword [arg_e0h]', 'mov qword [rsp], rcx', 'mov dword [var_ch], r8d', 'mov qword [var_10h], rax', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'mov qword [var_40h], 0', 'test rdi, rdi', 'je 0x5d10', 'mov rbx, rsi', 'test rsi, rsi', 'je 0x5d38', 'mov r12, rdx', 'test rdx, rdx', 'je 0x5d60', 'xor r13d, r13d', 'cmp dword [0x0000a008], r9d', 'mov r15d, r9d', 'jae 0x57b0', 'mov rbp, rdi', 'call sym.imp.cg_all_unified', 'mov r13d, eax', 'test eax, eax', 'js 0x5a70', 'mov rsi, rbx', 'mov rdi, r12', 'call sym.imp.internal_hashmap_get', 'mov qword [var_20h], rax', 'test rax, rax', 'je 0x5f50', 'mov ecx, 9', 'mov rsi, rbp', 'lea rdi, str._systemd', 'mov edx, dword [0x0000a0ac]', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'jne 0x5808', 'mov ecx, 5', 'lea rdi, str.pids', 'mov rsi, rbp', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'movsx eax, al', 'or eax, edx', 'je 0x5ff0', 'mov ecx, 7', 'lea rdi, str.memory', 'mov rsi, rbp', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'test al, al', 'je 0x5e38', 'movzx eax, byte [rbp]', 'sub eax, 0x69', 'jne 0x5a90', 'mov ecx, 6', 'lea rdi, str.blkio', 'mov rsi, rbp', 'repe cmpsb byte [rsi], byte ptr [rdi]', 'seta al', 'sbb al, 0', 'movsx eax, al', 'or eax, r13d', 'je 0x5d88', 'lea rax, [0x00007149]', 'lea r14, str.cpuacct', 'mov rsi, rbp', 'mov qword [var_90h], 0', 'lea rdi, [var_80h]', 'mov qword [var_80h], rax', 'mov qword [var_88h], r14', 'call sym.imp.strv_find', 'test rax, rax', 'je 0x6360', 'mov qword [var_50h], 0', 'mov qword [var_58h], 0', 'call sym.imp.detect_container', 'test eax, eax', 'jle 0x628a', 'mov rdi, rbx', 'call sym.imp.empty_or_root', 'test al, al', 'je 0x5b14', 'lea rdi, [ptr]', 'call sym.imp.procfs_cpu_get_usage', 'mov r14d, eax', 'test eax, eax', 'jns 0x5bca', 'mov edi, 1', 'call sym.imp.now_nsec']"
824,systemd-cgtop,312,"['call sym.imp.now_nsec', 'mov rdx, qword [var_20h]', 'mov rsi, qword [var_58h]', 'mov rcx, rax', 'mov eax, dword [var_ch]', 'mov rdi, qword [var_50h]', 'sub eax, 1', 'cmp dword [rdx + 0x40], eax', 'je 0x640a', 'mov rax, qword [var_20h]', 'mov qword [rax + 0x58], rcx', 'mov ecx, dword [var_ch]', 'mov qword [rax + 0x48], rsi', 'mov qword [rax + 0x50], rdi', 'mov rdi, qword [var_48h]', 'mov dword [rax + 0x40], ecx', 'call sym.imp.free', 'mov rdi, qword [var_18h]', 'call sym.imp.safe_fclose', 'jmp 0x5c20', 'lea rdx, [var_40h]', 'mov rsi, rbx', 'mov rdi, rbp', 'call sym.imp.cg_enumerate_subgroups', 'mov r13d, eax', 'cmp eax, 0xfffffffe', 'je 0x5f40', 'xor r13d, r13d', 'jmp 0x5a70', 'mov rdi, qword [var_40h]', 'test rdi, rdi', 'je 0x5783', 'mov rax, qword [var_98h]', 'xor rax, qword fs:[0x28]', 'jne 0x650c', 'add rsp, 0xa8', 'mov eax, r13d', 'pop rbx', 'pop rbp', 'pop r12', 'pop r13', 'pop r14', 'pop r15', 'ret', 'pop rdx', 'pop rcx', 'test eax, eax', 'js 0x4547', 'mov rdi, qword [r15 + 8]', 'add r15, 8', 'test rdi, rdi', 'jne 0x3f60', 'sub rsp, 8', 'mov rcx, rbp', 'mov rdx, r12', 'xor r9d, r9d', 'push 0', 'mov r8d, ebx', 'mov rsi, r14', 'call fcn.00005710', 'push r15', 'push r14', 'push r13', 'push r12', 'push rbp', 'push rbx', 'sub rsp, 0xa8', 'mov rax, qword [arg_e0h]', 'mov qword [rsp], rcx', 'mov dword [var_ch], r8d', 'mov qword [var_10h], rax', 'mov rax, qword fs:[0x28]', 'mov qword [var_98h], rax', 'xor eax, eax', 'mov qword [var_40h], 0', 'test rdi, rdi', 'je 0x5d10', 'mov rbx, rsi', 'test rsi, rsi', 'je 0x5d38', 'mov r12, rdx', 'test rdx, rdx', 'je 0x5d60', 'lea r8, str.refresh_one', 'mov ecx, 0x1b4', 'lea rdx, [0x00007036]', 'xor edi, edi', 'lea rsi, [0x00007048]', 'call sym.imp.log_assert_failed_realm', 'nop dword [rax]', 'mov qword [var_48h], 0', 'lea rdx, str.blkio.io_service_bytes', 'mov qword [var_50h], 0', 'mov qword [var_58h], 0', 'jmp 0x5898', 'lea rcx, [var_48h]', 'mov rsi, rbx', 'mov rdi, rbp', 'call sym.imp.cg_get_path', 'mov r14d, eax', 'test eax, eax', 'js 0x60b8', 'mov rdi, qword [var_48h]', 'lea rsi, [0x0000712b]', 'call sym.imp.fopen64', 'lea rcx, [ptr]', 'mov qword [var_28h], rcx', 'lea rcx, [var_68h]', 'mov qword [var_18h], rax', 'test rax, rax', 'je 0x6372', 'mov qword [var_30h], rbp', 'mov r14, rcx', 'mov qword [var_38h], rbx', 'jmp 0x5943', 'mov rcx, qword [var_28h]', 'mov rdi, qword [var_18h]', 'xor edx, edx', 'mov esi, 0x100000', 'mov qword [ptr], 0', 'call sym.imp.read_line_full', 'test eax, eax', 'js 0x6269', 'mov rdi, qword [ptr]', 'je 0x62b8', 'mov rbp, qword [var_30h]', 'mov rbx, qword [var_38h]', 'call sym.imp.free', 'mov edi, 1', 'call sym.imp.now_nsec']"
